
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[11:50:02.114935] [I] [thread 366315] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[11:50:02.114987] [I] [thread 366315] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[11:50:02.115029] [D] [thread 366315] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[11:50:02.115640] [D] [thread 366315] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:50:02.115803] [I] [thread 366315] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:50:02.115896] [D] [thread 366315] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[11:50:02.115908] [D] [thread 366315] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[11:50:02.116010] [D] [thread 366315] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[11:50:02.116025] [D] [thread 366315] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[11:50:02.116044] [D] [thread 366315] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[11:50:02.116106] [D] [thread 366315] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[11:50:02.116131] [D] [thread 366315] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[11:50:02.147622] [D] [thread 366315] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[11:50:02.147744] [D] [thread 366315] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:50:02.147801] [D] [thread 366315] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:50:02.147845] [D] [thread 366315] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:50:02.147909] [D] [thread 366315] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:50:02.147941] [D] [thread 366315] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:50:02.147954] [D] [thread 366315] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:50:02.148014] [D] [thread 366315] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[11:50:02.148247] [D] [thread 366315] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[11:50:02.148262] [D] [thread 366315] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[11:50:02.148282] [D] [thread 366315] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[11:50:02.148299] [D] [thread 366315] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[11:50:02.148394] [D] [thread 366315] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[11:50:02.148784] [D] [thread 366315] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[11:50:02.148871] [D] [thread 366315] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[11:50:02.148917] [D] [thread 366315] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[11:50:02.148948] [D] [thread 366315] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[11:50:02.148974] [W] [thread 366315] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[11:50:02.148984] [I] [thread 366315] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[11:50:02.148988] [D] [thread 366315] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[11:50:02.149281] [D] [thread 366315] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[11:50:02.149327] [I] [thread 366323] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[11:50:02.149335] [D] [thread 366323] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:50:02.149544] [D] [thread 366324] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[11:50:02.151167] [D] [thread 366315] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[11:50:02.151167] [D] [thread 366324] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[11:50:02.151189] [D] [thread 366315] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[11:50:02.151194] [D] [thread 366315] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[11:50:02.151195] [D] [thread 366315] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[11:50:02.151313] [D] [thread 366315] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[11:50:02.151333] [D] [thread 366315] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[11:50:02.151335] [D] [thread 366315] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[11:50:02.151354] [D] [thread 366315] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[11:50:02.151376] [D] [thread 366315] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[11:50:02.151382] [D] [thread 366315] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[11:50:02.151406] [I] [thread 366315] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:50:02.151642] [I] [thread 366315] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[11:50:02.151653] [I] [thread 366315] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:50:02.151712] [I] [thread 366315] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[11:50:02.151719] [I] [thread 366315] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:50:02.151885] [I] [thread 366315] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[11:50:02.151904] [I] [thread 366315] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:50:02.152097] [I] [thread 366315] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:50:02.152180] [D] [thread 366315] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[11:50:02.152201] [D] [thread 366315] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[11:50:02.152208] [W] [thread 366315] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[11:50:02.161484] [D] [thread 366315] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[11:50:02.169222] [D] [thread 366315] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[11:50:02.206949] [D] [thread 366315] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[11:50:02.207560] [D] [thread 366315] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:50:02.207712] [I] [thread 366315] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:50:02.207749] [D] [thread 366315] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:50:02.207756] [D] [thread 366315] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[11:50:02.207768] [D] [thread 366315] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:50:02.207776] [D] [thread 366315] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:50:02.207781] [D] [thread 366315] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:50:02.207784] [D] [thread 366315] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[11:50:02.207791] [D] [thread 366315] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[11:50:02.207799] [D] [thread 366315] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[11:50:02.207857] [D] [thread 366315] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[11:50:02.207869] [D] [thread 366315] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[11:50:02.207888] [D] [thread 366315] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[11:50:02.207929] [D] [thread 366315] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[11:50:02.207932] [W] [thread 366315] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[11:50:02.207938] [D] [thread 366315] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[11:50:02.209129] [D] [thread 366329] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[11:50:02.209994] [D] [thread 366329] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[11:50:02.210046] [D] [thread 366329] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 39943[m
[36m[11:50:02.210538] [D] [thread 366332] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 39943[m
[32m[11:50:02.210614] [I] [thread 366315] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:39943[m
[36m[11:50:02.210626] [D] [thread 366315] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700807938  with numThreads= 1[m
[36m[11:50:02.210648] [D] [thread 366315] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[11:50:02.210936] [D] [thread 366315] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[11:50:02.210947] [D] [thread 366315] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[11:50:02.210963] [D] [thread 366315] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[11:50:02.210968] [D] [thread 366315] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[11:50:02.210979] [D] [thread 366333] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[11:50:02.210998] [D] [thread 366333] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[11:50:02.211217] [D] [thread 366334] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[11:50:02.211322] [D] [thread 366334] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[11:50:02.212045] [D] [thread 366334] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 38149[m
[36m[11:50:02.212061] [D] [thread 366315] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:38149: 38149[m
[36m[11:50:02.212066] [D] [thread 366315] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[11:50:02.212075] [D] [thread 366315] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[11:50:02.212082] [D] [thread 366315] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[11:50:02.212499] [D] [thread 366315] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[11:50:02.212664] [W] [thread 366315] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[11:50:02.212670] [D] [thread 366315] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[11:50:02.214263] [D] [thread 366334] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[11:50:02.214456] [D] [thread 366315] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 38149
dataPort: 39943
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:02.217436] [D] [thread 366325] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 38149
dataPort: 39943
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:02.217503] [D] [thread 366325] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 38149
dataPort: 39943
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:02.217518] [D] [thread 366325] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[11:50:02.217522] [W] [thread 366325] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[11:50:02.217523] [D] [thread 366325] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:02.217524] [D] [thread 366325] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:02.217534] [D] [thread 366325] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[11:50:02.217565] [D] [thread 366325] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[11:50:02.217607] [I] [thread 366325] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[11:50:02.217616] [D] [thread 366325] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:02.217649] [D] [thread 366325] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:02.217659] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:02.217660] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:02.217667] [D] [thread 366325] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:02.217669] [D] [thread 366325] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:02.217672] [D] [thread 366325] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:02.217766] [D] [thread 366325] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[11:50:02.218315] [D] [thread 366315] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[11:50:02.218338] [D] [thread 366315] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[11:50:02.218424] [D] [thread 366315] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[11:50:02.218428] [D] [thread 366315] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[11:50:02.244274] [D] [thread 366315] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[11:50:02.244368] [D] [thread 366315] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[11:50:02.244371] [D] [thread 366315] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[11:50:02.244689] [D] [thread 366315] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[11:50:02.244722] [D] [thread 366315] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[11:50:02.244979] [D] [thread 366315] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[11:50:02.245076] [I] [thread 366338] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[11:50:02.247256] [I] [thread 366338] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[11:50:02.247307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:02.268104] [D] [thread 366315] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[11:50:02.268150] [D] [thread 366315] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[11:50:02.268151] [D] [thread 366315] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[11:50:02.268525] [D] [thread 366315] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[11:50:03.248460] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:04.249656] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:05.250834] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:05.806848] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:05.807725] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:05.808108] [D] [thread 366342] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[11:50:05.808484] [D] [thread 366342] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:50:05.808520] [D] [thread 366342] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:50:05.808571] [D] [thread 366342] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[11:50:05.809776] [D] [thread 366343] [File.cpp:27] [createFile] Create File to file:///tmp/query_28-11-2023_11-50-05_6377791.cpp[m
[36m[11:50:05.810753] [D] [thread 366343] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:50:05.811008] [D] [thread 366343] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -o/tmp/query_28-11-2023_11-50-05_6377791.so -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_28-11-2023_11-50-05_6377791.cpp'[m
[36m[11:50:06.808876] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:07.551319] [I] [thread 366343] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1741.637059ms[m
[36m[11:50:07.552223] [D] [thread 366342] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[11:50:07.552260] [D] [thread 366342] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[11:50:07.552265] [D] [thread 366342] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[11:50:07.552274] [D] [thread 366342] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[11:50:07.635533] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:07.635813] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:07.636150] [I] [thread 366349] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:07.636289] [I] [thread 366349] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:08.636952] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:09.638112] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:09.764514] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:09.764782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:09.765233] [I] [thread 366350] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:09.765339] [I] [thread 366350] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:09.902072] [D] [thread 366336] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 42129
dataPort: 37715
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:09.902152] [D] [thread 366336] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 42129
dataPort: 37715
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:09.902166] [D] [thread 366336] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:09.902231] [D] [thread 366336] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:09.902235] [D] [thread 366336] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:09.902243] [D] [thread 366336] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[11:50:09.902266] [D] [thread 366336] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:09.902288] [I] [thread 366336] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:09.902321] [I] [thread 366336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:09.902373] [D] [thread 366336] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[11:50:09.902400] [D] [thread 366336] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:09.902501] [D] [thread 366336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:09.902530] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:50:09.902532] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:50:09.902539] [D] [thread 366336] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:09.902542] [D] [thread 366336] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:09.902611] [D] [thread 366336] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:09.902677] [D] [thread 366336] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[11:50:10.765993] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:11.371192] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:11.371510] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:11.371889] [I] [thread 366352] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:11.372019] [I] [thread 366352] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:12.372730] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:13.373920] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:14.375116] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:15.376306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:16.377547] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:16.553025] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:16.553325] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:16.553751] [I] [thread 366353] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:16.553877] [I] [thread 366353] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:16.670230] [D] [thread 366336] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 41289
dataPort: 42675
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:16.670309] [D] [thread 366336] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 41289
dataPort: 42675
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:16.670324] [D] [thread 366336] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:16.670411] [D] [thread 366336] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:16.670415] [D] [thread 366336] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:16.670424] [D] [thread 366336] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[11:50:16.670460] [D] [thread 366336] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:16.670475] [I] [thread 366336] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:16.670502] [I] [thread 366336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:16.670514] [D] [thread 366336] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[11:50:16.670525] [D] [thread 366336] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:16.670574] [D] [thread 366336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:16.670584] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:50:16.670587] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:50:16.670594] [D] [thread 366336] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:16.670597] [D] [thread 366336] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:16.670599] [D] [thread 366336] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:16.670694] [D] [thread 366336] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[11:50:16.694842] [D] [thread 366336] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 3
oldParent: 1
newParent: 2
[m
[36m[11:50:16.694875] [D] [thread 366336] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 3  parentId= 1[m
[32m[11:50:16.694884] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:50:16.694887] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:50:16.694889] [D] [thread 366336] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  3  exists[m
[32m[11:50:16.694891] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:16.694892] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:16.694894] [D] [thread 366336] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:16.694903] [D] [thread 366336] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:16.694956] [I] [thread 366336] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:16.694969] [D] [thread 366336] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:16.694971] [D] [thread 366336] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:16.694976] [D] [thread 366336] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 3  parentId= 2[m
[32m[11:50:16.694978] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:50:16.694980] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:50:16.694981] [D] [thread 366336] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 3 exists[m
[32m[11:50:16.694983] [I] [thread 366336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:50:16.694984] [D] [thread 366336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:50:16.694986] [D] [thread 366336] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:50:16.695004] [I] [thread 366336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:50:16.695010] [D] [thread 366336] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:16.695049] [D] [thread 366336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:16.695191] [D] [thread 366336] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:17.554533] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:18.276451] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:18.276723] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:18.277147] [I] [thread 366355] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:18.277298] [I] [thread 366355] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:19.277894] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:20.279090] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:21.280286] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:22.281532] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:23.282740] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:23.340481] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:23.340802] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:23.341271] [I] [thread 366356] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:23.341425] [I] [thread 366356] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:23.460134] [D] [thread 366325] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 36887
dataPort: 34991
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:23.460206] [D] [thread 366325] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 36887
dataPort: 34991
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:23.460218] [D] [thread 366325] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:23.460450] [D] [thread 366325] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:23.460463] [D] [thread 366325] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:23.460474] [D] [thread 366325] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[11:50:23.460554] [D] [thread 366325] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:23.460572] [I] [thread 366325] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:23.460595] [I] [thread 366325] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:23.460604] [D] [thread 366325] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[11:50:23.460614] [D] [thread 366325] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:23.460746] [D] [thread 366325] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:23.460758] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:50:23.460761] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:50:23.460774] [D] [thread 366325] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:23.460777] [D] [thread 366325] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:23.460780] [D] [thread 366325] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:23.460908] [D] [thread 366325] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[11:50:23.484830] [D] [thread 366325] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 3
[m
[36m[11:50:23.484859] [D] [thread 366325] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[11:50:23.484863] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:50:23.484866] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:50:23.484871] [D] [thread 366325] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[11:50:23.484873] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:23.484875] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:23.484877] [D] [thread 366325] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:23.484886] [D] [thread 366325] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:23.485037] [I] [thread 366325] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:23.485046] [D] [thread 366325] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:23.485050] [D] [thread 366325] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:23.485053] [D] [thread 366325] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 3[m
[32m[11:50:23.485056] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:50:23.485058] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:50:23.485060] [D] [thread 366325] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[11:50:23.485061] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:50:23.485063] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:50:23.485065] [D] [thread 366325] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:50:23.485086] [I] [thread 366325] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:50:23.485093] [D] [thread 366325] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:23.485169] [D] [thread 366325] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:23.485175] [D] [thread 366325] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:24.341980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:24.900372] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:24.900639] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:24.901010] [I] [thread 366358] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:24.901182] [I] [thread 366358] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:25.901822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:26.903026] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:27.904203] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:28.905407] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:29.280118] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:29.280431] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:29.280718] [I] [thread 366359] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:29.280842] [I] [thread 366359] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:29.396593] [D] [thread 366325] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 38727
dataPort: 35025
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:29.396673] [D] [thread 366325] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 38727
dataPort: 35025
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:29.396689] [D] [thread 366325] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:29.396800] [D] [thread 366325] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:29.396805] [D] [thread 366325] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:29.396815] [D] [thread 366325] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[11:50:29.396843] [D] [thread 366325] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:29.396860] [I] [thread 366325] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:29.396887] [I] [thread 366325] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:29.396897] [D] [thread 366325] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[11:50:29.396909] [D] [thread 366325] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:29.397009] [D] [thread 366325] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:29.397023] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:50:29.397026] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:50:29.397033] [D] [thread 366325] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:29.397036] [D] [thread 366325] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:29.397039] [D] [thread 366325] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:29.397105] [D] [thread 366325] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[11:50:29.420555] [D] [thread 366325] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[11:50:29.420591] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:50:29.420602] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:50:29.420617] [D] [thread 366325] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[11:50:29.420664] [D] [thread 366325] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:50:29.420674] [D] [thread 366325] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[11:50:29.420697] [D] [thread 366325] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[11:50:29.420704] [D] [thread 366325] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:50:29.420714] [D] [thread 366325] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:50:29.420718] [D] [thread 366325] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:50:29.421789] [D] [thread 366325] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 4
[m
[36m[11:50:29.421830] [D] [thread 366325] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[11:50:29.421836] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:50:29.421839] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:50:29.421857] [D] [thread 366325] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[11:50:29.421859] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:29.421862] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:29.421864] [D] [thread 366325] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:29.421876] [D] [thread 366325] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:29.421943] [I] [thread 366325] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:29.421951] [D] [thread 366325] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:29.421954] [D] [thread 366325] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:29.421958] [D] [thread 366325] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 4[m
[32m[11:50:29.421961] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:50:29.421962] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:50:29.421966] [D] [thread 366325] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[11:50:29.421968] [I] [thread 366325] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:50:29.421970] [D] [thread 366325] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:50:29.421973] [D] [thread 366325] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:50:29.421998] [I] [thread 366325] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:50:29.422005] [D] [thread 366325] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:29.422084] [D] [thread 366325] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:29.422090] [D] [thread 366325] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:30.281586] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:30.873642] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:30.873915] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:30.874313] [I] [thread 366361] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:30.874510] [I] [thread 366361] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:31.875108] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:32.876314] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:33.877578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:34.878777] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:35.879986] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:36.138158] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:36.138459] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:36.138880] [I] [thread 366363] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:36.139075] [I] [thread 366363] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:36.256883] [D] [thread 366360] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 38081
dataPort: 42575
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:36.256999] [D] [thread 366360] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 38081
dataPort: 42575
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:36.257012] [D] [thread 366360] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:36.257137] [D] [thread 366360] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:36.257141] [D] [thread 366360] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:36.257150] [D] [thread 366360] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[11:50:36.257175] [D] [thread 366360] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:36.257191] [I] [thread 366360] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:36.257217] [I] [thread 366360] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:36.257226] [D] [thread 366360] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[11:50:36.257237] [D] [thread 366360] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:36.257319] [D] [thread 366360] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:36.257360] [I] [thread 366360] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:50:36.257364] [D] [thread 366360] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:50:36.257370] [D] [thread 366360] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:36.257373] [D] [thread 366360] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:36.257376] [D] [thread 366360] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:36.257500] [D] [thread 366360] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[11:50:36.281181] [D] [thread 366360] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[11:50:36.281218] [I] [thread 366360] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:50:36.281222] [D] [thread 366360] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:50:36.281232] [D] [thread 366360] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[11:50:36.281256] [D] [thread 366360] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:50:36.281262] [D] [thread 366360] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[11:50:36.281412] [D] [thread 366360] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:50:36.281424] [D] [thread 366360] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[11:50:36.281429] [D] [thread 366360] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:50:36.281437] [D] [thread 366360] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:50:36.281442] [D] [thread 366360] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:50:36.283011] [D] [thread 366364] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 5
[m
[36m[11:50:36.283058] [D] [thread 366364] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[11:50:36.283064] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:50:36.283067] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:50:36.283071] [D] [thread 366364] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[11:50:36.283073] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:36.283090] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:36.283092] [D] [thread 366364] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:36.283105] [D] [thread 366364] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:36.283175] [I] [thread 366364] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:36.283183] [D] [thread 366364] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:36.283186] [D] [thread 366364] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:36.283190] [D] [thread 366364] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 5[m
[32m[11:50:36.283192] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:50:36.283195] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:50:36.283197] [D] [thread 366364] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[11:50:36.283199] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:50:36.283201] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:50:36.283204] [D] [thread 366364] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  5  exists[m
[32m[11:50:36.283230] [I] [thread 366364] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[36m[11:50:36.283237] [D] [thread 366364] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:36.283328] [D] [thread 366364] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:36.283334] [D] [thread 366364] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:37.139627] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:37.693040] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:37.693388] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:37.693834] [I] [thread 366365] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:37.694054] [I] [thread 366365] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:38.694570] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:39.695723] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:40.696931] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:41.698125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:42.699304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:42.790741] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:42.791256] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:42.791443] [I] [thread 366366] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:42.791675] [I] [thread 366366] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:42.913478] [D] [thread 366360] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 41711
dataPort: 44049
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:42.913565] [D] [thread 366360] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 41711
dataPort: 44049
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:42.913580] [D] [thread 366360] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:42.913716] [D] [thread 366360] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:42.913720] [D] [thread 366360] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:42.913731] [D] [thread 366360] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[11:50:42.913757] [D] [thread 366360] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:42.913774] [I] [thread 366360] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:42.913800] [I] [thread 366360] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:42.913811] [D] [thread 366360] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[11:50:42.913823] [D] [thread 366360] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:42.913973] [D] [thread 366360] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:42.913986] [I] [thread 366360] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:50:42.913989] [D] [thread 366360] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:50:42.913995] [D] [thread 366360] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:42.913998] [D] [thread 366360] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:42.914001] [D] [thread 366360] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:42.914154] [D] [thread 366360] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[11:50:42.937627] [D] [thread 366360] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[11:50:42.937664] [I] [thread 366360] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:50:42.937668] [D] [thread 366360] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:50:42.937678] [D] [thread 366360] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[11:50:42.937700] [D] [thread 366360] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:50:42.937705] [D] [thread 366360] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[11:50:42.937711] [D] [thread 366360] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:50:42.937714] [D] [thread 366360] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:50:42.937717] [D] [thread 366360] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[11:50:42.937721] [D] [thread 366360] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:50:42.937727] [D] [thread 366360] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:50:42.937730] [D] [thread 366360] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:50:42.939218] [D] [thread 366367] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 6
[m
[36m[11:50:42.939256] [D] [thread 366367] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[11:50:42.939261] [I] [thread 366367] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:50:42.939264] [D] [thread 366367] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:50:42.939266] [D] [thread 366367] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[11:50:42.939268] [I] [thread 366367] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:42.939274] [D] [thread 366367] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:42.939276] [D] [thread 366367] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:42.939286] [D] [thread 366367] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:42.939345] [I] [thread 366367] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:42.939351] [D] [thread 366367] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:42.939354] [D] [thread 366367] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:42.939357] [D] [thread 366367] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 6[m
[32m[11:50:42.939359] [I] [thread 366367] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:50:42.939361] [D] [thread 366367] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:50:42.939363] [D] [thread 366367] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[11:50:42.939365] [I] [thread 366367] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:50:42.939366] [D] [thread 366367] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:50:42.939368] [D] [thread 366367] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  6  exists[m
[32m[11:50:42.939389] [I] [thread 366367] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[36m[11:50:42.939396] [D] [thread 366367] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:42.939476] [D] [thread 366367] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:42.939481] [D] [thread 366367] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:43.792520] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:44.370064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:44.370432] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:44.370889] [I] [thread 366368] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:44.371132] [I] [thread 366368] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:45.371588] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:46.372500] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:47.373708] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:48.374919] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:49.376161] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:50.085476] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:50.085789] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:50.086299] [I] [thread 366369] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:50.086533] [I] [thread 366369] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:50.196748] [D] [thread 366364] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 39173
dataPort: 38523
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:50.196801] [D] [thread 366364] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 39173
dataPort: 38523
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:50.196811] [D] [thread 366364] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:50.196912] [D] [thread 366364] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:50.196915] [D] [thread 366364] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:50.196921] [D] [thread 366364] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[11:50:50.196937] [D] [thread 366364] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:50.196946] [I] [thread 366364] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:50.196961] [I] [thread 366364] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:50.196969] [D] [thread 366364] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[11:50:50.196978] [D] [thread 366364] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:50.197050] [D] [thread 366364] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:50.197061] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:50:50.197063] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:50:50.197068] [D] [thread 366364] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:50.197069] [D] [thread 366364] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:50.197071] [D] [thread 366364] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:50.197122] [D] [thread 366364] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[11:50:50.220389] [D] [thread 366364] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[11:50:50.220425] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:50:50.220430] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:50:50.220439] [D] [thread 366364] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[11:50:50.220465] [D] [thread 366364] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:50:50.220472] [D] [thread 366364] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[11:50:50.220479] [D] [thread 366364] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:50:50.220484] [D] [thread 366364] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:50:50.220486] [D] [thread 366364] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:50:50.220490] [D] [thread 366364] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[11:50:50.220494] [D] [thread 366364] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:50:50.220500] [D] [thread 366364] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:50:50.220504] [D] [thread 366364] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:50:50.222042] [D] [thread 366364] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 7
[m
[36m[11:50:50.222085] [D] [thread 366364] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[11:50:50.222093] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:50:50.222097] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:50:50.222101] [D] [thread 366364] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[11:50:50.222103] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:50.222105] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:50.222108] [D] [thread 366364] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:50.222120] [D] [thread 366364] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:50.222185] [I] [thread 366364] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:50.222193] [D] [thread 366364] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:50.222196] [D] [thread 366364] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:50.222200] [D] [thread 366364] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 7[m
[32m[11:50:50.222202] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:50:50.222205] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:50:50.222207] [D] [thread 366364] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[11:50:50.222209] [I] [thread 366364] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:50:50.222211] [D] [thread 366364] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:50:50.222220] [D] [thread 366364] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  7  exists[m
[32m[11:50:50.222246] [I] [thread 366364] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0][m
[36m[11:50:50.222253] [D] [thread 366364] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:50.222371] [D] [thread 366364] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:50.222377] [D] [thread 366364] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:51.086980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:51.652575] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:51.652857] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:51.653240] [I] [thread 366371] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:51.653496] [I] [thread 366371] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:52.654029] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:53.655212] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:54.656430] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:55.657645] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:56.658858] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:56.916653] [D] [thread 366370] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 34787
dataPort: 43793
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:56.916740] [D] [thread 366370] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 34787
dataPort: 43793
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:50:56.916755] [D] [thread 366370] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:50:56.916951] [D] [thread 366370] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:50:56.916956] [D] [thread 366370] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:50:56.916967] [D] [thread 366370] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[11:50:56.916993] [D] [thread 366370] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:50:56.917010] [I] [thread 366370] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:50:56.917036] [I] [thread 366370] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:56.917046] [D] [thread 366370] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[11:50:56.917058] [D] [thread 366370] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:50:56.917321] [D] [thread 366370] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
[m
[32m[11:50:56.917336] [I] [thread 366370] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:50:56.917340] [D] [thread 366370] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:50:56.917346] [D] [thread 366370] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:50:56.917349] [D] [thread 366370] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:50:56.917353] [D] [thread 366370] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:50:56.917467] [D] [thread 366370] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[11:50:56.941590] [D] [thread 366370] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[11:50:56.941621] [I] [thread 366370] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:50:56.941625] [D] [thread 366370] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:50:56.941632] [D] [thread 366370] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[11:50:56.941658] [D] [thread 366370] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:50:56.941662] [D] [thread 366370] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[11:50:56.941669] [D] [thread 366370] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:50:56.941672] [D] [thread 366370] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:50:56.941674] [D] [thread 366370] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:50:56.941676] [D] [thread 366370] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:50:56.941679] [D] [thread 366370] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[11:50:56.941682] [D] [thread 366370] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:50:56.941688] [D] [thread 366370] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:50:56.941692] [D] [thread 366370] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:50:56.943019] [D] [thread 366372] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 8
[m
[36m[11:50:56.943063] [D] [thread 366372] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[11:50:56.943070] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:50:56.943073] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:50:56.943077] [D] [thread 366372] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[11:50:56.943094] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:50:56.943096] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:50:56.943099] [D] [thread 366372] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:50:56.943111] [D] [thread 366372] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:50:56.943181] [I] [thread 366372] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:50:56.943189] [D] [thread 366372] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:50:56.943192] [D] [thread 366372] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:50:56.943196] [D] [thread 366372] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 8[m
[32m[11:50:56.943199] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:50:56.943201] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:50:56.943204] [D] [thread 366372] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[11:50:56.943206] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:50:56.943208] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:50:56.943224] [D] [thread 366372] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  8  exists[m
[32m[11:50:56.943252] [I] [thread 366372] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0][m
[36m[11:50:56.943259] [D] [thread 366372] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:50:56.943394] [D] [thread 366372] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
[m
[36m[11:50:56.943401] [D] [thread 366372] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:50:57.022853] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:57.023164] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:50:57.023523] [I] [thread 366373] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:50:57.023812] [I] [thread 366373] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:50:58.024378] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:50:59.025565] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:00.026752] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:01.027959] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:02.029148] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:02.294764] [D] [thread 366370] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 36241
dataPort: 39453
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:51:02.294850] [D] [thread 366370] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 36241
dataPort: 39453
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:51:02.294864] [D] [thread 366370] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:51:02.295039] [D] [thread 366370] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:51:02.295043] [D] [thread 366370] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:51:02.295053] [D] [thread 366370] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[11:51:02.295078] [D] [thread 366370] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:51:02.295095] [I] [thread 366370] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:51:02.295122] [I] [thread 366370] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:51:02.295131] [D] [thread 366370] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[11:51:02.295143] [D] [thread 366370] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:51:02.295404] [D] [thread 366370] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
[m
[32m[11:51:02.295420] [I] [thread 366370] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:02.295424] [D] [thread 366370] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:51:02.295431] [D] [thread 366370] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:51:02.295435] [D] [thread 366370] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:51:02.295437] [D] [thread 366370] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:51:02.295505] [D] [thread 366370] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[11:51:02.319346] [D] [thread 366372] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[11:51:02.319385] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:02.319390] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:51:02.319399] [D] [thread 366372] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[11:51:02.319424] [D] [thread 366372] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:51:02.319430] [D] [thread 366372] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[11:51:02.319438] [D] [thread 366372] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:51:02.319442] [D] [thread 366372] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:51:02.319445] [D] [thread 366372] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:51:02.319447] [D] [thread 366372] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:51:02.319450] [D] [thread 366372] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:51:02.319453] [D] [thread 366372] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[11:51:02.319458] [D] [thread 366372] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:51:02.319463] [D] [thread 366372] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:51:02.319467] [D] [thread 366372] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:51:02.321035] [D] [thread 366372] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 9
[m
[36m[11:51:02.321077] [D] [thread 366372] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[11:51:02.321083] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:02.321087] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:51:02.321091] [D] [thread 366372] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[11:51:02.321107] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:51:02.321110] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:51:02.321113] [D] [thread 366372] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:51:02.321124] [D] [thread 366372] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:51:02.321191] [I] [thread 366372] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:51:02.321199] [D] [thread 366372] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:51:02.321202] [D] [thread 366372] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:51:02.321206] [D] [thread 366372] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 9[m
[32m[11:51:02.321208] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:02.321211] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:51:02.321213] [D] [thread 366372] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[11:51:02.321215] [I] [thread 366372] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:51:02.321217] [D] [thread 366372] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:51:02.321220] [D] [thread 366372] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  9  exists[m
[32m[11:51:02.321247] [I] [thread 366372] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0][m
[36m[11:51:02.321255] [D] [thread 366372] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:51:02.321401] [D] [thread 366372] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
[m
[36m[11:51:02.321409] [D] [thread 366372] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:51:02.680155] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:02.680493] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:51:02.680831] [I] [thread 366375] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:51:02.681138] [I] [thread 366375] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:51:03.681687] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:04.236880] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:04.237078] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:04.307961] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:04.308234] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:04.308848] [D] [thread 366380] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[11:51:04.308896] [I] [thread 366380] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[11:51:04.308942] [I] [thread 366380] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[11:51:04.308950] [D] [thread 366380] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[11:51:04.308993] [D] [thread 366380] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[11:51:04.309029] [D] [thread 366380] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));[m
[36m[11:51:04.309038] [D] [thread 366380] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));
}
}
[m
[36m[11:51:04.309831] [D] [thread 366381] [File.cpp:27] [createFile] Create File to file:///tmp/query_28-11-2023_11-51-04_7155470.cpp[m
[36m[11:51:04.310291] [D] [thread 366381] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:51:04.310331] [D] [thread 366381] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[11:51:04.310442] [D] [thread 366381] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -o/tmp/query_28-11-2023_11-51-04_7155470.so -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_28-11-2023_11-51-04_7155470.cpp'[m
[36m[11:51:05.309379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:06.310526] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:51:07.152389] [I] [thread 366381] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2842.625861ms[m
[36m[11:51:07.152787] [D] [thread 366380] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[11:51:07.152812] [D] [thread 366380] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[11:51:07.152882] [I] [thread 366380] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.153094] [D] [thread 366380] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[11:51:07.153137] [D] [thread 366380] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[11:51:07.153181] [I] [thread 366380] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.153221] [D] [thread 366380] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[11:51:07.153263] [D] [thread 366380] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.153267] [D] [thread 366380] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.153298] [I] [thread 366380] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:51:07.153317] [D] [thread 366380] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Sum;) as new root of the plan.[m
[36m[11:51:07.153330] [D] [thread 366380] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.153331] [D] [thread 366380] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.153345] [D] [thread 366380] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[11:51:07.153355] [I] [thread 366380] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:51:07.153366] [D] [thread 366380] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:51:07.153379] [D] [thread 366380] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.153380] [D] [thread 366380] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.154176] [D] [thread 366380] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.154228] [D] [thread 366380] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.154237] [D] [thread 366380] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.154255] [D] [thread 366380] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.154259] [D] [thread 366380] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.154261] [D] [thread 366380] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.154271] [D] [thread 366380] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:51:07.154278] [D] [thread 366380] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.154281] [D] [thread 366380] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.154283] [D] [thread 366380] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.154401] [D] [thread 366380] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.154406] [D] [thread 366380] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.154416] [D] [thread 366380] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.154553] [D] [thread 366380] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.154660] [D] [thread 366380] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:51:07.154729] [I] [thread 366380] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[11:51:07.154812] [I] [thread 366380] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[11:51:07.154824] [I] [thread 366380] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:51:07.155079] [I] [thread 366323] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:51:07.155107] [I] [thread 366323] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:51:07.155112] [I] [thread 366323] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:51:07.155147] [I] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[11:51:07.155159] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:51:07.155162] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.155175] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.155178] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.155185] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.155189] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.155333] [D] [thread 366323] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.155410] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.155424] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:51:07.155433] [D] [thread 366323] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:51:07.155478] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[11:51:07.155484] [I] [thread 366323] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:51:07.155503] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:51:07.155531] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:51:07.155577] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:51:07.155615] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.155653] [D] [thread 366323] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[11:51:07.155706] [D] [thread 366323] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.155748] [D] [thread 366323] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:51:07.155771] [I] [thread 366323] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.155782] [D] [thread 366323] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:51:07.155783] [I] [thread 366323] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:51:07.155789] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:51:07.155795] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:51:07.155816] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:51:07.155834] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.155854] [D] [thread 366323] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[11:51:07.155878] [I] [thread 366323] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.155883] [D] [thread 366323] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:51:07.155885] [I] [thread 366323] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:51:07.155889] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:51:07.155894] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:51:07.155911] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:51:07.155927] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.155944] [D] [thread 366323] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[11:51:07.155962] [I] [thread 366323] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:51:07.155982] [I] [thread 366323] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.155999] [D] [thread 366323] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[11:51:07.156016] [D] [thread 366323] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.156033] [D] [thread 366323] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.156043] [D] [thread 366323] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[11:51:07.156061] [D] [thread 366323] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.156077] [D] [thread 366323] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.156090] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.156096] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.156099] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.156105] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.156109] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.156213] [D] [thread 366323] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.156267] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:51:07.156276] [I] [thread 366323] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[11:51:07.156303] [I] [thread 366323] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:51:07.156305] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.156310] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.156313] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[11:51:07.156460] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156468] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156479] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156482] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156485] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156522] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:51:07.156608] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156613] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156617] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156619] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156621] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156640] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:51:07.156666] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156669] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156672] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156674] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156676] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156692] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:51:07.156718] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156731] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156735] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156737] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156738] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156756] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:51:07.156784] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156787] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156791] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156792] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156794] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156810] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:51:07.156839] [I] [thread 366323] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:51:07.156842] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:51:07.156845] [D] [thread 366323] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:51:07.156847] [D] [thread 366323] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:51:07.156861] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:51:07.156879] [D] [thread 366323] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[11:51:07.156964] [D] [thread 366323] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[11:51:07.156980] [I] [thread 366323] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[11:51:07.157030] [D] [thread 366323] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.157080] [D] [thread 366323] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[11:51:07.157130] [D] [thread 366323] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.157133] [D] [thread 366323] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[11:51:07.157181] [D] [thread 366323] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.157216] [D] [thread 366323] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[11:51:07.157222] [D] [thread 366323] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Sum;)[m
[36m[11:51:07.157233] [D] [thread 366323] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157250] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:51:07.157252] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:51:07.157275] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:51:07.157276] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:51:07.157284] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:51:07.157285] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:51:07.157293] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:51:07.157294] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:51:07.157301] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:51:07.157309] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:51:07.157316] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:07.157318] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:51:07.157351] [I] [thread 366323] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:51:07.157355] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157356] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157356] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157357] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157358] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157359] [I] [thread 366323] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:07.157362] [I] [thread 366323] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:07.157366] [I] [thread 366323] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:51:07.157367] [I] [thread 366323] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:51:07.157375] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:51:07.157401] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157445] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:51:07.157459] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(18) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157482] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:51:07.157492] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(19) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157516] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:51:07.157527] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(20) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157553] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:51:07.157563] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(21) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:51:07.157592] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:51:07.157602] [D] [thread 366323] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(22) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[36m[11:51:07.157706] [D] [thread 366323] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.157774] [D] [thread 366323] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.157804] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.157820] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.157826] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:51:07.157834] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.157838] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.157962] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158003] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158026] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158115] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158131] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158149] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158230] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158244] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158261] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158344] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158358] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158376] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158457] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158471] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158488] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158567] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.158596] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.158614] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.158631] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.158735] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:51:07.158738] [D] [thread 366323] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:51:07.158798] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:51:07.158804] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[11:51:07.158808] [D] [thread 366323] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[11:51:07.158815] [I] [thread 366323] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[11:51:07.158822] [I] [thread 366323] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:51:07.158832] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:51:07.158846] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[11:51:07.158896] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[11:51:07.158918] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[11:51:07.158939] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[11:51:07.158960] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[11:51:07.158983] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[11:51:07.159020] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[11:51:07.159040] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[11:51:07.159065] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[11:51:07.159079] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[11:51:07.159096] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[11:51:07.159111] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[11:51:07.159127] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:51:07.159163] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[11:51:07.159184] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[11:51:07.159202] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[11:51:07.159221] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[11:51:07.159240] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:51:07.159305] [D] [thread 366323] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:51:07.159324] [D] [thread 366323] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:51:07.159330] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159334] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159338] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159340] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159343] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159345] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159347] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159351] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159353] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159355] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159357] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159359] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159361] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159363] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159365] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159367] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159369] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159371] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159372] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159374] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159375] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159377] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159378] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159380] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159381] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159512] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:51:07.159516] [D] [thread 366323] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:51:07.159524] [D] [thread 366323] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:51:07.159526] [D] [thread 366323] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:51:07.159528] [D] [thread 366323] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[11:51:07.159530] [D] [thread 366323] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[11:51:07.159536] [I] [thread 366323] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[11:51:07.159641] [D] [thread 366323] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.159644] [D] [thread 366323] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:51:07.159645] [D] [thread 366323] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:51:07.159649] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159652] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159654] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159656] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159658] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159660] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159663] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159666] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159668] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159670] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159672] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159674] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159676] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159679] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159680] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159682] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159684] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159686] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159687] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159689] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159690] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159692] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159693] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159695] [D] [thread 366323] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:51:07.159697] [D] [thread 366323] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:51:07.159727] [D] [thread 366323] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[11:51:07.159733] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:51:07.159735] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:51:07.159740] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:51:07.159741] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:51:07.159742] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:51:07.159744] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:51:07.159746] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:51:07.159747] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:51:07.159748] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:51:07.159749] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:51:07.159751] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:51:07.159752] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:51:07.159755] [I] [thread 366323] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:51:07.159756] [D] [thread 366323] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:51:07.159763] [I] [thread 366323] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[11:51:07.159793] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.159829] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159840] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159850] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159856] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159861] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159873] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159896] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.159901] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159905] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159912] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159917] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159929] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159934] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159939] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159960] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.159964] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159969] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159981] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159987] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159991] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.159997] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160002] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160014] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160020] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160040] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.160044] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160049] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160054] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160066] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160072] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160077] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160082] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160088] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160099] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160104] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160121] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.160126] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160131] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160136] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160148] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160153] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160158] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160163] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160169] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160183] [D] [thread 366323] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:51:07.160187] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160199] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160204] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160209] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160214] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[11:51:07.160222] [I] [thread 366323] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[11:51:07.160223] [D] [thread 366323] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[11:51:07.160280] [D] [thread 366323] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[11:51:07.160282] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160294] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160295] [D] [thread 366323] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:51:07.160298] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:51:07.160305] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160313] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160351] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160361] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160374] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160378] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160382] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160383] [D] [thread 366323] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:51:07.160385] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:51:07.160391] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160394] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160396] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160398] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160400] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:51:07.160402] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160406] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160407] [D] [thread 366323] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:51:07.160408] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:51:07.160414] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[33m[1m[11:51:07.160419] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160421] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160423] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160426] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160428] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160430] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:51:07.160432] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160436] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:51:07.160437] [D] [thread 366323] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:51:07.160438] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:51:07.160442] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160444] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160446] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160451] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160454] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160455] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160458] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160460] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:51:07.160461] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160462] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:51:07.160464] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160468] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160470] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160472] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160474] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160476] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160478] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:51:07.160480] [D] [thread 366323] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:51:07.160481] [D] [thread 366323] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:51:07.160482] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160484] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160486] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:51:07.160488] [W] [thread 366323] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:51:07.160497] [D] [thread 366323] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:51:07.160499] [D] [thread 366323] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:51:07.160500] [D] [thread 366323] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:51:07.160501] [D] [thread 366323] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:51:07.160501] [D] [thread 366323] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:51:07.160502] [D] [thread 366323] [Node.cpp:432] [getAllRootNodes] Node: Inserting root node to the collection[m
[36m[11:51:07.160504] [D] [thread 366323] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:51:07.160505] [D] [thread 366323] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:51:07.160507] [D] [thread 366323] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:51:07.160508] [D] [thread 366323] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:51:07.160509] [D] [thread 366323] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:51:07.160534] [D] [thread 366323] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[11:51:07.160557] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[11:51:07.160575] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[11:51:07.160582] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160598] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[11:51:07.160599] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160614] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:51:07.160617] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160626] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.160627] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.160632] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.160647] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.160653] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.160655] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.160685] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.160694] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[11:51:07.160700] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[11:51:07.160702] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160710] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[11:51:07.160711] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160720] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(18)[m
[36m[11:51:07.160722] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160729] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.160731] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.160733] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.160744] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.160745] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.160753] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.160770] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.160778] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[11:51:07.160785] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[11:51:07.160787] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160795] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[11:51:07.160797] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160806] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(19)[m
[36m[11:51:07.160808] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160815] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.160817] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.160819] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.160829] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.160831] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.160832] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.160850] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.160858] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[11:51:07.160864] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[11:51:07.160866] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160873] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[11:51:07.160875] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160883] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(20)[m
[36m[11:51:07.160885] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160892] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.160894] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.160902] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.160913] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.160914] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.160920] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.160936] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.160944] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[11:51:07.160951] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[11:51:07.160953] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160960] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[11:51:07.160964] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160973] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[11:51:07.160975] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.160982] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.160983] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.160985] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.161036] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.161038] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.161040] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.161057] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.161066] [D] [thread 366323] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[11:51:07.161072] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[11:51:07.161074] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161081] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[11:51:07.161083] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161092] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[11:51:07.161094] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161101] [D] [thread 366323] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:51:07.161102] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.161104] [D] [thread 366323] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:51:07.161115] [D] [thread 366323] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:51:07.161116] [D] [thread 366323] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:51:07.161117] [D] [thread 366323] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:51:07.161132] [D] [thread 366323] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:51:07.161134] [D] [thread 366323] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161139] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161148] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161156] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.161182] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[11:51:07.161188] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.161189] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.161210] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:51:07.161229] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[11:51:07.161231] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.161232] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.161237] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161239] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.161251] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.161259] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161261] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.161264] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.161274] [D] [thread 366323] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[11:51:07.161286] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161288] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161294] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:51:07.161296] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161303] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161312] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161315] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.161332] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.161334] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.161339] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[11:51:07.161341] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161342] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.161345] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161346] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.161351] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161352] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161365] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.161366] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161368] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.161379] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[11:51:07.161391] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161392] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161396] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:51:07.161397] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:51:07.161425] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[11:51:07.161437] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161438] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.161441] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.161443] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161444] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.161445] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.161451] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.161454] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161455] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161457] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:51:07.161458] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161463] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161470] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161472] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.161480] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.161481] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.161486] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 5[m
[36m[11:51:07.161487] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161488] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.161489] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161493] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.161495] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161496] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161502] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.161503] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161504] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.161508] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:51:07.161523] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161524] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161526] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:51:07.161527] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[11:51:07.161544] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[11:51:07.161549] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161550] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.161552] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.161553] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161555] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.161556] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.161558] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.161560] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161562] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161563] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:51:07.161564] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161567] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161575] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:51:07.161579] [W] [thread 366323] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:51:07.161580] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161582] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161584] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161591] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161602] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.161612] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[11:51:07.161613] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.161614] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.161619] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[11:51:07.161631] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[11:51:07.161633] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.161634] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.161636] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161637] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.161640] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.161641] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161642] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.161643] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.161646] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[11:51:07.161654] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161656] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161657] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:51:07.161659] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161663] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161670] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161672] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.161681] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.161682] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.161687] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[11:51:07.161693] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161694] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.161696] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161697] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.161699] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161701] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161707] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.161708] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161710] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.161713] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[11:51:07.161751] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161753] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161755] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:51:07.161756] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[11:51:07.161777] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[11:51:07.161784] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161785] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.161787] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.161789] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161790] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.161791] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.161794] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.161797] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161798] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161800] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:51:07.161801] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161806] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161813] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161815] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.161823] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.161825] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.161830] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(18) on execution node with id 6[m
[36m[11:51:07.161831] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161832] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.161833] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161835] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.161838] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161839] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161844] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.161845] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161846] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.161850] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:51:07.161859] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.161860] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.161862] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:51:07.161863] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[11:51:07.161879] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[11:51:07.161884] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161885] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.161886] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.161888] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161889] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.161890] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.161892] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.161894] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161895] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161897] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:51:07.161898] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161901] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161908] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:51:07.161912] [W] [thread 366323] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:51:07.161913] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161914] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161916] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.161923] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161925] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.161934] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[11:51:07.161936] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.161937] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.161941] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[11:51:07.161954] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[11:51:07.161956] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.161957] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.161959] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.161960] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.161963] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.161964] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.161966] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.161967] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.161969] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[11:51:07.161972] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.161974] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.161975] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:51:07.161977] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.161981] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.161988] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.161990] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.161997] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.161998] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.162003] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[11:51:07.162004] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162005] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162006] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162007] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162010] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162011] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162016] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162017] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162019] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162022] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[11:51:07.162031] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162032] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162034] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[11:51:07.162035] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[11:51:07.162054] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[11:51:07.162060] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162061] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162063] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.162064] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162065] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.162066] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.162067] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:51:07.162070] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162071] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162072] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:51:07.162074] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162078] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162086] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162088] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.162095] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.162096] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.162101] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(19) on execution node with id 7[m
[36m[11:51:07.162102] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162103] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162104] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162106] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162109] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162110] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162114] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162115] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162116] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162120] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:51:07.162128] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162130] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162132] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:51:07.162133] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[11:51:07.162148] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[11:51:07.162153] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162155] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162157] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.162158] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162159] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.162160] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.162162] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:51:07.162164] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162166] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162167] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:51:07.162168] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162171] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162183] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:51:07.162188] [W] [thread 366323] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:51:07.162189] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162190] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162193] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162200] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162203] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.162234] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[11:51:07.162236] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.162237] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.162242] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[11:51:07.162255] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[11:51:07.162256] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.162257] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.162259] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162260] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.162263] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.162265] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162266] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:51:07.162267] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:51:07.162269] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[11:51:07.162273] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162275] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162276] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:51:07.162278] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162282] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162288] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162290] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.162298] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.162300] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.162304] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[11:51:07.162306] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162307] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162308] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162313] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162316] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162317] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162324] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162325] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162326] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162329] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[11:51:07.162337] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162339] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162341] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:51:07.162342] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[11:51:07.162361] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[11:51:07.162367] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162368] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162369] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.162374] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162375] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:51:07.162376] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:51:07.162379] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:51:07.162382] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162383] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162384] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:51:07.162386] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162390] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162397] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162399] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.162407] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.162408] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.162413] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(20) on execution node with id 8[m
[36m[11:51:07.162417] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162418] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162420] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162422] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162424] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162425] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162430] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162431] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162432] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162435] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:51:07.162445] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162446] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162448] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:51:07.162449] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[11:51:07.162466] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[11:51:07.162471] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162472] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162474] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.162476] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162477] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:51:07.162478] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:51:07.162480] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:51:07.162482] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162483] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162485] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:51:07.162486] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162489] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162496] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:51:07.162501] [W] [thread 366323] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:51:07.162502] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162503] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162504] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162510] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162513] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.162521] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[11:51:07.162522] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.162523] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.162527] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[11:51:07.162539] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[11:51:07.162540] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.162541] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.162543] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162544] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.162546] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:51:07.162548] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162549] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:51:07.162549] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:51:07.162560] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[11:51:07.162564] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162565] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162567] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:51:07.162568] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162583] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162592] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162599] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.162607] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.162608] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:51:07.162614] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[11:51:07.162615] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162616] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162617] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162619] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162622] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162623] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162629] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162630] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162632] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162638] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[11:51:07.162646] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162647] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162649] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:51:07.162651] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[11:51:07.162669] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[11:51:07.162676] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162677] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162679] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:51:07.162681] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162682] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:51:07.162683] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:51:07.162685] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:51:07.162687] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162689] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162690] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:51:07.162691] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162696] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162703] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162705] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.162713] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.162714] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:51:07.162719] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(21) on execution node with id 9[m
[36m[11:51:07.162720] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162721] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162722] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162725] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162727] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162728] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162733] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162734] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162735] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162738] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:51:07.162747] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162749] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162751] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:51:07.162752] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[11:51:07.162768] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[11:51:07.162773] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162774] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162776] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:51:07.162777] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162778] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:51:07.162780] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:51:07.162782] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:51:07.162785] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162793] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162794] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:51:07.162795] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162799] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162806] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:51:07.162812] [W] [thread 366323] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:51:07.162813] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162815] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162816] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.162823] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162826] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.162834] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[11:51:07.162835] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.162836] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.162839] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:51:07.162852] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[11:51:07.162853] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.162855] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.162856] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162857] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.162860] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:51:07.162867] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162868] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:51:07.162869] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:51:07.162872] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[11:51:07.162876] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.162877] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.162879] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:51:07.162880] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.162887] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.162894] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.162896] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.162904] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.162905] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:51:07.162910] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[11:51:07.162911] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162912] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.162914] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162915] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.162917] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162919] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162925] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.162926] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162928] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.162931] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[11:51:07.162939] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.162940] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.162942] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[11:51:07.162944] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[11:51:07.162963] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[11:51:07.162969] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.162970] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.162972] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:51:07.162973] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.162974] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:51:07.162975] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:51:07.162995] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:51:07.162999] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.163001] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.163002] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:51:07.163004] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.163009] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.163017] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:51:07.163020] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.163028] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.163029] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:51:07.163034] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(22) on execution node with id 10[m
[36m[11:51:07.163036] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163037] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.163038] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.163040] [D] [thread 366323] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:51:07.163043] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.163044] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.163049] [D] [thread 366323] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:51:07.163050] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163051] [D] [thread 366323] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:51:07.163055] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:51:07.163064] [D] [thread 366323] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:51:07.163065] [D] [thread 366323] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:51:07.163067] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:51:07.163068] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[11:51:07.163083] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[11:51:07.163088] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163089] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.163091] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:51:07.163093] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163094] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:51:07.163095] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:51:07.163097] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:51:07.163100] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.163101] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.163103] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:51:07.163104] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.163107] [D] [thread 366323] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:51:07.163114] [D] [thread 366323] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:51:07.163120] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.163128] [D] [thread 366323] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[11:51:07.163129] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:51:07.163131] [W] [thread 366323] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:51:07.163135] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:51:07.163147] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:51:07.163148] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163149] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.163151] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163152] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.163162] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:51:07.163163] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163164] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:51:07.163165] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:51:07.163168] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[11:51:07.163172] [D] [thread 366323] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:51:07.163173] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:51:07.163175] [I] [thread 366323] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:51:07.163176] [D] [thread 366323] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:51:07.163178] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.163179] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.163180] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.163182] [D] [thread 366323] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:51:07.163190] [D] [thread 366323] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[11:51:07.163197] [I] [thread 366323] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[11:51:07.163204] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163214] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:51:07.163225] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163229] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:51:07.163230] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[11:51:07.163232] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163254] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.163257] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.163259] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:51:07.163266] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163282] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163284] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163289] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163290] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163294] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163295] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163298] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163299] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163300] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.163310] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.163324] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.163325] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.163327] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163328] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.163330] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:51:07.163331] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[11:51:07.163349] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[11:51:07.163381] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[11:51:07.163388] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[11:51:07.163439] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:51:07.163468] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::23::0::0}) as new root of the plan.[m
[36m[11:51:07.163470] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163471] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.163477] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[11:51:07.163487] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.163506] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163507] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.163510] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163511] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.163514] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.163517] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163518] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.163519] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.163523] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[11:51:07.163529] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.163530] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.163531] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.163533] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.163537] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.163539] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[11:51:07.163546] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:51:07.163558] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::26::0::0}) as new root of the plan.[m
[36m[11:51:07.163560] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163560] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.163564] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[11:51:07.163574] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.163593] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163594] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.163596] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163597] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.163599] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.163601] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163602] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.163603] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.163605] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[11:51:07.163608] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.163609] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.163610] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.163611] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.163613] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.163614] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[11:51:07.163635] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[11:51:07.163647] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::29::0::0}) as new root of the plan.[m
[36m[11:51:07.163649] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163649] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.163654] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[11:51:07.163663] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.163682] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163683] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.163685] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163686] [D] [thread 366323] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:51:07.163688] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.163690] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163691] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.163692] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.163695] [D] [thread 366323] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[11:51:07.163699] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.163699] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.163700] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.163701] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.163703] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.163705] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.163713] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.163714] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.163716] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163716] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.163721] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[11:51:07.163724] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.163725] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.163761] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.163763] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.163764] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.163769] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.163771] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:51:07.163776] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163781] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:51:07.163787] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163791] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:51:07.163792] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[11:51:07.163794] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.163807] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.163811] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.163814] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.163818] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163828] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163829] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163835] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163836] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163840] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163842] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163846] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163853] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163856] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.163858] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.163859] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.163865] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.163876] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.163878] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.163879] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163880] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.163881] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:51:07.163882] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[11:51:07.163886] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[11:51:07.163908] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(18) as root operator.[m
[36m[11:51:07.163914] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.163921] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.163922] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:51:07.163928] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[11:51:07.163938] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::35::0::0}) as new root of the plan.[m
[36m[11:51:07.163939] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163940] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.163945] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[11:51:07.163954] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:34991)}) as new root of the plan.[m
[36m[11:51:07.163973] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.163974] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.163983] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.163984] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.163987] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.163988] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.163989] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.163990] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.163993] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.163996] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.163997] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.163998] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:51:07.163999] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164001] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.164002] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164009] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164011] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:51:07.164030] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[11:51:07.164043] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::38::0::0}) as new root of the plan.[m
[36m[11:51:07.164044] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164045] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164049] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[11:51:07.164059] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.164078] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164079] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164081] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164082] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164084] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.164085] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164086] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.164086] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.164089] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:51:07.164091] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.164092] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.164093] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.164094] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164099] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:51:07.164101] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.164108] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.164109] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:51:07.164115] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[11:51:07.164125] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::41::0::0}) as new root of the plan.[m
[36m[11:51:07.164126] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164127] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164131] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[11:51:07.164141] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.164159] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164160] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164162] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164162] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164165] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.164166] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164166] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.164167] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.164169] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:51:07.164171] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164172] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.164173] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.164174] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164175] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:51:07.164176] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.164183] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.164184] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:51:07.164202] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[11:51:07.164215] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::44::0::0}) as new root of the plan.[m
[36m[11:51:07.164216] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164217] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164221] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[11:51:07.164230] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.164249] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164250] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164251] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164252] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164254] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.164256] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164257] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.164258] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.164260] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:51:07.164263] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.164264] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.164265] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.164266] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164271] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:51:07.164272] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.164280] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.164281] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.164282] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164283] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.164287] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[11:51:07.164290] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.164291] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.164312] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.164313] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.164314] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.164315] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164348] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:51:07.164355] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.164370] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:51:07.164376] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.164379] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:51:07.164381] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[11:51:07.164382] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.164400] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.164405] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.164408] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:51:07.164411] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164424] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164425] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164432] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164433] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164438] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164439] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164444] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164445] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164449] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164450] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164453] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.164454] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.164455] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.164462] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.164475] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.164476] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.164478] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164479] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.164481] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:51:07.164482] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[32m[11:51:07.164487] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[11:51:07.164512] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(19) as root operator.[m
[36m[11:51:07.164519] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.164525] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.164527] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:51:07.164556] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[11:51:07.164570] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::50::0::0}) as new root of the plan.[m
[36m[11:51:07.164571] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164572] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164577] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[11:51:07.164587] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:35025)}) as new root of the plan.[m
[36m[11:51:07.164605] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164606] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164608] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164609] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164613] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.164614] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164616] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.164617] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.164621] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.164629] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.164630] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.164631] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:51:07.164632] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164635] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.164637] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.164645] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.164646] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:51:07.164651] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[11:51:07.164662] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::53::0::0}) as new root of the plan.[m
[36m[11:51:07.164663] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164664] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164668] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[11:51:07.164682] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:34991)}) as new root of the plan.[m
[36m[11:51:07.164701] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164702] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164703] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164704] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164707] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.164708] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164709] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.164710] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.164712] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.164715] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.164716] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.164717] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:51:07.164718] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164719] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:51:07.164721] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164728] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164729] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:51:07.164751] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[11:51:07.164762] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::56::0::0}) as new root of the plan.[m
[36m[11:51:07.164763] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164764] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164768] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[11:51:07.164777] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.164796] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164797] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164799] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164800] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164803] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.164804] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164805] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.164806] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.164809] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:51:07.164812] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.164813] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.164813] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.164814] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164816] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:51:07.164817] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.164825] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.164826] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:51:07.164832] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:51:07.164842] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::59::0::0}) as new root of the plan.[m
[36m[11:51:07.164843] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164844] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164848] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[36m[11:51:07.164858] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.164876] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164878] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164880] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164881] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164884] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.164885] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164885] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.164886] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.164889] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:51:07.164891] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.164892] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.164893] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.164894] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.164895] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:51:07.164904] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.164912] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.164914] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:51:07.164936] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:51:07.164950] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::62::0::0}) as new root of the plan.[m
[36m[11:51:07.164951] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164952] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.164956] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[11:51:07.164967] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.164987] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.164988] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.164990] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.164991] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.164994] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.164995] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.164997] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.164998] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.165001] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:51:07.165003] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.165004] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.165005] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.165006] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165008] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:51:07.165009] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.165018] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.165019] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.165020] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165021] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.165026] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[11:51:07.165029] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.165037] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.165061] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.165063] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.165064] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.165065] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165066] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:51:07.165073] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165080] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:51:07.165086] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165090] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:51:07.165091] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[11:51:07.165092] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165107] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.165113] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.165116] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[11:51:07.165121] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165136] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165138] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165145] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165147] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165153] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165154] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165159] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165161] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165165] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165166] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165170] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165171] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165173] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165175] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165176] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.165184] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.165195] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.165197] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.165199] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165200] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.165201] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:51:07.165202] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[11:51:07.165207] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[11:51:07.165228] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(20) as root operator.[m
[36m[11:51:07.165235] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.165242] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.165243] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:51:07.165269] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[11:51:07.165282] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::68::0::0}) as new root of the plan.[m
[36m[11:51:07.165283] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165284] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165289] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[11:51:07.165298] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:42575)}) as new root of the plan.[m
[36m[11:51:07.165316] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165317] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165320] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165321] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165324] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.165325] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165326] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.165327] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.165331] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:51:07.165334] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.165335] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.165336] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:51:07.165337] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165340] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.165341] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.165349] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.165357] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:51:07.165362] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[11:51:07.165372] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::71::0::0}) as new root of the plan.[m
[36m[11:51:07.165377] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165378] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165382] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[11:51:07.165393] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:35025)}) as new root of the plan.[m
[36m[11:51:07.165413] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165414] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165416] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165417] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165423] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.165424] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165425] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.165426] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.165429] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.165432] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.165433] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.165434] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:51:07.165434] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165436] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:51:07.165438] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.165445] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.165447] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:51:07.165451] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[11:51:07.165487] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::74::0::0}) as new root of the plan.[m
[36m[11:51:07.165489] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165490] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165494] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[11:51:07.165503] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:34991)}) as new root of the plan.[m
[36m[11:51:07.165522] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165524] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165525] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165526] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165529] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.165530] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165531] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.165532] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.165534] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.165537] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.165538] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.165539] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:51:07.165540] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165542] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:51:07.165543] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.165550] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.165551] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:51:07.165556] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[11:51:07.165566] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::77::0::0}) as new root of the plan.[m
[36m[11:51:07.165567] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165568] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165571] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[11:51:07.165581] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.165599] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165601] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165602] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165603] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165606] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.165607] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165608] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.165609] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.165612] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:51:07.165615] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.165616] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.165617] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.165618] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165619] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:51:07.165620] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.165627] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.165628] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:51:07.165632] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[11:51:07.165657] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::80::0::0}) as new root of the plan.[m
[36m[11:51:07.165658] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165659] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165663] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[36m[11:51:07.165673] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.165692] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165693] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165707] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165708] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165711] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.165712] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165713] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.165713] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.165716] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:51:07.165719] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.165719] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.165720] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.165721] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165723] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:51:07.165724] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.165732] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.165733] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:51:07.165739] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 83[m
[36m[11:51:07.165749] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::83::0::0}) as new root of the plan.[m
[36m[11:51:07.165750] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165751] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.165754] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[36m[11:51:07.165764] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.165782] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.165788] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.165789] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165790] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.165793] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.165794] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.165795] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.165796] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.165813] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:51:07.165815] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.165816] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.165817] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.165818] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165820] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:51:07.165821] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.165830] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.165831] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.165832] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.165833] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.165837] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 86[m
[36m[11:51:07.165840] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.165842] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.165866] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.165868] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.165870] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.165871] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.165872] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:51:07.165878] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165884] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:51:07.165889] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165897] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:51:07.165898] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[11:51:07.165899] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.165913] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.165922] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.165926] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[11:51:07.165930] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165946] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165948] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165956] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165957] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165965] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165966] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165972] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165973] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165979] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165980] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165985] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165986] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165989] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.165991] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.165993] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166000] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166001] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.166010] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.166020] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.166021] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:51:07.166022] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166023] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.166024] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:51:07.166025] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[32m[11:51:07.166029] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[11:51:07.166051] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(21) as root operator.[m
[36m[11:51:07.166057] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.166064] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.166065] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[32m[11:51:07.166071] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[11:51:07.166082] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::89::0::0}) as new root of the plan.[m
[36m[11:51:07.166083] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166084] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166088] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[11:51:07.166097] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:44049)}) as new root of the plan.[m
[36m[11:51:07.166115] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166116] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166118] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166119] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166122] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.166123] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166124] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:51:07.166125] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:51:07.166146] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:51:07.166149] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.166150] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:51:07.166151] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:51:07.166152] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166155] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.166156] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.166165] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.166166] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:51:07.166171] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[11:51:07.166182] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::92::0::0}) as new root of the plan.[m
[36m[11:51:07.166184] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166185] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166188] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[11:51:07.166199] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:42575)}) as new root of the plan.[m
[36m[11:51:07.166218] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166219] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166220] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166221] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166223] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.166225] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166226] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.166227] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.166229] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:51:07.166231] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.166232] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.166233] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:51:07.166234] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166235] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  8[m
[36m[11:51:07.166236] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.166243] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.166244] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:51:07.166249] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[11:51:07.166259] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::95::0::0}) as new root of the plan.[m
[36m[11:51:07.166260] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166261] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166264] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 100[m
[36m[11:51:07.166274] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:35025)}) as new root of the plan.[m
[36m[11:51:07.166292] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166293] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166295] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166296] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166298] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.166299] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166300] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.166301] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.166316] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.166319] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.166320] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.166321] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:51:07.166322] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166323] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:51:07.166324] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.166332] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.166334] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:51:07.166339] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[11:51:07.166349] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::98::0::0}) as new root of the plan.[m
[36m[11:51:07.166350] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166351] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166355] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[11:51:07.166364] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:34991)}) as new root of the plan.[m
[36m[11:51:07.166383] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166384] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166386] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166387] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166389] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.166390] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166391] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.166392] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.166394] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.166396] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.166397] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.166398] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:51:07.166399] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166400] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:51:07.166401] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.166408] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.166409] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:51:07.166413] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[11:51:07.166423] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::101::0::0}) as new root of the plan.[m
[36m[11:51:07.166424] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166425] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166429] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[36m[11:51:07.166438] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.166456] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166457] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166459] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166460] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166462] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.166463] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166464] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.166465] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.166467] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:51:07.166469] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.166470] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.166471] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.166472] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166473] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:51:07.166475] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.166482] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.166483] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:51:07.166500] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[11:51:07.166511] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::104::0::0}) as new root of the plan.[m
[36m[11:51:07.166513] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166514] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166517] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 109[m
[36m[11:51:07.166527] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.166545] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166546] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166548] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166549] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166551] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.166552] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166553] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.166554] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.166556] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:51:07.166559] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.166559] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.166561] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.166562] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166563] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:51:07.166564] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.166571] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.166573] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:51:07.166577] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[36m[11:51:07.166587] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::107::0::0}) as new root of the plan.[m
[36m[11:51:07.166589] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166589] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166593] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 112[m
[36m[11:51:07.166603] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.166621] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166622] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166623] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166624] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166627] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.166628] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166629] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.166630] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.166632] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:51:07.166634] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.166635] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.166636] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.166637] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166638] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:51:07.166639] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.166646] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.166647] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.166649] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166649] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.166667] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 110[m
[36m[11:51:07.166671] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.166672] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.166698] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.166700] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.166701] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.166702] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166704] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:51:07.166708] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.166714] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:51:07.166718] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.166722] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:51:07.166724] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[11:51:07.166725] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.166738] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.166745] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.166748] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[11:51:07.166751] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166766] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166767] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166777] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166779] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166787] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166788] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166796] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166798] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166804] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166805] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166811] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166812] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166816] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166817] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166821] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166822] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166824] [D] [thread 366323] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:51:07.166825] [D] [thread 366323] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:51:07.166826] [D] [thread 366323] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:51:07.166839] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.166849] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.166850] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:51:07.166851] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166852] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.166854] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:51:07.166855] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[11:51:07.166859] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 115[m
[36m[11:51:07.166880] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(22) as root operator.[m
[36m[11:51:07.166887] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.166894] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.166895] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[32m[11:51:07.166905] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 113[m
[36m[11:51:07.166915] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:39453 1::113::0::0}) as new root of the plan.[m
[36m[11:51:07.166917] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166918] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.166922] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 118[m
[36m[11:51:07.166932] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38523)}) as new root of the plan.[m
[36m[11:51:07.166950] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.166951] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.166953] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.166954] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.166957] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:51:07.166958] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.166960] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:51:07.166961] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:51:07.166965] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:51:07.166968] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:51:07.166969] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:51:07.166970] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[11:51:07.166971] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.166973] [D] [thread 366323] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:51:07.166975] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.166982] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.166987] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[32m[11:51:07.167009] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 116[m
[36m[11:51:07.167022] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::116::0::0}) as new root of the plan.[m
[36m[11:51:07.167023] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167024] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167027] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 121[m
[36m[11:51:07.167036] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:44049)}) as new root of the plan.[m
[36m[11:51:07.167055] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167056] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167058] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167059] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167062] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:51:07.167062] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167063] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:51:07.167064] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:51:07.167067] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:51:07.167069] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:51:07.167070] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:51:07.167070] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:51:07.167071] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167073] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  9[m
[36m[11:51:07.167074] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.167082] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.167083] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:51:07.167088] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 119[m
[36m[11:51:07.167097] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::119::0::0}) as new root of the plan.[m
[36m[11:51:07.167099] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167100] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167104] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 124[m
[36m[11:51:07.167113] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:42575)}) as new root of the plan.[m
[36m[11:51:07.167131] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167132] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167133] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167134] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167137] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:51:07.167138] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167139] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:51:07.167140] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:51:07.167142] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:51:07.167144] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:51:07.167145] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:51:07.167146] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:51:07.167147] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167149] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  8[m
[36m[11:51:07.167150] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.167157] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.167158] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:51:07.167174] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 122[m
[36m[11:51:07.167188] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::122::0::0}) as new root of the plan.[m
[36m[11:51:07.167189] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167190] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167195] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 127[m
[36m[11:51:07.167204] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:35025)}) as new root of the plan.[m
[36m[11:51:07.167222] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167223] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167225] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167227] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167229] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:51:07.167229] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167230] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:51:07.167231] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:51:07.167234] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:51:07.167236] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:51:07.167237] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:51:07.167238] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:51:07.167238] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167240] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:51:07.167241] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.167249] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.167250] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:51:07.167254] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 125[m
[36m[11:51:07.167264] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::125::0::0}) as new root of the plan.[m
[36m[11:51:07.167265] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167266] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167269] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 130[m
[36m[11:51:07.167279] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:34991)}) as new root of the plan.[m
[36m[11:51:07.167297] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167299] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167300] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167301] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167304] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:51:07.167305] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167306] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:51:07.167307] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:51:07.167310] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:51:07.167312] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:51:07.167313] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:51:07.167314] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:51:07.167314] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167316] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:51:07.167320] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.167327] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.167329] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:51:07.167344] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 128[m
[36m[11:51:07.167356] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::128::0::0}) as new root of the plan.[m
[36m[11:51:07.167357] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167358] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167361] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 133[m
[36m[11:51:07.167370] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:42675)}) as new root of the plan.[m
[36m[11:51:07.167389] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167390] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167391] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167392] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167395] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:51:07.167396] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167397] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:51:07.167398] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:51:07.167400] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:51:07.167403] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:51:07.167404] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:51:07.167404] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:51:07.167405] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167407] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:51:07.167408] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.167415] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.167416] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:51:07.167420] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 131[m
[36m[11:51:07.167430] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::131::0::0}) as new root of the plan.[m
[36m[11:51:07.167431] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167438] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167442] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 136[m
[36m[11:51:07.167452] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:37715)}) as new root of the plan.[m
[36m[11:51:07.167470] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167472] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167474] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167475] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167478] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:51:07.167479] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167480] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:51:07.167481] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:51:07.167484] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:51:07.167486] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:51:07.167487] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:51:07.167488] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:51:07.167489] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167490] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:51:07.167491] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.167498] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.167500] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:51:07.167516] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 134[m
[36m[11:51:07.167527] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::134::0::0}) as new root of the plan.[m
[36m[11:51:07.167528] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167529] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:07.167533] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 139[m
[36m[11:51:07.167543] [D] [thread 366323] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:39943)}) as new root of the plan.[m
[36m[11:51:07.167561] [D] [thread 366323] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:07.167562] [D] [thread 366323] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:07.167564] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167565] [D] [thread 366323] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:51:07.167567] [D] [thread 366323] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:51:07.167568] [D] [thread 366323] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:51:07.167569] [W] [thread 366323] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:51:07.167571] [D] [thread 366323] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:51:07.167573] [D] [thread 366323] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:51:07.167575] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:51:07.167576] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:51:07.167577] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:51:07.167578] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167579] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:51:07.167580] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.167588] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.167589] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.167590] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167593] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:51:07.167597] [I] [thread 366323] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 137[m
[36m[11:51:07.167600] [D] [thread 366323] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:51:07.167601] [D] [thread 366323] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:51:07.167629] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:51:07.167630] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:51:07.167631] [D] [thread 366323] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:51:07.167632] [D] [thread 366323] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:51:07.167634] [D] [thread 366323] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:51:07.167638] [D] [thread 366323] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:51:07.167645] [D] [thread 366323] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[11:51:07.167646] [D] [thread 366323] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:51:07.167647] [D] [thread 366323] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:51:07.167654] [D] [thread 366323] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[11:51:07.167656] [D] [thread 366323] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:51:07.167679] [D] [thread 366323] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[11:51:07.167683] [D] [thread 366323] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:51:07.167686] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.167687] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.167716] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.167722] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.167728] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.167734] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.167737] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.167869] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.167905] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.167925] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.167936] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.167951] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.167953] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.167956] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.167960] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.167962] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.167973] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.167981] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.167983] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.167985] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.167987] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.167988] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.167998] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168004] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168007] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168008] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168010] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168012] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168021] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168028] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168030] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168032] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168033] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168035] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168063] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168071] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168074] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168075] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168077] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168079] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168089] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168092] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.168093] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.168105] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168109] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168110] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168113] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168114] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168195] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.168212] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.168247] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.168260] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168270] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168273] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168275] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168277] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168279] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168287] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168294] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168297] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168298] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168300] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168301] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168310] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168345] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168349] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168351] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168353] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168362] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168375] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168384] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168387] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168388] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168390] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168392] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168400] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168403] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.168405] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.168417] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168421] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168422] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168425] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168427] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168528] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.168548] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.168567] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.168576] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168588] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168591] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168593] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168596] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168598] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168632] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168642] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168644] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168646] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168648] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168650] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168658] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168665] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168667] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168669] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168670] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168672] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168680] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168683] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.168684] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.168696] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168699] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168700] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168702] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168704] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168781] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.168810] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.168829] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.168837] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168846] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168848] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168850] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168852] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168854] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168862] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168869] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168871] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168873] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168875] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168876] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168886] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.168888] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.168889] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.168900] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.168904] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.168905] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.168907] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.168909] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.168997] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.169011] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.169030] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.169037] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169047] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169050] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169058] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169060] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169062] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169072] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169075] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.169076] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.169086] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169090] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169092] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169094] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169096] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169184] [D] [thread 366323] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:51:07.169198] [I] [thread 366323] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:51:07.169216] [I] [thread 366323] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.169236] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169239] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.169241] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.169258] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169264] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169267] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:51:07.169272] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169274] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169299] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169301] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.169302] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.169310] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169312] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169314] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169316] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169318] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169326] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169333] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169335] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169336] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169338] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169340] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169349] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169356] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169358] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169360] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169361] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169363] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169372] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169378] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169380] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169381] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169383] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169385] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169394] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169400] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169402] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169404] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169405] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169407] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169427] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169435] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169438] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169440] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169441] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169443] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169451] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169453] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.169455] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.169461] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169464] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169465] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169467] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169468] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169476] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169483] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169485] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169486] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169488] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169489] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169498] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169505] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169508] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169509] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169511] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169513] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169522] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169529] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169531] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169533] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169534] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169536] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169545] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169551] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169554] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169555] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169557] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169558] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169580] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169589] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169595] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169597] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169599] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169601] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169610] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169612] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.169613] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.169621] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169623] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169625] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169627] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169628] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169636] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169643] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169645] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169647] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169648] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169650] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169659] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169666] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169668] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169670] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169671] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169673] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169681] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169688] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169690] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169692] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169694] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169695] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169705] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169724] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169727] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169729] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169731] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169733] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169742] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169749] [D] [thread 366323] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:51:07.169751] [D] [thread 366323] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:51:07.169752] [D] [thread 366323] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:51:07.169754] [D] [thread 366323] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:51:07.169756] [D] [thread 366323] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:51:07.169763] [D] [thread 366323] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:51:07.169771] [D] [thread 366323] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[11:51:07.170841] [D] [thread 366323] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::32::0::0})
|    SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::47::0::0})
|    SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::65::0::0})
|    SOURCE(86,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::86::0::0})
|    SOURCE(110,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::110::0::0})
|    SOURCE(137,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::137::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::29::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::44::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:19)
|  |  SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::62::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:25)
|  |  SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::83::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:32)
|  |  SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::107::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:40)
|  |  SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:39943)})
|  |    SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::134::0::0})
|  |--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::26::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  |  SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::41::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:18)
|  |  |  SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::59::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:24)
|  |  |  SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::80::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:31)
|  |  |  SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::104::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:39)
|  |  |  SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:37715)})
|  |  |    SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::131::0::0})
|  |  |--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  |  SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::23::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  |  |  SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::38::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  |  |  SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::56::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:23)
|  |  |  |  SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::77::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:30)
|  |  |  |  SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::101::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:38)
|  |  |  |  SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:42675)})
|  |  |  |    SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::128::0::0})
|  |  |  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  |  |  SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    CENTRALWINDOW(17)
|  |  |  |  |      WATERMARKASSIGNER(6)
|  |  |  |  |        SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  |  |  |  SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::35::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  |  |  |  SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::53::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:22)
|  |  |  |  |  SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::74::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:29)
|  |  |  |  |  SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::98::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:37)
|  |  |  |  |  SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:34991)})
|  |  |  |  |    SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::125::0::0})
|  |  |  |  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  |  |  |  SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.32:35025)})
|  |  |  |  |  |    CENTRALWINDOW(18)
|  |  |  |  |  |      WATERMARKASSIGNER(8)
|  |  |  |  |  |        SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  |  |  |  |  SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:35025)})
|  |  |  |  |  |    SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::50::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:21)
|  |  |  |  |  |  SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:35025)})
|  |  |  |  |  |    SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::71::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:28)
|  |  |  |  |  |  SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:35025)})
|  |  |  |  |  |    SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::95::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:36)
|  |  |  |  |  |  SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:35025)})
|  |  |  |  |  |    SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::122::0::0})
|  |  |  |  |  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  |  |  |  |  SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.33:42575)})
|  |  |  |  |  |  |    CENTRALWINDOW(19)
|  |  |  |  |  |  |      WATERMARKASSIGNER(10)
|  |  |  |  |  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:20)
|  |  |  |  |  |  |  SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:42575)})
|  |  |  |  |  |  |    SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::68::0::0})
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:27)
|  |  |  |  |  |  |  SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:42575)})
|  |  |  |  |  |  |    SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::92::0::0})
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:35)
|  |  |  |  |  |  |  SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:42575)})
|  |  |  |  |  |  |    SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::119::0::0})
|  |  |  |  |  |  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  |  |  |  |  |  SINK(70: {NetworkSinkDescriptor(partition=1::68::0::0;nodeLocation=tcp://192.168.2.34:44049)})
|  |  |  |  |  |  |  |    CENTRALWINDOW(20)
|  |  |  |  |  |  |  |      WATERMARKASSIGNER(12)
|  |  |  |  |  |  |  |        SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:26)
|  |  |  |  |  |  |  |  SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:44049)})
|  |  |  |  |  |  |  |    SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::89::0::0})
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:34)
|  |  |  |  |  |  |  |  SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:44049)})
|  |  |  |  |  |  |  |    SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::116::0::0})
|  |  |  |  |  |  |  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  |  |  |  |  |  |  SINK(91: {NetworkSinkDescriptor(partition=1::89::0::0;nodeLocation=tcp://192.168.2.35:38523)})
|  |  |  |  |  |  |  |  |    CENTRALWINDOW(21)
|  |  |  |  |  |  |  |  |      WATERMARKASSIGNER(14)
|  |  |  |  |  |  |  |  |        SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:33)
|  |  |  |  |  |  |  |  |  SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38523)})
|  |  |  |  |  |  |  |  |    SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:39453 1::113::0::0})
|  |  |  |  |  |  |  |  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  |  |  |  |  |  |  |  SINK(115: {NetworkSinkDescriptor(partition=1::113::0::0;nodeLocation=tcp://192.168.2.37:43793)})
|  |  |  |  |  |  |  |  |  |    CENTRALWINDOW(22)
|  |  |  |  |  |  |  |  |  |      WATERMARKASSIGNER(16)
|  |  |  |  |  |  |  |  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.170886] [D] [thread 366323] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[11:51:07.170890] [D] [thread 366323] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:51:07.170922] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170923] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170945] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170946] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170954] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170955] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170962] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170963] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170968] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170969] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170972] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170973] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170976] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170977] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170979] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170980] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170989] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.170990] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.170999] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.171000] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.171025] [D] [thread 366323] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[11:51:07.171028] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[11:51:07.171029] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.171030] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.171054] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:38727[m
[36m[11:51:07.171061] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 1[m
[36m[11:51:07.171132] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[11:51:07.171136] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.171214] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.173806] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.174248] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.174343] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.174365] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.174509] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.175088] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.175148] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.175161] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.175165] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.175172] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.175306] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.175359] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.175402] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.175418] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.175525] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.175535] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.175605] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.175653] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.175718] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.175766] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.175873] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[11:51:07.175931] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.175979] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.176116] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.176166] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.176229] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.176367] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.182244] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 11[m
[36m[11:51:07.182321] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::35::0::0})
[m
[36m[11:51:07.182325] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.182357] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.182429] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.182461] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.182491] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.182507] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.182575] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::35::0::0}[m
[36m[11:51:07.182609] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.182627] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.182684] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.182701] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.182724] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.182740] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.184439] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 16[m
[36m[11:51:07.184507] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::53::0::0})
[m
[36m[11:51:07.184510] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.184540] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.184610] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.184639] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.184670] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.184686] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.184752] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::53::0::0}[m
[36m[11:51:07.184775] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.184792] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.184839] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.184855] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.184878] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.184893] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.186559] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 22[m
[36m[11:51:07.186627] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::74::0::0})
[m
[36m[11:51:07.186630] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.186657] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.186726] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.186754] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.186794] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.186810] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.186879] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::74::0::0}[m
[36m[11:51:07.186902] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.186919] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.186966] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.186982] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.187006] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.187021] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.188874] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 29[m
[36m[11:51:07.188938] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::98::0::0})
[m
[36m[11:51:07.188941] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.188969] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.189039] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.189067] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.189098] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.189113] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.189183] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::98::0::0}[m
[36m[11:51:07.189206] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.189223] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.189271] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.189287] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.189311] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.189326] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.217156] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:38727 queryId=1 querySubPlanId = 37[m
[36m[11:51:07.217269] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:34991)})
  SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::125::0::0})
[m
[36m[11:51:07.217274] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.217313] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.217404] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.217451] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.217527] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.217554] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.217652] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:42575 1::125::0::0}[m
[36m[11:51:07.217702] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.217730] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.217801] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.217825] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.217860] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.217883] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.219964] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[11:51:07.220002] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.220004] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.220024] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:38081[m
[36m[11:51:07.220029] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:38081 queryId=1 querySubPlanId = 2[m
[36m[11:51:07.220112] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.32:35025)})
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[11:51:07.220117] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.220153] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.220237] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.220277] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.220364] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.220396] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.220511] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.220558] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.220591] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.220604] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.220610] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.220622] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.220732] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.220815] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.220909] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.220950] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.221066] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.221095] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.221181] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.221269] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.221381] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.221464] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.221623] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[11:51:07.221708] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.221794] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.221952] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.222040] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.222148] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.222231] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.226688] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:38081 queryId=1 querySubPlanId = 15[m
[36m[11:51:07.226793] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:35025)})
  SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::50::0::0})
[m
[36m[11:51:07.226796] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.226827] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.226903] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.226935] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.226970] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.226988] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.227062] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::50::0::0}[m
[36m[11:51:07.227087] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.227107] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.227161] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.227179] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.227205] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.227223] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.228983] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:38081 queryId=1 querySubPlanId = 21[m
[36m[11:51:07.229075] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:35025)})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::71::0::0})
[m
[36m[11:51:07.229079] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.229110] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.229191] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.229223] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.229258] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.229275] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.229349] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::71::0::0}[m
[36m[11:51:07.229375] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.229394] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.229446] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.229464] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.229490] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.229508] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.231170] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:38081 queryId=1 querySubPlanId = 28[m
[36m[11:51:07.231261] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:35025)})
  SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::95::0::0})
[m
[36m[11:51:07.231265] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.231294] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.231362] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.231393] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.231426] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.231444] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.231518] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::95::0::0}[m
[36m[11:51:07.231545] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.231565] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.231618] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.231636] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.231662] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.231679] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.233549] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:38081 queryId=1 querySubPlanId = 36[m
[36m[11:51:07.233645] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:35025)})
  SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::122::0::0})
[m
[36m[11:51:07.233649] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.233678] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.233746] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.233776] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.233811] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.233829] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.233899] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:44049 1::122::0::0}[m
[36m[11:51:07.233923] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.233939] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.233986] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.234001] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.234097] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.234117] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.235645] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[11:51:07.235679] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.235681] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.235697] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:41711[m
[36m[11:51:07.235701] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41711 queryId=1 querySubPlanId = 3[m
[36m[11:51:07.235767] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.33:42575)})
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[11:51:07.235770] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.235799] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.235864] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.235892] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.235922] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.235937] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236011] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.236030] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.236056] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.236065] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.236069] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.236076] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.236152] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.236204] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236251] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.236267] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236383] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.236396] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.236461] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.236512] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236583] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.236631] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236739] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[11:51:07.236790] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.236838] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.236946] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.237017] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.237082] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.237130] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.240829] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41711 queryId=1 querySubPlanId = 20[m
[36m[11:51:07.240924] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:42575)})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::68::0::0})
[m
[36m[11:51:07.240927] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.240956] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.241023] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.241054] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.241084] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.241100] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.241166] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::68::0::0}[m
[36m[11:51:07.241190] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.241207] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.241254] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.241270] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.241293] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.241308] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.242852] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41711 queryId=1 querySubPlanId = 27[m
[36m[11:51:07.242981] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:42575)})
  SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::92::0::0})
[m
[36m[11:51:07.242984] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.243012] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.243076] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.243106] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.243136] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.243152] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.243214] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::92::0::0}[m
[36m[11:51:07.243237] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.243254] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.243299] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.243316] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.243339] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.243354] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.244891] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:41711 queryId=1 querySubPlanId = 35[m
[36m[11:51:07.244976] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:42575)})
  SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::119::0::0})
[m
[36m[11:51:07.244979] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.245008] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.245074] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.245103] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.245134] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.245149] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.245213] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38523 1::119::0::0}[m
[36m[11:51:07.245237] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.245254] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.245302] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.245318] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.245341] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.245357] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.246891] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[11:51:07.246926] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.246928] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.246945] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:39173[m
[36m[11:51:07.246949] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:39173 queryId=1 querySubPlanId = 4[m
[36m[11:51:07.247016] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(70: {NetworkSinkDescriptor(partition=1::68::0::0;nodeLocation=tcp://192.168.2.34:44049)})
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[11:51:07.247019] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.247047] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.247115] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.247144] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247174] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.247189] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247266] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.247285] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.247311] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.247319] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.247323] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.247331] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.247410] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.247463] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247510] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.247526] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247604] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.247612] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.247669] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.247717] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247805] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.247855] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.247957] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[11:51:07.248007] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.248056] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.248162] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.248213] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.248297] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.248389] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.251989] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:39173 queryId=1 querySubPlanId = 26[m
[36m[11:51:07.252085] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:44049)})
  SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::89::0::0})
[m
[36m[11:51:07.252088] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.252118] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.252186] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.252217] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.252246] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.252261] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.252371] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::89::0::0}[m
[36m[11:51:07.252397] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.252419] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.252473] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.252489] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.252512] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.252527] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.254094] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:39173 queryId=1 querySubPlanId = 34[m
[36m[11:51:07.254222] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:44049)})
  SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::116::0::0})
[m
[36m[11:51:07.254234] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.254262] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.254328] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.254357] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.254387] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.254403] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.254467] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43793 1::116::0::0}[m
[36m[11:51:07.254490] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.254507] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.254553] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.254569] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.254592] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.254607] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.256127] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[11:51:07.256162] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.256164] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.256179] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:34787[m
[36m[11:51:07.256183] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:34787 queryId=1 querySubPlanId = 5[m
[36m[11:51:07.256249] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(91: {NetworkSinkDescriptor(partition=1::89::0::0;nodeLocation=tcp://192.168.2.35:38523)})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[11:51:07.256253] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.256280] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.256380] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.256412] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.256444] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.256460] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.256538] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.256559] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.256586] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.256595] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.256599] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.256618] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.256698] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.256753] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.256800] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.256816] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.256893] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.256900] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.256957] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.257004] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.257069] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.257115] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.257219] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[11:51:07.257269] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.257318] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.257422] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.257473] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.257535] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.257582] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.261181] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:34787 queryId=1 querySubPlanId = 33[m
[36m[11:51:07.261274] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38523)})
  SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:39453 1::113::0::0})
[m
[36m[11:51:07.261278] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.261306] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.261378] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.261407] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.261439] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.261455] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.261523] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:39453 1::113::0::0}[m
[36m[11:51:07.261546] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.261563] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.261611] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.261627] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.261650] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.261665] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.263231] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[11:51:07.263266] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.263268] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.263284] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:36241[m
[36m[11:51:07.263288] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:36241 queryId=1 querySubPlanId = 6[m
[36m[11:51:07.263353] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(115: {NetworkSinkDescriptor(partition=1::113::0::0;nodeLocation=tcp://192.168.2.37:43793)})
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:51:07.263358] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.263386] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.263455] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.263484] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.263514] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.263530] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.263605] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:51:07.263623] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.263650] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.263658] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.263662] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:51:07.263670] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.263749] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.263802] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.263849] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.263865] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.263945] [D] [thread 366323] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:51:07.263956] [D] [thread 366323] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:51:07.264018] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.264068] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.264136] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.264184] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.264305] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[11:51:07.264434] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.264498] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.264616] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.264680] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.264747] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:51:07.264794] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268308] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[11:51:07.268385] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.268387] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.268404] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:38149[m
[36m[11:51:07.268408] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:38149 queryId=1 querySubPlanId = 7[m
[36m[11:51:07.268500] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::32::0::0})
  SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::47::0::0})
  SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::65::0::0})
  SOURCE(86,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::86::0::0})
  SOURCE(110,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::110::0::0})
  SOURCE(137,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::137::0::0})
[m
[36m[11:51:07.268504] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.268529] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.268652] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.268683] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268716] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.268732] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268802] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::32::0::0}[m
[36m[11:51:07.268826] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.268843] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268895] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.268912] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268935] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.268950] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.268997] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::47::0::0}[m
[36m[11:51:07.269016] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269032] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269067] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269082] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269105] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269120] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269166] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::65::0::0}[m
[36m[11:51:07.269185] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269202] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269236] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269252] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269275] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269290] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269336] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::86::0::0}[m
[36m[11:51:07.269355] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269371] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269407] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269423] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269445] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269460] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269505] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::110::0::0}[m
[36m[11:51:07.269534] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269552] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269589] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269605] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269628] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269643] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269700] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::137::0::0}[m
[36m[11:51:07.269718] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269735] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269769] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269785] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.269808] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.269823] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.273135] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[11:51:07.273166] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.273168] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.273187] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:36887[m
[36m[11:51:07.273191] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 8[m
[36m[11:51:07.273258] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::23::0::0})
[m
[36m[11:51:07.273262] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.273294] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.273373] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.273406] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.273443] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.273459] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.273535] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::23::0::0}[m
[36m[11:51:07.273559] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.273578] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.273628] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.273644] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.273668] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.273683] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.275272] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 12[m
[36m[11:51:07.275404] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::38::0::0})
[m
[36m[11:51:07.275407] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.275434] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.275499] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.275529] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.275559] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.275575] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.275640] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::38::0::0}[m
[36m[11:51:07.275664] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.275681] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.275727] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.275742] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.275766] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.275781] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.277352] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 17[m
[36m[11:51:07.277441] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::56::0::0})
[m
[36m[11:51:07.277444] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.277471] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.277535] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.277564] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.277595] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.277610] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.277674] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::56::0::0}[m
[36m[11:51:07.277697] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.277713] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.277760] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.277776] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.277798] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.277814] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.279371] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 23[m
[36m[11:51:07.279466] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::77::0::0})
[m
[36m[11:51:07.279470] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.279497] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.279561] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.279590] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.279620] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.279636] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.279700] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::77::0::0}[m
[36m[11:51:07.279722] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.279738] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.279784] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.279801] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.279823] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.279838] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.281468] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 30[m
[36m[11:51:07.281555] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::101::0::0})
[m
[36m[11:51:07.281559] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.281586] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.281652] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.281681] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.281711] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.281727] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.281789] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::101::0::0}[m
[36m[11:51:07.281813] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.281830] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.281876] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.281891] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.281914] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.281929] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.283569] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36887 queryId=1 querySubPlanId = 38[m
[36m[11:51:07.283661] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:42675)})
  SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::128::0::0})
[m
[36m[11:51:07.283665] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.283692] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.283757] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.283785] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.283816] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.283831] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.283894] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35025 1::128::0::0}[m
[36m[11:51:07.283917] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.283934] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.283980] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.283996] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.284019] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.284034] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.285718] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[11:51:07.285795] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.285797] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.285813] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:41289[m
[36m[11:51:07.285817] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 9[m
[36m[11:51:07.285876] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::26::0::0})
[m
[36m[11:51:07.285879] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.285907] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.285974] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.286003] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.286035] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.286050] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.286116] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::26::0::0}[m
[36m[11:51:07.286140] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.286157] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.286205] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.286220] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.286243] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.286258] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.287929] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 13[m
[36m[11:51:07.288018] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::41::0::0})
[m
[36m[11:51:07.288021] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.288048] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.288113] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.288140] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.288171] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.288187] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.288253] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::41::0::0}[m
[36m[11:51:07.288277] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.288294] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.288397] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.288418] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.288442] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.288457] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.290097] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 18[m
[36m[11:51:07.290187] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::59::0::0})
[m
[36m[11:51:07.290190] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.290217] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.290279] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.290306] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.290336] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.290351] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.290414] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::59::0::0}[m
[36m[11:51:07.290442] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.290460] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.290506] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.290521] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.290544] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.290559] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.292182] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 24[m
[36m[11:51:07.292273] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::80::0::0})
[m
[36m[11:51:07.292276] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.292303] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.292398] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.292428] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.292459] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.292475] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.292543] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::80::0::0}[m
[36m[11:51:07.292566] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.292583] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.292630] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.292646] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.292668] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.292683] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.294351] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 31[m
[36m[11:51:07.294433] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::104::0::0})
[m
[36m[11:51:07.294436] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.294462] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.294528] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.294556] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.294586] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.294602] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.294670] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::104::0::0}[m
[36m[11:51:07.294694] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.294711] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.294757] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.294773] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.294796] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.294811] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.296526] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41289 queryId=1 querySubPlanId = 39[m
[36m[11:51:07.296609] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:37715)})
  SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::131::0::0})
[m
[36m[11:51:07.296612] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.296640] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.296709] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.296737] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.296768] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.296784] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.296850] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:34991 1::131::0::0}[m
[36m[11:51:07.296874] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.296891] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.296940] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.296955] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.296978] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.296993] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.298656] [D] [thread 366323] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[11:51:07.298693] [D] [thread 366323] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:51:07.298695] [D] [thread 366323] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:51:07.298711] [D] [thread 366323] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:42129[m
[36m[11:51:07.298715] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 10[m
[36m[11:51:07.298770] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::29::0::0})
[m
[36m[11:51:07.298773] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.298800] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.298866] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.298895] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.298925] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.298941] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.299006] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::29::0::0}[m
[36m[11:51:07.299029] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.299046] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.299093] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.299109] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.299132] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.299147] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.300911] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 14[m
[36m[11:51:07.301000] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::44::0::0})
[m
[36m[11:51:07.301004] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.301031] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.301100] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.301129] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.301159] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.301175] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.301242] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::44::0::0}[m
[36m[11:51:07.301266] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.301284] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.301331] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.301347] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.301370] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.301386] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.303018] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 19[m
[36m[11:51:07.303107] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::62::0::0})
[m
[36m[11:51:07.303110] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.303137] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.303200] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.303228] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.303258] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.303273] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.303336] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::62::0::0}[m
[36m[11:51:07.303359] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.303375] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.303422] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.303438] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.303461] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.303476] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.305149] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 25[m
[36m[11:51:07.305234] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::83::0::0})
[m
[36m[11:51:07.305238] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.305264] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.305327] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.305356] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.305387] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.305403] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.305467] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::83::0::0}[m
[36m[11:51:07.305489] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.305505] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.305551] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.305567] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.305590] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.305605] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.307281] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 32[m
[36m[11:51:07.307411] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::107::0::0})
[m
[36m[11:51:07.307414] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.307442] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.307510] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.307538] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.307569] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.307585] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.307650] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::107::0::0}[m
[36m[11:51:07.307703] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.307723] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.307774] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.307791] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.307813] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.307828] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.309553] [D] [thread 366323] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42129 queryId=1 querySubPlanId = 40[m
[36m[11:51:07.309641] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:39943)})
  SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::134::0::0})
[m
[36m[11:51:07.309645] [D] [thread 366323] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:51:07.309672] [D] [thread 366323] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:51:07.309736] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.309764] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.309796] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.309811] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.309875] [D] [thread 366323] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:42675 1::134::0::0}[m
[36m[11:51:07.309898] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.309915] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.309962] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.309978] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.310000] [D] [thread 366323] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:07.310015] [D] [thread 366323] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:51:07.311640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:07.311654] [D] [thread 366323] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[11:51:07.485707] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:07.485996] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:07.862714] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:07.862921] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:08.248965] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:08.249170] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:09.250259] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:09.355426] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:09.355635] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:10.356791] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:10.507204] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:10.507408] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:11.508600] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:11.647517] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:11.647735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:12.226571] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.226661] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.226830] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.226859] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 140[m
[36m[11:51:12.226868] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.226974] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.226995] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.227096] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.228176] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.228240] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.228422] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.228452] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 141[m
[36m[11:51:12.228460] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.228562] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.228573] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.228668] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.229672] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.229728] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.229876] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.229915] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 142[m
[36m[11:51:12.229923] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.230039] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.230050] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.230146] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.230924] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 143[m
[36m[11:51:12.230963] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.231092] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.231103] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.231202] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.231984] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.232039] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.232167] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.232204] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 144[m
[36m[11:51:12.232212] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.232342] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.232366] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.232472] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.233371] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.233406] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.233503] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.233529] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 145[m
[36m[11:51:12.233535] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.233625] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.233640] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.233728] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.234483] [D] [thread 366335] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:51:12.234511] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.234603] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:51:12.234626] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 146[m
[36m[11:51:12.234631] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.234719] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.234734] [D] [thread 366335] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:51:12.234829] [D] [thread 366335] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:51:12.235452] [D] [thread 366335] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(143: {FileSinkDescriptor()})
  SOURCE(141,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::32::0::0})
  SOURCE(142,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::47::0::0})
  SOURCE(144,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::65::0::0})
  SOURCE(140,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::86::0::0})
  SOURCE(145,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::110::0::0})
  SOURCE(146,,NetworkSourceDescriptor{tcp://192.168.2.12:37715 1::137::0::0})
[m
[32m[11:51:12.235476] [I] [thread 366335] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[11:51:12.235490] [I] [thread 366335] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[11:51:12.235660] [D] [thread 366335] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 7[m
[36m[11:51:12.235680] [D] [thread 366335] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 1. LogicalQueryPlan[m
[36m[11:51:12.235686] [D] [thread 366335] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 7 for context QueryCompilation-1-7-2023-11-28 11:51:12 and scope 1. LogicalQueryPlan[m
[32m[11:51:12.236403] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 147[m
[32m[11:51:12.236444] [I] [thread 366335] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:51:12.236446] [I] [thread 366335] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:51:12.236448] [I] [thread 366335] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:51:12.236450] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236451] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236452] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236454] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236454] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236455] [I] [thread 366335] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:51:12.236479] [I] [thread 366335] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236590] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 148[m
[36m[11:51:12.236620] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:51:12.236621] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236627] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[11:51:12.236645] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236649] [D] [thread 366335] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:51:12.236657] [D] [thread 366335] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:51:12.236661] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236684] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 149[m
[36m[11:51:12.236691] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236693] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236700] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236701] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236702] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236719] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236721] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236728] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 150[m
[36m[11:51:12.236733] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236734] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236741] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236742] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236743] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236757] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236759] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236765] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 151[m
[36m[11:51:12.236769] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236770] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236777] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236778] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236779] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236793] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236794] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236800] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 152[m
[36m[11:51:12.236805] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236806] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236815] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236816] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236817] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236830] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236832] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236838] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 153[m
[36m[11:51:12.236842] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236843] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236853] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236854] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236855] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236868] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236870] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:51:12.236876] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 154[m
[36m[11:51:12.236880] [D] [thread 366335] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:51:12.236882] [D] [thread 366335] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:51:12.236893] [I] [thread 366335] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:51:12.236894] [I] [thread 366335] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:51:12.236895] [I] [thread 366335] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:51:12.236909] [D] [thread 366335] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:51:12.236910] [D] [thread 366335] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:51:12.236927] [D] [thread 366335] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 2. PhysicalQueryPlan[m
[36m[11:51:12.236931] [D] [thread 366335] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 7 for context QueryCompilation-1-7-2023-11-28 11:51:12 and scope 2. PhysicalQueryPlan[m
[36m[11:51:12.237241] [D] [thread 366335] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[11:51:12.237282] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 148[m
[36m[11:51:12.237302] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[11:51:12.237304] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237306] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237363] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 149[m
[36m[11:51:12.237371] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237372] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237373] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237380] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 150[m
[36m[11:51:12.237387] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237388] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237389] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237395] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 151[m
[36m[11:51:12.237401] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237403] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237403] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237410] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 152[m
[36m[11:51:12.237416] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237417] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237418] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237424] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 153[m
[36m[11:51:12.237430] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237431] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237432] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:51:12.237438] [I] [thread 366335] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 154[m
[36m[11:51:12.237444] [D] [thread 366335] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:51:12.237445] [D] [thread 366335] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:51:12.237446] [D] [thread 366335] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:51:12.237455] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 3. AfterPipelinedQueryPlan[m
[36m[11:51:12.237462] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[36m[11:51:12.237784] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 4. AfterAddScanAndEmitPhase[m
[36m[11:51:12.237788] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[36m[11:51:12.238044] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 5. GeneratableOperators[m
[36m[11:51:12.238048] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[36m[11:51:12.238298] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 6. BufferOptimizationPhase[m
[36m[11:51:12.238302] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[36m[11:51:12.238545] [D] [thread 366335] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[11:51:12.238575] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 7. PredicationOptimizationPhase[m
[36m[11:51:12.238578] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[36m[11:51:12.238836] [D] [thread 366335] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 7[m
[36m[11:51:12.238852] [D] [thread 366335] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:51:12 - 8. ExecutableOperatorPlan[m
[36m[11:51:12.238854] [D] [thread 366335] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:51:12[m
[32m[11:51:12.239168] [I] [thread 366335] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 3.41215 ms
DefaultQueryCompiler_LogicalQueryPlan:	0.639291 ms
DefaultQueryCompiler_PhysicalQueryPlan:	0.923417 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	0.539309 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	0.260609 ms
DefaultQueryCompiler_GeneratableOperators:	0.251997 ms
DefaultQueryCompiler_BufferOptimizationPhase:	0.245869 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	0.289998 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	0.258683 ms[m
[36m[11:51:12.239228] [D] [thread 366335] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  148[m
[32m[11:51:12.239244] [I] [thread 366335] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[11:51:12.239497] [D] [thread 366335] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsChain.out[m
[32m[11:51:12.239619] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.239738] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  32 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:51:12.239843] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.239889] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  47 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:51:12.239911] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.239940] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  65 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:51:12.239971] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.239996] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  86 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:51:12.240013] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.240038] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  110 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:51:12.240059] [I] [thread 366335] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:51:12.240082] [D] [thread 366335] [DataSource.cpp:75] [DataSource] DataSource  137 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:51:12.240152] [D] [thread 366335] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[11:51:12.240173] [D] [thread 366335] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[11:51:12.240176] [D] [thread 366335] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[11:51:12.240180] [D] [thread 366335] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[11:51:12.240184] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  32  not found. Creating new element with with qep [m
[36m[11:51:12.240195] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  47  not found. Creating new element with with qep [m
2023-11-28 11:[36m51:12.[11:51:12.240197] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  65  not found. Creating new element with with qep [m
240 setup: queryId=1, querySubPlanId=7; 
[36m[11:51:12.240199] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  86  not found. Creating new element with with qep [m
[36m[11:51:12.240200] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  110  not found. Creating new element with with qep [m
2023-11-28 11:51:12.[36m240 start: queryId=1, querySubPlanId=7; 
[11:51:12.240201] [D] [thread 366335] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  137  not found. Creating new element with with qep [m
[36m[11:51:12.240205] [D] [thread 366335] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[11:51:12.240370] [D] [thread 366335] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[11:51:12.240423] [D] [thread 366335] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[11:51:12.240467] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::32::0::0 from 192.168.2.12[m
[36m[11:51:12.240508] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::32::0::0=1[m
[36m[11:51:12.240512] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff680134e0  started successfully[m
[36m[11:51:12.240522] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::47::0::0 from 192.168.2.12[m
[36m[11:51:12.240526] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::47::0::0=1[m
[36m[11:51:12.240528] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff680177f0  started successfully[m
[36m[11:51:12.240534] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::65::0::0 from 192.168.2.12[m
[36m[11:51:12.240538] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::65::0::0=1[m
[36m[11:51:12.240539] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68018120  started successfully[m
[36m[11:51:12.240545] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::86::0::0 from 192.168.2.12[m
[36m[11:51:12.240549] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::86::0::0=1[m
[36m[11:51:12.240551] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68018bc0  started successfully[m
[36m[11:51:12.240557] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::110::0::0 from 192.168.2.12[m
[36m[11:51:12.240561] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::110::0::0=1[m
[36m[11:51:12.240562] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff680195d0  started successfully[m
[36m[11:51:12.240568] [D] [thread 366335] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::137::0::0 from 192.168.2.12[m
[36m[11:51:12.240572] [D] [thread 366335] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::137::0::0=1[m
[36m[11:51:12.240573] [D] [thread 366335] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68019fe0  started successfully[m
[36m[11:51:12.240586] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.240600] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240634] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240796] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[11:51:12.240831] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[11:51:12.240842] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.240845] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff680134e0  started successfully[m
[36m[11:51:12.240852] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.240858] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240870] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240919] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::47::0::0[m
[36m[11:51:12.240944] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::47::0::0[m
[36m[11:51:12.240947] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.240948] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff680177f0  started successfully[m
[36m[11:51:12.240954] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.240958] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240965] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.240982] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::65::0::0[m
[36m[11:51:12.241016] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::65::0::0[m
[36m[11:51:12.241021] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241022] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68018120  started successfully[m
[36m[11:51:12.241028] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241032] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241037] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241079] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::86::0::0[m
[36m[11:51:12.241100] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::86::0::0[m
[36m[11:51:12.241105] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241106] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68018bc0  started successfully[m
[36m[11:51:12.241113] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241116] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241122] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241157] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::110::0::0[m
[36m[11:51:12.241222] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::110::0::0[m
[36m[11:51:12.241229] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241230] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff680195d0  started successfully[m
[36m[11:51:12.241236] [D] [thread 366335] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241240] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241249] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:51:12.241281] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::137::0::0[m
[36m[11:51:12.241342] [D] [thread 366335] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::137::0::0[m
[36m[11:51:12.241348] [D] [thread 366335] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[11:51:12.241350] [D] [thread 366335] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68019fe0  started successfully[m
[36m[11:51:12.241357] [D] [thread 366335] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[11:51:12.241388] [D] [thread 366335] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[11:51:12.241396] [D] [thread 366335] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[11:51:12.261828] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::32::0::0[m
[32m[11:51:12.261907] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::32::0::0(threadId=0) Data[m
[36m[11:51:12.261936] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::32::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.266233] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::137::0::0[m
[32m[11:51:12.266273] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::137::0::0(threadId=0) Data[m
[36m[11:51:12.266287] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::137::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.269802] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::86::0::0[m
[32m[11:51:12.269837] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::86::0::0(threadId=0) Data[m
[36m[11:51:12.269847] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::86::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.273157] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::110::0::0[m
[32m[11:51:12.273190] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::110::0::0(threadId=0) Data[m
[36m[11:51:12.273201] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::110::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.290401] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::65::0::0[m
[32m[11:51:12.290449] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::65::0::0(threadId=0) Data[m
[36m[11:51:12.290464] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::65::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.296144] [D] [thread 366332] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): ClientAnnouncement received for channel 0:1::47::0::0[m
[32m[11:51:12.296189] [I] [thread 366332] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::47::0::0(threadId=0) Data[m
[36m[11:51:12.296204] [D] [thread 366332] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::47::0::0(threadId=0) REGISTERED[m
[36m[11:51:12.648917] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:12.899224] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:12.899588] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:13.900797] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:14.002387] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:14.002564] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:15.003730] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:15.113805] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:15.114005] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:16.115164] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:16.378513] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:16.378782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:17.379977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:17.714005] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:17.714197] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:18.715350] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:18.841791] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:18.841973] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:19.843136] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:19.909463] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:19.909671] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:20.910821] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:21.028478] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:21.028849] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:22.030039] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:22.125739] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:22.126038] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:23.127196] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:23.180215] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:23.180547] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:24.181712] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:24.290328] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:24.290533] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:25.291723] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:25.449096] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:25.449294] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:26.450424] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:26.553376] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:26.553576] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:27.554838] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:27.669750] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:27.669985] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:28.671181] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:28.766526] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:28.766755] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:29.767944] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:29.892454] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:29.892658] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:30.893851] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:31.190015] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:31.190246] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:32.191410] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:32.529643] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:32.529911] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:33.531108] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:33.646474] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:33.646671] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:34.647908] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:34.757820] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:34.758050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:35.759236] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:35.858432] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:35.858656] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:36.859836] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:37.137130] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:37.137336] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:38.138493] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:38.240576] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:38.240764] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:39.241924] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:39.341475] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:39.341685] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:40.342822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:40.462395] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:40.462616] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:41.463800] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:41.562668] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:41.562880] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:42.564050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:43.088444] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:43.088634] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:44.089808] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:44.225547] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:44.225750] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:45.226975] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:45.334230] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:45.334508] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:46.335670] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:46.480958] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:46.481169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:47.482305] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:47.779945] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:47.780237] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:48.781414] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:48.952149] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:48.952383] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:49.953521] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:50.017479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:50.017689] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:51.018131] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:51.135203] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:51.135424] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:52.136609] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:52.242876] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:52.243078] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:53.244262] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:53.345649] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:53.345851] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:54.347044] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:54.453681] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:54.453882] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:55.455090] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:55.516593] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:55.516810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:56.517935] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:56.629619] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:56.629802] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:57.630955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:57.692238] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:57.692483] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:58.693661] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:58.801318] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:58.801507] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:59.802687] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:59.910829] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:51:59.911046] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:00.912223] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:01.174273] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:01.174479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:02.175662] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:02.277489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:02.277696] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:03.278886] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:03.562557] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:03.562774] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:04.563924] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:04.681949] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:04.682139] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:05.683307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:05.989278] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:05.989486] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:06.990660] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:07.093397] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:07.093612] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:08.094773] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:08.252572] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:08.252781] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:09.253961] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:09.401303] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:09.401508] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:10.402698] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:10.497841] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:10.498046] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:11.499210] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:11.653731] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:11.653946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:12.655169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:12.766037] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:12.766246] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:13.767425] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:13.872190] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:13.872413] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:14.873586] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:15.042244] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:15.042518] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:16.043729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:16.249741] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:16.249938] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:17.251146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:17.684603] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:17.684781] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:18.685971] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:18.804972] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:18.805176] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:19.806420] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:19.904779] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:19.904992] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:20.906099] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:21.026062] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:21.026251] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:22.027374] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:22.132696] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:22.132875] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:23.133997] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:23.253657] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:23.254003] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:24.255189] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:24.347968] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:24.348176] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:25.349357] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:25.469148] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:25.469371] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:26.470546] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:26.577151] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:26.577373] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:27.578483] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:27.641983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:27.642191] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:28.643359] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:28.752726] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:28.752925] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:29.754095] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:29.943361] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:29.943571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:30.944748] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:31.215129] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:31.215333] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:32.216493] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:32.446352] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:32.446589] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:33.447774] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:33.655454] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:33.655703] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:34.656881] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:34.812396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:34.812599] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:35.813748] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:35.945010] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:35.945195] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:36.946345] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:37.052541] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:37.052746] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:38.053946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:38.204987] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:38.205194] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:39.206379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:39.268306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:39.268516] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:40.269790] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:40.381659] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:40.381869] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:41.383029] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:41.532263] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:41.532497] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:42.533683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:42.635748] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:42.635959] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:43.637106] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:43.770102] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:43.770283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:44.771457] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:44.879025] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:44.879234] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:45.880433] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:46.253897] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:46.254095] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:47.255272] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:47.481544] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:47.481751] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:48.482936] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:48.626497] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:48.626679] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:49.627802] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:49.739551] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:49.739760] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:50.740924] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:50.840884] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:50.841064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:51.842211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:51.953530] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:51.953735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:52.954830] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:53.067167] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:53.067353] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:54.068450] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:54.181955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:54.182140] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:55.183311] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:55.266472] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:55.266677] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:56.267852] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:56.373737] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:56.373918] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:57.375092] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:57.576535] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:57.576737] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:58.577918] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:58.701369] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:58.701571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:59.702750] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:59.810607] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:52:59.810810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:00.811980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:01.215829] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:01.216027] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:02.217211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:02.496013] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:02.496222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:03.497493] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:03.648837] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:03.649050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:04.650174] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:04.774831] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:04.775040] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:05.776212] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:05.892997] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:05.893211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:06.894365] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:06.993483] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:06.993684] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:07.994867] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:08.124892] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:08.125098] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:09.126283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:09.229756] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:09.229962] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:10.231113] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:10.364369] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:10.364604] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:11.365774] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:11.482328] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:11.482539] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:12.483768] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:12.556225] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:12.556475] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:13.557664] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:13.674465] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:13.674659] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:14.675801] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:14.776249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:14.776460] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:15.777610] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:15.891477] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:15.891686] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:16.892862] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:17.185672] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:17.185877] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:18.187058] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:18.540892] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:18.541132] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:19.542292] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:19.621235] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:19.621446] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:20.622634] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:20.744640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:20.744846] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:21.745983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:21.870560] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:21.870747] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:22.871895] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:22.990235] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:22.990442] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:23.991620] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:24.101494] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:24.101695] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:25.102872] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:25.211157] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:25.211340] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:26.212511] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:26.281361] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:26.281539] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:27.282717] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:27.406242] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:27.406421] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:28.407580] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:28.520926] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:28.521108] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:29.522306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:29.622457] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:29.622641] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:30.623819] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:30.774733] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:30.774912] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:31.776093] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:32.025860] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:32.026051] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:33.027225] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:33.404911] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:33.405125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:34.406327] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:34.609646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:34.609834] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:35.611024] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:35.758044] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:35.758249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:36.759393] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:36.885393] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:36.885571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:37.886742] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:38.066645] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:38.066830] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:39.068010] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:39.209688] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:39.209903] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:40.211081] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:40.345519] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:40.345716] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:41.346948] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:41.472383] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:41.472613] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:42.473773] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:42.610589] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:42.610808] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:43.611968] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:43.733222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:43.733404] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:44.734438] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:44.856393] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:44.856640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:45.857840] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:46.164208] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:46.164441] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:47.165614] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:47.485559] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:47.485765] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:48.486935] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:48.660050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:48.660401] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:49.661560] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:49.849350] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:49.849545] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:50.850733] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:50.947459] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:50.947660] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:51.948823] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:52.012280] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:52.012574] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:53.013730] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:53.121605] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:53.121801] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:54.123021] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:54.239614] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:54.239810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:55.240966] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:55.334443] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:55.334617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:56.335774] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:56.445711] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:56.445909] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:57.447143] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:57.497520] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:57.497747] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:58.498948] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:58.595059] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:58.595281] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:59.596521] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:59.660129] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:53:59.660375] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:00.661590] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:00.754260] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:00.754479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:01.755687] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:01.963216] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:01.963412] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:02.964637] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:03.185422] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:03.185620] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:04.186839] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:04.300978] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:04.301263] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:05.302422] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:05.412531] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:05.412762] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:06.413914] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:06.518078] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:06.518287] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:07.519404] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:07.618122] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:07.618319] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:08.619604] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:08.718771] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:08.718979] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:09.720201] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:09.833701] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:09.833911] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:10.835061] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:10.950456] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:10.950662] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:11.951845] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:12.074213] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:12.074453] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:13.075613] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:13.197707] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:13.197912] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:14.199090] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:14.314451] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:14.314636] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:15.315789] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:15.432181] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:15.432416] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:16.433595] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:16.659788] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:16.660005] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:17.661164] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:18.306309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:18.306664] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:19.307856] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:19.426803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:19.426988] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:20.428161] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:20.534059] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:20.534240] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:21.535401] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:21.642112] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:21.642297] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:22.643486] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:22.769063] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:22.769267] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:23.770429] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:23.952583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:23.952780] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:24.953932] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:25.074341] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:25.074548] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:26.075735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:26.185563] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:26.185780] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:27.186973] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:27.294201] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:27.294614] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:28.295812] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:28.406251] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:28.406560] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:29.407731] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:29.517154] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:29.517470] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:30.518648] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:30.574278] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:30.574501] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:31.575670] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:31.691578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:31.691803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:32.692963] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:32.974067] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:32.974340] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:33.975550] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:34.046517] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:34.046749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:35.047923] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:35.283357] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:35.283572] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:36.284726] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:36.435551] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:36.435754] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:37.436955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:37.482825] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:37.483037] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:38.484226] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:38.577640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:38.577839] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:39.578936] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:39.685796] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:39.685982] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:40.687169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:40.794663] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:40.794890] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:41.796090] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:41.900708] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:41.900952] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:42.902097] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:42.968921] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:42.969134] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:43.970295] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:44.042681] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:44.042871] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:45.044066] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:45.137605] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:45.137794] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:46.138973] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:46.309247] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:46.309461] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:47.310640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:47.594596] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:47.594782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:48.595967] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:48.822569] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:48.822770] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:49.823962] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:49.994135] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:49.994351] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:50.995515] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:51.125885] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:51.126095] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:52.127283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:52.203678] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:52.203882] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:53.205169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:53.299821] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:53.300003] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:54.301170] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:54.408348] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:54.408526] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:55.409679] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:55.461940] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:55.462143] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:56.463300] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:56.561072] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:56.561277] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:57.562458] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:57.686383] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:57.686589] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:58.687775] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:58.801640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:58.801843] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:59.803011] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:59.886257] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:54:59.886561] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:00.887747] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:01.066463] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:01.066677] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:02.067831] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:02.296040] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:02.296256] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:02.849763] [D] [thread 366323] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[11:55:02.849821] [D] [thread 366323] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[11:55:02.850319] [D] [thread 366323] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[11:55:02.850366] [D] [thread 366323] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[11:55:02.850377] [D] [thread 366323] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[11:55:02.850429] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[11:55:02.850442] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:38727 queryId=1[m
[36m[11:55:02.853571] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[11:55:02.853588] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:38081 queryId=1[m
[36m[11:55:02.854596] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[11:55:02.854620] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:41711 queryId=1[m
[36m[11:55:02.855390] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[11:55:02.855417] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:39173 queryId=1[m
[36m[11:55:02.856143] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[11:55:02.856169] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:34787 queryId=1[m
[36m[11:55:02.856947] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[11:55:02.856973] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:36241 queryId=1[m
[36m[11:55:02.857692] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[11:55:02.857715] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:38149 queryId=1[m
[36m[11:55:02.858549] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[11:55:02.858573] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:36887 queryId=1[m
[36m[11:55:02.859319] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[11:55:02.859344] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:41289 queryId=1[m
[36m[11:55:02.860018] [D] [thread 366323] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[11:55:02.860043] [D] [thread 366323] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:42129 queryId=1[m
[36m[11:55:02.860733] [D] [thread 366323] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[11:55:02.964182] [D] [thread 366406] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[11:55:02.964258] [D] [thread 366406] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[11:55:02.964274] [D] [thread 366406] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[11:55:02.964303] [D] [thread 366406] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1701172502964[m
[36m[11:55:02.964306] [D] [thread 366406] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[11:55:02.964312] [D] [thread 366406] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[11:55:03.011466] [D] [thread 366323] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[11:55:03.011512] [D] [thread 366323] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[11:55:03.011934] [I] [thread 366323] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:55:03.011966] [D] [thread 366323] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:55:03.297436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:03.593463] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:03.593736] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:04.594892] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:04.960971] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:04.961158] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:04.962109] [D] [thread 366824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:04.962138] [I] [thread 366824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:04.962143] [I] [thread 366824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:04.962157] [I] [thread 366824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:04.962158] [I] [thread 366824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:05.101611] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:05.101823] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:06.102983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:06.450075] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:06.450282] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:06.451138] [D] [thread 366830] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:06.451161] [I] [thread 366830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:06.451171] [I] [thread 366830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:06.451182] [I] [thread 366830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:06.451183] [I] [thread 366830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:06.609981] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:06.610174] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:07.611367] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:08.350279] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:08.350555] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:08.351399] [D] [thread 366835] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:08.351411] [I] [thread 366835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:08.351414] [I] [thread 366835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:08.351424] [I] [thread 366835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:08.351425] [I] [thread 366835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:08.504982] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:08.505192] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:09.506350] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:09.990312] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:09.990492] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:09.992102] [D] [thread 366840] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:09.992127] [I] [thread 366840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:09.992130] [I] [thread 366840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:09.992141] [I] [thread 366840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:09.992142] [I] [thread 366840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:10.117187] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:10.117379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:11.118557] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:11.518555] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:11.518740] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:11.520288] [D] [thread 366845] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:11.520311] [I] [thread 366845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:11.520314] [I] [thread 366845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:11.520357] [I] [thread 366845] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:11.520360] [I] [thread 366845] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:11.638926] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:11.639173] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:12.640381] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:12.946341] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:12.946554] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:12.947467] [D] [thread 366850] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:12.947493] [I] [thread 366850] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:12.947502] [I] [thread 366850] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:12.947513] [I] [thread 366850] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:12.947514] [I] [thread 366850] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:13.051362] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:13.051570] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:14.052742] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:14.455538] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:14.455723] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:14.456682] [D] [thread 366855] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:14.456706] [I] [thread 366855] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:14.456716] [I] [thread 366855] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:14.456728] [I] [thread 366855] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:14.456729] [I] [thread 366855] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:14.581208] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:14.581415] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:15.582600] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:16.583783] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:17.225035] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:17.225244] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:17.226140] [D] [thread 366860] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:17.226161] [I] [thread 366860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:17.226165] [I] [thread 366860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:17.226176] [I] [thread 366860] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:17.226177] [I] [thread 366860] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:17.470937] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:17.471145] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:18.472304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:19.286121] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:19.286327] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:19.287210] [D] [thread 366865] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:19.287224] [I] [thread 366865] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:19.287227] [I] [thread 366865] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:19.287237] [I] [thread 366865] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:19.287238] [I] [thread 366865] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:19.441753] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:19.441963] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:20.443155] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:20.877790] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:20.878059] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:20.878917] [D] [thread 366870] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:20.878941] [I] [thread 366870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:20.878945] [I] [thread 366870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:20.878957] [I] [thread 366870] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:20.878958] [I] [thread 366870] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:20.997948] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:20.998139] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:21.999298] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:22.303141] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:22.303348] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:22.304192] [D] [thread 366875] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:22.304216] [I] [thread 366875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:22.304220] [I] [thread 366875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:22.304231] [I] [thread 366875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:22.304232] [I] [thread 366875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:22.457434] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:22.457638] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:23.458838] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:23.757301] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:23.757494] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:23.758409] [D] [thread 366880] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:23.758435] [I] [thread 366880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:23.758438] [I] [thread 366880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:23.758449] [I] [thread 366880] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:23.758450] [I] [thread 366880] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:23.909965] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:23.910157] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:24.911319] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:25.350383] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:25.350580] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:25.351428] [D] [thread 366885] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:25.351449] [I] [thread 366885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:25.351453] [I] [thread 366885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:25.351470] [I] [thread 366885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:25.351471] [I] [thread 366885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:25.466518] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:25.466742] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:26.467930] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:26.782104] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:26.782335] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:26.783153] [D] [thread 366890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:26.783176] [I] [thread 366890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:26.783179] [I] [thread 366890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:26.783196] [I] [thread 366890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:26.783197] [I] [thread 366890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:26.925887] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:26.926115] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:27.927307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:28.309888] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:28.310086] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:28.310963] [D] [thread 366895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:28.310985] [I] [thread 366895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:28.310992] [I] [thread 366895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:28.311003] [I] [thread 366895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:28.311004] [I] [thread 366895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:28.438804] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:28.438987] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:29.440189] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:30.153496] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:30.153701] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:30.154581] [D] [thread 366900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:30.154597] [I] [thread 366900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:30.154600] [I] [thread 366900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:30.154610] [I] [thread 366900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:30.154611] [I] [thread 366900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:30.292375] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:30.292599] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:31.293771] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:32.294964] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:33.296169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:33.858361] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:33.858640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:33.859402] [D] [thread 366905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:33.859428] [I] [thread 366905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:33.859431] [I] [thread 366905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:33.859448] [I] [thread 366905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:33.859449] [I] [thread 366905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:33.985757] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:33.985962] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:34.987111] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:35.755122] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:35.755366] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:35.756178] [D] [thread 366911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:35.756199] [I] [thread 366911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:35.756202] [I] [thread 366911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:35.756215] [I] [thread 366911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:35.756216] [I] [thread 366911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:35.866097] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:35.866319] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:36.867571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:37.434960] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:37.435139] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:37.436407] [D] [thread 366916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:37.436431] [I] [thread 366916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:37.436441] [I] [thread 366916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:37.436451] [I] [thread 366916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:37.436452] [I] [thread 366916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:37.561471] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:37.561654] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:38.562839] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:39.136886] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:39.137068] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:39.138666] [D] [thread 366921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:39.138689] [I] [thread 366921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:39.138692] [I] [thread 366921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:39.138703] [I] [thread 366921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:39.138704] [I] [thread 366921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:39.269054] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:39.269262] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:40.270436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:40.847955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:40.848157] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:40.849100] [D] [thread 366926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:40.849114] [I] [thread 366926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:40.849118] [I] [thread 366926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:40.849129] [I] [thread 366926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:40.849130] [I] [thread 366926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:40.982125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:40.982354] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:41.983690] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:42.518055] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:42.518271] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:42.519108] [D] [thread 366931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:42.519131] [I] [thread 366931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:42.519134] [I] [thread 366931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:42.519145] [I] [thread 366931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:42.519146] [I] [thread 366931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:42.649524] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:42.649759] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:43.650925] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:44.081760] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:44.081953] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:44.083216] [D] [thread 366936] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:44.083240] [I] [thread 366936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:44.083244] [I] [thread 366936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:44.083255] [I] [thread 366936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:44.083256] [I] [thread 366936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:44.221729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:44.221958] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:45.223134] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:45.722313] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:45.722619] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:45.723367] [D] [thread 366941] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:45.723390] [I] [thread 366941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:45.723393] [I] [thread 366941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:45.723404] [I] [thread 366941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:45.723405] [I] [thread 366941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:45.839156] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:45.839406] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:46.840556] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:47.841769] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:48.346089] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:48.346286] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:48.347170] [D] [thread 366946] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:48.347194] [I] [thread 366946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:48.347201] [I] [thread 366946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:48.347211] [I] [thread 366946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:48.347212] [I] [thread 366946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:48.596667] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:48.596858] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:49.598028] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:50.284208] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:50.284432] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:50.285376] [D] [thread 366951] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:50.285400] [I] [thread 366951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:50.285404] [I] [thread 366951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:50.285417] [I] [thread 366951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:50.285418] [I] [thread 366951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:50.396826] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:50.397023] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:51.398183] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:51.873612] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:51.873818] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:51.874700] [D] [thread 366956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:51.874714] [I] [thread 366956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:51.874717] [I] [thread 366956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:51.874727] [I] [thread 366956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:51.874728] [I] [thread 366956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:52.045835] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:52.046064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:53.047213] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:53.650647] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:53.650834] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:53.652527] [D] [thread 366961] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:53.652550] [I] [thread 366961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:53.652553] [I] [thread 366961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:53.652564] [I] [thread 366961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:53.652565] [I] [thread 366961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:53.822466] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:53.822646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:54.823830] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:55.306779] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:55.306959] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:55.307821] [D] [thread 366968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:55.307844] [I] [thread 366968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:55.307847] [I] [thread 366968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:55.307864] [I] [thread 366968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:55.307866] [I] [thread 366968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:55.411621] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:55.411805] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:56.412993] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:57.058559] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:57.058943] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:57.059776] [D] [thread 366974] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:57.059789] [I] [thread 366974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:57.059792] [I] [thread 366974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:57.059802] [I] [thread 366974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:57.059803] [I] [thread 366974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:57.251584] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:57.251788] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:58.252963] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:58.745310] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:58.745532] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:58.746462] [D] [thread 366979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:55:58.746487] [I] [thread 366979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:58.746491] [I] [thread 366979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:55:58.746501] [I] [thread 366979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:55:58.746502] [I] [thread 366979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:55:58.872769] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:58.872994] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:55:59.874188] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:00.233087] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:00.233504] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,13,1414348413,1701172560233
[m
[36m[11:56:00.233744] [D] [thread 366333] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1701172560233[m
[36m[11:56:00.358323] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:00.358358] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:56:00.358526] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,100,1775025460,1701172560358
[m
[36m[11:56:00.358917] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:00.358948] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:56:00.359068] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,47,1179056176,1701172560358
[m
[36m[11:56:00.598447] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:00.598479] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:56:00.598624] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,24,1553332737,1701172560598
[m
[36m[11:56:00.599120] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:00.599150] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:56:00.599268] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,54,1591914799,1701172560599
[m
[36m[11:56:00.875356] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:01.079220] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:01.079446] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:01.080263] [D] [thread 366984] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:01.080288] [I] [thread 366984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:01.080292] [I] [thread 366984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:01.080302] [I] [thread 366984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:01.080303] [I] [thread 366984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:01.445559] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:56:01.445594] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:56:01.445734] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172500000,1701172560000,63,1227822838,1701172561445
[m
[36m[11:56:01.496390] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:01.496655] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:02.497809] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:03.498991] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:03.833877] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:03.834130] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:03.834959] [D] [thread 366989] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:03.834983] [I] [thread 366989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:03.834989] [I] [thread 366989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:03.834999] [I] [thread 366989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:03.835000] [I] [thread 366989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:03.973451] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:03.973646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:04.974830] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:05.975984] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:05.994253] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:05.994554] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:05.995324] [D] [thread 366995] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:05.995346] [I] [thread 366995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:05.995350] [I] [thread 366995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:05.995362] [I] [thread 366995] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:05.995363] [I] [thread 366995] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:06.163794] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:06.163970] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:07.165124] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:08.166296] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:08.497936] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:08.498118] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:08.499061] [D] [thread 367000] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:08.499077] [I] [thread 367000] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:08.499080] [I] [thread 367000] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:08.499091] [I] [thread 367000] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:08.499092] [I] [thread 367000] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:08.662491] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:08.662702] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:09.663859] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:10.229729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:10.229947] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:10.230847] [D] [thread 367005] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:10.230872] [I] [thread 367005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:10.230875] [I] [thread 367005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:10.230888] [I] [thread 367005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:10.230889] [I] [thread 367005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:10.422415] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:10.422596] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:11.423762] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:12.070637] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:12.070825] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:12.071793] [D] [thread 367010] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:12.071817] [I] [thread 367010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:12.071828] [I] [thread 367010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:12.071839] [I] [thread 367010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:12.071840] [I] [thread 367010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:12.234668] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:12.234873] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:13.236026] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:14.065805] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:14.066031] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:14.066988] [D] [thread 367017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:14.067007] [I] [thread 367017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:14.067010] [I] [thread 367017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:14.067021] [I] [thread 367017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:14.067022] [I] [thread 367017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:14.181289] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:14.181497] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:15.182662] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:15.821949] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:15.822128] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:15.823132] [D] [thread 367023] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:15.823171] [I] [thread 367023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:15.823174] [I] [thread 367023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:15.823185] [I] [thread 367023] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:15.823186] [I] [thread 367023] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:16.049519] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:16.049735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:17.050927] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:18.052154] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:18.733589] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:18.733808] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:18.734711] [D] [thread 367030] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:18.734735] [I] [thread 367030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:18.734739] [I] [thread 367030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:18.734750] [I] [thread 367030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:18.734751] [I] [thread 367030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:18.904538] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:18.904749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:19.905915] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:20.892169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:20.892424] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:20.893320] [D] [thread 367035] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:20.893345] [I] [thread 367035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:20.893348] [I] [thread 367035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:20.893359] [I] [thread 367035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:20.893360] [I] [thread 367035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:21.053405] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:21.053584] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:22.054758] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:22.726145] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:22.726356] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:22.727215] [D] [thread 367040] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:22.727238] [I] [thread 367040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:22.727248] [I] [thread 367040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:22.727259] [I] [thread 367040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:22.727260] [I] [thread 367040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:22.840568] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:22.840767] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:23.841926] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:24.299583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:24.299789] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:24.300764] [D] [thread 367045] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:24.300789] [I] [thread 367045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:24.300799] [I] [thread 367045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:24.300809] [I] [thread 367045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:24.300810] [I] [thread 367045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:24.515740] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:24.515942] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:25.517180] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:26.250805] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:26.250995] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:26.252646] [D] [thread 367050] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:26.252669] [I] [thread 367050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:26.252678] [I] [thread 367050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:26.252689] [I] [thread 367050] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:26.252691] [I] [thread 367050] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:26.385336] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:26.385520] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:27.386683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:27.828791] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:27.828977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:27.830197] [D] [thread 367055] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:27.830220] [I] [thread 367055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:27.830223] [I] [thread 367055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:27.830234] [I] [thread 367055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:27.830235] [I] [thread 367055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:27.944280] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:27.944484] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:28.945675] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:29.946892] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:30.321125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:30.321312] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:30.322885] [D] [thread 367060] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:30.322908] [I] [thread 367060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:30.322918] [I] [thread 367060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:30.322929] [I] [thread 367060] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:30.322930] [I] [thread 367060] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:30.549030] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:30.549219] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:31.550384] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:32.551583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:33.319901] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:33.320082] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:33.321753] [D] [thread 367065] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:33.321777] [I] [thread 367065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:33.321780] [I] [thread 367065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:33.321793] [I] [thread 367065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:33.321794] [I] [thread 367065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:33.538578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:33.538753] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:34.539934] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:35.226129] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:35.226335] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:35.227196] [D] [thread 367070] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:35.227217] [I] [thread 367070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:35.227223] [I] [thread 367070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:35.227233] [I] [thread 367070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:35.227234] [I] [thread 367070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:35.374937] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:35.375140] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:36.376379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:37.021210] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:37.021419] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:37.022318] [D] [thread 367075] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:37.022341] [I] [thread 367075] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:37.022345] [I] [thread 367075] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:37.022356] [I] [thread 367075] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:37.022357] [I] [thread 367075] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:37.154895] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:37.155103] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:38.156267] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:39.156480] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:39.242450] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:39.242634] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:39.244246] [D] [thread 367080] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:39.244269] [I] [thread 367080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:39.244273] [I] [thread 367080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:39.244285] [I] [thread 367080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:39.244286] [I] [thread 367080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:39.466674] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:39.466878] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:40.468020] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:41.469176] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:41.617848] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:41.618058] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:41.618901] [D] [thread 367085] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:41.618924] [I] [thread 367085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:41.618928] [I] [thread 367085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:41.618939] [I] [thread 367085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:41.618940] [I] [thread 367085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:41.790729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:41.790910] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:42.792084] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:43.547693] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:43.547880] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:43.548810] [D] [thread 367090] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:43.548833] [I] [thread 367090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:43.548836] [I] [thread 367090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:43.548847] [I] [thread 367090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:43.548848] [I] [thread 367090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:43.719463] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:43.719634] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:44.720739] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:45.325703] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:45.325909] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:45.326812] [D] [thread 367095] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:45.326834] [I] [thread 367095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:45.326845] [I] [thread 367095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:45.326855] [I] [thread 367095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:45.326856] [I] [thread 367095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:45.436796] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:45.437000] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:46.438158] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:47.439335] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:48.440557] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:48.692673] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:48.692914] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:48.693848] [D] [thread 367101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:48.693874] [I] [thread 367101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:48.693877] [I] [thread 367101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:48.693888] [I] [thread 367101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:48.693889] [I] [thread 367101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:48.991856] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:48.992033] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:49.993209] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:50.559603] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:50.559804] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:50.560809] [D] [thread 367106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:50.560840] [I] [thread 367106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:50.560843] [I] [thread 367106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:50.560854] [I] [thread 367106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:50.560855] [I] [thread 367106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:50.697064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:50.697265] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:51.698414] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:52.321818] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:52.322060] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:52.322916] [D] [thread 367111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:52.322941] [I] [thread 367111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:52.322945] [I] [thread 367111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:52.322962] [I] [thread 367111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:52.322964] [I] [thread 367111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:52.474220] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:52.474461] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:53.475644] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:54.310561] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:54.310820] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:54.311775] [D] [thread 367116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:54.311794] [I] [thread 367116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:54.311797] [I] [thread 367116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:54.311809] [I] [thread 367116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:54.311810] [I] [thread 367116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:54.478158] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:54.478339] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:55.479536] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:56.129754] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:56.129994] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:56.130838] [D] [thread 367121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:56.130861] [I] [thread 367121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:56.130864] [I] [thread 367121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:56.130875] [I] [thread 367121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:56.130876] [I] [thread 367121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:56.257138] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:56.257322] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:57.258495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:58.259696] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:59.106339] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:59.106656] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:59.107400] [D] [thread 367126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:56:59.107425] [I] [thread 367126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:59.107428] [I] [thread 367126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:56:59.107439] [I] [thread 367126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:56:59.107440] [I] [thread 367126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:56:59.346688] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:56:59.346867] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:00.199916] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.199949] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.200102] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,100,11020529633,1701172620199
[m
[36m[11:57:00.314917] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.314951] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.315096] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,13,4798168871,1701172620314
[m
[36m[11:57:00.315235] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.315263] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.315456] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,47,4617777628,1701172620315
[m
[36m[11:57:00.348043] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:00.441996] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.442028] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.442169] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,63,4434109071,1701172620442
[m
[36m[11:57:00.442296] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.442318] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.442427] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,54,6618533887,1701172620442
[m
[36m[11:57:00.442609] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:57:00.442631] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:57:00.442792] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172560000,1701172620000,24,4786739310,1701172620442
[m
[36m[11:57:01.191213] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:01.191392] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:01.192925] [D] [thread 367131] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:01.192948] [I] [thread 367131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:01.192951] [I] [thread 367131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:01.192962] [I] [thread 367131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:01.192963] [I] [thread 367131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:01.553396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:01.553591] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:02.554743] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:03.555943] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:04.557122] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:04.847414] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:04.847593] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:04.848485] [D] [thread 367136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:04.848508] [I] [thread 367136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:04.848512] [I] [thread 367136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:04.848523] [I] [thread 367136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:04.848524] [I] [thread 367136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:05.183308] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:05.183524] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:06.184444] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:06.909323] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:06.909536] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:06.910467] [D] [thread 367141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:06.910520] [I] [thread 367141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:06.910524] [I] [thread 367141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:06.910535] [I] [thread 367141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:06.910536] [I] [thread 367141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:07.053929] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:07.054117] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:08.055302] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:08.456035] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:08.456222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:08.457226] [D] [thread 367146] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:08.457252] [I] [thread 367146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:08.457261] [I] [thread 367146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:08.457272] [I] [thread 367146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:08.457273] [I] [thread 367146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:08.569865] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:08.570047] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:09.571231] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:10.263272] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:10.263466] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:10.265128] [D] [thread 367151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:10.265143] [I] [thread 367151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:10.265146] [I] [thread 367151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:10.265157] [I] [thread 367151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:10.265158] [I] [thread 367151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:10.391355] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:10.391578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:11.392749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:11.934206] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:11.934445] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:11.935326] [D] [thread 367156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:11.935350] [I] [thread 367156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:11.935354] [I] [thread 367156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:11.935365] [I] [thread 367156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:11.935366] [I] [thread 367156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:12.097932] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:12.098144] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:13.099327] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:13.614215] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:13.614425] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:13.616110] [D] [thread 367161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:13.616146] [I] [thread 367161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:13.616150] [I] [thread 367161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:13.616164] [I] [thread 367161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:13.616165] [I] [thread 367161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:13.739400] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:13.739583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:14.740765] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:15.425690] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:15.425907] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:15.426921] [D] [thread 367166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:15.426935] [I] [thread 367166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:15.426938] [I] [thread 367166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:15.426948] [I] [thread 367166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:15.426949] [I] [thread 367166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:15.562406] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:15.562630] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:16.563807] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:17.522715] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:17.522958] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:17.523861] [D] [thread 367171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:17.523884] [I] [thread 367171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:17.523894] [I] [thread 367171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:17.523906] [I] [thread 367171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:17.523907] [I] [thread 367171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:17.839334] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:17.839524] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:18.840494] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:19.519871] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:19.520149] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:19.520923] [D] [thread 367176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:19.520972] [I] [thread 367176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:19.520976] [I] [thread 367176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:19.520988] [I] [thread 367176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:19.520989] [I] [thread 367176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:19.760245] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:19.760451] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:20.761611] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:21.762820] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:21.833864] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:21.834063] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:21.834949] [D] [thread 367181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:21.834973] [I] [thread 367181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:21.834979] [I] [thread 367181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:21.834990] [I] [thread 367181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:21.834992] [I] [thread 367181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:21.971211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:21.971418] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:22.972631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:23.374886] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:23.375064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:23.376643] [D] [thread 367186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:23.376666] [I] [thread 367186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:23.376669] [I] [thread 367186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:23.376680] [I] [thread 367186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:23.376681] [I] [thread 367186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:23.494030] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:23.494223] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:24.495387] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:25.030646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:25.030828] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:25.031800] [D] [thread 367191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:25.031825] [I] [thread 367191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:25.031828] [I] [thread 367191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:25.031839] [I] [thread 367191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:25.031840] [I] [thread 367191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:25.186426] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:25.186625] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:26.187811] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:26.826072] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:26.826281] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:26.827169] [D] [thread 367196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:26.827192] [I] [thread 367196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:26.827196] [I] [thread 367196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:26.827207] [I] [thread 367196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:26.827208] [I] [thread 367196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:26.938351] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:26.938583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:27.939763] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:28.513856] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:28.514067] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:28.514995] [D] [thread 367201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:28.515018] [I] [thread 367201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:28.515021] [I] [thread 367201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:28.515032] [I] [thread 367201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:28.515033] [I] [thread 367201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:28.653888] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:28.654099] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:29.655225] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:30.193065] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:30.193268] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:30.194161] [D] [thread 367206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:30.194185] [I] [thread 367206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:30.194195] [I] [thread 367206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:30.194206] [I] [thread 367206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:30.194207] [I] [thread 367206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:30.309788] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:30.310003] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:31.311261] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:32.312457] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:33.105955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:33.106168] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:33.107104] [D] [thread 367212] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:33.107130] [I] [thread 367212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:33.107134] [I] [thread 367212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:33.107145] [I] [thread 367212] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:33.107146] [I] [thread 367212] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:33.339102] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:33.339306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:34.340486] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:35.005289] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:35.005476] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:35.006436] [D] [thread 367217] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:35.006472] [I] [thread 367217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:35.006476] [I] [thread 367217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:35.006488] [I] [thread 367217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:35.006490] [I] [thread 367217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:35.114623] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:35.114807] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:36.115942] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:36.656550] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:36.656729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:36.658324] [D] [thread 367222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:36.658373] [I] [thread 367222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:36.658377] [I] [thread 367222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:36.658389] [I] [thread 367222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:36.658390] [I] [thread 367222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:36.834330] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:36.834571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:37.835749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:38.609627] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:38.609824] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:38.611384] [D] [thread 367228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:38.611407] [I] [thread 367228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:38.611410] [I] [thread 367228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:38.611422] [I] [thread 367228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:38.611423] [I] [thread 367228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:38.773890] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:38.774094] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:39.775257] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:40.240433] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:40.240637] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:40.241933] [D] [thread 367233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:40.241955] [I] [thread 367233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:40.241960] [I] [thread 367233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:40.241972] [I] [thread 367233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:40.241973] [I] [thread 367233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:40.380544] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:40.380729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:41.381823] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:42.119761] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:42.119942] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:42.120933] [D] [thread 367238] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:42.120956] [I] [thread 367238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:42.120960] [I] [thread 367238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:42.120971] [I] [thread 367238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:42.120972] [I] [thread 367238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:42.257209] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:42.257409] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:43.258591] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:43.801959] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:43.802236] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:43.803003] [D] [thread 367243] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:43.803027] [I] [thread 367243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:43.803031] [I] [thread 367243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:43.803048] [I] [thread 367243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:43.803049] [I] [thread 367243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:43.935061] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:43.935328] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:44.936487] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:45.618819] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:45.619011] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:45.619951] [D] [thread 367248] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:45.619974] [I] [thread 367248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:45.619978] [I] [thread 367248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:45.619988] [I] [thread 367248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:45.619989] [I] [thread 367248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:45.733131] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:45.733325] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:46.734562] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:47.735791] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:48.737015] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:48.939347] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:48.939547] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:48.940524] [D] [thread 367253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:48.940550] [I] [thread 367253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:48.940554] [I] [thread 367253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:48.940566] [I] [thread 367253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:48.940567] [I] [thread 367253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:49.105280] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:49.105477] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:50.106656] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:50.943270] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:50.943513] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:50.944440] [D] [thread 367258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:50.944466] [I] [thread 367258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:50.944470] [I] [thread 367258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:50.944481] [I] [thread 367258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:50.944482] [I] [thread 367258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:51.149212] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:51.149413] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:52.150598] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:53.143794] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:53.143982] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:53.144927] [D] [thread 367263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:53.144960] [I] [thread 367263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:53.144964] [I] [thread 367263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:53.144975] [I] [thread 367263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:53.144976] [I] [thread 367263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:53.280264] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:53.280469] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:54.281643] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:54.930881] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:54.931103] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:54.932098] [D] [thread 367268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:54.932125] [I] [thread 367268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:54.932128] [I] [thread 367268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:54.932141] [I] [thread 367268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:54.932142] [I] [thread 367268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:55.077180] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:55.077361] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:56.078523] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:56.778773] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:56.778958] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:56.779870] [D] [thread 367273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:56.779893] [I] [thread 367273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:56.779896] [I] [thread 367273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:56.779907] [I] [thread 367273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:56.779908] [I] [thread 367273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:56.889697] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:56.889882] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:57.891065] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:58.892272] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:59.090588] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:59.090794] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:59.091755] [D] [thread 367278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:57:59.091781] [I] [thread 367278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:59.091786] [I] [thread 367278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:57:59.091798] [I] [thread 367278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:57:59.091799] [I] [thread 367278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:57:59.330310] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:57:59.330520] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:00.154349] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.154387] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.154543] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,13,12435248985,1701172680154
[m
[36m[11:58:00.166278] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.166307] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.166433] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,100,12683849684,1701172680166
[m
[36m[11:58:00.250353] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.250386] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.250525] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,47,25226757843,1701172680250
[m
[36m[11:58:00.250825] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.250908] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.251373] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,54,26559411031,1701172680250
[m
[36m[11:58:00.251523] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.251553] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.251650] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,63,25242283614,1701172680251
[m
[36m[11:58:00.251747] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:58:00.251775] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:58:00.251868] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172620000,1701172680000,24,26086586836,1701172680251
[m
[36m[11:58:00.331692] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:00.790848] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:00.791053] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:00.792027] [D] [thread 367283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:00.792051] [I] [thread 367283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:00.792057] [I] [thread 367283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:00.792068] [I] [thread 367283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:00.792069] [I] [thread 367283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:01.152606] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:01.152803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:02.154032] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:03.155247] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:04.156467] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:04.254208] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:04.254443] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:04.255313] [D] [thread 367288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:04.255338] [I] [thread 367288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:04.255342] [I] [thread 367288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:04.255353] [I] [thread 367288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:04.255354] [I] [thread 367288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:04.369293] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:04.369479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:05.370631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:05.796198] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:05.796440] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:05.797344] [D] [thread 367293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:05.797368] [I] [thread 367293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:05.797377] [I] [thread 367293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:05.797388] [I] [thread 367293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:05.797389] [I] [thread 367293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:05.901782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:05.901992] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:06.903173] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:07.273688] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:07.273890] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:07.274761] [D] [thread 367298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:07.274784] [I] [thread 367298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:07.274789] [I] [thread 367298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:07.274801] [I] [thread 367298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:07.274802] [I] [thread 367298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:07.383204] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:07.383394] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:08.384559] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:08.770707] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:08.770948] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:08.771897] [D] [thread 367303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:08.771924] [I] [thread 367303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:08.771928] [I] [thread 367303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:08.771941] [I] [thread 367303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:08.771942] [I] [thread 367303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:08.873237] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:08.873418] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:09.874608] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:10.236480] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:10.236691] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:10.237670] [D] [thread 367308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:10.237710] [I] [thread 367308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:10.237713] [I] [thread 367308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:10.237726] [I] [thread 367308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:10.237728] [I] [thread 367308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:10.349339] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:10.349532] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:11.350640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:11.725780] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:11.725980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:11.726873] [D] [thread 367313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:11.726898] [I] [thread 367313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:11.726908] [I] [thread 367313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:11.726919] [I] [thread 367313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:11.726920] [I] [thread 367313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:11.837953] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:11.838146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:12.839343] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:13.145297] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:13.145495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:13.146374] [D] [thread 367318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:13.146396] [I] [thread 367318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:13.146399] [I] [thread 367318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:13.146409] [I] [thread 367318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:13.146410] [I] [thread 367318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:13.246478] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:13.246700] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:14.247878] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:14.716401] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:14.716607] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:14.717507] [D] [thread 367323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:14.717530] [I] [thread 367323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:14.717533] [I] [thread 367323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:14.717544] [I] [thread 367323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:14.717546] [I] [thread 367323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:14.864984] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:14.865247] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:15.866411] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:16.867631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:17.034798] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:17.034982] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:17.035931] [D] [thread 367328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:17.035955] [I] [thread 367328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:17.035958] [I] [thread 367328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:17.035970] [I] [thread 367328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:17.035971] [I] [thread 367328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:17.273540] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:17.273747] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:18.274931] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:19.194783] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:19.194986] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:19.195841] [D] [thread 367333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:19.195862] [I] [thread 367333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:19.195865] [I] [thread 367333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:19.195876] [I] [thread 367333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:19.195877] [I] [thread 367333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:19.413229] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:19.413451] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:20.414594] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:20.901211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:20.901400] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:20.902298] [D] [thread 367338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:20.902312] [I] [thread 367338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:20.902315] [I] [thread 367338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:20.902326] [I] [thread 367338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:20.902327] [I] [thread 367338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:21.017621] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:21.017833] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:22.019051] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:22.530265] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:22.530447] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:22.531324] [D] [thread 367343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:22.531346] [I] [thread 367343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:22.531350] [I] [thread 367343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:22.531360] [I] [thread 367343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:22.531361] [I] [thread 367343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:22.646445] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:22.646620] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:23.647770] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:23.994397] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:23.994622] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:23.995523] [D] [thread 367348] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:23.995548] [I] [thread 367348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:23.995551] [I] [thread 367348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:23.995564] [I] [thread 367348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:23.995565] [I] [thread 367348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:24.100096] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:24.100280] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:25.101463] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:25.438073] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:25.438263] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:25.439210] [D] [thread 367353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:25.439236] [I] [thread 367353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:25.439239] [I] [thread 367353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:25.439253] [I] [thread 367353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:25.439254] [I] [thread 367353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:25.551902] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:25.552095] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:26.553275] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:26.937549] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:26.937815] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:26.938653] [D] [thread 367358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:26.938678] [I] [thread 367358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:26.938681] [I] [thread 367358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:26.938693] [I] [thread 367358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:26.938694] [I] [thread 367358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:27.044060] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:27.044241] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:28.045422] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:28.444980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:28.445224] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:28.446083] [D] [thread 367363] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:28.446113] [I] [thread 367363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:28.446117] [I] [thread 367363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:28.446130] [I] [thread 367363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:28.446131] [I] [thread 367363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:28.555475] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:28.555708] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:29.556836] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:29.864579] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:29.864764] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:29.866273] [D] [thread 367369] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:29.866296] [I] [thread 367369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:29.866300] [I] [thread 367369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:29.866313] [I] [thread 367369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:29.866314] [I] [thread 367369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:29.990654] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:29.990864] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:30.992049] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:31.993264] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:32.100570] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:32.100783] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:32.101693] [D] [thread 367374] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:32.101715] [I] [thread 367374] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:32.101718] [I] [thread 367374] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:32.101729] [I] [thread 367374] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:32.101730] [I] [thread 367374] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:32.326255] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:32.326514] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:33.327690] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:33.909447] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:33.909630] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:33.910496] [D] [thread 367379] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:33.910517] [I] [thread 367379] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:33.910520] [I] [thread 367379] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:33.910531] [I] [thread 367379] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:33.910532] [I] [thread 367379] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:34.016810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:34.016990] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:35.018169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:35.376609] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:35.376827] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:35.377785] [D] [thread 367384] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:35.377809] [I] [thread 367384] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:35.377812] [I] [thread 367384] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:35.377823] [I] [thread 367384] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:35.377824] [I] [thread 367384] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:35.489822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:35.490004] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:36.491163] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:36.872873] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:36.873061] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:36.873955] [D] [thread 367389] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:36.873982] [I] [thread 367389] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:36.873985] [I] [thread 367389] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:36.873996] [I] [thread 367389] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:36.873998] [I] [thread 367389] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:36.988686] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:36.989016] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:37.990211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:38.456872] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:38.457061] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:38.458554] [D] [thread 367394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:38.458579] [I] [thread 367394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:38.458582] [I] [thread 367394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:38.458594] [I] [thread 367394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:38.458595] [I] [thread 367394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:38.561932] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:38.562146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:39.563296] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:39.949792] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:39.949985] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:39.950898] [D] [thread 367399] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:39.950920] [I] [thread 367399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:39.950924] [I] [thread 367399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:39.950935] [I] [thread 367399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:39.950936] [I] [thread 367399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:40.065153] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:40.065342] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:41.066529] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:41.398069] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:41.398264] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:41.399158] [D] [thread 367404] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:41.399192] [I] [thread 367404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:41.399196] [I] [thread 367404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:41.399207] [I] [thread 367404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:41.399208] [I] [thread 367404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:41.505673] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:41.505887] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:42.507050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:42.958193] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:42.958416] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:42.959326] [D] [thread 367410] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:42.959351] [I] [thread 367410] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:42.959355] [I] [thread 367410] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:42.959366] [I] [thread 367410] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:42.959367] [I] [thread 367410] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:43.057913] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:43.058124] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:44.059296] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:44.783179] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:44.783403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:44.784358] [D] [thread 367416] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:44.784381] [I] [thread 367416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:44.784384] [I] [thread 367416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:44.784396] [I] [thread 367416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:44.784397] [I] [thread 367416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:45.043662] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:45.043882] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:46.045062] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:47.046268] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:47.371396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:47.371622] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:47.372505] [D] [thread 367422] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:47.372529] [I] [thread 367422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:47.372534] [I] [thread 367422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:47.372544] [I] [thread 367422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:47.372545] [I] [thread 367422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:47.746730] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:47.746917] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:48.748100] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:49.490974] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:49.491160] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:49.492104] [D] [thread 367427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:49.492126] [I] [thread 367427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:49.492132] [I] [thread 367427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:49.492142] [I] [thread 367427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:49.492143] [I] [thread 367427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:49.708927] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:49.709154] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:50.710332] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:51.495701] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:51.495889] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:51.496880] [D] [thread 367432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:51.496905] [I] [thread 367432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:51.496909] [I] [thread 367432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:51.496919] [I] [thread 367432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:51.496920] [I] [thread 367432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:51.612393] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:51.612571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:52.613734] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:53.046005] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:53.046181] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:53.047168] [D] [thread 367437] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:53.047198] [I] [thread 367437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:53.047202] [I] [thread 367437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:53.047212] [I] [thread 367437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:53.047214] [I] [thread 367437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:53.160169] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:53.160428] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:54.161565] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:54.623322] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:54.623528] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:54.625088] [D] [thread 367442] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:54.625113] [I] [thread 367442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:54.625116] [I] [thread 367442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:54.625128] [I] [thread 367442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:54.625129] [I] [thread 367442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:54.734200] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:54.734413] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:55.735578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:55.990372] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:55.990578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:55.991480] [D] [thread 367447] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:55.991504] [I] [thread 367447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:55.991511] [I] [thread 367447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:55.991522] [I] [thread 367447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:55.991523] [I] [thread 367447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:56.133558] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:56.133760] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:57.134938] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:57.443803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:57.444007] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:57.445023] [D] [thread 367452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:57.445049] [I] [thread 367452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:57.445059] [I] [thread 367452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:57.445070] [I] [thread 367452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:57.445071] [I] [thread 367452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:57.543081] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:57.543265] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:58.544487] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:58.900589] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:58.900785] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:58.901714] [D] [thread 367457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:58:58.901736] [I] [thread 367457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:58.901746] [I] [thread 367457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:58:58.901757] [I] [thread 367457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:58:58.901759] [I] [thread 367457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:58:59.023701] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:58:59.023897] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:00.024741] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:00.090090] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.090123] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.090281] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,100,12471042221,1701172740090
[m
[36m[11:59:00.331545] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.331581] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.331736] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,47,25082908748,1701172740331
[m
[36m[11:59:00.331875] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.331901] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.332028] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,13,15254109938,1701172740331
[m
[36m[11:59:00.332238] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.332266] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.332598] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,24,31837725856,1701172740332
[m
[36m[11:59:00.443220] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.443257] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.443406] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,63,25063932124,1701172740443
[m
[36m[11:59:00.443547] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:59:00.443573] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:59:00.443705] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172680000,1701172740000,54,23528689453,1701172740443
[m
[36m[11:59:00.562075] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:00.562523] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:00.563181] [D] [thread 367462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:00.563213] [I] [thread 367462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:00.563216] [I] [thread 367462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:00.563226] [I] [thread 367462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:00.563227] [I] [thread 367462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:00.701798] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:00.701980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:01.703075] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:02.704238] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:02.923300] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:02.923512] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:02.924398] [D] [thread 367467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:02.924421] [I] [thread 367467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:02.924425] [I] [thread 367467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:02.924436] [I] [thread 367467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:02.924437] [I] [thread 367467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:03.133250] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:03.133472] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:04.134646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:04.520365] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:04.520550] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:04.521502] [D] [thread 367472] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:04.521525] [I] [thread 367472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:04.521530] [I] [thread 367472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:04.521540] [I] [thread 367472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:04.521541] [I] [thread 367472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:04.621723] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:04.621899] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:05.623044] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:06.049864] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:06.050049] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:06.050896] [D] [thread 367477] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:06.050919] [I] [thread 367477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:06.050922] [I] [thread 367477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:06.050934] [I] [thread 367477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:06.050935] [I] [thread 367477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:06.281945] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:06.282125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:07.283309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:07.753061] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:07.753287] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:07.754087] [D] [thread 367482] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:07.754110] [I] [thread 367482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:07.754113] [I] [thread 367482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:07.754130] [I] [thread 367482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:07.754131] [I] [thread 367482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:07.904717] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:07.904990] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:08.906175] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:09.314335] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:09.314661] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:09.315404] [D] [thread 367488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:09.315425] [I] [thread 367488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:09.315429] [I] [thread 367488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:09.315440] [I] [thread 367488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:09.315441] [I] [thread 367488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:09.749120] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:09.749355] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:10.750544] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:11.445660] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:11.445841] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:11.446757] [D] [thread 367493] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:11.446771] [I] [thread 367493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:11.446774] [I] [thread 367493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:11.446785] [I] [thread 367493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:11.446786] [I] [thread 367493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:11.543283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:11.543461] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:12.544622] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:12.834252] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:12.834469] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:12.835340] [D] [thread 367498] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:12.835363] [I] [thread 367498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:12.835367] [I] [thread 367498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:12.835378] [I] [thread 367498] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:12.835379] [I] [thread 367498] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:12.934220] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:12.934456] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:13.935686] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:14.382159] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:14.382399] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:14.383228] [D] [thread 367503] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:14.383250] [I] [thread 367503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:14.383255] [I] [thread 367503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:14.383266] [I] [thread 367503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:14.383267] [I] [thread 367503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:14.512134] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:14.512315] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:15.513450] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:15.860120] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:15.860306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:15.861314] [D] [thread 367508] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:15.861339] [I] [thread 367508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:15.861349] [I] [thread 367508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:15.861360] [I] [thread 367508] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:15.861361] [I] [thread 367508] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:16.201895] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:16.202142] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:17.203296] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:18.204490] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:18.389937] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:18.390129] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:18.391067] [D] [thread 367513] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:18.391093] [I] [thread 367513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:18.391097] [I] [thread 367513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:18.391108] [I] [thread 367513] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:18.391109] [I] [thread 367513] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:18.795310] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:18.795516] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:19.796461] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:20.192847] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:20.193078] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:20.193985] [D] [thread 367519] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:20.194011] [I] [thread 367519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:20.194014] [I] [thread 367519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:20.194031] [I] [thread 367519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:20.194032] [I] [thread 367519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:20.289233] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:20.289403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:21.290582] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:21.682996] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:21.683180] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:21.684492] [D] [thread 367525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:21.684516] [I] [thread 367525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:21.684520] [I] [thread 367525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:21.684531] [I] [thread 367525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:21.684532] [I] [thread 367525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:21.837403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:21.837617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:22.838803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:23.286506] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:23.286689] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:23.287602] [D] [thread 367530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:23.287626] [I] [thread 367530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:23.287630] [I] [thread 367530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:23.287641] [I] [thread 367530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:23.287642] [I] [thread 367530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:23.408687] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:23.408888] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:24.410056] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:24.805725] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:24.805927] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:24.806768] [D] [thread 367535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:24.806790] [I] [thread 367535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:24.806794] [I] [thread 367535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:24.806804] [I] [thread 367535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:24.806806] [I] [thread 367535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:24.955780] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:24.956059] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:25.957251] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:26.307157] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:26.307344] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:26.308234] [D] [thread 367540] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:26.308257] [I] [thread 367540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:26.308260] [I] [thread 367540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:26.308273] [I] [thread 367540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:26.308275] [I] [thread 367540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:26.417539] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:26.417721] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:27.418893] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:27.764571] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:27.764752] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:27.765735] [D] [thread 367545] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:27.765760] [I] [thread 367545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:27.765770] [I] [thread 367545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:27.765781] [I] [thread 367545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:27.765782] [I] [thread 367545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:27.874072] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:27.874254] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:28.875426] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:29.388433] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:29.388655] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:29.389604] [D] [thread 367550] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:29.389638] [I] [thread 367550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:29.389642] [I] [thread 367550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:29.389656] [I] [thread 367550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:29.389657] [I] [thread 367550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:29.498319] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:29.498501] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:30.499661] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:30.800728] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:30.800959] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:30.801862] [D] [thread 367555] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:30.801885] [I] [thread 367555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:30.801890] [I] [thread 367555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:30.801902] [I] [thread 367555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:30.801903] [I] [thread 367555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:31.154125] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:31.154309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:32.155495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:33.156709] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:33.542000] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:33.542214] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:33.543046] [D] [thread 367560] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:33.543070] [I] [thread 367560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:33.543074] [I] [thread 367560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:33.543085] [I] [thread 367560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:33.543086] [I] [thread 367560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:33.908561] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:33.908817] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:34.909977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:35.409741] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:35.409962] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:35.410873] [D] [thread 367566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:35.410897] [I] [thread 367566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:35.410900] [I] [thread 367566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:35.410912] [I] [thread 367566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:35.410913] [I] [thread 367566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:35.513703] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:35.513883] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:36.515058] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:36.812866] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:36.813048] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:36.813988] [D] [thread 367571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:36.814012] [I] [thread 367571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:36.814018] [I] [thread 367571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:36.814029] [I] [thread 367571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:36.814030] [I] [thread 367571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:36.930242] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:36.930464] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:37.931655] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:38.324605] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:38.324806] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:38.325666] [D] [thread 367578] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:38.325687] [I] [thread 367578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:38.325692] [I] [thread 367578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:38.325709] [I] [thread 367578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:38.325710] [I] [thread 367578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:38.465977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:38.466192] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:39.467374] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:39.846438] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:39.846742] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:39.847494] [D] [thread 367583] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:39.847520] [I] [thread 367583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:39.847523] [I] [thread 367583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:39.847541] [I] [thread 367583] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:39.847542] [I] [thread 367583] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:39.950620] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:39.950822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:40.952055] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:41.308207] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:41.308457] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:41.309364] [D] [thread 367588] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:41.309388] [I] [thread 367588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:41.309394] [I] [thread 367588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:41.309405] [I] [thread 367588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:41.309406] [I] [thread 367588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:41.404804] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:41.404986] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:42.406145] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:42.730683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:42.730866] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:42.732159] [D] [thread 367593] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:42.732184] [I] [thread 367593] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:42.732188] [I] [thread 367593] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:42.732207] [I] [thread 367593] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:42.732208] [I] [thread 367593] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:42.881029] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:42.881211] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:43.882378] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:44.202722] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:44.202939] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:44.203972] [D] [thread 367598] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:44.203997] [I] [thread 367598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:44.204001] [I] [thread 367598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:44.204011] [I] [thread 367598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:44.204013] [I] [thread 367598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:44.320651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:44.320833] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:45.322008] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:45.684896] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:45.685076] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:45.685971] [D] [thread 367603] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:45.685994] [I] [thread 367603] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:45.685997] [I] [thread 367603] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:45.686008] [I] [thread 367603] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:45.686009] [I] [thread 367603] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:45.787257] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:45.787471] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:46.788649] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:47.585279] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:47.585578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:47.586368] [D] [thread 367608] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:47.586405] [I] [thread 367608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:47.586408] [I] [thread 367608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:47.586422] [I] [thread 367608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:47.586423] [I] [thread 367608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:47.957249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:47.957465] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:48.958625] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:49.414724] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:49.415004] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:49.415853] [D] [thread 367613] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:49.415881] [I] [thread 367613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:49.415884] [I] [thread 367613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:49.415898] [I] [thread 367613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:49.415899] [I] [thread 367613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:49.521393] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:49.521587] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:50.522766] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:51.420920] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:51.421128] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:51.422039] [D] [thread 367618] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:51.422053] [I] [thread 367618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:51.422056] [I] [thread 367618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:51.422067] [I] [thread 367618] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:51.422068] [I] [thread 367618] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:51.525216] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:51.525415] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:52.526595] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:53.289466] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:53.289743] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:53.290605] [D] [thread 367623] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:53.290628] [I] [thread 367623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:53.290632] [I] [thread 367623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:53.290643] [I] [thread 367623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:53.290644] [I] [thread 367623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:53.793902] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:53.794101] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:54.795255] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:55.500624] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:55.500819] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:55.501724] [D] [thread 367628] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:55.501748] [I] [thread 367628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:55.501752] [I] [thread 367628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:55.501763] [I] [thread 367628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:55.501764] [I] [thread 367628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:55.614477] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:55.614679] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:56.615820] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:57.617021] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:57.922667] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:57.922844] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:57.923773] [D] [thread 367633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:57.923797] [I] [thread 367633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:57.923801] [I] [thread 367633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:57.923811] [I] [thread 367633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:57.923812] [I] [thread 367633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:58.055855] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:58.056096] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:59.057277] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:59.449185] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:59.449410] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:59.450293] [D] [thread 367638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:59:59.450316] [I] [thread 367638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:59.450319] [I] [thread 367638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:59:59.450330] [I] [thread 367638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:59:59.450331] [I] [thread 367638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:59:59.557984] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:59:59.558187] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:00.149032] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.149073] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.149231] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,13,12733283901,1701172800149
[m
[36m[12:00:00.149406] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.149434] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.149537] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,100,13393522396,1701172800149
[m
[36m[12:00:00.277111] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.277133] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.277237] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,47,31049574931,1701172800277
[m
[36m[12:00:00.373731] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.373758] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.373873] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,24,32169873575,1701172800373
[m
[36m[12:00:00.481934] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.481972] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.482137] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,63,32425937737,1701172800481
[m
[36m[12:00:00.482275] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:00:00.482289] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:00:00.482381] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172740000,1701172800000,54,26748275134,1701172800482
[m
[36m[12:00:00.559367] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:01.005359] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:01.005541] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:01.007069] [D] [thread 367643] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:01.007092] [I] [thread 367643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:01.007096] [I] [thread 367643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:01.007107] [I] [thread 367643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:01.007108] [I] [thread 367643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:01.297412] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:01.297593] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:02.298753] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:03.299951] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:03.774428] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:03.774612] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:03.775535] [D] [thread 367648] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:03.775558] [I] [thread 367648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:03.775564] [I] [thread 367648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:03.775575] [I] [thread 367648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:03.775576] [I] [thread 367648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:03.913447] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:03.913654] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:04.914822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:05.262170] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:05.262401] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:05.263288] [D] [thread 367653] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:05.263312] [I] [thread 367653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:05.263315] [I] [thread 367653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:05.263326] [I] [thread 367653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:05.263327] [I] [thread 367653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:05.374245] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:05.374442] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:06.375605] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:06.764789] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:06.765007] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:06.766208] [D] [thread 367658] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:06.766232] [I] [thread 367658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:06.766236] [I] [thread 367658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:06.766247] [I] [thread 367658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:06.766249] [I] [thread 367658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:06.873219] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:06.873402] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:07.874501] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:08.214174] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:08.214369] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:08.215255] [D] [thread 367663] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:08.215278] [I] [thread 367663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:08.215282] [I] [thread 367663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:08.215293] [I] [thread 367663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:08.215294] [I] [thread 367663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:08.319433] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:08.319630] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:09.320782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:09.854316] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:09.854529] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:09.855411] [D] [thread 367668] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:09.855436] [I] [thread 367668] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:09.855441] [I] [thread 367668] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:09.855452] [I] [thread 367668] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:09.855453] [I] [thread 367668] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:09.980578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:09.980784] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:10.981946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:11.273651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:11.273830] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:11.274739] [D] [thread 367673] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:11.274763] [I] [thread 367673] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:11.274766] [I] [thread 367673] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:11.274778] [I] [thread 367673] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:11.274779] [I] [thread 367673] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:11.372577] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:11.372789] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:12.373957] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:12.789911] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:12.790137] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:12.791088] [D] [thread 367678] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:12.791113] [I] [thread 367678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:12.791117] [I] [thread 367678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:12.791129] [I] [thread 367678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:12.791130] [I] [thread 367678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:12.893082] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:12.893283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:13.894435] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:14.240876] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:14.241079] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:14.242311] [D] [thread 367683] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:14.242333] [I] [thread 367683] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:14.242337] [I] [thread 367683] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:14.242348] [I] [thread 367683] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:14.242349] [I] [thread 367683] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:14.364580] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:14.364778] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:15.365975] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:15.788054] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:15.788299] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:15.789244] [D] [thread 367688] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:15.789268] [I] [thread 367688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:15.789271] [I] [thread 367688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:15.789282] [I] [thread 367688] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:15.789283] [I] [thread 367688] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:16.028694] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:16.028889] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:17.030071] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:18.031275] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:18.197897] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:18.198098] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:18.199042] [D] [thread 367693] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:18.199067] [I] [thread 367693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:18.199077] [I] [thread 367693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:18.199088] [I] [thread 367693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:18.199089] [I] [thread 367693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:18.591597] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:18.591778] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:19.592934] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:19.978897] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:19.979100] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:19.979938] [D] [thread 367698] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:19.979961] [I] [thread 367698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:19.979965] [I] [thread 367698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:19.979978] [I] [thread 367698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:19.979979] [I] [thread 367698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:20.089156] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:20.089378] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:21.090560] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:21.536653] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:21.536852] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:21.537767] [D] [thread 367703] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:21.537792] [I] [thread 367703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:21.537796] [I] [thread 367703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:21.537807] [I] [thread 367703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:21.537809] [I] [thread 367703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:21.656272] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:21.656511] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:22.657652] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:23.185157] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:23.185372] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:23.186209] [D] [thread 367708] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:23.186235] [I] [thread 367708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:23.186239] [I] [thread 367708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:23.186250] [I] [thread 367708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:23.186251] [I] [thread 367708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:23.288567] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:23.288769] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:24.289961] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:24.671749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:24.671953] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:24.672961] [D] [thread 367713] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:24.672985] [I] [thread 367713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:24.672988] [I] [thread 367713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:24.673000] [I] [thread 367713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:24.673001] [I] [thread 367713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:24.806161] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:24.806367] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:25.807539] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:26.105008] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:26.105217] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:26.106196] [D] [thread 367718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:26.106227] [I] [thread 367718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:26.106230] [I] [thread 367718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:26.106241] [I] [thread 367718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:26.106242] [I] [thread 367718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:26.208792] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:26.208983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:27.209273] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:27.598696] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:27.598900] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:27.599837] [D] [thread 367723] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:27.599861] [I] [thread 367723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:27.599865] [I] [thread 367723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:27.599876] [I] [thread 367723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:27.599877] [I] [thread 367723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:27.747298] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:27.747489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:28.748638] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:29.038749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:29.038929] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:29.040536] [D] [thread 367728] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:29.040559] [I] [thread 367728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:29.040563] [I] [thread 367728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:29.040573] [I] [thread 367728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:29.040575] [I] [thread 367728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:29.155437] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:29.155641] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:30.156816] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:30.459499] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:30.459702] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:30.460721] [D] [thread 367733] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:30.460743] [I] [thread 367733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:30.460747] [I] [thread 367733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:30.460758] [I] [thread 367733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:30.460759] [I] [thread 367733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:30.604403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:30.604587] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:31.605748] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:32.606896] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:33.571304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:33.571486] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:33.572460] [D] [thread 367739] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:33.572491] [I] [thread 367739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:33.572494] [I] [thread 367739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:33.572512] [I] [thread 367739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:33.572514] [I] [thread 367739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:33.702597] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:33.702829] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:34.704007] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:35.042079] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:35.042261] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:35.043806] [D] [thread 367744] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:35.043829] [I] [thread 367744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:35.043834] [I] [thread 367744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:35.043845] [I] [thread 367744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:35.043846] [I] [thread 367744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:35.153147] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:35.153332] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:36.154494] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:36.493738] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:36.493954] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:36.494887] [D] [thread 367749] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:36.494911] [I] [thread 367749] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:36.494914] [I] [thread 367749] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:36.494925] [I] [thread 367749] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:36.494927] [I] [thread 367749] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:36.618033] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:36.618214] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:37.619385] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:37.939324] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:37.939508] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:37.940843] [D] [thread 367754] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:37.940868] [I] [thread 367754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:37.940871] [I] [thread 367754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:37.940882] [I] [thread 367754] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:37.940883] [I] [thread 367754] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:38.134229] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:38.134439] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:39.135622] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:39.481231] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:39.481437] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:39.482264] [D] [thread 367759] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:39.482285] [I] [thread 367759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:39.482291] [I] [thread 367759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:39.482301] [I] [thread 367759] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:39.482302] [I] [thread 367759] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:39.582196] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:39.582374] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:40.583549] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:40.913249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:40.913467] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:40.914411] [D] [thread 367764] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:40.914462] [I] [thread 367764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:40.914466] [I] [thread 367764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:40.914477] [I] [thread 367764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:40.914478] [I] [thread 367764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:41.477522] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:41.477708] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:42.478898] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:43.180819] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:43.181025] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:43.181949] [D] [thread 367769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:43.181985] [I] [thread 367769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:43.181989] [I] [thread 367769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:43.182000] [I] [thread 367769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:43.182001] [I] [thread 367769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:43.288011] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:43.288232] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:44.289495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:44.607683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:44.607888] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:44.609145] [D] [thread 367774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:44.609169] [I] [thread 367774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:44.609173] [I] [thread 367774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:44.609184] [I] [thread 367774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:44.609185] [I] [thread 367774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:44.716845] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:44.717060] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:45.718227] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:46.719427] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:46.768813] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:46.768989] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:46.769913] [D] [thread 367779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:46.769937] [I] [thread 367779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:46.769941] [I] [thread 367779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:46.769952] [I] [thread 367779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:46.769953] [I] [thread 367779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:47.004285] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:47.004524] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:48.005706] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:48.946581] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:48.946781] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:48.947717] [D] [thread 367784] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:48.947742] [I] [thread 367784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:48.947749] [I] [thread 367784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:48.947760] [I] [thread 367784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:48.947761] [I] [thread 367784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:49.155654] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:49.155863] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:50.157019] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:50.627726] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:50.627942] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:50.628904] [D] [thread 367789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:50.628929] [I] [thread 367789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:50.628933] [I] [thread 367789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:50.628944] [I] [thread 367789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:50.628945] [I] [thread 367789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:50.738127] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:50.738339] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:51.739449] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:52.042909] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:52.043100] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:52.044074] [D] [thread 367794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:52.044099] [I] [thread 367794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:52.044103] [I] [thread 367794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:52.044121] [I] [thread 367794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:52.044122] [I] [thread 367794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:52.152983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:52.153192] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:53.154376] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:53.502791] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:53.503002] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:53.503956] [D] [thread 367799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:53.503980] [I] [thread 367799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:53.503984] [I] [thread 367799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:53.503995] [I] [thread 367799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:53.503996] [I] [thread 367799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:53.614379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:53.614619] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:54.615806] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:55.009955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:55.010162] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:55.011035] [D] [thread 367804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:55.011058] [I] [thread 367804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:55.011061] [I] [thread 367804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:55.011073] [I] [thread 367804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:55.011074] [I] [thread 367804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:55.127740] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:55.127919] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:56.129103] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:56.548299] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:56.548613] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:56.549464] [D] [thread 367809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:56.549487] [I] [thread 367809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:56.549491] [I] [thread 367809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:56.549502] [I] [thread 367809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:56.549503] [I] [thread 367809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:56.698452] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:56.698640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:57.699819] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:58.110632] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:58.110810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:58.111753] [D] [thread 367814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:58.111777] [I] [thread 367814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:58.111787] [I] [thread 367814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:58.111798] [I] [thread 367814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:58.111799] [I] [thread 367814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:58.217175] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:58.217426] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:59.218527] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:59.541091] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:59.541307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:59.542137] [D] [thread 367819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:00:59.542159] [I] [thread 367819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:59.542163] [I] [thread 367819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:00:59.542177] [I] [thread 367819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:00:59.542178] [I] [thread 367819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:00:59.678848] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:00:59.679031] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:00.167717] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.167758] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.167915] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,13,14121571058,1701172860167
[m
[36m[12:01:00.174714] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.174744] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.174882] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,100,9742070095,1701172860174
[m
[36m[12:01:00.372755] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.372792] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.372954] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,24,25672910025,1701172860372
[m
[36m[12:01:00.386663] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.386690] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.386833] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,54,29244621797,1701172860386
[m
[36m[12:01:00.476295] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.476365] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.476492] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,47,22780496338,1701172860476
[m
[36m[12:01:00.587012] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:01:00.587045] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:01:00.587180] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172800000,1701172860000,63,23880001287,1701172860587
[m
[36m[12:01:00.680198] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:01.421783] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:01.422002] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:01.422931] [D] [thread 367824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:01.422956] [I] [thread 367824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:01.422960] [I] [thread 367824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:01.422978] [I] [thread 367824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:01.422979] [I] [thread 367824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:01.789933] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:01.790142] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:02.791307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:03.637183] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:03.637403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:03.638328] [D] [thread 367829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:03.638352] [I] [thread 367829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:03.638355] [I] [thread 367829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:03.638366] [I] [thread 367829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:03.638367] [I] [thread 367829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:03.780828] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:03.781034] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:04.782205] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:05.070871] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:05.071054] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:05.071918] [D] [thread 367834] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:05.071941] [I] [thread 367834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:05.071944] [I] [thread 367834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:05.071958] [I] [thread 367834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:05.071959] [I] [thread 367834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:05.186743] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:05.186953] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:06.188101] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:06.569178] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:06.569396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:06.570211] [D] [thread 367839] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:06.570234] [I] [thread 367839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:06.570238] [I] [thread 367839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:06.570248] [I] [thread 367839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:06.570250] [I] [thread 367839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:06.666720] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:06.666924] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:07.668075] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:07.958449] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:07.958633] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:07.959601] [D] [thread 367844] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:07.959626] [I] [thread 367844] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:07.959630] [I] [thread 367844] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:07.959641] [I] [thread 367844] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:07.959642] [I] [thread 367844] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:08.094895] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:08.095105] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:09.096287] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:09.581795] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:09.581995] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:09.582853] [D] [thread 367849] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:09.582877] [I] [thread 367849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:09.582880] [I] [thread 367849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:09.582898] [I] [thread 367849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:09.582899] [I] [thread 367849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:09.733060] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:09.733240] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:10.734416] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:11.014615] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:11.014898] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:11.015756] [D] [thread 367854] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:11.015795] [I] [thread 367854] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:11.015799] [I] [thread 367854] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:11.015813] [I] [thread 367854] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:11.015814] [I] [thread 367854] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:11.162363] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:11.162578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:12.163744] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:12.741119] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:12.741309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:12.742234] [D] [thread 367859] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:12.742261] [I] [thread 367859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:12.742265] [I] [thread 367859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:12.742278] [I] [thread 367859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:12.742279] [I] [thread 367859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:12.885113] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:12.885303] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:13.886456] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:14.214445] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:14.214646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:14.215659] [D] [thread 367864] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:14.215707] [I] [thread 367864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:14.215710] [I] [thread 367864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:14.215730] [I] [thread 367864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:14.215731] [I] [thread 367864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:14.374159] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:14.374401] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:15.375585] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:15.749933] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:15.750127] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:15.750978] [D] [thread 367869] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:15.750992] [I] [thread 367869] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:15.750994] [I] [thread 367869] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:15.751005] [I] [thread 367869] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:15.751006] [I] [thread 367869] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:15.851215] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:15.851428] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:16.852610] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:17.468560] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:17.468782] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:17.469644] [D] [thread 367874] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:17.469667] [I] [thread 367874] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:17.469673] [I] [thread 367874] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:17.469685] [I] [thread 367874] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:17.469686] [I] [thread 367874] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:17.685726] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:17.685927] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:18.687123] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:19.160651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:19.160905] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:19.161727] [D] [thread 367879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:19.161750] [I] [thread 367879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:19.161754] [I] [thread 367879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:19.161765] [I] [thread 367879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:19.161766] [I] [thread 367879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:19.283778] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:19.283974] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:20.285135] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:20.603102] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:20.603282] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:20.604212] [D] [thread 367884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:20.604248] [I] [thread 367884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:20.604251] [I] [thread 367884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:20.604262] [I] [thread 367884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:20.604264] [I] [thread 367884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:20.741721] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:20.741913] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:21.743101] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:22.128673] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:22.128883] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:22.130339] [D] [thread 367889] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:22.130361] [I] [thread 367889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:22.130365] [I] [thread 367889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:22.130376] [I] [thread 367889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:22.130377] [I] [thread 367889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:22.265767] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:22.265977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:23.267140] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:23.575043] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:23.575249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:23.576532] [D] [thread 367894] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:23.576557] [I] [thread 367894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:23.576560] [I] [thread 367894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:23.576572] [I] [thread 367894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:23.576573] [I] [thread 367894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:23.701741] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:23.701946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:24.703122] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:25.048229] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:25.048466] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:25.049393] [D] [thread 367899] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:25.049418] [I] [thread 367899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:25.049424] [I] [thread 367899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:25.049435] [I] [thread 367899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:25.049436] [I] [thread 367899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:25.142286] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:25.142490] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:26.143673] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:26.441905] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:26.442090] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:26.443577] [D] [thread 367905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:26.443601] [I] [thread 367905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:26.443604] [I] [thread 367905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:26.443615] [I] [thread 367905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:26.443616] [I] [thread 367905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:26.581628] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:26.581822] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:27.583003] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:28.031454] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:28.031673] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:28.032548] [D] [thread 367910] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:28.032571] [I] [thread 367910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:28.032574] [I] [thread 367910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:28.032585] [I] [thread 367910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:28.032586] [I] [thread 367910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:28.129657] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:28.129825] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:29.130999] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:29.472831] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:29.473059] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:29.473944] [D] [thread 367915] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:29.473970] [I] [thread 367915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:29.473974] [I] [thread 367915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:29.473985] [I] [thread 367915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:29.473986] [I] [thread 367915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:29.583117] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:29.583299] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:30.584479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:31.494440] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:31.494620] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:31.495570] [D] [thread 367920] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:31.495594] [I] [thread 367920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:31.495598] [I] [thread 367920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:31.495609] [I] [thread 367920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:31.495610] [I] [thread 367920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:31.732939] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:31.733118] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:32.734302] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:33.735516] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:33.825479] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:33.825682] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:33.826537] [D] [thread 367925] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:33.826560] [I] [thread 367925] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:33.826564] [I] [thread 367925] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:33.826575] [I] [thread 367925] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:33.826576] [I] [thread 367925] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:33.956111] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:33.956385] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:34.957536] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:35.293174] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:35.293361] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:35.294625] [D] [thread 367931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:35.294649] [I] [thread 367931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:35.294652] [I] [thread 367931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:35.294663] [I] [thread 367931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:35.294664] [I] [thread 367931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:35.440864] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:35.441048] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:36.442210] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:36.748470] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:36.748684] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:36.749886] [D] [thread 367936] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:36.749912] [I] [thread 367936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:36.749915] [I] [thread 367936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:36.749926] [I] [thread 367936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:36.749927] [I] [thread 367936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:36.867363] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:36.867565] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:37.868731] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:38.154341] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:38.154525] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:38.155449] [D] [thread 367941] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:38.155473] [I] [thread 367941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:38.155476] [I] [thread 367941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:38.155487] [I] [thread 367941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:38.155488] [I] [thread 367941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:38.264006] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:38.264210] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:39.265399] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:39.666306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:39.666578] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:39.667339] [D] [thread 367946] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:39.667364] [I] [thread 367946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:39.667368] [I] [thread 367946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:39.667385] [I] [thread 367946] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:39.667386] [I] [thread 367946] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:39.797935] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:39.798121] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:40.799277] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:41.238300] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:41.238478] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:41.240012] [D] [thread 367951] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:41.240037] [I] [thread 367951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:41.240040] [I] [thread 367951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:41.240051] [I] [thread 367951] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:41.240052] [I] [thread 367951] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:41.585987] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:41.586168] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:42.587354] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:43.098002] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:43.098204] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:43.099806] [D] [thread 367956] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:43.099840] [I] [thread 367956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:43.099844] [I] [thread 367956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:43.099855] [I] [thread 367956] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:43.099857] [I] [thread 367956] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:43.209946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:43.210156] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:44.211276] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:44.518091] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:44.518283] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:44.519218] [D] [thread 367961] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:44.519243] [I] [thread 367961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:44.519246] [I] [thread 367961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:44.519264] [I] [thread 367961] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:44.519265] [I] [thread 367961] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:44.619058] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:44.619249] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:45.620457] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:46.043174] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:46.043359] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:46.044284] [D] [thread 367966] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:46.044308] [I] [thread 367966] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:46.044313] [I] [thread 367966] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:46.044349] [I] [thread 367966] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:46.044351] [I] [thread 367966] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:46.353647] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:46.353842] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:47.355043] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:48.282160] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:48.282436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:48.283235] [D] [thread 367971] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:48.283248] [I] [thread 367971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:48.283251] [I] [thread 367971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:48.283262] [I] [thread 367971] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:48.283263] [I] [thread 367971] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:48.482349] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:48.482554] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:49.483694] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:49.800209] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:49.800436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:49.801352] [D] [thread 367976] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:49.801374] [I] [thread 367976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:49.801384] [I] [thread 367976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:49.801396] [I] [thread 367976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:49.801397] [I] [thread 367976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:49.908252] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:49.908501] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:50.909650] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:51.261258] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:51.261456] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:51.262350] [D] [thread 367981] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:51.262374] [I] [thread 367981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:51.262377] [I] [thread 367981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:51.262389] [I] [thread 367981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:51.262390] [I] [thread 367981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:51.368416] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:51.368587] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:52.369751] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:52.772489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:52.772699] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:52.773969] [D] [thread 367986] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:52.773991] [I] [thread 367986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:52.774001] [I] [thread 367986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:52.774012] [I] [thread 367986] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:52.774013] [I] [thread 367986] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:52.918997] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:52.919173] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:53.920377] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:54.294440] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:54.294632] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:54.295543] [D] [thread 367991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:54.295568] [I] [thread 367991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:54.295571] [I] [thread 367991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:54.295583] [I] [thread 367991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:54.295584] [I] [thread 367991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:54.438271] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:54.438515] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:55.439692] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:55.858887] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:55.859130] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:55.860671] [D] [thread 367996] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:55.860695] [I] [thread 367996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:55.860698] [I] [thread 367996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:55.860709] [I] [thread 367996] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:55.860710] [I] [thread 367996] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:55.968406] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:55.968642] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:56.969730] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:57.268497] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:57.268676] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:57.269578] [D] [thread 368001] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:57.269601] [I] [thread 368001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:57.269606] [I] [thread 368001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:57.269617] [I] [thread 368001] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:57.269618] [I] [thread 368001] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:57.375260] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:57.375436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:58.376627] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:58.911373] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:58.911554] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:58.912444] [D] [thread 368006] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:01:58.912469] [I] [thread 368006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:58.912474] [I] [thread 368006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:01:58.912486] [I] [thread 368006] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:01:58.912487] [I] [thread 368006] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:01:59.020677] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:01:59.020862] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:00.022032] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:00.361003] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.361041] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.361200] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,24,26507630759,1701172920361
[m
[36m[12:02:00.361370] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.361398] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.361500] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,13,14010050495,1701172920361
[m
[36m[12:02:00.556940] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.556975] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.557120] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,54,21049126285,1701172920556
[m
[36m[12:02:00.557249] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.557281] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.557378] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,47,23829406576,1701172920557
[m
[36m[12:02:00.566595] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.566624] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.566746] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,100,12576391199,1701172920566
[m
[36m[12:02:00.699039] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:00.699244] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:00.700166] [D] [thread 368011] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:00.700191] [I] [thread 368011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:00.700195] [I] [thread 368011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:00.700206] [I] [thread 368011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:00.700207] [I] [thread 368011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:00.748458] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:02:00.748493] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:02:00.748652] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172860000,1701172920000,63,32387494580,1701172920748
[m
[36m[12:02:00.836946] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:00.837152] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:01.838324] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:02.839530] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:03.149752] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:03.149962] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:03.150873] [D] [thread 368016] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:03.150898] [I] [thread 368016] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:03.150908] [I] [thread 368016] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:03.150919] [I] [thread 368016] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:03.150920] [I] [thread 368016] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:03.521638] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:03.521837] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:04.523076] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:05.002776] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:05.002951] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:05.003931] [D] [thread 368021] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:05.003954] [I] [thread 368021] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:05.003960] [I] [thread 368021] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:05.003972] [I] [thread 368021] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:05.003973] [I] [thread 368021] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:05.126342] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:05.126545] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:06.127728] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:06.464655] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:06.464931] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:06.465694] [D] [thread 368026] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:06.465718] [I] [thread 368026] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:06.465722] [I] [thread 368026] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:06.465735] [I] [thread 368026] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:06.465736] [I] [thread 368026] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:06.583244] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:06.583503] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:07.584719] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:07.918698] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:07.918899] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:07.919777] [D] [thread 368031] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:07.919800] [I] [thread 368031] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:07.919804] [I] [thread 368031] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:07.919815] [I] [thread 368031] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:07.919816] [I] [thread 368031] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:08.052676] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:08.052873] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:09.054036] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:09.335928] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:09.336133] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:09.336997] [D] [thread 368036] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:09.337019] [I] [thread 368036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:09.337023] [I] [thread 368036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:09.337037] [I] [thread 368036] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:09.337038] [I] [thread 368036] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:09.469489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:09.469722] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:10.470957] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:10.830439] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:10.830678] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:10.831475] [D] [thread 368041] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:10.831497] [I] [thread 368041] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:10.831500] [I] [thread 368041] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:10.831511] [I] [thread 368041] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:10.831512] [I] [thread 368041] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:10.939809] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:10.940046] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:11.941184] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:12.234151] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:12.234356] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:12.235236] [D] [thread 368046] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:12.235259] [I] [thread 368046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:12.235263] [I] [thread 368046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:12.235274] [I] [thread 368046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:12.235275] [I] [thread 368046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:12.325666] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:12.325872] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:13.327037] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:13.611917] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:13.612119] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:13.613057] [D] [thread 368051] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:13.613083] [I] [thread 368051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:13.613093] [I] [thread 368051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:13.613103] [I] [thread 368051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:13.613104] [I] [thread 368051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:13.717684] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:13.717863] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:14.719041] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:15.181983] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:15.182177] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:15.183171] [D] [thread 368056] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:15.183203] [I] [thread 368056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:15.183207] [I] [thread 368056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:15.183219] [I] [thread 368056] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:15.183220] [I] [thread 368056] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:15.282076] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:15.282265] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:16.283483] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:17.070349] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:17.070536] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:17.072083] [D] [thread 368061] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:17.072108] [I] [thread 368061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:17.072118] [I] [thread 368061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:17.072130] [I] [thread 368061] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:17.072131] [I] [thread 368061] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:17.250443] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:17.250645] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:18.251820] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:18.922092] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:18.922309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:18.923133] [D] [thread 368066] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:18.923157] [I] [thread 368066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:18.923163] [I] [thread 368066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:18.923174] [I] [thread 368066] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:18.923175] [I] [thread 368066] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:19.028768] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:19.029019] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:20.030188] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:20.316907] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:20.317092] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:20.318338] [D] [thread 368071] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:20.318361] [I] [thread 368071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:20.318364] [I] [thread 368071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:20.318376] [I] [thread 368071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:20.318377] [I] [thread 368071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:20.460634] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:20.460837] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:21.462010] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:21.916955] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:21.917184] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:21.918174] [D] [thread 368076] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:21.918200] [I] [thread 368076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:21.918204] [I] [thread 368076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:21.918221] [I] [thread 368076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:21.918222] [I] [thread 368076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:22.021465] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:22.021648] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:23.022809] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:23.401472] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:23.401678] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:23.402617] [D] [thread 368081] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:23.402646] [I] [thread 368081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:23.402650] [I] [thread 368081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:23.402661] [I] [thread 368081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:23.402662] [I] [thread 368081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:23.510535] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:23.510745] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:24.511934] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:24.867136] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:24.867342] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:24.868260] [D] [thread 368086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:24.868284] [I] [thread 368086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:24.868288] [I] [thread 368086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:24.868299] [I] [thread 368086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:24.868300] [I] [thread 368086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:24.985477] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:24.985682] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:25.986865] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:26.351910] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:26.352110] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:26.353043] [D] [thread 368091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:26.353068] [I] [thread 368091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:26.353073] [I] [thread 368091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:26.353085] [I] [thread 368091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:26.353086] [I] [thread 368091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:26.461106] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:26.461297] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:27.462487] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:27.870130] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:27.870377] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:27.871264] [D] [thread 368096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:27.871289] [I] [thread 368096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:27.871294] [I] [thread 368096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:27.871305] [I] [thread 368096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:27.871306] [I] [thread 368096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:27.999086] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:27.999313] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:29.000500] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:29.426086] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:29.426369] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:29.427202] [D] [thread 368101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:29.427227] [I] [thread 368101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:29.427231] [I] [thread 368101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:29.427242] [I] [thread 368101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:29.427243] [I] [thread 368101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:29.542165] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:29.542354] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:30.543617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:30.867632] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:30.867807] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:30.868777] [D] [thread 368106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:30.868799] [I] [thread 368106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:30.868803] [I] [thread 368106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:30.868814] [I] [thread 368106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:30.868815] [I] [thread 368106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:31.234928] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:31.235146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:32.236313] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:33.237591] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:33.774253] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:33.774489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:33.775371] [D] [thread 368111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:33.775395] [I] [thread 368111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:33.775399] [I] [thread 368111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:33.775413] [I] [thread 368111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:33.775414] [I] [thread 368111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:33.905146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:33.905338] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:34.906519] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:35.272072] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:35.272304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:35.273959] [D] [thread 368116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:35.273982] [I] [thread 368116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:35.273985] [I] [thread 368116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:35.273996] [I] [thread 368116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:35.273997] [I] [thread 368116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:35.413378] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:35.413562] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:36.414717] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:36.778403] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:36.778584] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:36.779539] [D] [thread 368121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:36.779562] [I] [thread 368121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:36.779566] [I] [thread 368121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:36.779577] [I] [thread 368121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:36.779578] [I] [thread 368121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:36.875821] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:36.875998] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:37.877177] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:38.367308] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:38.367490] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:38.368406] [D] [thread 368126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:38.368429] [I] [thread 368126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:38.368439] [I] [thread 368126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:38.368450] [I] [thread 368126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:38.368451] [I] [thread 368126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:38.487196] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:38.487382] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:39.488561] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:39.978275] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:39.978489] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:39.979372] [D] [thread 368131] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:39.979396] [I] [thread 368131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:39.979399] [I] [thread 368131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:39.979411] [I] [thread 368131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:39.979412] [I] [thread 368131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:40.110175] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:40.110409] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:41.111574] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:41.416699] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:41.416911] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:41.417826] [D] [thread 368136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:41.417850] [I] [thread 368136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:41.417860] [I] [thread 368136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:41.417871] [I] [thread 368136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:41.417872] [I] [thread 368136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:41.518608] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:41.518811] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:42.519963] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:42.828982] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:42.829160] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:42.830072] [D] [thread 368141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:42.830094] [I] [thread 368141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:42.830098] [I] [thread 368141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:42.830108] [I] [thread 368141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:42.830110] [I] [thread 368141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:42.941434] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:42.941614] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:43.942788] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:44.253389] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:44.253701] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:44.254550] [D] [thread 368146] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:44.254578] [I] [thread 368146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:44.254582] [I] [thread 368146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:44.254592] [I] [thread 368146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:44.254593] [I] [thread 368146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:44.362640] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:44.362839] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:45.364028] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:45.707279] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:45.707551] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:45.708391] [D] [thread 368151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:45.708415] [I] [thread 368151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:45.708422] [I] [thread 368151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:45.708433] [I] [thread 368151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:45.708434] [I] [thread 368151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:45.831534] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:45.831729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:46.832932] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:47.834151] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:48.141580] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:48.141865] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:48.142654] [D] [thread 368156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:48.142678] [I] [thread 368156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:48.142684] [I] [thread 368156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:48.142695] [I] [thread 368156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:48.142696] [I] [thread 368156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:48.481209] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:48.481594] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:49.482793] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:49.879609] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:49.879856] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:49.880803] [D] [thread 368161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:49.880829] [I] [thread 368161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:49.880833] [I] [thread 368161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:49.880844] [I] [thread 368161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:49.880845] [I] [thread 368161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:50.297851] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:50.298103] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:51.299317] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:51.773043] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:51.773308] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:51.774135] [D] [thread 368166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:51.774157] [I] [thread 368166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:51.774160] [I] [thread 368166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:51.774171] [I] [thread 368166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:51.774172] [I] [thread 368166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:51.921970] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:51.922172] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:52.923354] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:53.284083] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:53.284396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:53.285204] [D] [thread 368171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:53.285227] [I] [thread 368171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:53.285232] [I] [thread 368171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:53.285249] [I] [thread 368171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:53.285250] [I] [thread 368171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:53.391542] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:53.391737] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:54.392918] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:54.732485] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:54.732651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:54.734065] [D] [thread 368176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:54.734096] [I] [thread 368176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:54.734100] [I] [thread 368176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:54.734110] [I] [thread 368176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:54.734111] [I] [thread 368176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:54.882110] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:54.882299] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:55.883462] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:56.225922] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:56.226131] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:56.227371] [D] [thread 368181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:56.227394] [I] [thread 368181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:56.227398] [I] [thread 368181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:56.227409] [I] [thread 368181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:56.227410] [I] [thread 368181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:56.341908] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:56.342114] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:57.343293] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:57.714222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:57.714436] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:57.715942] [D] [thread 368186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:57.715966] [I] [thread 368186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:57.715969] [I] [thread 368186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:57.715980] [I] [thread 368186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:57.715981] [I] [thread 368186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:57.812350] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:57.812574] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:58.813731] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:59.137329] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:59.137576] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:59.138455] [D] [thread 368191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:02:59.138480] [I] [thread 368191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:59.138483] [I] [thread 368191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:02:59.138494] [I] [thread 368191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:02:59.138496] [I] [thread 368191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:02:59.236281] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:02:59.236504] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:00.179079] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.179109] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.179235] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,13,11861685302,1701172980179
[m
[36m[12:03:00.179364] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.179368] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.179453] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,100,11828767105,1701172980179
[m
[36m[12:03:00.237656] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:00.288806] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.288839] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.288986] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,47,31325360318,1701172980288
[m
[36m[12:03:00.289125] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.289179] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.289373] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,24,29834761391,1701172980289
[m
[36m[12:03:00.399047] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.399085] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.399242] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,63,25936002607,1701172980399
[m
[36m[12:03:00.411132] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:03:00.411162] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:03:00.411284] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172920000,1701172980000,54,36505893688,1701172980411
[m
[36m[12:03:00.669316] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:00.669497] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:00.670366] [D] [thread 368196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:00.670388] [I] [thread 368196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:00.670391] [I] [thread 368196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:00.670402] [I] [thread 368196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:00.670403] [I] [thread 368196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:00.770050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:00.770228] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:01.771378] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:02.772559] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:03.773766] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:04.002306] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:04.002513] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:04.004070] [D] [thread 368201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:04.004091] [I] [thread 368201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:04.004095] [I] [thread 368201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:04.004106] [I] [thread 368201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:04.004107] [I] [thread 368201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:04.136307] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:04.136499] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:05.137653] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:05.452148] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:05.452353] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:05.453606] [D] [thread 368206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:05.453629] [I] [thread 368206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:05.453632] [I] [thread 368206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:05.453643] [I] [thread 368206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:05.453644] [I] [thread 368206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:05.537198] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:05.537372] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:06.538570] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:06.857034] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:06.857209] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:06.858085] [D] [thread 368211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:06.858108] [I] [thread 368211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:06.858112] [I] [thread 368211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:06.858125] [I] [thread 368211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:06.858126] [I] [thread 368211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:07.003107] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:07.003289] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:08.004553] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:08.298631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:08.298808] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:08.300085] [D] [thread 368216] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:08.300105] [I] [thread 368216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:08.300109] [I] [thread 368216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:08.300119] [I] [thread 368216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:08.300120] [I] [thread 368216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:08.431778] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:08.431980] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:09.433164] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:10.434345] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:11.149878] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:11.150068] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:11.151047] [D] [thread 368221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:11.151072] [I] [thread 368221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:11.151082] [I] [thread 368221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:11.151093] [I] [thread 368221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:11.151094] [I] [thread 368221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:11.488425] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:11.488604] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:12.489776] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:12.843845] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:12.844055] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:12.845076] [D] [thread 368226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:12.845101] [I] [thread 368226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:12.845105] [I] [thread 368226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:12.845116] [I] [thread 368226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:12.845117] [I] [thread 368226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:12.953724] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:12.953908] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:13.955038] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:14.956217] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:15.957402] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:16.714355] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:16.714594] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:16.715456] [D] [thread 368231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:16.715480] [I] [thread 368231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:16.715483] [I] [thread 368231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:16.715495] [I] [thread 368231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:16.715496] [I] [thread 368231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:16.916651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:16.916853] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:17.918034] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:18.919234] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:19.257643] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:19.258026] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:19.258753] [D] [thread 368236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:19.258766] [I] [thread 368236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:19.258770] [I] [thread 368236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:19.258780] [I] [thread 368236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:19.258781] [I] [thread 368236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:19.661374] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:19.661587] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:20.662783] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:21.037108] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:21.037309] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:21.038158] [D] [thread 368241] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:21.038179] [I] [thread 368241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:21.038183] [I] [thread 368241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:21.038193] [I] [thread 368241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:21.038194] [I] [thread 368241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:21.180275] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:21.180495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:22.181659] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:22.471064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:22.471298] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:22.472153] [D] [thread 368246] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:22.472177] [I] [thread 368246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:22.472180] [I] [thread 368246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:22.472192] [I] [thread 368246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:22.472193] [I] [thread 368246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:22.574044] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:22.574285] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:23.575418] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:23.945657] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:23.945925] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:23.946767] [D] [thread 368251] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:23.946791] [I] [thread 368251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:23.946801] [I] [thread 368251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:23.946812] [I] [thread 368251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:23.946813] [I] [thread 368251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:24.060144] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:24.060370] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:25.061551] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:25.431295] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:25.431539] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:25.432366] [D] [thread 368256] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:25.432390] [I] [thread 368256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:25.432393] [I] [thread 368256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:25.432411] [I] [thread 368256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:25.432412] [I] [thread 368256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:25.566386] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:25.566607] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:26.567777] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:26.954528] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:26.954753] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:26.955699] [D] [thread 368261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:26.955722] [I] [thread 368261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:26.955730] [I] [thread 368261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:26.955741] [I] [thread 368261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:26.955742] [I] [thread 368261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:27.065251] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:27.065446] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:28.066583] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:28.482328] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:28.482603] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:28.483390] [D] [thread 368266] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:28.483412] [I] [thread 368266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:28.483416] [I] [thread 368266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:28.483432] [I] [thread 368266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:28.483433] [I] [thread 368266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:28.626408] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:28.626646] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:29.627838] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:29.934408] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:29.934643] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:29.935506] [D] [thread 368271] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:29.935530] [I] [thread 368271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:29.935533] [I] [thread 368271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:29.935544] [I] [thread 368271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:29.935545] [I] [thread 368271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:30.049668] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:30.049862] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:31.051015] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:32.052206] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:33.053420] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:33.154313] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:33.154522] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:33.155371] [D] [thread 368276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:33.155392] [I] [thread 368276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:33.155396] [I] [thread 368276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:33.155407] [I] [thread 368276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:33.155408] [I] [thread 368276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:33.371967] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:33.372153] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:34.373304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:34.943963] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:34.944176] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:34.945078] [D] [thread 368281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:34.945103] [I] [thread 368281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:34.945107] [I] [thread 368281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:34.945118] [I] [thread 368281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:34.945119] [I] [thread 368281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:35.046579] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:35.046786] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:36.047943] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:36.554683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:36.554895] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:36.555809] [D] [thread 368286] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:36.555835] [I] [thread 368286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:36.555838] [I] [thread 368286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:36.555851] [I] [thread 368286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:36.555852] [I] [thread 368286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:36.660918] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:36.661111] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:37.662300] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:37.996449] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:37.996631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:37.997553] [D] [thread 368291] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:37.997576] [I] [thread 368291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:37.997581] [I] [thread 368291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:37.997597] [I] [thread 368291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:37.997598] [I] [thread 368291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:38.108435] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:38.108660] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:39.109802] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:39.528876] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:39.529103] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:39.529939] [D] [thread 368297] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:39.529965] [I] [thread 368297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:39.529968] [I] [thread 368297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:39.529982] [I] [thread 368297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:39.529983] [I] [thread 368297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:39.629278] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:39.629584] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:40.630766] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:40.933870] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:40.934082] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:40.934936] [D] [thread 368302] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:40.934957] [I] [thread 368302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:40.934960] [I] [thread 368302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:40.934971] [I] [thread 368302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:40.934972] [I] [thread 368302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:41.039533] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:41.039749] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:42.040923] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:42.505841] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:42.506049] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:42.506893] [D] [thread 368307] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:42.506918] [I] [thread 368307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:42.506924] [I] [thread 368307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:42.506935] [I] [thread 368307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:42.506936] [I] [thread 368307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:42.650471] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:42.650678] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:43.651837] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:44.118595] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:44.118803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:44.119692] [D] [thread 368312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:44.119715] [I] [thread 368312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:44.119719] [I] [thread 368312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:44.119729] [I] [thread 368312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:44.119731] [I] [thread 368312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:44.237690] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:44.237893] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:45.239037] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:45.705676] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:45.705928] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:45.707462] [D] [thread 368318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:45.707486] [I] [thread 368318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:45.707490] [I] [thread 368318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:45.707501] [I] [thread 368318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:45.707502] [I] [thread 368318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:45.860013] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:45.860222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:46.861406] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:47.837994] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:47.838180] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:47.839177] [D] [thread 368323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:47.839190] [I] [thread 368323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:47.839193] [I] [thread 368323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:47.839203] [I] [thread 368323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:47.839204] [I] [thread 368323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:48.114928] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:48.115102] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:49.116225] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:49.598565] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:49.598784] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:49.599775] [D] [thread 368328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:49.599801] [I] [thread 368328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:49.599805] [I] [thread 368328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:49.599816] [I] [thread 368328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:49.599817] [I] [thread 368328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:49.693699] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:49.693885] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:50.695046] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:51.007099] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:51.007286] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:51.008211] [D] [thread 368333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:51.008237] [I] [thread 368333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:51.008244] [I] [thread 368333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:51.008255] [I] [thread 368333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:51.008256] [I] [thread 368333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:51.104073] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:51.104260] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:52.105389] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:52.453278] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:52.453467] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:52.454363] [D] [thread 368338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:52.454395] [I] [thread 368338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:52.454399] [I] [thread 368338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:52.454412] [I] [thread 368338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:52.454413] [I] [thread 368338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:52.562155] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:52.562396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:53.563689] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:54.044290] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:54.044518] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:54.045417] [D] [thread 368343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:54.045441] [I] [thread 368343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:54.045444] [I] [thread 368343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:54.045455] [I] [thread 368343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:54.045456] [I] [thread 368343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:54.149322] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:54.149610] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:55.150778] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:55.448800] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:55.448981] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:55.450259] [D] [thread 368348] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:55.450281] [I] [thread 368348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:55.450285] [I] [thread 368348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:55.450296] [I] [thread 368348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:55.450297] [I] [thread 368348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:55.524285] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:55.524493] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:56.525654] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:56.925215] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:56.925427] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:56.926277] [D] [thread 368353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:56.926300] [I] [thread 368353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:56.926304] [I] [thread 368353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:56.926315] [I] [thread 368353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:56.926316] [I] [thread 368353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:57.037977] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:57.038189] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:58.039367] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:58.438031] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:58.438308] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:58.439121] [D] [thread 368358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:03:58.439145] [I] [thread 368358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:58.439151] [I] [thread 368358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:03:58.439161] [I] [thread 368358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:03:58.439162] [I] [thread 368358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:03:58.556444] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:58.556652] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:03:59.557838] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:00.010753] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:00.010975] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:00.011924] [D] [thread 368363] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:00.011948] [I] [thread 368363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:00.011951] [I] [thread 368363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:00.011962] [I] [thread 368363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:00.011963] [I] [thread 368363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:00.125623] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:00.125832] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:00.136598] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.136619] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.136716] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,100,10723174679,1701173040136
[m
[36m[12:04:00.155595] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.155625] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.155758] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,24,24809975290,1701173040155
[m
[36m[12:04:00.155890] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.155915] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.156040] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,47,26948087394,1701173040155
[m
[36m[12:04:00.156167] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.156191] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.156283] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,13,15529783389,1701173040156
[m
[36m[12:04:00.337543] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.337571] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.337698] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,54,26136985832,1701173040337
[m
[36m[12:04:00.563852] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:04:00.563887] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:04:00.564033] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172980000,1701173040000,63,23409926500,1701173040563
[m
[36m[12:04:01.127098] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:02.128228] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:02.483145] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:02.483328] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:02.484922] [D] [thread 368368] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:02.484947] [I] [thread 368368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:02.484957] [I] [thread 368368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:02.484968] [I] [thread 368368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:02.484969] [I] [thread 368368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:02.770123] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:02.770329] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:03.771581] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:04.273617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:04.273829] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:04.274688] [D] [thread 368373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:04.274713] [I] [thread 368373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:04.274718] [I] [thread 368373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:04.274729] [I] [thread 368373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:04.274730] [I] [thread 368373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:04.401733] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:04.401938] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:05.403104] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:05.768628] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:05.768811] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:05.769721] [D] [thread 368378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:05.769745] [I] [thread 368378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:05.769749] [I] [thread 368378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:05.769759] [I] [thread 368378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:05.769760] [I] [thread 368378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:05.878195] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:05.878432] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:06.879597] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:07.181223] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:07.181428] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:07.182347] [D] [thread 368383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:07.182369] [I] [thread 368383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:07.182373] [I] [thread 368383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:07.182383] [I] [thread 368383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:07.182385] [I] [thread 368383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:07.325100] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:07.325300] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:08.326472] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:08.678936] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:08.679160] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:08.679995] [D] [thread 368388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:08.680017] [I] [thread 368388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:08.680021] [I] [thread 368388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:08.680034] [I] [thread 368388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:08.680036] [I] [thread 368388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:08.781941] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:08.782120] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:09.783304] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:10.784516] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:10.862247] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:10.862428] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:10.863989] [D] [thread 368393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:10.864012] [I] [thread 368393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:10.864015] [I] [thread 368393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:10.864026] [I] [thread 368393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:10.864027] [I] [thread 368393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:10.969029] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:10.969210] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:11.970389] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:12.290226] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:12.290468] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:12.291307] [D] [thread 368398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:12.291330] [I] [thread 368398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:12.291334] [I] [thread 368398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:12.291344] [I] [thread 368398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:12.291345] [I] [thread 368398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:12.397975] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:12.398179] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:13.399340] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:13.794219] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:13.794495] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:13.795685] [D] [thread 368403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:13.795709] [I] [thread 368403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:13.795713] [I] [thread 368403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:13.795724] [I] [thread 368403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:13.795725] [I] [thread 368403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:13.934065] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:13.934277] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:14.935382] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:15.350437] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:15.350651] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:15.351688] [D] [thread 368408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:15.351714] [I] [thread 368408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:15.351717] [I] [thread 368408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:15.351728] [I] [thread 368408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:15.351729] [I] [thread 368408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:15.460149] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:15.460367] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:16.461534] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:17.462744] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:18.127379] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:18.127551] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:18.128715] [D] [thread 368413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:18.128745] [I] [thread 368413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:18.128749] [I] [thread 368413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:18.128761] [I] [thread 368413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:18.128763] [I] [thread 368413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:18.416729] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:18.416917] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:19.418099] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:19.862556] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:19.862792] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:19.863767] [D] [thread 368418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:19.863791] [I] [thread 368418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:19.863798] [I] [thread 368418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:19.863809] [I] [thread 368418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:19.863810] [I] [thread 368418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:19.980843] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:19.981023] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:20.982181] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:21.337553] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:21.337735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:21.338717] [D] [thread 368423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:21.338747] [I] [thread 368423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:21.338751] [I] [thread 368423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:21.338761] [I] [thread 368423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:21.338762] [I] [thread 368423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:21.445549] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:21.445735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:22.446880] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:22.960889] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:22.961082] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:22.962046] [D] [thread 368428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:22.962070] [I] [thread 368428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:22.962075] [I] [thread 368428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:22.962086] [I] [thread 368428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:22.962087] [I] [thread 368428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:23.077339] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:23.077550] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:24.078735] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:24.415622] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:24.415810] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:24.416737] [D] [thread 368433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:24.416761] [I] [thread 368433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:24.416766] [I] [thread 368433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:24.416777] [I] [thread 368433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:24.416778] [I] [thread 368433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:24.533728] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:24.534013] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:25.535189] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:25.942276] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:25.942517] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:25.943396] [D] [thread 368438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:25.943420] [I] [thread 368438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:25.943424] [I] [thread 368438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:25.943434] [I] [thread 368438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:25.943435] [I] [thread 368438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:26.080668] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:26.080864] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:27.082063] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:27.683003] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:27.683245] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:27.684075] [D] [thread 368443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:27.684097] [I] [thread 368443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:27.684101] [I] [thread 368443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:27.684111] [I] [thread 368443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:27.684112] [I] [thread 368443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:27.809698] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:27.809967] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:28.811082] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:29.231050] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:29.231257] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:29.232138] [D] [thread 368448] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:29.232162] [I] [thread 368448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:29.232165] [I] [thread 368448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:29.232176] [I] [thread 368448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:29.232178] [I] [thread 368448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:29.353648] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:29.353890] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:30.355060] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:30.718865] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:30.719046] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:30.720608] [D] [thread 368453] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:30.720631] [I] [thread 368453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:30.720635] [I] [thread 368453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:30.720646] [I] [thread 368453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:30.720647] [I] [thread 368453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:30.828071] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:30.828246] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:31.829422] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:32.830603] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:33.083696] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:33.083871] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:33.084847] [D] [thread 368458] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:33.084884] [I] [thread 368458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:33.084888] [I] [thread 368458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:33.084899] [I] [thread 368458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:33.084900] [I] [thread 368458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:33.470570] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:33.470784] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:34.471952] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:35.473163] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:36.474377] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:37.109887] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:37.110124] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:37.111021] [D] [thread 368463] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:37.111046] [I] [thread 368463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:37.111050] [I] [thread 368463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:37.111061] [I] [thread 368463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:37.111062] [I] [thread 368463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:37.270136] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:37.270313] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:38.271472] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:38.671160] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:38.671381] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:38.672256] [D] [thread 368468] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:38.672279] [I] [thread 368468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:38.672289] [I] [thread 368468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:38.672299] [I] [thread 368468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:38.672300] [I] [thread 368468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:38.814613] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:38.814814] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:39.815958] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:40.178904] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:40.179084] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:40.180015] [D] [thread 368475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:40.180043] [I] [thread 368475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:40.180046] [I] [thread 368475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:40.180058] [I] [thread 368475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:40.180059] [I] [thread 368475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:40.276376] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:40.276567] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:41.277713] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:41.835048] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:41.835245] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:41.836112] [D] [thread 368480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:41.836137] [I] [thread 368480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:41.836140] [I] [thread 368480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:41.836158] [I] [thread 368480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:41.836159] [I] [thread 368480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:41.931215] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:41.931425] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:42.932615] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:43.933805] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:44.002585] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:44.002792] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:44.003718] [D] [thread 368485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:44.003741] [I] [thread 368485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:44.003752] [I] [thread 368485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:44.003763] [I] [thread 368485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:44.003764] [I] [thread 368485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:44.693263] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:44.693506] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:45.694683] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:46.110064] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:46.110261] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:46.111128] [D] [thread 368490] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:46.111152] [I] [thread 368490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:46.111157] [I] [thread 368490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:46.111169] [I] [thread 368490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:46.111170] [I] [thread 368490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:46.374291] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:46.374577] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:47.375756] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:48.376945] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:48.971388] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:48.971631] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:48.972496] [D] [thread 368496] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:48.972520] [I] [thread 368496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:48.972525] [I] [thread 368496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:48.972536] [I] [thread 368496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:48.972537] [I] [thread 368496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:49.103123] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:49.103324] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:50.104485] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:50.453943] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:50.454146] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:50.455379] [D] [thread 368501] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:50.455402] [I] [thread 368501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:50.455406] [I] [thread 368501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:50.455416] [I] [thread 368501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:50.455418] [I] [thread 368501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:50.565414] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:50.565617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:51.566900] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:51.872396] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:51.872611] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:51.873487] [D] [thread 368506] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:51.873509] [I] [thread 368506] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:51.873519] [I] [thread 368506] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:51.873531] [I] [thread 368506] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:51.873532] [I] [thread 368506] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:51.998739] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:51.998926] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:53.000107] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:53.518271] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:53.518469] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:53.519346] [D] [thread 368511] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:53.519359] [I] [thread 368511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:53.519363] [I] [thread 368511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:53.519374] [I] [thread 368511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:53.519375] [I] [thread 368511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:53.639100] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:53.639302] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:54.640481] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:55.028285] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:55.028576] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:55.029410] [D] [thread 368516] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:55.029434] [I] [thread 368516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:55.029437] [I] [thread 368516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:55.029449] [I] [thread 368516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:55.029450] [I] [thread 368516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:55.145429] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:55.145617] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:56.146803] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:56.505954] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:56.506165] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:56.507070] [D] [thread 368521] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:56.507093] [I] [thread 368521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:56.507097] [I] [thread 368521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:56.507109] [I] [thread 368521] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:56.507110] [I] [thread 368521] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:56.620128] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:56.620374] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:57.621556] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:57.933471] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:57.933655] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:57.934553] [D] [thread 368526] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:57.934576] [I] [thread 368526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:57.934579] [I] [thread 368526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:57.934590] [I] [thread 368526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:57.934591] [I] [thread 368526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:58.075285] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:58.075482] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:59.076650] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:59.581927] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:59.582122] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:59.583026] [D] [thread 368531] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:04:59.583049] [I] [thread 368531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:59.583052] [I] [thread 368531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:04:59.583063] [I] [thread 368531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:04:59.583064] [I] [thread 368531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:04:59.953807] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:04:59.954078] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:00.168135] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.168172] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.168370] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,100,10301796101,1701173100168
[m
[36m[12:05:00.371949] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.371987] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.372135] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,47,25452373379,1701173100371
[m
[36m[12:05:00.383105] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.383134] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.383257] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,13,15717272587,1701173100383
[m
[36m[12:05:00.384000] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.384029] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.384145] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,24,30624478265,1701173100384
[m
[36m[12:05:00.384251] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.384276] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.384409] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,54,27744003612,1701173100384
[m
[36m[12:05:00.402702] [D] [thread 366333] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[12:05:00.402724] [D] [thread 366333] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:05:00.402822] [D] [thread 366333] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701173040000,1701173100000,63,21541918012,1701173100402
[m
[36m[12:05:00.955222] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:01.956355] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:02.957519] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.517780] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.517965] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.518859] [D] [thread 368536] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:05:03.518882] [I] [thread 368536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:05:03.518886] [I] [thread 368536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:05:03.518897] [I] [thread 368536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:05:03.518898] [I] [thread 368536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:05:03.739048] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.739234] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.885777] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:05:03.885997] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:05:03.886894] [I] [thread 368540] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[12:05:03.886918] [D] [thread 368540] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[12:05:03.886934] [I] [thread 368540] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[12:05:03.886936] [I] [thread 368540] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[12:05:03.886964] [I] [thread 366323] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[12:05:03.886974] [I] [thread 366323] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[12:05:03.886979] [I] [thread 366323] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[12:05:03.886992] [I] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[12:05:03.886996] [D] [thread 366323] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[12:05:03.887001] [D] [thread 366323] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[12:05:03.887043] [D] [thread 366323] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[12:05:03.887096] [D] [thread 366323] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[12:05:03.887099] [D] [thread 366323] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[12:05:03.887103] [D] [thread 366323] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[12:05:03.887105] [D] [thread 366323] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[12:05:03.887107] [D] [thread 366323] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[12:05:03.887112] [D] [thread 366323] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[12:05:03.887115] [D] [thread 366323] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:05:03.887118] [D] [thread 366323] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[12:05:03.887121] [D] [thread 366323] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[12:05:03.887144] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:38727[m
[36m[12:05:03.887150] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:38727 queryId=1[m
[36m[12:05:03.888180] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:38081[m
[36m[12:05:03.888206] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:38081 queryId=1[m
[36m[12:05:03.889215] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:41711[m
[36m[12:05:03.889252] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:41711 queryId=1[m
[36m[12:05:03.890237] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:39173[m
[36m[12:05:03.890274] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:39173 queryId=1[m
[36m[12:05:03.891315] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:34787[m
[36m[12:05:03.891341] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:34787 queryId=1[m
[36m[12:05:03.892196] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:36241[m
[36m[12:05:03.892223] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:36241 queryId=1[m
[36m[12:05:03.892984] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:38149[m
[36m[12:05:03.893010] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:38149 queryId=1[m
[36m[12:05:03.893809] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:36887[m
[36m[12:05:03.893833] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:36887 queryId=1[m
[36m[12:05:03.894586] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:41289[m
[36m[12:05:03.894612] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:41289 queryId=1[m
[36m[12:05:03.895276] [D] [thread 366323] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:42129[m
[36m[12:05:03.895298] [D] [thread 366323] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:42129 queryId=1[m
[36m[12:05:03.895929] [D] [thread 366323] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[12:05:04.089576] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.089740] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::32::0::0(threadId=0)[m
[32m[12:05:04.089772] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(1)[m
[36m[12:05:04.089777] [D] [thread 366332] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::32::0::0, counter is at 1.[m
[36m[12:05:04.089794] [D] [thread 366332] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[12:05:04.089797] [W] [thread 366332] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.176895] [D] [thread 366335] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[12:05:04.176943] [D] [thread 366335] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[12:05:04.176966] [D] [thread 366335] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[12:05:04.176975] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.176989] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177019] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177079] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 32 is notifying completion: HardStop[m
[36m[12:05:04.177087] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 32 is terminated; tokens left = 7[m
[36m[12:05:04.177096] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 32 terminationType=HardStop[m
[36m[12:05:04.177109] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177120] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177134] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=32 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177140] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177143] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.177148] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177157] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177167] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 47 is notifying completion: HardStop[m
[36m[12:05:04.177169] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 47 is terminated; tokens left = 6[m
[36m[12:05:04.177173] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 47 terminationType=HardStop[m
[36m[12:05:04.177176] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177183] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177190] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=47 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177194] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177196] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.177200] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177206] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177215] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 65 is notifying completion: HardStop[m
[36m[12:05:04.177217] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 65 is terminated; tokens left = 5[m
[36m[12:05:04.177220] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 65 terminationType=HardStop[m
[36m[12:05:04.177223] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177229] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177237] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=65 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177240] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177243] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.177246] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177252] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
2023-11-28 12:05:04.[36m[12:05:04.177272] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 86 is notifying completion: HardStop[m
178 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=60 processedTuple=60 processedBuffers=60 processedWatermarks=0 latencyAVG=1701172830360 queueSizeAVG=0 availableGlobalBufferAVG=894 availableFixedBufferAVG=0
[36m[12:05:04.177275] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 86 is terminated; tokens left = 4[m
[36m[12:05:04.177278] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 86 terminationType=HardStop[m
[36m[12:05:04.177282] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177288] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177297] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=86 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177301] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177303] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.177306] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177312] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177320] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 110 is notifying completion: HardStop[m
[36m[12:05:04.177323] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 110 is terminated; tokens left = 3[m
[36m[12:05:04.177325] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 110 terminationType=HardStop[m
[36m[12:05:04.177329] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177334] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177341] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=110 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177345] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177347] [D] [thread 366335] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[12:05:04.177350] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177356] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[12:05:04.177365] [D] [thread 366335] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 137 is notifying completion: HardStop[m
[36m[12:05:04.177367] [D] [thread 366335] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 137 is terminated; tokens left = 2[m
[36m[12:05:04.177370] [D] [thread 366335] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 137 terminationType=HardStop[m
[36m[12:05:04.177372] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177378] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.177386] [D] [thread 366335] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=137 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[12:05:04.177389] [D] [thread 366335] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[12:05:04.177532] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[12:05:04.177552] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::32::0::0 Thread 0[m
[36m[12:05:04.177558] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[12:05:04.177563] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::32::0::0[m
[36m[12:05:04.177570] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::32::0::0[m
[32m[12:05:04.177582] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(0)[m
[36m[12:05:04.177623] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.177647] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::47::0::0[m
[36m[12:05:04.177652] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::47::0::0 Thread 0[m
[36m[12:05:04.177656] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::47::0::0[m
[36m[12:05:04.177666] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::47::0::0[m
[36m[12:05:04.177669] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::47::0::0[m
[32m[12:05:04.177674] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::47::0::0; newCnt(1)[m
[36m[12:05:04.177679] [D] [thread 366333] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::47::0::0, counter is at 1.[m
[36m[12:05:04.177704] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.177726] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::65::0::0[m
[36m[12:05:04.177732] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::65::0::0 Thread 0[m
[36m[12:05:04.177736] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::65::0::0[m
[36m[12:05:04.177740] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::65::0::0[m
[36m[12:05:04.177744] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::65::0::0[m
[32m[12:05:04.177749] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::65::0::0; newCnt(1)[m
[36m[12:05:04.177753] [D] [thread 366333] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::65::0::0, counter is at 1.[m
[36m[12:05:04.177777] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.177800] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::86::0::0[m
[36m[12:05:04.177805] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::86::0::0 Thread 0[m
[36m[12:05:04.177809] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::86::0::0[m
[36m[12:05:04.177813] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::86::0::0[m
[36m[12:05:04.177817] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::86::0::0[m
[32m[12:05:04.177821] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::86::0::0; newCnt(1)[m
[36m[12:05:04.177825] [D] [thread 366333] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::86::0::0, counter is at 1.[m
[36m[12:05:04.177849] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.177871] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::110::0::0[m
[36m[12:05:04.177876] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::110::0::0 Thread 0[m
[36m[12:05:04.177881] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::110::0::0[m
[36m[12:05:04.177884] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::110::0::0[m
[36m[12:05:04.177888] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::110::0::0[m
[32m[12:05:04.177900] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::110::0::0; newCnt(1)[m
[36m[12:05:04.177904] [D] [thread 366333] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::110::0::0, counter is at 1.[m
[36m[12:05:04.177932] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.177955] [D] [thread 366333] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::137::0::0[m
[36m[12:05:04.177960] [D] [thread 366333] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::137::0::0 Thread 0[m
[36m[12:05:04.177964] [D] [thread 366333] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::137::0::0[m
[36m[12:05:04.177968] [D] [thread 366333] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::137::0::0[m
[36m[12:05:04.177972] [D] [thread 366333] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::137::0::0[m
[32m[12:05:04.177976] [I] [thread 366333] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::137::0::0; newCnt(1)[m
[36m[12:05:04.177980] [D] [thread 366333] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::137::0::0, counter is at 1.[m
[36m[12:05:04.178004] [D] [thread 366333] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[12:05:04.178027] [D] [thread 366333] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[12:05:04.178036] [D] [thread 366333] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.178047] [D] [thread 366333] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[12:05:04.178069] [D] [thread 366333] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[12:05:04.178295] [D] [thread 366333] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[12:05:04.178304] [D] [thread 366333] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[12:05:04.178307] [D] [thread 366333] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[12:05:04.178396] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[12:05:04.178412] [D] [thread 366335] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[12:05:04.178521] [D] [thread 366335] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[12:05:04.178534] [D] [thread 366335] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[12:05:04.178536] [D] [thread 366335] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[12:05:04.178548] [D] [thread 366335] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[12:05:04.181010] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.181042] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::47::0::0(threadId=0)[m
[32m[12:05:04.181054] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::47::0::0; newCnt(0)[m
[36m[12:05:04.181265] [D] [thread 366332] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::47::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[12:05:04.181297] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.181320] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::65::0::0(threadId=0)[m
[32m[12:05:04.181328] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::65::0::0; newCnt(0)[m
[36m[12:05:04.181334] [D] [thread 366332] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::65::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[12:05:04.181674] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.181708] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::86::0::0(threadId=0)[m
[32m[12:05:04.181716] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::86::0::0; newCnt(0)[m
[36m[12:05:04.181723] [D] [thread 366332] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::86::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[12:05:04.181732] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.181738] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::110::0::0(threadId=0)[m
[32m[12:05:04.181744] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::110::0::0; newCnt(0)[m
[36m[12:05:04.181749] [D] [thread 366332] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::110::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[12:05:04.181755] [D] [thread 366332] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:39943): EndOfStream received for channel [m
[36m[12:05:04.181760] [D] [thread 366332] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::137::0::0(threadId=0)[m
[32m[12:05:04.181765] [I] [thread 366332] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::137::0::0; newCnt(0)[m
[36m[12:05:04.181771] [D] [thread 366332] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::137::0::0(threadId=0) but there is still some active subpartition: 0[m
[31m[1m[12:05:04.220452] [E] [thread 368472] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::44::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaacafcbee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9f294d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaacafcce13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6b65c23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa69fc13f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa09afe9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9f77f043, in NES::collectAndPrintStacktrace[abi:cxx11]()
] callstack=
Stack trace (most recent call last):
#6    Object "./nesWorker", at 0xaaaacafcbee7, in 
#5    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff9f294d4f, in __libc_start_main
#4    Object "./nesWorker", at 0xaaaacafcce13, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6b65c23, in NES::NesWorker::stop(bool)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa69fc13f, in NES::Runtime::NodeEngine::stop(bool)
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa09afe9b, in NES::Network::PartitionManager::clear()
#0    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9f77f043, in NES::collectAndPrintStacktrace[abi:cxx11]()
[m
[36m[12:05:04.379712] [D] [thread 366323] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[12:05:04.379765] [D] [thread 366323] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[12:05:04.380236] [D] [thread 366323] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[12:05:04.380266] [D] [thread 366323] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[12:05:04.380301] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.32:38727[m
[36m[12:05:04.380310] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:38727 queryId=1[m
[36m[12:05:04.382216] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.33:38081[m
[36m[12:05:04.382270] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:38081 queryId=1[m
[36m[12:05:04.383612] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.34:41711[m
[36m[12:05:04.383655] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:41711 queryId=1[m
[36m[12:05:04.385068] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.35:39173[m
[36m[12:05:04.385112] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:39173 queryId=1[m
[36m[12:05:04.386472] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:34787[m
[36m[12:05:04.386518] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:34787 queryId=1[m
[36m[12:05:04.387893] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:36241[m
[36m[12:05:04.387939] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:36241 queryId=1[m
[36m[12:05:04.388854] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:38149[m
[36m[12:05:04.388877] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:38149 queryId=1[m
[36m[12:05:04.389712] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.31:36887[m
[36m[12:05:04.389734] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:36887 queryId=1[m
[36m[12:05:04.390488] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.30:41289[m
[36m[12:05:04.390512] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:41289 queryId=1[m
[36m[12:05:04.391168] [D] [thread 366323] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.12:42129[m
[36m[12:05:04.391191] [D] [thread 366323] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.12:42129 queryId=1[m
[36m[12:05:04.391825] [D] [thread 366323] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 10 queues[m
[36m[12:05:04.887192] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:05:05.165594] [E] [thread 366339] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:05:05.165736] [W] [thread 366339] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:42129 went dead so we remove it[m
[32m[12:05:05.165787] [I] [thread 366339] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[12:05:05.165805] [I] [thread 366339] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:05:05.165809] [I] [thread 366339] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:05:05.165814] [I] [thread 366339] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:05:05.165816] [I] [thread 366339] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:05:05.165823] [D] [thread 366339] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[12:05:05.349133] [D] [thread 366406] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[12:05:05.349182] [D] [thread 366406] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[12:05:05.349195] [D] [thread 366406] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  7 : current status is stopped= true[m
[36m[12:05:05.349221] [D] [thread 366406] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[12:05:05.349238] [D] [thread 366406] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  7  succeeded[m
[36m[12:05:05.349250] [D] [thread 366406] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[36m[12:05:05.888430] [D] [thread 366338] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:05:06.226789] [E] [thread 366339] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:05:06.226915] [W] [thread 366339] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:42129 went dead so we remove it[m
[32m[12:05:06.226955] [I] [thread 366339] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[12:05:06.226976] [W] [thread 366339] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:05:06.232998] [E] [thread 366339] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:05:06.233140] [W] [thread 366339] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:38081 went dead so we remove it[m
[32m[12:05:06.233183] [I] [thread 366339] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=3][m
[32m[12:05:06.233186] [I] [thread 366339] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:05:06.233190] [I] [thread 366339] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:05:06.233192] [I] [thread 366339] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:05:06.233194] [I] [thread 366339] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:05:06.233198] [D] [thread 366339] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[12:05:06.234607] [E] [thread 366339] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:05:06.234750] [W] [thread 366339] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:41711 went dead so we remove it[m
[32m[12:05:06.234801] [I] [thread 366339] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=3][m
[32m[12:05:06.234805] [I] [thread 366339] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:05:06.234807] [I] [thread 366339] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:05:06.234811] [I] [thread 366339] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:05:06.234814] [D] [thread 366339] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[12:05:06.236025] [E] [thread 366339] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:05:06.236159] [W] [thread 366339] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:39173 went dead so we remove it[m
[32m[12:05:06.236206] [I] [thread 366339] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=3][m
[32m[12:05:06.236210] [I] [thread 366339] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:05:06.236212] [I] [thread 366339] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:05:06.236215] [I] [thread 366339] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:05:06.236218] [D] [thread 366339] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
