
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[11:35:59.418050] [I] [thread 364227] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[11:35:59.418103] [I] [thread 364227] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[11:35:59.418136] [D] [thread 364227] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[11:35:59.418738] [D] [thread 364227] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:35:59.418901] [I] [thread 364227] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:35:59.418992] [D] [thread 364227] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[11:35:59.419003] [D] [thread 364227] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[11:35:59.419104] [D] [thread 364227] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[11:35:59.419122] [D] [thread 364227] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[11:35:59.419140] [D] [thread 364227] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[11:35:59.419163] [D] [thread 364227] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[11:35:59.419169] [D] [thread 364227] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[11:35:59.450548] [D] [thread 364227] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[11:35:59.450661] [D] [thread 364227] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:35:59.450707] [D] [thread 364227] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:35:59.450752] [D] [thread 364227] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:35:59.450817] [D] [thread 364227] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:35:59.450849] [D] [thread 364227] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:35:59.450862] [D] [thread 364227] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:35:59.450897] [D] [thread 364227] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[11:35:59.451045] [D] [thread 364227] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[11:35:59.451061] [D] [thread 364227] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[11:35:59.451082] [D] [thread 364227] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[11:35:59.451100] [D] [thread 364227] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[11:35:59.451147] [D] [thread 364227] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[11:35:59.451458] [D] [thread 364227] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[11:35:59.451548] [D] [thread 364227] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[11:35:59.451592] [D] [thread 364227] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[11:35:59.451624] [D] [thread 364227] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[11:35:59.451633] [W] [thread 364227] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[11:35:59.451641] [I] [thread 364227] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[11:35:59.451645] [D] [thread 364227] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[11:35:59.451848] [D] [thread 364227] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[11:35:59.451909] [I] [thread 364235] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[11:35:59.451946] [D] [thread 364235] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:35:59.452079] [D] [thread 364236] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[11:35:59.453748] [D] [thread 364236] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[11:35:59.453748] [D] [thread 364227] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[11:35:59.453765] [D] [thread 364227] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[11:35:59.453771] [D] [thread 364227] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[11:35:59.453772] [D] [thread 364227] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[11:35:59.453893] [D] [thread 364227] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[11:35:59.453914] [D] [thread 364227] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[11:35:59.453915] [D] [thread 364227] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[11:35:59.453932] [D] [thread 364227] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[11:35:59.453953] [D] [thread 364227] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[11:35:59.453959] [D] [thread 364227] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[11:35:59.453970] [I] [thread 364227] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:35:59.454115] [I] [thread 364227] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[11:35:59.454121] [I] [thread 364227] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:35:59.454158] [I] [thread 364227] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[11:35:59.454164] [I] [thread 364227] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:35:59.454262] [I] [thread 364227] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[11:35:59.454275] [I] [thread 364227] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[11:35:59.454382] [I] [thread 364227] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[11:35:59.454437] [D] [thread 364227] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[11:35:59.454460] [D] [thread 364227] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[11:35:59.454466] [W] [thread 364227] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[11:35:59.463656] [D] [thread 364227] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[11:35:59.471954] [D] [thread 364227] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[11:35:59.509604] [D] [thread 364227] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[11:35:59.510148] [D] [thread 364227] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[11:35:59.510297] [I] [thread 364227] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[11:35:59.510334] [D] [thread 364227] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[11:35:59.510341] [D] [thread 364227] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[11:35:59.510353] [D] [thread 364227] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[11:35:59.510361] [D] [thread 364227] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[11:35:59.510366] [D] [thread 364227] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[11:35:59.510369] [D] [thread 364227] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[11:35:59.510376] [D] [thread 364227] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[11:35:59.510383] [D] [thread 364227] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[11:35:59.510444] [D] [thread 364227] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[11:35:59.510454] [D] [thread 364227] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[11:35:59.510475] [D] [thread 364227] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[11:35:59.510515] [D] [thread 364227] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[11:35:59.510517] [W] [thread 364227] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[11:35:59.510524] [D] [thread 364227] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[11:35:59.511704] [D] [thread 364241] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[11:35:59.512670] [D] [thread 364241] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[11:35:59.512728] [D] [thread 364241] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 35213[m
[36m[11:35:59.513264] [D] [thread 364244] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 35213[m
[32m[11:35:59.513352] [I] [thread 364227] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:35213[m
[36m[11:35:59.513375] [D] [thread 364227] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1700814429  with numThreads= 1[m
[36m[11:35:59.513399] [D] [thread 364227] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[11:35:59.513798] [D] [thread 364227] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[11:35:59.513810] [D] [thread 364227] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[11:35:59.513826] [D] [thread 364227] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[11:35:59.513831] [D] [thread 364227] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[11:35:59.513876] [D] [thread 364245] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[11:35:59.513898] [D] [thread 364245] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[11:35:59.514104] [D] [thread 364246] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[11:35:59.514208] [D] [thread 364246] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[11:35:59.514937] [D] [thread 364246] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 38255[m
[36m[11:35:59.514950] [D] [thread 364227] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:38255: 38255[m
[36m[11:35:59.514954] [D] [thread 364227] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[11:35:59.514962] [D] [thread 364227] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[11:35:59.514968] [D] [thread 364227] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[11:35:59.515370] [D] [thread 364227] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[11:35:59.515530] [W] [thread 364227] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[11:35:59.515544] [D] [thread 364227] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[11:35:59.517181] [D] [thread 364246] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[11:35:59.517374] [D] [thread 364227] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 38255
dataPort: 35213
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:35:59.520385] [D] [thread 364237] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 38255
dataPort: 35213
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:35:59.520459] [D] [thread 364237] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 38255
dataPort: 35213
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:35:59.520477] [D] [thread 364237] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[11:35:59.520481] [W] [thread 364237] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[11:35:59.520482] [D] [thread 364237] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:35:59.520484] [D] [thread 364237] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:35:59.520495] [D] [thread 364237] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[11:35:59.520531] [D] [thread 364237] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[11:35:59.520577] [I] [thread 364237] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[11:35:59.520588] [D] [thread 364237] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:35:59.520625] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[11:35:59.520636] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:35:59.520638] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:35:59.520645] [D] [thread 364237] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:35:59.520647] [D] [thread 364237] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:35:59.520651] [D] [thread 364237] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:35:59.520781] [D] [thread 364237] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[11:35:59.521427] [D] [thread 364227] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[11:35:59.521455] [D] [thread 364227] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[11:35:59.521552] [D] [thread 364227] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[11:35:59.521556] [D] [thread 364227] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[11:35:59.547200] [D] [thread 364227] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[11:35:59.547245] [D] [thread 364227] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[11:35:59.547248] [D] [thread 364227] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[11:35:59.547610] [D] [thread 364227] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[11:35:59.547646] [D] [thread 364227] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[11:35:59.547938] [D] [thread 364227] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[11:35:59.548001] [I] [thread 364250] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[11:35:59.550160] [I] [thread 364250] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[11:35:59.550215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:35:59.571212] [D] [thread 364227] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[11:35:59.571257] [D] [thread 364227] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[11:35:59.571259] [D] [thread 364227] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[11:35:59.571598] [D] [thread 364227] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[11:36:00.551369] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:01.552583] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:02.553780] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:02.761288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:02.762289] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:02.763028] [D] [thread 364254] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[11:36:02.763335] [D] [thread 364254] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:36:02.763396] [D] [thread 364254] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[11:36:02.763448] [D] [thread 364254] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[11:36:02.764950] [D] [thread 364255] [File.cpp:27] [createFile] Create File to file:///tmp/query_28-11-2023_11-36-02_2469234.cpp[m
[36m[11:36:02.765824] [D] [thread 364255] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:36:02.766073] [D] [thread 364255] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -o/tmp/query_28-11-2023_11-36-02_2469234.so -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_28-11-2023_11-36-02_2469234.cpp'[m
[36m[11:36:03.763435] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:04.486834] [I] [thread 364255] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1721.984404ms[m
[36m[11:36:04.487911] [D] [thread 364254] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[11:36:04.487954] [D] [thread 364254] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[11:36:04.487959] [D] [thread 364254] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[11:36:04.487969] [D] [thread 364254] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[11:36:04.591066] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:04.591370] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:04.592200] [I] [thread 364260] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:04.592387] [I] [thread 364260] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:05.592536] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.593707] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.683640] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:06.683916] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:06.684370] [I] [thread 364262] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:06.684466] [I] [thread 364262] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:06.830710] [D] [thread 364237] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 42955
dataPort: 41447
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:06.830757] [D] [thread 364237] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 42955
dataPort: 41447
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:06.830765] [D] [thread 364237] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:06.830814] [D] [thread 364237] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:06.830816] [D] [thread 364237] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:06.830822] [D] [thread 364237] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[11:36:06.830836] [D] [thread 364237] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:06.830849] [I] [thread 364237] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:06.830867] [I] [thread 364237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:06.830905] [D] [thread 364237] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[11:36:06.830925] [D] [thread 364237] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:06.830950] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:06.830956] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:36:06.830957] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:36:06.830961] [D] [thread 364237] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:06.830963] [D] [thread 364237] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:06.830964] [D] [thread 364237] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:06.831010] [D] [thread 364237] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[11:36:07.685094] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.256591] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:08.256864] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:08.257299] [I] [thread 364263] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:08.257408] [I] [thread 364263] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:09.258043] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:10.259260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:11.260457] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:12.261669] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:13.262882] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:13.302972] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:13.303239] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:13.303662] [I] [thread 364264] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:13.303785] [I] [thread 364264] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:13.423931] [D] [thread 364237] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 41373
dataPort: 43915
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:13.424010] [D] [thread 364237] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 41373
dataPort: 43915
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:13.424026] [D] [thread 364237] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:13.424113] [D] [thread 364237] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:13.424117] [D] [thread 364237] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:13.424126] [D] [thread 364237] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[11:36:13.424154] [D] [thread 364237] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:13.424181] [I] [thread 364237] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:13.424210] [I] [thread 364237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:13.424221] [D] [thread 364237] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[11:36:13.424233] [D] [thread 364237] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:13.424283] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:13.424378] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:36:13.424383] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:36:13.424390] [D] [thread 364237] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:13.424393] [D] [thread 364237] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:13.424396] [D] [thread 364237] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:13.424466] [D] [thread 364237] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[11:36:13.447627] [D] [thread 364237] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 3
oldParent: 1
newParent: 2
[m
[36m[11:36:13.447675] [D] [thread 364237] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 3  parentId= 1[m
[32m[11:36:13.447681] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:36:13.447684] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:36:13.447687] [D] [thread 364237] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  3  exists[m
[32m[11:36:13.447689] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:13.447691] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:13.447694] [D] [thread 364237] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:13.447705] [D] [thread 364237] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:13.447770] [I] [thread 364237] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:13.447786] [D] [thread 364237] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:13.447789] [D] [thread 364237] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:13.447813] [D] [thread 364237] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 3  parentId= 2[m
[32m[11:36:13.447816] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:36:13.447818] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:36:13.447821] [D] [thread 364237] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 3 exists[m
[32m[11:36:13.447823] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[11:36:13.447825] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[11:36:13.447827] [D] [thread 364237] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[11:36:13.447856] [I] [thread 364237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[11:36:13.447863] [D] [thread 364237] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:13.447916] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:13.447921] [D] [thread 364237] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:14.304470] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.878208] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:14.878481] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:14.878908] [I] [thread 364265] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:14.879060] [I] [thread 364265] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:15.879664] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:16.880854] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:17.882024] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:18.883215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:19.884437] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:20.269065] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:20.269351] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:20.269796] [I] [thread 364266] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:20.269888] [I] [thread 364266] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:20.386479] [D] [thread 364237] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 35873
dataPort: 43395
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:20.386565] [D] [thread 364237] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 35873
dataPort: 43395
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:20.386580] [D] [thread 364237] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:20.386678] [D] [thread 364237] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:20.386682] [D] [thread 364237] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:20.386692] [D] [thread 364237] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[11:36:20.386721] [D] [thread 364237] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:20.386738] [I] [thread 364237] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:20.386794] [I] [thread 364237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:20.386806] [D] [thread 364237] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[11:36:20.386819] [D] [thread 364237] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:20.386883] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:20.386895] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:36:20.386898] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:36:20.386905] [D] [thread 364237] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:20.386908] [D] [thread 364237] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:20.386911] [D] [thread 364237] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:20.386981] [D] [thread 364237] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[11:36:20.410975] [D] [thread 364237] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 3
[m
[36m[11:36:20.411016] [D] [thread 364237] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[11:36:20.411022] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:36:20.411031] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:36:20.411034] [D] [thread 364237] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[11:36:20.411036] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:20.411038] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:20.411041] [D] [thread 364237] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:20.411052] [D] [thread 364237] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:20.411115] [I] [thread 364237] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:20.411123] [D] [thread 364237] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:20.411127] [D] [thread 364237] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:20.411130] [D] [thread 364237] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 3[m
[32m[11:36:20.411133] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:36:20.411135] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:36:20.411137] [D] [thread 364237] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[11:36:20.411139] [I] [thread 364237] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[11:36:20.411141] [D] [thread 364237] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[11:36:20.411144] [D] [thread 364237] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[11:36:20.411170] [I] [thread 364237] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[11:36:20.411177] [D] [thread 364237] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:20.411241] [D] [thread 364237] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:20.411248] [D] [thread 364237] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:21.270523] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.899748] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:21.900134] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:21.900601] [I] [thread 364267] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:21.900769] [I] [thread 364267] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:22.901305] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:23.902483] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:24.903661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:25.904830] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:26.119655] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:26.120022] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:26.120510] [I] [thread 364268] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:26.120683] [I] [thread 364268] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:26.244848] [D] [thread 364248] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 41815
dataPort: 37715
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:26.244936] [D] [thread 364248] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 41815
dataPort: 37715
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:26.244950] [D] [thread 364248] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:26.245097] [D] [thread 364248] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:26.245101] [D] [thread 364248] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:26.245110] [D] [thread 364248] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[11:36:26.245135] [D] [thread 364248] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:26.245151] [I] [thread 364248] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:26.245178] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:26.245187] [D] [thread 364248] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[11:36:26.245199] [D] [thread 364248] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:26.245270] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:26.245281] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:36:26.245283] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:36:26.245290] [D] [thread 364248] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:26.245293] [D] [thread 364248] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:26.245296] [D] [thread 364248] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:26.245363] [D] [thread 364248] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[11:36:26.270862] [D] [thread 364248] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[11:36:26.270909] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:36:26.270914] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:36:26.270931] [D] [thread 364248] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[11:36:26.270986] [D] [thread 364248] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:26.270997] [D] [thread 364248] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[11:36:26.271025] [D] [thread 364248] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[11:36:26.271034] [D] [thread 364248] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:26.271047] [D] [thread 364248] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[11:36:26.271051] [D] [thread 364248] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:26.272298] [D] [thread 364269] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 4
[m
[36m[11:36:26.272388] [D] [thread 364269] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[11:36:26.272395] [I] [thread 364269] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:36:26.272399] [D] [thread 364269] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:36:26.272419] [D] [thread 364269] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[11:36:26.272422] [I] [thread 364269] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:26.272424] [D] [thread 364269] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:26.272427] [D] [thread 364269] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:26.272439] [D] [thread 364269] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:26.272509] [I] [thread 364269] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:26.272517] [D] [thread 364269] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:26.272520] [D] [thread 364269] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:26.272524] [D] [thread 364269] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 4[m
[32m[11:36:26.272527] [I] [thread 364269] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:36:26.272529] [D] [thread 364269] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:36:26.272531] [D] [thread 364269] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[11:36:26.272533] [I] [thread 364269] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[11:36:26.272535] [D] [thread 364269] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[11:36:26.272538] [D] [thread 364269] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[11:36:26.272565] [I] [thread 364269] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[11:36:26.272572] [D] [thread 364269] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:26.272653] [D] [thread 364269] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:26.272658] [D] [thread 364269] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:27.121192] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:27.715402] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:27.715716] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:27.716273] [I] [thread 364270] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:27.716511] [I] [thread 364270] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:28.716919] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:29.718126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:30.719274] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:31.720467] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.721668] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.868666] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:32.869048] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:32.869822] [I] [thread 364271] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:32.870020] [I] [thread 364271] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:32.979004] [D] [thread 364248] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 37313
dataPort: 46609
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:32.979088] [D] [thread 364248] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 37313
dataPort: 46609
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:32.979103] [D] [thread 364248] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:32.979228] [D] [thread 364248] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:32.979233] [D] [thread 364248] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:32.979243] [D] [thread 364248] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[11:36:32.979271] [D] [thread 364248] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:32.979288] [I] [thread 364248] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:32.979315] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:32.979324] [D] [thread 364248] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[11:36:32.979335] [D] [thread 364248] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:32.979417] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:32.979428] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:36:32.979431] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:36:32.979437] [D] [thread 364248] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:32.979440] [D] [thread 364248] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:32.979443] [D] [thread 364248] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:32.979510] [D] [thread 364248] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[11:36:33.002727] [D] [thread 364248] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[11:36:33.002770] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:36:33.002775] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:36:33.002786] [D] [thread 364248] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[11:36:33.002838] [D] [thread 364248] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:33.002844] [D] [thread 364248] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[11:36:33.002862] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:36:33.002867] [D] [thread 364248] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[11:36:33.002871] [D] [thread 364248] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:33.002877] [D] [thread 364248] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[11:36:33.002882] [D] [thread 364248] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:33.004426] [D] [thread 364272] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 5
[m
[36m[11:36:33.004467] [D] [thread 364272] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[11:36:33.004473] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:36:33.004477] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:36:33.004481] [D] [thread 364272] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[11:36:33.004483] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:33.004485] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:33.004487] [D] [thread 364272] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:33.004500] [D] [thread 364272] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:33.004569] [I] [thread 364272] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:33.004577] [D] [thread 364272] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:33.004581] [D] [thread 364272] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:33.004584] [D] [thread 364272] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 5[m
[32m[11:36:33.004587] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:36:33.004589] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:36:33.004591] [D] [thread 364272] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[11:36:33.004593] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:36:33.004595] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[11:36:33.004615] [D] [thread 364272] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  5  exists[m
[32m[11:36:33.004646] [I] [thread 364272] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[36m[11:36:33.004654] [D] [thread 364272] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:33.004747] [D] [thread 364272] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:33.004753] [D] [thread 364272] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:33.870259] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:34.429539] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:34.429804] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:34.430400] [I] [thread 364273] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:34.430622] [I] [thread 364273] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:35.430999] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:36.432198] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:37.433412] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:38.434592] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.400435] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:39.400787] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:39.401388] [I] [thread 364274] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:39.401585] [I] [thread 364274] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:39.520814] [D] [thread 364248] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 44099
dataPort: 34131
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:39.520899] [D] [thread 364248] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 44099
dataPort: 34131
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:39.520914] [D] [thread 364248] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:39.521050] [D] [thread 364248] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:39.521055] [D] [thread 364248] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:39.521064] [D] [thread 364248] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[11:36:39.521091] [D] [thread 364248] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:39.521109] [I] [thread 364248] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:39.521134] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:39.521144] [D] [thread 364248] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[11:36:39.521155] [D] [thread 364248] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:39.521279] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:39.521291] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:36:39.521295] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:36:39.521302] [D] [thread 364248] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:39.521305] [D] [thread 364248] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:39.521308] [D] [thread 364248] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:39.521376] [D] [thread 364248] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[11:36:39.544306] [D] [thread 364248] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[11:36:39.544396] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:36:39.544403] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:36:39.544412] [D] [thread 364248] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[11:36:39.544438] [D] [thread 364248] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:39.544445] [D] [thread 364248] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[11:36:39.544452] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:36:39.544456] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:36:39.544460] [D] [thread 364248] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[11:36:39.544465] [D] [thread 364248] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:39.544473] [D] [thread 364248] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[11:36:39.544477] [D] [thread 364248] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:39.545666] [D] [thread 364272] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 6
[m
[36m[11:36:39.545682] [D] [thread 364272] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[11:36:39.545687] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:36:39.545690] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:36:39.545693] [D] [thread 364272] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[11:36:39.545695] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:39.545698] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:39.545722] [D] [thread 364272] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:39.545734] [D] [thread 364272] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:39.545802] [I] [thread 364272] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:39.545810] [D] [thread 364272] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:39.545814] [D] [thread 364272] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:39.545817] [D] [thread 364272] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 6[m
[32m[11:36:39.545820] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:36:39.545822] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:36:39.545824] [D] [thread 364272] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[11:36:39.545826] [I] [thread 364272] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:36:39.545828] [D] [thread 364272] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[11:36:39.545846] [D] [thread 364272] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  6  exists[m
[32m[11:36:39.545876] [I] [thread 364272] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[36m[11:36:39.545884] [D] [thread 364272] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:39.545991] [D] [thread 364272] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:39.545996] [D] [thread 364272] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:40.401987] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.975802] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:40.976120] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:40.976639] [I] [thread 364275] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:40.976874] [I] [thread 364275] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:41.977286] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:42.978488] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:43.979665] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:44.980844] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:45.982015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.375279] [D] [thread 364248] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 34589
dataPort: 38587
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:46.375357] [D] [thread 364248] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 34589
dataPort: 38587
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:46.375369] [D] [thread 364248] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:46.375533] [D] [thread 364248] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:46.375538] [D] [thread 364248] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:46.375546] [D] [thread 364248] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[11:36:46.375569] [D] [thread 364248] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:46.375583] [I] [thread 364248] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:46.375607] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:46.375615] [D] [thread 364248] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[11:36:46.375626] [D] [thread 364248] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:46.375719] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:46.375729] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:36:46.375732] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:36:46.375738] [D] [thread 364248] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:46.375741] [D] [thread 364248] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:46.375744] [D] [thread 364248] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:46.375805] [D] [thread 364248] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[11:36:46.399565] [D] [thread 364248] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[11:36:46.399609] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:36:46.399613] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:36:46.399621] [D] [thread 364248] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[11:36:46.399651] [D] [thread 364248] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:46.399657] [D] [thread 364248] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[11:36:46.399664] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:36:46.399668] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:36:46.399670] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:36:46.399674] [D] [thread 364248] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[11:36:46.399678] [D] [thread 364248] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:46.399682] [D] [thread 364248] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[11:36:46.399686] [D] [thread 364248] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:46.401012] [D] [thread 364248] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 7
[m
[36m[11:36:46.401051] [D] [thread 364248] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[11:36:46.401058] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:36:46.401074] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:36:46.401078] [D] [thread 364248] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[11:36:46.401080] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:46.401082] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:46.401084] [D] [thread 364248] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:46.401095] [D] [thread 364248] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:46.401157] [I] [thread 364248] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:46.401163] [D] [thread 364248] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:46.401166] [D] [thread 364248] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:46.401169] [D] [thread 364248] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 7[m
[32m[11:36:46.401172] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:36:46.401174] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:36:46.401176] [D] [thread 364248] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[11:36:46.401177] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:36:46.401179] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[11:36:46.401182] [D] [thread 364248] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  7  exists[m
[32m[11:36:46.401204] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0][m
[36m[11:36:46.401211] [D] [thread 364248] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:46.401312] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:46.401317] [D] [thread 364248] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:46.571952] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:46.572359] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:46.573068] [I] [thread 364278] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:46.573332] [I] [thread 364278] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:47.573537] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:48.574683] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:49.575886] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:50.577084] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.578270] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.604954] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:51.605320] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:51.605870] [I] [thread 364279] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:51.606125] [I] [thread 364279] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:51.723617] [D] [thread 364277] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 46653
dataPort: 43099
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:51.723709] [D] [thread 364277] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 46653
dataPort: 43099
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:51.723722] [D] [thread 364277] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:51.723886] [D] [thread 364277] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:51.723891] [D] [thread 364277] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:51.723899] [D] [thread 364277] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[11:36:51.723922] [D] [thread 364277] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:51.723933] [I] [thread 364277] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:51.723951] [I] [thread 364277] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:51.723959] [D] [thread 364277] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[11:36:51.725599] [D] [thread 364277] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:51.725744] [D] [thread 364277] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:51.725801] [I] [thread 364277] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:36:51.725803] [D] [thread 364277] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:36:51.725812] [D] [thread 364277] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:51.725815] [D] [thread 364277] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:51.725818] [D] [thread 364277] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:51.725886] [D] [thread 364277] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[11:36:51.749928] [D] [thread 364277] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[11:36:51.749972] [I] [thread 364277] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:36:51.749978] [D] [thread 364277] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:36:51.749988] [D] [thread 364277] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[11:36:51.750017] [D] [thread 364277] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:51.750024] [D] [thread 364277] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[11:36:51.750032] [D] [thread 364277] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:36:51.750036] [D] [thread 364277] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:36:51.750039] [D] [thread 364277] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:36:51.750041] [D] [thread 364277] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:36:51.750045] [D] [thread 364277] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[11:36:51.750050] [D] [thread 364277] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:51.750057] [D] [thread 364277] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[11:36:51.750062] [D] [thread 364277] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:51.751338] [D] [thread 364248] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 8
[m
[36m[11:36:51.751353] [D] [thread 364248] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[11:36:51.751358] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:36:51.751362] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:36:51.751365] [D] [thread 364248] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[11:36:51.751367] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:51.751369] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:51.751372] [D] [thread 364248] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:51.751384] [D] [thread 364248] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:51.751452] [I] [thread 364248] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:51.751460] [D] [thread 364248] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:51.751464] [D] [thread 364248] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:51.751487] [D] [thread 364248] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 8[m
[32m[11:36:51.751490] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:36:51.751492] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:36:51.751495] [D] [thread 364248] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[11:36:51.751497] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:36:51.751499] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[11:36:51.751502] [D] [thread 364248] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  8  exists[m
[32m[11:36:51.751535] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0][m
[36m[11:36:51.751542] [D] [thread 364248] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:51.751670] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:51.751676] [D] [thread 364248] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:52.606497] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:53.219990] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:53.220398] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:53.221124] [I] [thread 364280] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:53.221403] [I] [thread 364280] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:54.221576] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:55.222767] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:56.223953] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:57.225135] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.226353] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.258248] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:36:58.258536] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:36:58.258946] [I] [thread 364282] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:36:58.259190] [I] [thread 364282] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:36:58.377915] [D] [thread 364248] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 33711
dataPort: 44457
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:58.378001] [D] [thread 364248] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 33711
dataPort: 44457
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[11:36:58.378016] [D] [thread 364248] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[11:36:58.378193] [D] [thread 364248] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[11:36:58.378197] [D] [thread 364248] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[11:36:58.378208] [D] [thread 364248] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[11:36:58.378234] [D] [thread 364248] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[11:36:58.378251] [I] [thread 364248] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[11:36:58.378278] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:58.378287] [D] [thread 364248] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[11:36:58.378299] [D] [thread 364248] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[11:36:58.378430] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
[m
[32m[11:36:58.378441] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:36:58.378444] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:36:58.378451] [D] [thread 364248] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[11:36:58.378454] [D] [thread 364248] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[11:36:58.378457] [D] [thread 364248] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[11:36:58.378525] [D] [thread 364248] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[11:36:58.401873] [D] [thread 364248] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[11:36:58.401908] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:36:58.401913] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:36:58.401922] [D] [thread 364248] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[11:36:58.401944] [D] [thread 364248] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[11:36:58.401948] [D] [thread 364248] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[11:36:58.401954] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[11:36:58.401958] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[11:36:58.401960] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[11:36:58.401962] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[11:36:58.401964] [D] [thread 364248] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[11:36:58.401967] [D] [thread 364248] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[11:36:58.401971] [D] [thread 364248] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[11:36:58.401975] [D] [thread 364248] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[11:36:58.401979] [D] [thread 364248] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[11:36:58.403609] [D] [thread 364248] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 9
[m
[36m[11:36:58.403652] [D] [thread 364248] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[11:36:58.403658] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:36:58.403662] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:36:58.403666] [D] [thread 364248] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[11:36:58.403668] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:36:58.403671] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[11:36:58.403674] [D] [thread 364248] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[11:36:58.403687] [D] [thread 364248] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[11:36:58.403754] [I] [thread 364248] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[11:36:58.403762] [D] [thread 364248] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[11:36:58.403765] [D] [thread 364248] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[11:36:58.403769] [D] [thread 364248] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 9[m
[32m[11:36:58.403772] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:36:58.403774] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[11:36:58.403777] [D] [thread 364248] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[11:36:58.403778] [I] [thread 364248] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:36:58.403780] [D] [thread 364248] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[11:36:58.403783] [D] [thread 364248] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  9  exists[m
[32m[11:36:58.403810] [I] [thread 364248] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0][m
[36m[11:36:58.403818] [D] [thread 364248] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[11:36:58.403962] [D] [thread 364248] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |  |  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |  |  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |  |  |  |  |  |  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
[m
[36m[11:36:58.403968] [D] [thread 364248] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[11:36:59.259738] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.260904] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.368118] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:00.368443] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:37:00.368967] [I] [thread 364284] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[11:37:00.369299] [I] [thread 364284] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[11:37:01.369626] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.841196] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:01.841413] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.064916] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.065234] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:02.066585] [D] [thread 364289] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[11:37:02.066634] [I] [thread 364289] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[11:37:02.066679] [I] [thread 364289] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[11:37:02.066687] [D] [thread 364289] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[11:37:02.066729] [D] [thread 364289] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[11:37:02.066765] [D] [thread 364289] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));[m
[36m[11:37:02.066773] [D] [thread 364289] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Sum(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsChain.out","CSV_FORMAT","OVERWRITE", true));
}
}
[m
[36m[11:37:02.067654] [D] [thread 364290] [File.cpp:27] [createFile] Create File to file:///tmp/query_28-11-2023_11-37-02_2165576.cpp[m
[36m[11:37:02.068123] [D] [thread 364290] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[11:37:02.068165] [D] [thread 364290] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[11:37:02.068278] [D] [thread 364290] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -o/tmp/query_28-11-2023_11-37-02_2165576.so -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_28-11-2023_11-37-02_2165576.cpp'[m
[36m[11:37:03.066374] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:04.067553] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:37:04.915990] [I] [thread 364290] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2848.40827ms[m
[36m[11:37:04.916158] [D] [thread 364289] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[11:37:04.916181] [D] [thread 364289] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[11:37:04.916252] [I] [thread 364289] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.916515] [D] [thread 364289] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[11:37:04.916566] [D] [thread 364289] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[11:37:04.916617] [I] [thread 364289] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.916653] [D] [thread 364289] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[11:37:04.916690] [D] [thread 364289] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.916692] [D] [thread 364289] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.916725] [I] [thread 364289] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[11:37:04.916747] [D] [thread 364289] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Sum;) as new root of the plan.[m
[36m[11:37:04.916764] [D] [thread 364289] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.916765] [D] [thread 364289] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.916778] [D] [thread 364289] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[11:37:04.916788] [I] [thread 364289] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:37:04.916800] [D] [thread 364289] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:37:04.916816] [D] [thread 364289] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.916818] [D] [thread 364289] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.917562] [D] [thread 364289] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.917616] [D] [thread 364289] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.917626] [D] [thread 364289] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.917644] [D] [thread 364289] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.917650] [D] [thread 364289] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.917652] [D] [thread 364289] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.917663] [D] [thread 364289] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[11:37:04.917671] [D] [thread 364289] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.917676] [D] [thread 364289] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.917678] [D] [thread 364289] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.917808] [D] [thread 364289] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.917815] [D] [thread 364289] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.917822] [D] [thread 364289] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.917979] [D] [thread 364289] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.918075] [D] [thread 364289] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:37:04.918164] [I] [thread 364289] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[11:37:04.918257] [I] [thread 364289] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[11:37:04.918272] [I] [thread 364289] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:37:04.918311] [I] [thread 364235] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:37:04.918327] [I] [thread 364235] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:37:04.918333] [I] [thread 364235] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:37:04.918370] [I] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[11:37:04.918383] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:37:04.918386] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.918397] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.918401] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.918407] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.918411] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.918571] [D] [thread 364235] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.918637] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.918647] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:37:04.918653] [D] [thread 364235] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:37:04.918702] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[11:37:04.918709] [I] [thread 364235] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:37:04.918728] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:37:04.918756] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:37:04.918807] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:37:04.918835] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.918875] [D] [thread 364235] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[11:37:04.918925] [D] [thread 364235] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.918988] [D] [thread 364235] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:37:04.919014] [I] [thread 364235] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919027] [D] [thread 364235] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:37:04.919028] [I] [thread 364235] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:37:04.919035] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:37:04.919045] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:37:04.919070] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:37:04.919093] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.919117] [D] [thread 364235] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[11:37:04.919147] [I] [thread 364235] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919154] [D] [thread 364235] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[11:37:04.919155] [I] [thread 364235] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:37:04.919159] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:37:04.919165] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[11:37:04.919187] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[11:37:04.919208] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.919230] [D] [thread 364235] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[11:37:04.919255] [I] [thread 364235] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[11:37:04.919281] [I] [thread 364235] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919299] [D] [thread 364235] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[11:37:04.919323] [D] [thread 364235] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919346] [D] [thread 364235] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919361] [D] [thread 364235] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[11:37:04.919385] [D] [thread 364235] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919408] [D] [thread 364235] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919419] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.919425] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.919429] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.919434] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.919437] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.919553] [D] [thread 364235] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.919609] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[11:37:04.919619] [I] [thread 364235] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[11:37:04.919651] [I] [thread 364235] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[11:37:04.919653] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.919659] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.919662] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[11:37:04.919762] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.919767] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.919774] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.919778] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.919781] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.919810] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:37:04.919904] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.919909] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.919914] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.919917] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.919919] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.919943] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:37:04.919976] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.919980] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.919984] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.919986] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.919988] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.920010] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:37:04.920044] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.920047] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.920064] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.920067] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.920069] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.920093] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:37:04.920129] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.920133] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.920137] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.920138] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.920141] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.920162] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[11:37:04.920200] [I] [thread 364235] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[11:37:04.920203] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[11:37:04.920207] [D] [thread 364235] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[11:37:04.920210] [D] [thread 364235] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[11:37:04.920212] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[11:37:04.920246] [D] [thread 364235] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[11:37:04.920397] [D] [thread 364235] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[11:37:04.920405] [I] [thread 364235] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[11:37:04.920469] [D] [thread 364235] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.920530] [D] [thread 364235] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[11:37:04.920597] [D] [thread 364235] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.920601] [D] [thread 364235] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[11:37:04.920662] [D] [thread 364235] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Sum;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.920707] [D] [thread 364235] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[11:37:04.920715] [D] [thread 364235] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Sum;)[m
[36m[11:37:04.920728] [D] [thread 364235] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.920749] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:37:04.920752] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:37:04.920778] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:37:04.920779] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:37:04.920790] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:37:04.920792] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:37:04.920801] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:37:04.920803] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:37:04.920813] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:37:04.920814] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:37:04.920824] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:37:04.920826] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:37:04.920860] [I] [thread 364235] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:37:04.920864] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920865] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920867] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920868] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920869] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920870] [I] [thread 364235] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:04.920873] [I] [thread 364235] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:04.920877] [I] [thread 364235] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:37:04.920878] [I] [thread 364235] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:37:04.920888] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:37:04.920919] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.920956] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:37:04.920993] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(18) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.921027] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:37:04.921042] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(19) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.921076] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:37:04.921090] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(20) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.921125] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:37:04.921139] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(21) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[32m[11:37:04.921176] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:37:04.921190] [D] [thread 364235] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(22) old node=WINDOW AGGREGATION(OP-3, Sum;)[m
[36m[11:37:04.921325] [D] [thread 364235] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.921411] [D] [thread 364235] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.921444] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.921465] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.921471] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:37:04.921480] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.921484] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.921626] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.921661] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.921699] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.921807] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.921826] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.921849] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.921955] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.921973] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.921996] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.922100] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.922118] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.922141] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.922245] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.922262] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.922285] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.922388] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.922425] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.922450] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.922471] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.922599] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[11:37:04.922602] [D] [thread 364235] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[11:37:04.922673] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[11:37:04.922686] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[11:37:04.922690] [D] [thread 364235] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[11:37:04.922697] [I] [thread 364235] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[11:37:04.922705] [I] [thread 364235] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[11:37:04.922717] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[11:37:04.922733] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[11:37:04.922784] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[11:37:04.922811] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[11:37:04.922841] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[11:37:04.922870] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[11:37:04.922919] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[11:37:04.922956] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[11:37:04.922979] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[11:37:04.922998] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[11:37:04.923017] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[11:37:04.923037] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[11:37:04.923056] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[11:37:04.923078] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[11:37:04.923121] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[11:37:04.923151] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[11:37:04.923176] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[11:37:04.923201] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[11:37:04.923226] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:37:04.923292] [D] [thread 364235] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:37:04.923295] [D] [thread 364235] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:37:04.923300] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923304] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923307] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923310] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923313] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923316] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923319] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923322] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923325] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923328] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923331] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923334] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923337] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923344] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923346] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923349] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923352] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923354] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923356] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923370] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923373] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923376] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923378] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923381] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923383] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923542] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:37:04.923547] [D] [thread 364235] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:37:04.923554] [D] [thread 364235] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:37:04.923556] [D] [thread 364235] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:37:04.923558] [D] [thread 364235] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[11:37:04.923561] [D] [thread 364235] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[11:37:04.923567] [I] [thread 364235] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[11:37:04.923721] [D] [thread 364235] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.923727] [D] [thread 364235] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[11:37:04.923728] [D] [thread 364235] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[11:37:04.923733] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923737] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923740] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923743] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923746] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923749] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923752] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923756] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923759] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923761] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923764] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923767] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923770] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923773] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923774] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923778] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923779] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923782] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923783] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923786] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923788] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923790] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923791] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923794] [D] [thread 364235] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[11:37:04.923800] [D] [thread 364235] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[11:37:04.923837] [D] [thread 364235] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[11:37:04.923844] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[11:37:04.923846] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[11:37:04.923852] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[11:37:04.923853] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[11:37:04.923855] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[11:37:04.923857] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[11:37:04.923859] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[11:37:04.923860] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[11:37:04.923862] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[11:37:04.923864] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[11:37:04.923866] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[11:37:04.923868] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[11:37:04.923870] [I] [thread 364235] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[11:37:04.923872] [D] [thread 364235] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[11:37:04.923880] [I] [thread 364235] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[11:37:04.923924] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.923961] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.923974] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.923997] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924006] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924013] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924029] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924039] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924046] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924054] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924082] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.924089] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924105] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924113] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924119] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924127] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924148] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.924154] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924170] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924177] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924184] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924190] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924206] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924228] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.924243] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924250] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924256] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924263] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924270] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924277] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924293] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924425] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.924439] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924447] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924455] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924462] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924480] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924487] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924494] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924501] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924538] [D] [thread 364235] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[11:37:04.924554] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924560] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924567] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924574] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924581] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924587] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924603] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924610] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924617] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924624] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[11:37:04.924635] [I] [thread 364235] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[11:37:04.924636] [D] [thread 364235] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[11:37:04.924717] [D] [thread 364235] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[11:37:04.924719] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924734] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924736] [D] [thread 364235] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:37:04.924739] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[11:37:04.924748] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924758] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924765] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924774] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924791] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924799] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924807] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924815] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924819] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924821] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:37:04.924826] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924830] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924833] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924836] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:37:04.924838] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924839] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:37:04.924842] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924844] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924847] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924850] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924852] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:37:04.924854] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924856] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:37:04.924858] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924860] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924863] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924866] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924869] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924871] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:37:04.924873] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924874] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:37:04.924876] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924879] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924882] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924885] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924887] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924890] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924892] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:37:04.924894] [D] [thread 364235] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[11:37:04.924900] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[11:37:04.924901] [D] [thread 364235] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[11:37:04.924903] [D] [thread 364235] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[11:37:04.924907] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924910] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924913] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924916] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924919] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924921] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924924] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[11:37:04.924926] [W] [thread 364235] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[11:37:04.924936] [D] [thread 364235] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:37:04.924938] [D] [thread 364235] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:37:04.924939] [D] [thread 364235] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:37:04.924940] [D] [thread 364235] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:37:04.924941] [D] [thread 364235] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:37:04.924942] [D] [thread 364235] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:37:04.924943] [D] [thread 364235] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:37:04.924944] [D] [thread 364235] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[11:37:04.924945] [D] [thread 364235] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[11:37:04.924946] [D] [thread 364235] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[11:37:04.924948] [D] [thread 364235] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:37:04.924949] [D] [thread 364235] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:37:04.924952] [D] [thread 364235] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:37:04.924952] [D] [thread 364235] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:37:04.924954] [D] [thread 364235] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:37:04.924955] [D] [thread 364235] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:37:04.924956] [D] [thread 364235] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:37:04.924957] [D] [thread 364235] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[11:37:04.924958] [D] [thread 364235] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[11:37:04.924989] [D] [thread 364235] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[11:37:04.925006] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[11:37:04.925026] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[11:37:04.925034] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925051] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[11:37:04.925054] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925072] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[11:37:04.925075] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925087] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925094] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925101] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925120] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925126] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925128] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925165] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925179] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[11:37:04.925188] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[11:37:04.925190] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925200] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[11:37:04.925203] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925215] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(18)[m
[36m[11:37:04.925218] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925227] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925230] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925232] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925247] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925249] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925251] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925272] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925281] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[11:37:04.925290] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[11:37:04.925292] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925302] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[11:37:04.925305] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925317] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(19)[m
[36m[11:37:04.925319] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925329] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925331] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925333] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925354] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925357] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925358] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925379] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925390] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[11:37:04.925399] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[11:37:04.925401] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925411] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[11:37:04.925413] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925425] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(20)[m
[36m[11:37:04.925428] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925437] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925439] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925442] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925460] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925463] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925465] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925486] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925496] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[11:37:04.925510] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[11:37:04.925512] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925523] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[11:37:04.925525] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925536] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[11:37:04.925539] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925548] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925551] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925553] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925617] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925620] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925622] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925646] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925659] [D] [thread 364235] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[11:37:04.925668] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[11:37:04.925671] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925682] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[11:37:04.925684] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925698] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[11:37:04.925700] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925710] [D] [thread 364235] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[11:37:04.925713] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.925715] [D] [thread 364235] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[11:37:04.925735] [D] [thread 364235] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[11:37:04.925738] [D] [thread 364235] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[11:37:04.925740] [D] [thread 364235] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[11:37:04.925760] [D] [thread 364235] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[11:37:04.925763] [D] [thread 364235] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.925769] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.925781] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925789] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.925821] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[11:37:04.925827] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.925829] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.925853] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[11:37:04.925876] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[11:37:04.925879] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.925880] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.925886] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.925887] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.925901] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.925911] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.925913] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.925916] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.925928] [D] [thread 364235] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[11:37:04.925942] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.925945] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.925951] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:37:04.925955] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.925963] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.925974] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.925978] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.925999] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.926001] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.926008] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[11:37:04.926010] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926011] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.926015] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926016] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.926021] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926023] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926037] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.926039] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926041] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.926048] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[11:37:04.926061] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926064] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926068] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[11:37:04.926070] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[11:37:04.926105] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[11:37:04.926121] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926122] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.926126] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.926129] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926130] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.926131] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.926137] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.926141] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926143] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926145] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:37:04.926147] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926154] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926165] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926168] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.926179] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.926180] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.926187] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 5[m
[36m[11:37:04.926188] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926190] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.926192] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926197] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.926200] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926201] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926208] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.926209] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926211] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.926217] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[11:37:04.926234] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926236] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926238] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:37:04.926240] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[11:37:04.926261] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[11:37:04.926269] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926270] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.926278] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.926280] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926281] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.926283] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.926285] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.926289] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926291] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926292] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[11:37:04.926294] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926299] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926309] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:37:04.926314] [W] [thread 364235] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:37:04.926315] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926317] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926319] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926329] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926332] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.926343] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[11:37:04.926345] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.926346] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.926351] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[11:37:04.926368] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[11:37:04.926370] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.926371] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.926374] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926375] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.926390] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.926392] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926393] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.926395] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.926398] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[11:37:04.926408] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926409] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926411] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:37:04.926414] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926419] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926431] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926434] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.926446] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.926447] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.926454] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[11:37:04.926461] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926463] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.926464] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926466] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.926469] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926471] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926480] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.926482] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926483] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.926488] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[11:37:04.926533] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926536] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926539] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[11:37:04.926540] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[11:37:04.926569] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[11:37:04.926578] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926579] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.926583] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.926584] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926586] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.926587] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.926590] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.926593] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926595] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926598] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:37:04.926599] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926606] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926615] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926618] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.926629] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.926630] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.926636] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(18) on execution node with id 6[m
[36m[11:37:04.926638] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926639] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.926641] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926643] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.926647] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926648] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926655] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.926657] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926658] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.926662] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[11:37:04.926675] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926677] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926679] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:37:04.926681] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[11:37:04.926702] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[11:37:04.926709] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926710] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.926713] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.926715] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926716] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.926717] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.926720] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.926723] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926725] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926726] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[11:37:04.926728] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926733] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926743] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:37:04.926748] [W] [thread 364235] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:37:04.926749] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926751] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926752] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.926762] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926765] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.926776] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[11:37:04.926778] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.926780] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.926784] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[11:37:04.926800] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[11:37:04.926802] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.926803] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.926805] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926807] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.926811] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.926813] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926814] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.926815] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.926818] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[11:37:04.926823] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926825] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926827] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:37:04.926829] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926834] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926843] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926845] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.926855] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.926857] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.926863] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[11:37:04.926865] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926866] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.926867] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926868] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.926872] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926873] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926887] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.926888] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926890] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.926894] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[11:37:04.926905] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.926907] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.926909] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[11:37:04.926911] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[11:37:04.926936] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[11:37:04.926944] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.926945] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.926948] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.926950] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.926951] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.926953] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.926955] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:37:04.926959] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.926960] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.926962] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:37:04.926963] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.926969] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.926978] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.926981] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.926991] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.926993] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.926999] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(19) on execution node with id 7[m
[36m[11:37:04.927000] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927002] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.927003] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927006] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.927009] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927011] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927017] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.927019] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927020] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.927024] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[11:37:04.927037] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927038] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927041] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:37:04.927042] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[11:37:04.927063] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[11:37:04.927069] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927071] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.927074] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.927075] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927076] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.927078] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.927080] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:37:04.927084] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927085] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927087] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[11:37:04.927089] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927093] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927102] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:37:04.927108] [W] [thread 364235] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:37:04.927110] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927111] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927113] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927123] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927126] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.927163] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[11:37:04.927166] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.927167] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.927176] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[11:37:04.927193] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[11:37:04.927198] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.927199] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.927201] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927203] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.927206] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.927208] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927210] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:37:04.927211] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:37:04.927213] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[11:37:04.927218] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927220] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927222] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:37:04.927224] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927229] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927238] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927241] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.927253] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.927255] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.927261] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[11:37:04.927263] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927264] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.927266] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927267] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.927271] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927272] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927281] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.927282] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927284] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.927288] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[11:37:04.927298] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927300] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927303] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[11:37:04.927304] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[11:37:04.927330] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[11:37:04.927338] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927339] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.927342] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.927343] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927345] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:37:04.927346] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:37:04.927349] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:37:04.927352] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927354] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927355] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:37:04.927357] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927363] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927372] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927375] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.927384] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.927386] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.927392] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(20) on execution node with id 8[m
[36m[11:37:04.927394] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927395] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.927396] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927399] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.927402] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927404] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927410] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.927412] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927413] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.927417] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[11:37:04.927429] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927431] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927434] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:37:04.927435] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[11:37:04.927456] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[11:37:04.927463] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927464] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.927467] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.927469] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927470] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:37:04.927471] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:37:04.927474] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:37:04.927477] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927479] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927481] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[11:37:04.927482] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927487] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927496] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:37:04.927503] [W] [thread 364235] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:37:04.927504] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927505] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927507] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927517] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927520] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.927530] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[11:37:04.927532] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.927534] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.927538] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[11:37:04.927553] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[11:37:04.927555] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.927556] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.927558] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927559] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.927562] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:37:04.927565] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927566] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:37:04.927567] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:37:04.927591] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[11:37:04.927597] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927599] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927600] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:37:04.927602] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927609] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927620] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927623] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.927635] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.927636] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:37:04.927643] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[11:37:04.927645] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927646] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.927647] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927648] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.927652] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927653] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927661] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.927663] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927664] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.927676] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[11:37:04.927686] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927688] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927690] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[11:37:04.927692] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[11:37:04.927717] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[11:37:04.927726] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927727] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.927730] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:37:04.927732] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927733] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:37:04.927734] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:37:04.927736] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:37:04.927740] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927742] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927744] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:37:04.927746] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927752] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927761] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927764] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.927774] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.927776] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:37:04.927782] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(21) on execution node with id 9[m
[36m[11:37:04.927784] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927785] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.927786] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927789] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.927793] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927795] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927802] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.927803] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927805] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.927808] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[11:37:04.927819] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.927821] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.927835] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:37:04.927837] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[11:37:04.927859] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[11:37:04.927866] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927867] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.927870] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:37:04.927872] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927873] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:37:04.927874] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:37:04.927877] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:37:04.927880] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927882] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927883] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[11:37:04.927885] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927890] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.927899] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[11:37:04.927907] [W] [thread 364235] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[11:37:04.927909] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927910] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927912] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.927922] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.927925] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.927937] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[11:37:04.927939] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.927940] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.927945] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[11:37:04.927961] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[11:37:04.927963] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.927965] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.927967] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.927968] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.927971] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:37:04.927973] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.927975] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:37:04.927976] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:37:04.927979] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[11:37:04.927984] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.927986] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.927987] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:37:04.927990] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.927994] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.928003] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.928006] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.928018] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.928020] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:37:04.928026] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[11:37:04.928028] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928029] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.928031] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928032] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.928036] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928038] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.928046] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.928047] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928049] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.928052] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[11:37:04.928062] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928064] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.928067] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[11:37:04.928069] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[11:37:04.928119] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[11:37:04.928128] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928129] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.928133] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:37:04.928134] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.928136] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:37:04.928138] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:37:04.928141] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:37:04.928145] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.928146] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.928148] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:37:04.928150] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.928156] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.928166] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[11:37:04.928169] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.928181] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.928182] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:37:04.928189] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(22) on execution node with id 10[m
[36m[11:37:04.928191] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928196] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.928197] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928200] [D] [thread 364235] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[11:37:04.928203] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928205] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.928212] [D] [thread 364235] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[11:37:04.928214] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928215] [D] [thread 364235] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[11:37:04.928220] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[11:37:04.928234] [D] [thread 364235] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[11:37:04.928236] [D] [thread 364235] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[11:37:04.928239] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:37:04.928240] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[11:37:04.928262] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[11:37:04.928269] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928270] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.928273] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[11:37:04.928275] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.928276] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[11:37:04.928277] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[11:37:04.928280] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[11:37:04.928284] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.928285] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.928287] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[11:37:04.928289] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.928293] [D] [thread 364235] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[11:37:04.928303] [D] [thread 364235] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[11:37:04.928311] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.928361] [D] [thread 364235] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[11:37:04.928365] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[11:37:04.928367] [W] [thread 364235] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[11:37:04.928374] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[11:37:04.928392] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[11:37:04.928394] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.928396] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.928399] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928400] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.928404] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:37:04.928407] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.928408] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[11:37:04.928410] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[11:37:04.928413] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[11:37:04.928419] [D] [thread 364235] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[11:37:04.928421] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[11:37:04.928423] [I] [thread 364235] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[11:37:04.928426] [D] [thread 364235] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[11:37:04.928429] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.928431] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.928432] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.928434] [D] [thread 364235] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[11:37:04.928444] [D] [thread 364235] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[11:37:04.928452] [I] [thread 364235] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[11:37:04.928460] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.928472] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[11:37:04.928485] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.928490] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:37:04.928492] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[11:37:04.928494] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.928523] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.928526] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.928528] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[11:37:04.928542] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.928559] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.928561] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.928567] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.928569] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.928573] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.928575] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.928579] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.928580] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.928581] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.928594] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.928612] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.928614] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.928620] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928622] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.928624] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[11:37:04.928626] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[11:37:04.928647] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[11:37:04.928689] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[11:37:04.928699] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[11:37:04.928764] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[11:37:04.928801] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::23::0::0}) as new root of the plan.[m
[36m[11:37:04.928803] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.928804] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.928812] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[11:37:04.928826] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.928852] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.928854] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.928856] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928858] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.928862] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.928866] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.928867] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.928869] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.928873] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[11:37:04.928882] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.928883] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.928884] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.928886] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.928890] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.928893] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[11:37:04.928903] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[11:37:04.928919] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::26::0::0}) as new root of the plan.[m
[36m[11:37:04.928921] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.928922] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.928927] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[11:37:04.928940] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.928978] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.928980] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.928982] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.928984] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.928987] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.928989] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.928990] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.928991] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.928994] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[11:37:04.928999] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.929000] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.929001] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.929003] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929005] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.929007] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[11:37:04.929036] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[11:37:04.929054] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::29::0::0}) as new root of the plan.[m
[36m[11:37:04.929056] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929057] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.929062] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[11:37:04.929075] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.929102] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929103] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.929106] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929107] [D] [thread 364235] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[11:37:04.929110] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.929112] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.929114] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.929115] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.929118] [D] [thread 364235] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[11:37:04.929123] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.929125] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.929135] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.929136] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929139] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.929141] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.929155] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.929157] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.929159] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929160] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.929167] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[11:37:04.929170] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.929172] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.929209] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.929211] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.929213] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.929214] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929216] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:37:04.929222] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929230] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[11:37:04.929245] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929251] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:37:04.929252] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[11:37:04.929255] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929285] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.929292] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.929295] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.929300] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929312] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.929315] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929322] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.929323] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929329] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.929331] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929336] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.929338] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929341] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.929342] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929344] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.929352] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.929367] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.929368] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.929371] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929372] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.929374] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[11:37:04.929375] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[11:37:04.929382] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[11:37:04.929413] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(18) as root operator.[m
[36m[11:37:04.929422] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.929431] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.929433] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:37:04.929441] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[11:37:04.929455] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::35::0::0}) as new root of the plan.[m
[36m[11:37:04.929457] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929458] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.929463] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[11:37:04.929476] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:43395)}) as new root of the plan.[m
[36m[11:37:04.929501] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929503] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.929515] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929516] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.929521] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.929523] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.929524] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.929525] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.929529] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.929532] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.929534] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.929535] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:37:04.929536] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929539] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.929541] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.929551] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.929553] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:37:04.929578] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[11:37:04.929595] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::38::0::0}) as new root of the plan.[m
[36m[11:37:04.929597] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929598] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.929603] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[11:37:04.929616] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.929642] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929643] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.929645] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929646] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.929649] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.929651] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.929652] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.929653] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.929656] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:37:04.929658] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.929660] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.929661] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.929662] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929668] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:37:04.929669] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.929680] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.929682] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:37:04.929688] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[11:37:04.929701] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::41::0::0}) as new root of the plan.[m
[36m[11:37:04.929703] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929704] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.929709] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[11:37:04.929722] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.929747] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929748] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.929750] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929751] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.929754] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.929756] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.929757] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.929758] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.929761] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:37:04.929763] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.929765] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.929766] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.929767] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929769] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:37:04.929770] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.929780] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.929781] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:37:04.929804] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[11:37:04.929820] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::44::0::0}) as new root of the plan.[m
[36m[11:37:04.929822] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929823] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.929828] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[11:37:04.929840] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.929866] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.929867] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.929869] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929871] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.929873] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.929875] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.929877] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.929878] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.929881] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:37:04.929884] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.929885] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.929887] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.929888] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929889] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:37:04.929891] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.929902] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.929903] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.929905] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.929906] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.929911] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[11:37:04.929913] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.929914] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.929936] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.929937] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.929938] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.929940] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.929941] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:37:04.929945] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929950] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[11:37:04.929955] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929960] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:37:04.929961] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[11:37:04.929963] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.929977] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.929981] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.929984] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[11:37:04.929988] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.929999] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930003] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930010] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930012] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930017] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930018] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930023] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930024] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930027] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930029] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930031] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930032] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930033] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.930041] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.930051] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.930053] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.930055] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930056] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.930058] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[11:37:04.930059] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[32m[11:37:04.930063] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[11:37:04.930087] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(19) as root operator.[m
[36m[11:37:04.930094] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.930101] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.930102] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:37:04.930130] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[11:37:04.930144] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::50::0::0}) as new root of the plan.[m
[36m[11:37:04.930146] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930147] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930151] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[11:37:04.930161] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:37715)}) as new root of the plan.[m
[36m[11:37:04.930181] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930182] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930184] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930185] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930188] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.930190] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930191] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.930192] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.930195] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.930198] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.930199] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.930200] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:37:04.930201] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930204] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.930206] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.930214] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.930223] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:37:04.930229] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[11:37:04.930240] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::53::0::0}) as new root of the plan.[m
[36m[11:37:04.930242] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930243] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930247] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[11:37:04.930257] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:43395)}) as new root of the plan.[m
[36m[11:37:04.930282] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930283] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930291] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930292] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930295] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.930296] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930297] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.930298] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.930301] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.930303] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.930304] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.930305] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:37:04.930306] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930308] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:37:04.930311] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.930320] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.930321] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:37:04.930341] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[11:37:04.930354] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::56::0::0}) as new root of the plan.[m
[36m[11:37:04.930356] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930357] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930361] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[11:37:04.930371] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.930391] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930392] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930394] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930395] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930405] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.930406] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930407] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.930408] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.930411] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:37:04.930414] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.930415] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.930416] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.930417] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930418] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:37:04.930420] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.930429] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.930431] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:37:04.930436] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[11:37:04.930447] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::59::0::0}) as new root of the plan.[m
[36m[11:37:04.930448] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930449] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930453] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[36m[11:37:04.930464] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.930484] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930485] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930487] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930488] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930491] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.930492] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930493] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.930493] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.930496] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:37:04.930498] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.930499] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.930500] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.930501] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930502] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:37:04.930503] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.930511] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.930512] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:37:04.930531] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[11:37:04.930545] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::62::0::0}) as new root of the plan.[m
[36m[11:37:04.930550] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930552] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930556] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[11:37:04.930567] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.930587] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930588] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930590] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930591] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930594] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.930595] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930596] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.930597] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.930600] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:37:04.930602] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.930603] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.930604] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.930605] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930606] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:37:04.930607] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.930615] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.930616] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.930618] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930619] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.930624] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[11:37:04.930626] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.930627] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.930651] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.930652] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.930653] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.930661] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930664] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:37:04.930669] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.930675] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[11:37:04.930680] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.930685] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:37:04.930687] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[11:37:04.930688] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.930703] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.930708] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.930710] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[11:37:04.930714] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930729] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930731] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930739] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930740] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930747] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930748] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930754] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930755] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930760] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930767] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930771] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930772] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930775] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.930776] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.930777] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.930786] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.930797] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.930798] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.930800] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930801] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.930803] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[11:37:04.930810] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[11:37:04.930814] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[11:37:04.930836] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(20) as root operator.[m
[36m[11:37:04.930843] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.930850] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.930852] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:37:04.930859] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[11:37:04.930888] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::68::0::0}) as new root of the plan.[m
[36m[11:37:04.930890] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930891] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930896] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[11:37:04.930907] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:46609)}) as new root of the plan.[m
[36m[11:37:04.930926] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930928] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.930930] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.930931] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.930934] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.930936] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.930937] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.930939] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.930942] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:37:04.930945] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.930946] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.930947] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:37:04.930949] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.930951] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.930953] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.930962] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.930963] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:37:04.930967] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[11:37:04.930978] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::71::0::0}) as new root of the plan.[m
[36m[11:37:04.930979] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.930980] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.930984] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[11:37:04.930994] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:37715)}) as new root of the plan.[m
[36m[11:37:04.931014] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931015] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931017] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931018] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931020] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.931021] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931022] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.931023] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.931026] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.931028] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.931029] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.931030] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:37:04.931031] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931033] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:37:04.931034] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.931041] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.931043] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:37:04.931047] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[11:37:04.931082] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::74::0::0}) as new root of the plan.[m
[36m[11:37:04.931084] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931085] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931089] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[11:37:04.931099] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:43395)}) as new root of the plan.[m
[36m[11:37:04.931119] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931120] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931122] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931127] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931130] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.931132] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931133] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.931134] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.931137] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.931139] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.931140] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.931141] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:37:04.931143] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931144] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:37:04.931145] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.931154] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.931156] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:37:04.931160] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[11:37:04.931170] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::77::0::0}) as new root of the plan.[m
[36m[11:37:04.931172] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931173] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931177] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[11:37:04.931187] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.931206] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931208] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931210] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931211] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931213] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.931214] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931215] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.931216] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.931219] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:37:04.931221] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.931222] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.931223] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.931224] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931225] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:37:04.931227] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.931235] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.931236] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:37:04.931240] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[11:37:04.931258] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::80::0::0}) as new root of the plan.[m
[36m[11:37:04.931259] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931260] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931275] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[36m[11:37:04.931287] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.931307] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931308] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931319] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931321] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931323] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.931325] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931326] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.931327] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.931330] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:37:04.931333] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.931334] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.931335] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.931339] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931341] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:37:04.931342] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.931351] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.931352] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:37:04.931358] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 83[m
[36m[11:37:04.931368] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::83::0::0}) as new root of the plan.[m
[36m[11:37:04.931370] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931371] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931375] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[36m[11:37:04.931385] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.931404] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931406] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931407] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931408] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931410] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.931411] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931412] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.931413] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.931430] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:37:04.931433] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.931434] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.931435] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.931436] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931438] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:37:04.931442] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.931452] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.931454] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.931455] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931456] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.931461] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 86[m
[36m[11:37:04.931464] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.931465] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.931491] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.931492] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.931493] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.931494] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931496] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:37:04.931501] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.931507] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[11:37:04.931513] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.931517] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:37:04.931518] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[11:37:04.931520] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.931535] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.931540] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.931543] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[11:37:04.931550] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931566] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931567] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931577] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931578] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931586] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931587] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931593] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931595] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931600] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931601] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931605] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931607] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931610] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931611] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931614] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.931615] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.931616] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.931625] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.931635] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.931636] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:37:04.931637] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931639] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.931640] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[11:37:04.931641] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[32m[11:37:04.931645] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[11:37:04.931668] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(21) as root operator.[m
[36m[11:37:04.931676] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.931682] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.931684] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[32m[11:37:04.931690] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[11:37:04.931701] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::89::0::0}) as new root of the plan.[m
[36m[11:37:04.931703] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931704] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931708] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[11:37:04.931718] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:34131)}) as new root of the plan.[m
[36m[11:37:04.931737] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931739] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931741] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931742] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931744] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.931745] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931746] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:37:04.931748] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:37:04.931772] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:37:04.931776] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.931777] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:37:04.931778] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:37:04.931778] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931781] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.931782] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.931792] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.931793] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:37:04.931798] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[11:37:04.931810] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::92::0::0}) as new root of the plan.[m
[36m[11:37:04.931811] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931812] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931816] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[11:37:04.931826] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:46609)}) as new root of the plan.[m
[36m[11:37:04.931846] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931848] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931849] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931850] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931853] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.931854] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931855] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.931856] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.931859] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:37:04.931861] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.931862] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.931863] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:37:04.931864] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931866] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  8[m
[36m[11:37:04.931867] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.931874] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.931875] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:37:04.931881] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[11:37:04.931891] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::95::0::0}) as new root of the plan.[m
[36m[11:37:04.931893] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931894] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931897] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 100[m
[36m[11:37:04.931907] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:37715)}) as new root of the plan.[m
[36m[11:37:04.931927] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931928] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.931930] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.931931] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.931933] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.931934] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.931935] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.931936] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.931939] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.931941] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.931942] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.931943] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:37:04.931943] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.931945] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:37:04.931946] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.931970] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.931972] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:37:04.931977] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[11:37:04.931988] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::98::0::0}) as new root of the plan.[m
[36m[11:37:04.931990] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.931990] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.931995] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[11:37:04.932005] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:43395)}) as new root of the plan.[m
[36m[11:37:04.932025] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932026] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932028] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932029] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932032] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.932033] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932034] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.932035] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.932037] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.932040] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.932041] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.932042] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:37:04.932042] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932044] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:37:04.932045] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.932053] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.932054] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:37:04.932059] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[11:37:04.932070] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::101::0::0}) as new root of the plan.[m
[36m[11:37:04.932071] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932072] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932076] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[36m[11:37:04.932086] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.932106] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932107] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932109] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932110] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932116] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.932117] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932118] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.932119] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.932121] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:37:04.932124] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.932125] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.932126] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.932127] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932128] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:37:04.932129] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.932137] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.932139] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:37:04.932156] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[11:37:04.932169] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::104::0::0}) as new root of the plan.[m
[36m[11:37:04.932170] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932171] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932175] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 109[m
[36m[11:37:04.932185] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.932205] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932207] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932209] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932210] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932212] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.932213] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932214] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.932218] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.932221] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:37:04.932223] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.932224] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.932225] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.932226] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932228] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:37:04.932230] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.932238] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.932239] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:37:04.932244] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[36m[11:37:04.932254] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::107::0::0}) as new root of the plan.[m
[36m[11:37:04.932255] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932256] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932260] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 112[m
[36m[11:37:04.932270] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.932290] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932291] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932292] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932294] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932296] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.932297] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932298] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.932299] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.932301] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:37:04.932303] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.932304] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.932305] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.932306] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932308] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:37:04.932309] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.932364] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.932368] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.932370] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932371] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.932397] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 110[m
[36m[11:37:04.932402] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.932404] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.932439] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.932441] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.932442] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.932443] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932445] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:37:04.932452] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.932459] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[11:37:04.932465] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.932470] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:37:04.932471] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[11:37:04.932473] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.932490] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.932496] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.932500] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[11:37:04.932505] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932523] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932525] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932536] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932538] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932547] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932548] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932556] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932557] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932564] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932565] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932571] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932572] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932576] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932578] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932581] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932583] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932585] [D] [thread 364235] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[11:37:04.932586] [D] [thread 364235] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[11:37:04.932587] [D] [thread 364235] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[11:37:04.932598] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.932609] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.932610] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:37:04.932613] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932614] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.932616] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[11:37:04.932617] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[11:37:04.932631] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 115[m
[36m[11:37:04.932657] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(22) as root operator.[m
[36m[11:37:04.932666] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.932673] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.932674] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[32m[11:37:04.932681] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 113[m
[36m[11:37:04.932693] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:44457 1::113::0::0}) as new root of the plan.[m
[36m[11:37:04.932694] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932695] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932700] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 118[m
[36m[11:37:04.932710] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38587)}) as new root of the plan.[m
[36m[11:37:04.932729] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932730] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932739] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932740] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932744] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:37:04.932745] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932747] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[11:37:04.932748] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[11:37:04.932752] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[11:37:04.932755] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:37:04.932756] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[11:37:04.932757] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[11:37:04.932759] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932762] [D] [thread 364235] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[11:37:04.932764] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.932773] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.932774] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[32m[11:37:04.932799] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 116[m
[36m[11:37:04.932813] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::116::0::0}) as new root of the plan.[m
[36m[11:37:04.932814] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932815] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932819] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 121[m
[36m[11:37:04.932830] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:34131)}) as new root of the plan.[m
[36m[11:37:04.932850] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932852] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932854] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932855] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932857] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[11:37:04.932858] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932860] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[11:37:04.932861] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[11:37:04.932863] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[11:37:04.932866] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:37:04.932867] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[11:37:04.932868] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[11:37:04.932869] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932870] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  9[m
[36m[11:37:04.932872] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.932880] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.932881] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[32m[11:37:04.932886] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 119[m
[36m[11:37:04.932896] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::119::0::0}) as new root of the plan.[m
[36m[11:37:04.932898] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932899] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.932903] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 124[m
[36m[11:37:04.932913] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:46609)}) as new root of the plan.[m
[36m[11:37:04.932933] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.932934] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.932936] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.932937] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.932940] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[11:37:04.932941] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.932942] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[11:37:04.932943] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[11:37:04.932945] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[11:37:04.932952] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:37:04.932953] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[11:37:04.932954] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[11:37:04.932955] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.932957] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  8[m
[36m[11:37:04.932958] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.932966] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.932967] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[32m[11:37:04.932985] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 122[m
[36m[11:37:04.932997] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::122::0::0}) as new root of the plan.[m
[36m[11:37:04.932999] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933000] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.933003] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 127[m
[36m[11:37:04.933013] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:37715)}) as new root of the plan.[m
[36m[11:37:04.933037] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933038] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.933040] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933041] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.933044] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[11:37:04.933045] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.933046] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[11:37:04.933047] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[11:37:04.933050] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[11:37:04.933052] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:37:04.933053] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[11:37:04.933054] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[11:37:04.933055] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933057] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  7[m
[36m[11:37:04.933058] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.933066] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.933067] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[11:37:04.933072] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 125[m
[36m[11:37:04.933082] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::125::0::0}) as new root of the plan.[m
[36m[11:37:04.933083] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933084] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.933088] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 130[m
[36m[11:37:04.933098] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:43395)}) as new root of the plan.[m
[36m[11:37:04.933118] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933119] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.933121] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933122] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.933125] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[11:37:04.933126] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.933127] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[11:37:04.933128] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[11:37:04.933131] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[11:37:04.933133] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:37:04.933134] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[11:37:04.933135] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[11:37:04.933136] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933137] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  6[m
[36m[11:37:04.933138] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.933146] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.933147] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[11:37:04.933165] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 128[m
[36m[11:37:04.933177] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::128::0::0}) as new root of the plan.[m
[36m[11:37:04.933178] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933179] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.933183] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 133[m
[36m[11:37:04.933193] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:43915)}) as new root of the plan.[m
[36m[11:37:04.933213] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933214] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.933216] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933217] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.933220] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[11:37:04.933222] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.933223] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[11:37:04.933224] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[11:37:04.933226] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[11:37:04.933229] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:37:04.933230] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[11:37:04.933231] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[11:37:04.933232] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933233] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[11:37:04.933235] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.933242] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.933243] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[11:37:04.933248] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 131[m
[36m[11:37:04.933258] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::131::0::0}) as new root of the plan.[m
[36m[11:37:04.933260] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933261] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.933265] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 136[m
[36m[11:37:04.933275] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:41447)}) as new root of the plan.[m
[36m[11:37:04.933295] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933296] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.933298] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933299] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.933302] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[11:37:04.933303] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.933304] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[11:37:04.933305] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[11:37:04.933307] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[11:37:04.933309] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:37:04.933310] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[11:37:04.933312] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[11:37:04.933313] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933315] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[11:37:04.933316] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.933324] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.933325] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[11:37:04.933343] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 134[m
[36m[11:37:04.933355] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::134::0::0}) as new root of the plan.[m
[36m[11:37:04.933357] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933358] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:04.933362] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 139[m
[36m[11:37:04.933372] [D] [thread 364235] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:35213)}) as new root of the plan.[m
[36m[11:37:04.933391] [D] [thread 364235] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:04.933393] [D] [thread 364235] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:04.933395] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933396] [D] [thread 364235] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[11:37:04.933399] [D] [thread 364235] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[11:37:04.933400] [D] [thread 364235] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[11:37:04.933401] [W] [thread 364235] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[11:37:04.933402] [D] [thread 364235] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[11:37:04.933405] [D] [thread 364235] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[11:37:04.933407] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:37:04.933409] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[11:37:04.933410] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[11:37:04.933410] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933412] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[11:37:04.933414] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.933421] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.933422] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.933424] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933425] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[11:37:04.933430] [I] [thread 364235] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 137[m
[36m[11:37:04.933432] [D] [thread 364235] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[11:37:04.933434] [D] [thread 364235] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[11:37:04.933463] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:37:04.933465] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[11:37:04.933466] [D] [thread 364235] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[11:37:04.933467] [D] [thread 364235] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[11:37:04.933469] [D] [thread 364235] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[11:37:04.933474] [D] [thread 364235] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[11:37:04.933483] [D] [thread 364235] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[11:37:04.933484] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:37:04.933485] [D] [thread 364235] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[11:37:04.933488] [D] [thread 364235] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[11:37:04.933491] [D] [thread 364235] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[11:37:04.933513] [D] [thread 364235] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[11:37:04.933517] [D] [thread 364235] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:37:04.933519] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933521] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.933555] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933560] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933562] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933568] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933571] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933711] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.933747] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.933767] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.933777] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933793] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933796] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933799] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933802] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933804] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933816] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933823] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933826] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933827] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933829] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933831] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933841] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933848] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933850] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933852] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933854] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933855] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933865] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933872] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933875] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933877] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933878] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933880] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933907] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933916] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933919] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933921] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933923] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933925] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.933934] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.933937] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.933939] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.933951] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.933954] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.933956] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.933958] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.933960] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934045] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.934061] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.934096] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.934106] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934116] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934120] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934122] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934124] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934126] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934136] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934143] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934145] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934146] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934148] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934150] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934168] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934176] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934179] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934181] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934183] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934184] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934194] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934201] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934203] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934205] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934207] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934208] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934218] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934220] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.934222] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.934236] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934240] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934242] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934244] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934246] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934344] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.934362] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.934381] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.934391] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934401] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934404] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934406] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934408] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934410] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934445] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934455] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934458] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934459] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934461] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934463] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934472] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934479] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934481] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934483] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934484] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934486] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934495] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934497] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.934499] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.934509] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934513] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934514] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934517] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934527] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934610] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.934643] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.934669] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.934681] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934695] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934698] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934700] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934703] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934705] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934715] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934722] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934724] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934726] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934728] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934730] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934738] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934741] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.934742] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.934753] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934757] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934759] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934761] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934763] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934857] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.934873] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.934892] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.934900] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934913] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934916] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934917] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934920] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934922] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.934933] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.934935] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.934936] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.934948] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.934952] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.934953] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.934955] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.934957] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935050] [D] [thread 364235] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[11:37:04.935066] [I] [thread 364235] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[11:37:04.935085] [I] [thread 364235] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.935107] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935113] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.935114] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.935133] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935139] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935142] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[11:37:04.935147] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935148] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935175] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935177] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.935178] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.935187] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935190] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935191] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935194] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935196] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935204] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935212] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935214] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935219] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935226] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935228] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935238] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935245] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935248] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935250] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935252] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935254] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935263] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935270] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935272] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935274] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935276] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935278] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935289] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935297] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935299] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935301] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935302] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935304] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935327] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935336] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935339] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935340] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935342] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935344] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935356] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935358] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.935360] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.935367] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935369] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935371] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935372] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935374] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935383] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935389] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935392] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935393] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935395] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935396] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935405] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935413] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935415] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935416] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935418] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935420] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935429] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935436] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935438] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935440] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935441] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935443] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935452] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935459] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935462] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935463] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935465] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935467] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935489] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935498] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935500] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935502] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935504] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935506] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935514] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935516] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.935518] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.935525] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935528] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935536] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935538] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935540] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935549] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935558] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935561] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935562] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935564] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935566] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935576] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935583] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935585] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935587] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935589] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935590] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935600] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935607] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935610] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935611] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935619] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935621] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935632] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935645] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935649] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935650] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935652] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935654] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935672] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935681] [D] [thread 364235] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[11:37:04.935684] [D] [thread 364235] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[11:37:04.935685] [D] [thread 364235] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[11:37:04.935687] [D] [thread 364235] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[11:37:04.935689] [D] [thread 364235] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[11:37:04.935698] [D] [thread 364235] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[11:37:04.935706] [D] [thread 364235] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[11:37:04.936907] [D] [thread 364235] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::32::0::0})
|    SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::47::0::0})
|    SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::65::0::0})
|    SOURCE(86,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::86::0::0})
|    SOURCE(110,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::110::0::0})
|    SOURCE(137,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::137::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::29::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::44::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:19)
|  |  SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::62::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:25)
|  |  SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::83::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:32)
|  |  SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::107::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:40)
|  |  SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:35213)})
|  |    SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::134::0::0})
|  |--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::26::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  |  SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::41::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:18)
|  |  |  SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::59::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:24)
|  |  |  SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::80::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:31)
|  |  |  SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::104::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:39)
|  |  |  SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:41447)})
|  |  |    SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::131::0::0})
|  |  |--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  |  SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::23::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  |  |  SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::38::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  |  |  SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::56::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:23)
|  |  |  |  SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::77::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:30)
|  |  |  |  SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::101::0::0})
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:38)
|  |  |  |  SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:43915)})
|  |  |  |    SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::128::0::0})
|  |  |  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  |  |  SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    CENTRALWINDOW(17)
|  |  |  |  |      WATERMARKASSIGNER(6)
|  |  |  |  |        SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  |  |  |  SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::35::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  |  |  |  SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::53::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:22)
|  |  |  |  |  SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::74::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:29)
|  |  |  |  |  SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::98::0::0})
|  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:37)
|  |  |  |  |  SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:43395)})
|  |  |  |  |    SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::125::0::0})
|  |  |  |  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  |  |  |  SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.32:37715)})
|  |  |  |  |  |    CENTRALWINDOW(18)
|  |  |  |  |  |      WATERMARKASSIGNER(8)
|  |  |  |  |  |        SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  |  |  |  |  SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:37715)})
|  |  |  |  |  |    SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::50::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:21)
|  |  |  |  |  |  SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:37715)})
|  |  |  |  |  |    SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::71::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:28)
|  |  |  |  |  |  SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:37715)})
|  |  |  |  |  |    SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::95::0::0})
|  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:36)
|  |  |  |  |  |  SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:37715)})
|  |  |  |  |  |    SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::122::0::0})
|  |  |  |  |  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  |  |  |  |  SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.33:46609)})
|  |  |  |  |  |  |    CENTRALWINDOW(19)
|  |  |  |  |  |  |      WATERMARKASSIGNER(10)
|  |  |  |  |  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:20)
|  |  |  |  |  |  |  SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:46609)})
|  |  |  |  |  |  |    SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::68::0::0})
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:27)
|  |  |  |  |  |  |  SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:46609)})
|  |  |  |  |  |  |    SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::92::0::0})
|  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:35)
|  |  |  |  |  |  |  SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:46609)})
|  |  |  |  |  |  |    SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::119::0::0})
|  |  |  |  |  |  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  |  |  |  |  |  SINK(70: {NetworkSinkDescriptor(partition=1::68::0::0;nodeLocation=tcp://192.168.2.34:34131)})
|  |  |  |  |  |  |  |    CENTRALWINDOW(20)
|  |  |  |  |  |  |  |      WATERMARKASSIGNER(12)
|  |  |  |  |  |  |  |        SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:26)
|  |  |  |  |  |  |  |  SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:34131)})
|  |  |  |  |  |  |  |    SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::89::0::0})
|  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:34)
|  |  |  |  |  |  |  |  SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:34131)})
|  |  |  |  |  |  |  |    SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::116::0::0})
|  |  |  |  |  |  |  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  |  |  |  |  |  |  SINK(91: {NetworkSinkDescriptor(partition=1::89::0::0;nodeLocation=tcp://192.168.2.35:38587)})
|  |  |  |  |  |  |  |  |    CENTRALWINDOW(21)
|  |  |  |  |  |  |  |  |      WATERMARKASSIGNER(14)
|  |  |  |  |  |  |  |  |        SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:33)
|  |  |  |  |  |  |  |  |  SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38587)})
|  |  |  |  |  |  |  |  |    SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:44457 1::113::0::0})
|  |  |  |  |  |  |  |  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  |  |  |  |  |  |  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  |  |  |  |  |  |  |  SINK(115: {NetworkSinkDescriptor(partition=1::113::0::0;nodeLocation=tcp://192.168.2.37:43099)})
|  |  |  |  |  |  |  |  |  |    CENTRALWINDOW(22)
|  |  |  |  |  |  |  |  |  |      WATERMARKASSIGNER(16)
|  |  |  |  |  |  |  |  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:04.936957] [D] [thread 364235] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[11:37:04.936963] [D] [thread 364235] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:37:04.936997] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.936999] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937020] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937022] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937031] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937032] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937039] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937040] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937046] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937047] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937051] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937052] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937055] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937056] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937059] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937060] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937074] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937076] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937085] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937086] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937113] [D] [thread 364235] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[11:37:04.937116] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[11:37:04.937117] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.937119] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.937166] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:41815[m
[36m[11:37:04.937175] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 1[m
[36m[11:37:04.937249] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[11:37:04.937253] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.937337] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.940003] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.940490] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.940601] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.940623] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.940792] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:04.941427] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.941488] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.941503] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.941507] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.941515] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.941656] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.941715] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.941762] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.941780] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.941891] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:04.941902] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.941972] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.942022] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.942086] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.942133] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.942243] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[11:37:04.942301] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.942351] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.942490] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.942540] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.942601] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.942702] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.948603] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 11[m
[36m[11:37:04.948677] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::35::0::0})
[m
[36m[11:37:04.948681] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.948712] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.948782] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.948811] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.948842] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.948857] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.948920] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::35::0::0}[m
[36m[11:37:04.948954] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.948971] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.949029] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.949045] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.949068] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.949084] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.950770] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 16[m
[36m[11:37:04.950837] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::53::0::0})
[m
[36m[11:37:04.950840] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.950870] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.950936] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.950965] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.950995] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.951012] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.951074] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::53::0::0}[m
[36m[11:37:04.951097] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.951114] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.951160] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.951176] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.951199] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.951214] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.952904] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 22[m
[36m[11:37:04.952973] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(79: {NetworkSinkDescriptor(partition=1::77::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  SOURCE(74,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::74::0::0})
[m
[36m[11:37:04.952976] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.953012] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.953079] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.953109] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.953141] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.953157] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.953223] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::74::0::0}[m
[36m[11:37:04.953247] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.953264] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.953311] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.953328] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.953350] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.953366] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.955015] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 29[m
[36m[11:37:04.955089] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(103: {NetworkSinkDescriptor(partition=1::101::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::98::0::0})
[m
[36m[11:37:04.955093] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.955123] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.955188] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.955217] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.955249] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.955264] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.955331] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::98::0::0}[m
[36m[11:37:04.955355] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.955371] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.955419] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.955436] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.955460] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.955475] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.973030] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:41815 queryId=1 querySubPlanId = 37[m
[36m[11:37:04.973100] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(130: {NetworkSinkDescriptor(partition=1::128::0::0;nodeLocation=tcp://192.168.2.31:43395)})
  SOURCE(125,,NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::125::0::0})
[m
[36m[11:37:04.973103] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.973132] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.973203] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.973232] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.973262] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.973278] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.973343] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:46609 1::125::0::0}[m
[36m[11:37:04.973367] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.973384] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.973432] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.973449] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.973472] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.973488] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.975078] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[11:37:04.975210] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.975231] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.975252] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:37313[m
[36m[11:37:04.975256] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37313 queryId=1 querySubPlanId = 2[m
[36m[11:37:04.975324] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.32:37715)})
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[11:37:04.975328] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.975356] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.975429] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.975463] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.975513] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.975530] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.975610] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:04.975644] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.975672] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.975681] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.975685] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.975693] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.975773] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.975840] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.975897] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.975924] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.976008] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:04.976027] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.976087] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.976146] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.976222] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.976282] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.976481] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[11:37:04.976550] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.976616] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.976732] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.976876] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.976961] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.977033] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.980959] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37313 queryId=1 querySubPlanId = 15[m
[36m[11:37:04.981060] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.32:37715)})
  SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::50::0::0})
[m
[36m[11:37:04.981063] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.981093] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.981165] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.981221] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.981256] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.981284] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.981357] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::50::0::0}[m
[36m[11:37:04.981383] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.981402] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.981456] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.981487] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.981513] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.981529] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.983153] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37313 queryId=1 querySubPlanId = 21[m
[36m[11:37:04.983249] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(76: {NetworkSinkDescriptor(partition=1::74::0::0;nodeLocation=tcp://192.168.2.32:37715)})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::71::0::0})
[m
[36m[11:37:04.983253] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.983282] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.983350] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.983408] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.983440] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.983464] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.983532] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::71::0::0}[m
[36m[11:37:04.983568] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.983588] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.983638] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.983668] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.983694] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.983711] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.985364] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37313 queryId=1 querySubPlanId = 28[m
[36m[11:37:04.985559] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(100: {NetworkSinkDescriptor(partition=1::98::0::0;nodeLocation=tcp://192.168.2.32:37715)})
  SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::95::0::0})
[m
[36m[11:37:04.985575] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.985608] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.985679] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.985722] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.985758] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.985785] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.985854] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::95::0::0}[m
[36m[11:37:04.985890] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.985911] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.985962] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.985991] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.986016] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.986032] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.987661] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:37313 queryId=1 querySubPlanId = 36[m
[36m[11:37:04.987747] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(127: {NetworkSinkDescriptor(partition=1::125::0::0;nodeLocation=tcp://192.168.2.32:37715)})
  SOURCE(122,,NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::122::0::0})
[m
[36m[11:37:04.987750] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.987779] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.987847] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.987876] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.987906] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.987921] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.987986] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:34131 1::122::0::0}[m
[36m[11:37:04.988023] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.988042] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.988090] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.988118] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.988142] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.988158] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.989725] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[11:37:04.989760] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:04.989762] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:04.989778] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:44099[m
[36m[11:37:04.989782] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44099 queryId=1 querySubPlanId = 3[m
[36m[11:37:04.989847] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.33:46609)})
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[11:37:04.989851] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.989878] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.989942] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.989970] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990000] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.990015] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990090] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:04.990111] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.990135] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.990144] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.990148] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:04.990156] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.990232] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.990314] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990379] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.990406] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990494] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:04.990515] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:04.990575] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.990634] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990711] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.990768] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.990889] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[11:37:04.990952] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.991011] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.991124] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.991185] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.991257] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:04.991313] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.995021] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44099 queryId=1 querySubPlanId = 20[m
[36m[11:37:04.995122] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(73: {NetworkSinkDescriptor(partition=1::71::0::0;nodeLocation=tcp://192.168.2.33:46609)})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::68::0::0})
[m
[36m[11:37:04.995126] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.995157] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.995228] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.995286] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.995319] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.995347] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.995414] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::68::0::0}[m
[36m[11:37:04.995449] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.995469] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.995519] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.995536] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.995559] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.995575] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.997260] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44099 queryId=1 querySubPlanId = 27[m
[36m[11:37:04.997352] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(97: {NetworkSinkDescriptor(partition=1::95::0::0;nodeLocation=tcp://192.168.2.33:46609)})
  SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::92::0::0})
[m
[36m[11:37:04.997355] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.997384] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.997453] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.997508] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.997540] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.997568] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.997635] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::92::0::0}[m
[36m[11:37:04.997668] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.997687] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.997734] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.997762] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.997787] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.997802] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.999336] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44099 queryId=1 querySubPlanId = 35[m
[36m[11:37:04.999427] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(124: {NetworkSinkDescriptor(partition=1::122::0::0;nodeLocation=tcp://192.168.2.33:46609)})
  SOURCE(119,,NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::119::0::0})
[m
[36m[11:37:04.999431] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:04.999459] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:04.999522] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.999567] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.999600] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.999627] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.999695] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38587 1::119::0::0}[m
[36m[11:37:04.999729] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.999748] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.999796] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.999823] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:04.999848] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:04.999863] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.001481] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[11:37:05.001511] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.001513] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.001530] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:34589[m
[36m[11:37:05.001534] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:34589 queryId=1 querySubPlanId = 4[m
[36m[11:37:05.001599] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(70: {NetworkSinkDescriptor(partition=1::68::0::0;nodeLocation=tcp://192.168.2.34:34131)})
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[11:37:05.001603] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.001630] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.001697] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.001726] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.001758] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.001775] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.001852] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:05.001871] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.001895] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.001904] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.001908] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.001916] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.001993] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.002081] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.002149] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.002180] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.002282] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:05.002307] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.002376] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.002440] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.002518] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.002583] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.002716] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[11:37:05.002778] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.002839] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.002952] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.003013] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.003086] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.003143] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.006807] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:34589 queryId=1 querySubPlanId = 26[m
[36m[11:37:05.006948] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(94: {NetworkSinkDescriptor(partition=1::92::0::0;nodeLocation=tcp://192.168.2.34:34131)})
  SOURCE(89,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::89::0::0})
[m
[36m[11:37:05.006977] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.007010] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.007080] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.007113] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.007144] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.007179] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.007247] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::89::0::0}[m
[36m[11:37:05.007281] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.007301] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.007352] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.007380] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.007405] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.007421] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.009023] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:34589 queryId=1 querySubPlanId = 34[m
[36m[11:37:05.009114] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(121: {NetworkSinkDescriptor(partition=1::119::0::0;nodeLocation=tcp://192.168.2.34:34131)})
  SOURCE(116,,NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::116::0::0})
[m
[36m[11:37:05.009118] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.009145] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.009211] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.009254] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.009285] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.009313] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.009377] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:43099 1::116::0::0}[m
[36m[11:37:05.009412] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.009431] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.009478] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.009494] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.009517] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.009533] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.011083] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[11:37:05.011120] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.011122] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.011137] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:46653[m
[36m[11:37:05.011141] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:46653 queryId=1 querySubPlanId = 5[m
[36m[11:37:05.011205] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(91: {NetworkSinkDescriptor(partition=1::89::0::0;nodeLocation=tcp://192.168.2.35:38587)})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[11:37:05.011209] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.011236] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.011303] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.011333] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.011365] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.011383] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.011457] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:05.011494] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.011521] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.011530] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.011534] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.011542] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.011622] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.011676] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.011745] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.011773] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.011860] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:05.011880] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.011941] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.012010] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.012092] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.012155] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.012272] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[11:37:05.012364] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.012458] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.012581] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.012646] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.012714] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.012773] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.016368] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:46653 queryId=1 querySubPlanId = 33[m
[36m[11:37:05.016464] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(118: {NetworkSinkDescriptor(partition=1::116::0::0;nodeLocation=tcp://192.168.2.35:38587)})
  SOURCE(113,,NetworkSourceDescriptor{tcp://192.168.2.38:44457 1::113::0::0})
[m
[36m[11:37:05.016468] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.016498] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.016568] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.016624] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.016658] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.016685] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.016754] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:44457 1::113::0::0}[m
[36m[11:37:05.016788] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.016808] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.016858] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.016886] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.016911] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.016926] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.018483] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[11:37:05.018555] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.018557] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.018574] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:33711[m
[36m[11:37:05.018578] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:33711 queryId=1 querySubPlanId = 6[m
[36m[11:37:05.018644] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(115: {NetworkSinkDescriptor(partition=1::113::0::0;nodeLocation=tcp://192.168.2.37:43099)})
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[11:37:05.018647] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.018675] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.018744] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.018778] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.018824] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.018841] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.018918] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[11:37:05.018951] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.018977] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.018986] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.018991] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[11:37:05.018999] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.019076] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.019143] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.019203] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.019222] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.019308] [D] [thread 364235] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[11:37:05.019331] [D] [thread 364235] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[11:37:05.019393] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.019454] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.019532] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.019590] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.019703] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[11:37:05.019765] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.019870] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.019992] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.020057] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.020131] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[11:37:05.020188] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.023733] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[11:37:05.023771] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.023773] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.023790] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:38255[m
[36m[11:37:05.023794] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:38255 queryId=1 querySubPlanId = 7[m
[36m[11:37:05.023886] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::32::0::0})
  SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::47::0::0})
  SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::65::0::0})
  SOURCE(86,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::86::0::0})
  SOURCE(110,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::110::0::0})
  SOURCE(137,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::137::0::0})
[m
[36m[11:37:05.023891] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.023918] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.024039] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024071] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024106] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024159] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024234] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::32::0::0}[m
[36m[11:37:05.024269] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024290] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024400] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024434] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024461] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024478] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024535] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::47::0::0}[m
[36m[11:37:05.024567] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024587] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024627] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024643] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024665] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024681] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024731] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::65::0::0}[m
[36m[11:37:05.024766] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024785] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024821] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024848] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024873] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024889] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.024938] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::86::0::0}[m
[36m[11:37:05.024967] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.024985] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025021] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025048] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025072] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025088] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025138] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::110::0::0}[m
[36m[11:37:05.025167] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025186] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025223] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025239] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025262] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025278] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025334] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::137::0::0}[m
[36m[11:37:05.025363] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025380] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025417] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025446] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.025471] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.025487] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.028843] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[11:37:05.028877] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.028879] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.028897] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:35873[m
[36m[11:37:05.028901] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 8[m
[36m[11:37:05.028965] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::23::0::0})
[m
[36m[11:37:05.028969] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.029000] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.029077] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.029108] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.029143] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.029159] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.029233] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::23::0::0}[m
[36m[11:37:05.029256] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.029274] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.029323] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.029340] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.029363] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.029379] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.030990] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 12[m
[36m[11:37:05.031083] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::38::0::0})
[m
[36m[11:37:05.031087] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.031114] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.031179] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.031207] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.031238] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.031254] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.031318] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::38::0::0}[m
[36m[11:37:05.031341] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.031359] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.031406] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.031422] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.031445] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.031460] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.033082] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 17[m
[36m[11:37:05.033173] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(61: {NetworkSinkDescriptor(partition=1::59::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::56::0::0})
[m
[36m[11:37:05.033176] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.033204] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.033270] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.033299] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.033330] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.033345] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.033418] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::56::0::0}[m
[36m[11:37:05.033450] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.033468] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.033516] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.033568] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.033594] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.033610] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.035135] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 23[m
[36m[11:37:05.035223] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(82: {NetworkSinkDescriptor(partition=1::80::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(77,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::77::0::0})
[m
[36m[11:37:05.035226] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.035254] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.035317] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.035347] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.035379] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.035394] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.035460] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::77::0::0}[m
[36m[11:37:05.035483] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.035500] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.035546] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.035563] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.035587] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.035602] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.037195] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 30[m
[36m[11:37:05.037283] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(106: {NetworkSinkDescriptor(partition=1::104::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(101,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::101::0::0})
[m
[36m[11:37:05.037287] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.037314] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.037379] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.037407] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.037437] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.037452] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.037517] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::101::0::0}[m
[36m[11:37:05.037541] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.037558] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.037606] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.037622] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.037645] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.037660] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.039277] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35873 queryId=1 querySubPlanId = 38[m
[36m[11:37:05.039410] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(133: {NetworkSinkDescriptor(partition=1::131::0::0;nodeLocation=tcp://192.168.2.30:43915)})
  SOURCE(128,,NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::128::0::0})
[m
[36m[11:37:05.039414] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.039443] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.039509] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.039538] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.039568] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.039584] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.039649] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37715 1::128::0::0}[m
[36m[11:37:05.039687] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.039707] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.039757] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.039773] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.039795] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.039811] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.041563] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[11:37:05.041600] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.041602] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.041619] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:41373[m
[36m[11:37:05.041624] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 9[m
[36m[11:37:05.041682] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::26::0::0})
[m
[36m[11:37:05.041685] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.041713] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.041781] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.041809] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.041839] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.041855] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.041920] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::26::0::0}[m
[36m[11:37:05.041943] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.041960] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.042007] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.042022] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.042044] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.042060] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.043734] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 13[m
[36m[11:37:05.043826] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::41::0::0})
[m
[36m[11:37:05.043829] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.043857] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.043925] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.043954] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.043986] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.044001] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.044065] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::41::0::0}[m
[36m[11:37:05.044088] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.044106] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.044152] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.044169] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.044191] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.044207] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.045879] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 18[m
[36m[11:37:05.045967] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(64: {NetworkSinkDescriptor(partition=1::62::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(59,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::59::0::0})
[m
[36m[11:37:05.045971] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.045998] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.046059] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.046088] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.046118] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.046134] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.046197] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::59::0::0}[m
[36m[11:37:05.046221] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.046238] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.046285] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.046301] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.046324] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.046339] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.047970] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 24[m
[36m[11:37:05.048062] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(85: {NetworkSinkDescriptor(partition=1::83::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::80::0::0})
[m
[36m[11:37:05.048066] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.048093] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.048159] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.048187] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.048218] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.048233] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.048297] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::80::0::0}[m
[36m[11:37:05.048350] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.048373] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.048422] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.048439] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.048463] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.048478] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.050117] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 31[m
[36m[11:37:05.050245] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(109: {NetworkSinkDescriptor(partition=1::107::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(104,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::104::0::0})
[m
[36m[11:37:05.050249] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.050277] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.050344] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.050373] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.050404] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.050419] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.050482] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::104::0::0}[m
[36m[11:37:05.050511] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.050529] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.050576] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.050620] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.050645] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.050661] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.052313] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41373 queryId=1 querySubPlanId = 39[m
[36m[11:37:05.052462] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(136: {NetworkSinkDescriptor(partition=1::134::0::0;nodeLocation=tcp://192.168.2.12:41447)})
  SOURCE(131,,NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::131::0::0})
[m
[36m[11:37:05.052465] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.052494] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.052561] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.052591] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.052622] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.052637] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.052701] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43395 1::131::0::0}[m
[36m[11:37:05.052723] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.052741] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.052787] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.052864] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.052890] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.052906] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.054534] [D] [thread 364235] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[11:37:05.054570] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:37:05.054571] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:37:05.054588] [D] [thread 364235] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:42955[m
[36m[11:37:05.054592] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 10[m
[36m[11:37:05.054646] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::29::0::0})
[m
[36m[11:37:05.054650] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.054676] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.054748] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.054778] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.054808] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.054823] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.054887] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::29::0::0}[m
[36m[11:37:05.054912] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.054930] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.054975] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.054992] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.055014] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.055029] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.056756] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 14[m
[36m[11:37:05.056841] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::44::0::0})
[m
[36m[11:37:05.056845] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.056874] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.056941] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.056970] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.057001] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.057016] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.057082] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::44::0::0}[m
[36m[11:37:05.057105] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.057122] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.057169] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.057185] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.057207] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.057222] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.058852] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 19[m
[36m[11:37:05.058942] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(67: {NetworkSinkDescriptor(partition=1::65::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::62::0::0})
[m
[36m[11:37:05.058945] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.058972] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.059037] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.059066] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.059097] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.059112] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.059175] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::62::0::0}[m
[36m[11:37:05.059198] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.059215] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.059265] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.059282] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.059304] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.059319] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.061065] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 25[m
[36m[11:37:05.061153] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(88: {NetworkSinkDescriptor(partition=1::86::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::83::0::0})
[m
[36m[11:37:05.061156] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.061182] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.061248] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.061277] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.061308] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.061324] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.061387] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::83::0::0}[m
[36m[11:37:05.061411] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.061427] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.061475] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.061491] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.061513] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.061529] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.063145] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 32[m
[36m[11:37:05.063234] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(112: {NetworkSinkDescriptor(partition=1::110::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(107,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::107::0::0})
[m
[36m[11:37:05.063237] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.063264] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.063327] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.063355] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.063384] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.063400] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.063473] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::107::0::0}[m
[36m[11:37:05.063497] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.063516] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.063564] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.063580] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.063609] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.063625] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.065358] [D] [thread 364235] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:42955 queryId=1 querySubPlanId = 40[m
[36m[11:37:05.065447] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(139: {NetworkSinkDescriptor(partition=1::137::0::0;nodeLocation=tcp://192.168.2.11:35213)})
  SOURCE(134,,NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::134::0::0})
[m
[36m[11:37:05.065450] [D] [thread 364235] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[11:37:05.065478] [D] [thread 364235] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[11:37:05.065544] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.065572] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.065603] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.065619] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.065682] [D] [thread 364235] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:43915 1::134::0::0}[m
[36m[11:37:05.065705] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.065723] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.065770] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.065786] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.065809] [D] [thread 364235] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:05.065824] [D] [thread 364235] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[11:37:05.067473] [D] [thread 364235] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[11:37:05.068684] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.218288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.218628] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.502697] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.502891] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.996632] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:05.996829] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:06.997983] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:07.097174] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:07.097375] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.098555] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.153995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:08.154224] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.155392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.252392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.252599] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:09.528976] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.529061] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.529228] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.529451] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 140[m
[36m[11:37:09.529559] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.529810] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.529850] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.529959] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.530924] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.530981] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.531110] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.531138] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 141[m
[36m[11:37:09.531145] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.531237] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.531247] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.531339] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.532284] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.532373] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.532505] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.532559] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 142[m
[36m[11:37:09.532568] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.532678] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.532689] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.532776] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.533521] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 143[m
[36m[11:37:09.533564] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.533689] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.533700] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.533788] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.534554] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.534700] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.534834] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.534869] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 144[m
[36m[11:37:09.534877] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.534972] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.534982] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.535067] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.535929] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.535963] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.536074] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.536103] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 145[m
[36m[11:37:09.536109] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.536197] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.536214] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.536393] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.537186] [D] [thread 364247] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[11:37:09.537217] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.537312] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[11:37:09.537338] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 146[m
[36m[11:37:09.537344] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.537431] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.537446] [D] [thread 364247] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[11:37:09.537533] [D] [thread 364247] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[11:37:09.538124] [D] [thread 364247] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(143: {FileSinkDescriptor()})
  SOURCE(141,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::32::0::0})
  SOURCE(142,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::47::0::0})
  SOURCE(144,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::65::0::0})
  SOURCE(140,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::86::0::0})
  SOURCE(145,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::110::0::0})
  SOURCE(146,,NetworkSourceDescriptor{tcp://192.168.2.12:41447 1::137::0::0})
[m
[32m[11:37:09.538146] [I] [thread 364247] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[11:37:09.538161] [I] [thread 364247] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[11:37:09.538334] [D] [thread 364247] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 7[m
[36m[11:37:09.538352] [D] [thread 364247] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 1. LogicalQueryPlan[m
[36m[11:37:09.538362] [D] [thread 364247] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 7 for context QueryCompilation-1-7-2023-11-28 11:37:09 and scope 1. LogicalQueryPlan[m
[32m[11:37:09.539016] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 147[m
[32m[11:37:09.539064] [I] [thread 364247] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:37:09.539067] [I] [thread 364247] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[11:37:09.539068] [I] [thread 364247] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:37:09.539071] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539072] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539073] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539074] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539075] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539076] [I] [thread 364247] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[11:37:09.539099] [I] [thread 364247] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539209] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 148[m
[36m[11:37:09.539239] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[11:37:09.539240] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539246] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[11:37:09.539264] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539267] [D] [thread 364247] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[11:37:09.539276] [D] [thread 364247] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[11:37:09.539279] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539301] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 149[m
[36m[11:37:09.539308] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539312] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539319] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539320] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539321] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539338] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539340] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539347] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 150[m
[36m[11:37:09.539352] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539353] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539360] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539361] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539362] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539377] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539378] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539384] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 151[m
[36m[11:37:09.539389] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539390] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539398] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539399] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539400] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539414] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539416] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539421] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 152[m
[36m[11:37:09.539426] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539428] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539435] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539437] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539438] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539452] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539454] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539459] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 153[m
[36m[11:37:09.539464] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539466] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539476] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539477] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539478] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539495] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539497] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[11:37:09.539503] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 154[m
[36m[11:37:09.539508] [D] [thread 364247] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[11:37:09.539510] [D] [thread 364247] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[11:37:09.539521] [I] [thread 364247] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[11:37:09.539522] [I] [thread 364247] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:37:09.539523] [I] [thread 364247] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[11:37:09.539537] [D] [thread 364247] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[11:37:09.539539] [D] [thread 364247] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[11:37:09.539555] [D] [thread 364247] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 2. PhysicalQueryPlan[m
[36m[11:37:09.539559] [D] [thread 364247] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 7 for context QueryCompilation-1-7-2023-11-28 11:37:09 and scope 2. PhysicalQueryPlan[m
[36m[11:37:09.539862] [D] [thread 364247] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[11:37:09.539902] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 148[m
[36m[11:37:09.539921] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[11:37:09.539927] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.539931] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.539984] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 149[m
[36m[11:37:09.539993] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.539995] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.539996] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.540002] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 150[m
[36m[11:37:09.540008] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.540009] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.540010] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.540016] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 151[m
[36m[11:37:09.540022] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.540024] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.540024] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.540031] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 152[m
[36m[11:37:09.540036] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.540037] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.540038] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.540043] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 153[m
[36m[11:37:09.540049] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.540050] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.540051] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[11:37:09.540056] [I] [thread 364247] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 154[m
[36m[11:37:09.540061] [D] [thread 364247] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[11:37:09.540062] [D] [thread 364247] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[11:37:09.540063] [D] [thread 364247] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[11:37:09.540072] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 3. AfterPipelinedQueryPlan[m
[36m[11:37:09.540079] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[36m[11:37:09.540455] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 4. AfterAddScanAndEmitPhase[m
[36m[11:37:09.540461] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[36m[11:37:09.540751] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 5. GeneratableOperators[m
[36m[11:37:09.540756] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[36m[11:37:09.541008] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 6. BufferOptimizationPhase[m
[36m[11:37:09.541012] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[36m[11:37:09.541255] [D] [thread 364247] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[11:37:09.541259] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 7. PredicationOptimizationPhase[m
[36m[11:37:09.541261] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[36m[11:37:09.541498] [D] [thread 364247] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 7[m
[36m[11:37:09.541503] [D] [thread 364247] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-28 11:37:09 - 8. ExecutableOperatorPlan[m
[36m[11:37:09.541505] [D] [thread 364247] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 7 for scope QueryCompilation-1-7-2023-11-28 11:37:09[m
[32m[11:37:09.541813] [I] [thread 364247] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 3.3801 ms
DefaultQueryCompiler_LogicalQueryPlan:	0.615717 ms
DefaultQueryCompiler_PhysicalQueryPlan:	0.894584 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	0.585365 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	0.298516 ms
DefaultQueryCompiler_GeneratableOperators:	0.254794 ms
DefaultQueryCompiler_BufferOptimizationPhase:	0.246609 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	0.243072 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	0.23859 ms[m
[36m[11:37:09.541861] [D] [thread 364247] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  148[m
[32m[11:37:09.541874] [I] [thread 364247] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[11:37:09.542124] [D] [thread 364247] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsChain.out[m
[32m[11:37:09.542242] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:37:09.542345] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  32 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:37:09.542446] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:37:09.542482] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  47 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:37:09.542501] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:37:09.542526] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  65 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:37:09.542542] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
2023-11-28 11:37:09.542 setup: queryId=1, querySubPlanId=7; 
[36m[11:37:09.542566] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  86 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
2023-11-28 11:37:09.542 start: queryId=1, querySubPlanId=7; 
[32m[11:37:09.542581] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:37:09.542604] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  110 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[11:37:09.542619] [I] [thread 364247] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[11:37:09.542642] [D] [thread 364247] [DataSource.cpp:75] [DataSource] DataSource  137 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[11:37:09.542714] [D] [thread 364247] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[11:37:09.542724] [D] [thread 364247] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[11:37:09.542727] [D] [thread 364247] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[11:37:09.542731] [D] [thread 364247] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[11:37:09.542734] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  32  not found. Creating new element with with qep [m
[36m[11:37:09.542746] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  47  not found. Creating new element with with qep [m
[36m[11:37:09.542748] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  65  not found. Creating new element with with qep [m
[36m[11:37:09.542749] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  86  not found. Creating new element with with qep [m
[36m[11:37:09.542751] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  110  not found. Creating new element with with qep [m
[36m[11:37:09.542753] [D] [thread 364247] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  137  not found. Creating new element with with qep [m
[36m[11:37:09.542756] [D] [thread 364247] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[11:37:09.542928] [D] [thread 364247] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[11:37:09.543008] [D] [thread 364247] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[11:37:09.543051] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::32::0::0 from 192.168.2.12[m
[36m[11:37:09.543091] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::32::0::0=1[m
[36m[11:37:09.543095] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff680134f0  started successfully[m
[36m[11:37:09.543103] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::47::0::0 from 192.168.2.12[m
[36m[11:37:09.543107] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::47::0::0=1[m
[36m[11:37:09.543109] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68017b70  started successfully[m
[36m[11:37:09.543116] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::65::0::0 from 192.168.2.12[m
[36m[11:37:09.543119] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::65::0::0=1[m
[36m[11:37:09.543120] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68018330  started successfully[m
[36m[11:37:09.543127] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::86::0::0 from 192.168.2.12[m
[36m[11:37:09.543130] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::86::0::0=1[m
[36m[11:37:09.543132] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff68018d90  started successfully[m
[36m[11:37:09.543138] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::110::0::0 from 192.168.2.12[m
[36m[11:37:09.543142] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::110::0::0=1[m
[36m[11:37:09.543143] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff680197d0  started successfully[m
[36m[11:37:09.543150] [D] [thread 364247] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::137::0::0 from 192.168.2.12[m
[36m[11:37:09.543153] [D] [thread 364247] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::137::0::0=1[m
[36m[11:37:09.543155] [D] [thread 364247] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff6801a270  started successfully[m
[36m[11:37:09.543167] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543180] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543214] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543339] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[11:37:09.543374] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[11:37:09.543388] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543390] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff680134f0  started successfully[m
[36m[11:37:09.543397] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543402] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543411] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543449] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::47::0::0[m
[36m[11:37:09.543472] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::47::0::0[m
[36m[11:37:09.543478] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543479] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68017b70  started successfully[m
[36m[11:37:09.543485] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543489] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543496] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543525] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::65::0::0[m
[36m[11:37:09.543546] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::65::0::0[m
[36m[11:37:09.543552] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543553] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68018330  started successfully[m
[36m[11:37:09.543559] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543562] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543568] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543596] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::86::0::0[m
[36m[11:37:09.543616] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::86::0::0[m
[36m[11:37:09.543622] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543623] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff68018d90  started successfully[m
[36m[11:37:09.543628] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543632] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543639] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543668] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::110::0::0[m
[36m[11:37:09.543688] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::110::0::0[m
[36m[11:37:09.543694] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543695] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff680197d0  started successfully[m
[36m[11:37:09.543701] [D] [thread 364247] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543705] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543714] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[11:37:09.543742] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::137::0::0[m
[36m[11:37:09.543768] [D] [thread 364247] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::137::0::0[m
[36m[11:37:09.543774] [D] [thread 364247] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[11:37:09.543775] [D] [thread 364247] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff6801a270  started successfully[m
[36m[11:37:09.543781] [D] [thread 364247] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[11:37:09.543809] [D] [thread 364247] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[11:37:09.543816] [D] [thread 364247] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[11:37:09.564615] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::47::0::0[m
[32m[11:37:09.564692] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::47::0::0(threadId=0) Data[m
[36m[11:37:09.564722] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::47::0::0(threadId=0) REGISTERED[m
[36m[11:37:09.569854] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::65::0::0[m
[32m[11:37:09.569894] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::65::0::0(threadId=0) Data[m
[36m[11:37:09.569921] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::65::0::0(threadId=0) REGISTERED[m
[36m[11:37:09.573790] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::86::0::0[m
[32m[11:37:09.573825] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::86::0::0(threadId=0) Data[m
[36m[11:37:09.573841] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::86::0::0(threadId=0) REGISTERED[m
[36m[11:37:09.577374] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::32::0::0[m
[32m[11:37:09.577415] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::32::0::0(threadId=0) Data[m
[36m[11:37:09.577429] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::32::0::0(threadId=0) REGISTERED[m
[36m[11:37:09.598332] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::137::0::0[m
[32m[11:37:09.598419] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::137::0::0(threadId=0) Data[m
[36m[11:37:09.598435] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::137::0::0(threadId=0) REGISTERED[m
[36m[11:37:09.603633] [D] [thread 364244] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): ClientAnnouncement received for channel 0:1::110::0::0[m
[32m[11:37:09.603678] [I] [thread 364244] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::110::0::0(threadId=0) Data[m
[36m[11:37:09.603692] [D] [thread 364244] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::110::0::0(threadId=0) REGISTERED[m
[36m[11:37:10.253790] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:10.401878] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:10.402351] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.403625] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.530775] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:11.530995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.532183] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.638155] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:12.638392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:13.639549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:13.806059] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:13.806235] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.807391] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.909128] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:14.909307] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:15.910480] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.097839] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:16.098028] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:17.099186] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:17.374623] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:17.374806] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.376015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.447598] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:18.447778] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.448954] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.571840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:19.572057] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.573217] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.639961] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:20.640167] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:21.641326] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:21.735373] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:21.735578] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.736809] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.846206] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:22.846450] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.847643] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.912153] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:23.912369] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:24.913546] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:25.033942] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:25.034126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.035299] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.146815] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:26.147017] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.148206] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.224643] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:27.224822] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.226003] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.321182] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:28.321364] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:29.322550] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:29.477502] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:29.477708] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.478873] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.585619] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:30.585825] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.587107] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.846863] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:31.847071] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:32.848218] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.151354] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:33.151574] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.152755] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.215708] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:34.215912] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:35.217114] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:35.270140] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:35.270388] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.271555] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.642269] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:36.642465] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.643622] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.748363] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:37.748560] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:38.749747] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:38.855515] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:38.855713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:39.856877] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:39.994266] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:39.994488] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:40.995654] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:41.134549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:41.134739] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:42.135885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:42.405680] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:42.405865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.407050] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.465409] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:43.465585] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:44.466766] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:44.576442] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:44.576639] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.577797] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.677188] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:45.677395] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.678561] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.813944] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:46.814148] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:47.815276] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:48.069855] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:48.070128] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.071486] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.208459] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:49.208683] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.209897] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.307462] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:50.307640] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:51.308827] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:51.446173] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:51.446358] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.447549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.601794] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:52.602016] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.603196] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.862102] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:53.862316] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.863482] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.962275] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:54.962490] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:55.963656] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.066424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:56.066637] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.067814] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.162681] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:57.162887] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:58.164069] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:58.256858] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:58.257077] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.258251] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.309928] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:37:59.310114] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.311294] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.366943] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.367157] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:00.376086] [D] [thread 364235] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[11:38:00.376242] [D] [thread 364235] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[11:38:00.376684] [D] [thread 364235] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[11:38:00.376727] [D] [thread 364235] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[11:38:00.376733] [D] [thread 364235] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[11:38:00.376754] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[11:38:00.376761] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:41815 queryId=1[m
[36m[11:38:00.378762] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[11:38:00.378919] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:37313 queryId=1[m
[36m[11:38:00.379917] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[11:38:00.380008] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:44099 queryId=1[m
[36m[11:38:00.380944] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[11:38:00.381042] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:34589 queryId=1[m
[36m[11:38:00.381920] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[11:38:00.382015] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:46653 queryId=1[m
[36m[11:38:00.382866] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[11:38:00.382894] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:33711 queryId=1[m
[36m[11:38:00.383848] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[11:38:00.383873] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:38255 queryId=1[m
[36m[11:38:00.384896] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[11:38:00.384921] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:35873 queryId=1[m
[36m[11:38:00.385824] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[11:38:00.385856] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:41373 queryId=1[m
[36m[11:38:00.386785] [D] [thread 364235] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[11:38:00.386995] [D] [thread 364235] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:42955 queryId=1[m
[36m[11:38:00.387876] [D] [thread 364235] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[11:38:00.400662] [D] [thread 364315] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[11:38:00.400717] [D] [thread 364315] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[11:38:00.400728] [D] [thread 364315] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[11:38:00.400750] [D] [thread 364315] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1701171480400[m
[36m[11:38:00.400752] [D] [thread 364315] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[11:38:00.400757] [D] [thread 364315] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[11:38:00.413749] [D] [thread 364235] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[11:38:00.413788] [D] [thread 364235] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[11:38:00.414129] [I] [thread 364235] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:38:00.414159] [D] [thread 364235] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:38:01.368410] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.529209] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:01.529390] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:02.530549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.333555] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.333758] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.334712] [D] [thread 364411] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:03.334742] [I] [thread 364411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:03.334748] [I] [thread 364411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:03.334762] [I] [thread 364411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:03.334763] [I] [thread 364411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:03.567061] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:03.567270] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:04.568458] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:05.115210] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:05.115465] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:05.116309] [D] [thread 364416] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:05.116362] [I] [thread 364416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:05.116366] [I] [thread 364416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:05.116385] [I] [thread 364416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:05.116386] [I] [thread 364416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:05.334165] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:05.334478] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.335649] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.914240] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.914447] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:06.915389] [D] [thread 364421] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:06.915411] [I] [thread 364421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:06.915415] [I] [thread 364421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:06.915426] [I] [thread 364421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:06.915427] [I] [thread 364421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:07.090157] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:07.090335] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:08.091496] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:08.381194] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:08.381418] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:08.382901] [D] [thread 364427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:08.382926] [I] [thread 364427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:08.382930] [I] [thread 364427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:08.382941] [I] [thread 364427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:08.382943] [I] [thread 364427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:08.517724] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:08.517902] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.519064] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.853888] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.854106] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.855002] [D] [thread 364432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:09.855026] [I] [thread 364432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:09.855030] [I] [thread 364432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:09.855040] [I] [thread 364432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:09.855041] [I] [thread 364432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:09.989673] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:09.989885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:10.991057] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.233358] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.233553] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.234496] [D] [thread 364437] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:11.234521] [I] [thread 364437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:11.234525] [I] [thread 364437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:11.234537] [I] [thread 364437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:11.234538] [I] [thread 364437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:11.338949] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:11.339155] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:12.340376] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:12.669874] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:12.670057] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:12.670984] [D] [thread 364442] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:12.671008] [I] [thread 364442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:12.671012] [I] [thread 364442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:12.671023] [I] [thread 364442] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:12.671025] [I] [thread 364442] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:12.772220] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:12.772429] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:13.773589] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:14.051487] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:14.051701] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:14.052804] [D] [thread 364447] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:14.052831] [I] [thread 364447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:14.052834] [I] [thread 364447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:14.052845] [I] [thread 364447] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:14.052847] [I] [thread 364447] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:14.149505] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:14.149705] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.150859] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.358582] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.358808] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.359717] [D] [thread 364452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:15.359739] [I] [thread 364452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:15.359750] [I] [thread 364452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:15.359761] [I] [thread 364452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:15.359762] [I] [thread 364452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:15.461265] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:15.461487] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:16.462641] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.450428] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.450606] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.451556] [D] [thread 364457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:17.451579] [I] [thread 364457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:17.451582] [I] [thread 364457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:17.451595] [I] [thread 364457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:17.451597] [I] [thread 364457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:17.662479] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:17.662659] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:18.663840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.534993] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.535186] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.536080] [D] [thread 364462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:19.536103] [I] [thread 364462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:19.536107] [I] [thread 364462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:19.536118] [I] [thread 364462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:19.536119] [I] [thread 364462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:19.637043] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:19.637247] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.638432] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.939828] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.940015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:20.941033] [D] [thread 364467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:20.941058] [I] [thread 364467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:20.941062] [I] [thread 364467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:20.941074] [I] [thread 364467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:20.941075] [I] [thread 364467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:21.076645] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:21.076844] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.078011] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.294208] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.294380] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.295298] [D] [thread 364473] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:22.295320] [I] [thread 364473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:22.295323] [I] [thread 364473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:22.295336] [I] [thread 364473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:22.295337] [I] [thread 364473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:22.434104] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:22.434282] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.435442] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.763550] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.763752] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.764692] [D] [thread 364480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:23.764718] [I] [thread 364480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:23.764722] [I] [thread 364480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:23.764733] [I] [thread 364480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:23.764734] [I] [thread 364480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:23.877884] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:23.878062] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:24.879211] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:25.153425] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:25.153661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:25.154928] [D] [thread 364485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:25.154965] [I] [thread 364485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:25.154969] [I] [thread 364485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:25.154982] [I] [thread 364485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:25.154984] [I] [thread 364485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:25.259535] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:25.259721] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.260915] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.540495] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.540672] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.541572] [D] [thread 364490] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:26.541595] [I] [thread 364490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:26.541599] [I] [thread 364490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:26.541611] [I] [thread 364490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:26.541612] [I] [thread 364490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:26.643898] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:26.644093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.645257] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.966249] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.966466] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:27.967773] [D] [thread 364495] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:27.967805] [I] [thread 364495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:27.967809] [I] [thread 364495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:27.967821] [I] [thread 364495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:27.967822] [I] [thread 364495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:28.069410] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:28.069598] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.070770] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.278550] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.278737] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.279988] [D] [thread 364500] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:29.280013] [I] [thread 364500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:29.280018] [I] [thread 364500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:29.280029] [I] [thread 364500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:29.280030] [I] [thread 364500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:29.383296] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:29.383584] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.384476] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.641081] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.641288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.642167] [D] [thread 364505] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:30.642191] [I] [thread 364505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:30.642195] [I] [thread 364505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:30.642206] [I] [thread 364505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:30.642207] [I] [thread 364505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:30.745908] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:30.746106] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:31.747308] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.748504] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.945927] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.946153] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:32.946998] [D] [thread 364510] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:32.947021] [I] [thread 364510] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:32.947025] [I] [thread 364510] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:32.947039] [I] [thread 364510] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:32.947040] [I] [thread 364510] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:33.145890] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:33.146132] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.147310] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.378347] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.378578] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.379404] [D] [thread 364515] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:34.379427] [I] [thread 364515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:34.379431] [I] [thread 364515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:34.379442] [I] [thread 364515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:34.379443] [I] [thread 364515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:34.513543] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:34.513779] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:35.514975] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:35.749490] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:35.749671] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:35.750656] [D] [thread 364520] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:35.750687] [I] [thread 364520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:35.750691] [I] [thread 364520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:35.750702] [I] [thread 364520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:35.750703] [I] [thread 364520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:35.853903] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:35.854088] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:36.855241] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.420310] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.420554] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.421488] [D] [thread 364525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:37.421514] [I] [thread 364525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:37.421518] [I] [thread 364525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:37.421529] [I] [thread 364525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:37.421530] [I] [thread 364525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:37.593570] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:37.593753] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:38.594917] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.381893] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.382080] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.382993] [D] [thread 364530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:39.383007] [I] [thread 364530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:39.383010] [I] [thread 364530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:39.383021] [I] [thread 364530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:39.383022] [I] [thread 364530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:39.562100] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:39.562308] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.563469] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.848041] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.848224] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.849198] [D] [thread 364535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:40.849221] [I] [thread 364535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:40.849232] [I] [thread 364535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:40.849243] [I] [thread 364535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:40.849244] [I] [thread 364535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:40.984259] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:40.984464] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:41.985609] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:42.464561] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:42.464804] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:42.465674] [D] [thread 364540] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:42.465699] [I] [thread 364540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:42.465704] [I] [thread 364540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:42.465715] [I] [thread 364540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:42.465716] [I] [thread 364540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:42.667446] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:42.667638] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.668799] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.912795] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.912982] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:43.913916] [D] [thread 364545] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:43.913942] [I] [thread 364545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:43.913946] [I] [thread 364545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:43.913957] [I] [thread 364545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:43.913958] [I] [thread 364545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:44.011276] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:44.011490] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.012640] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.289009] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.289357] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.290577] [D] [thread 364550] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:45.290697] [I] [thread 364550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:45.290702] [I] [thread 364550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:45.290714] [I] [thread 364550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:45.290715] [I] [thread 364550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:45.383993] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:45.384202] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:46.385370] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.149670] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.149854] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.151454] [D] [thread 364555] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:47.151477] [I] [thread 364555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:47.151480] [I] [thread 364555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:47.151492] [I] [thread 364555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:47.151493] [I] [thread 364555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:47.686686] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:47.686897] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:48.688058] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.105646] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.105840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.106736] [D] [thread 364560] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:49.106759] [I] [thread 364560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:49.106767] [I] [thread 364560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:49.106778] [I] [thread 364560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:49.106779] [I] [thread 364560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:49.201292] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:49.201475] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:50.202628] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:50.417260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:50.417468] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:50.418344] [D] [thread 364565] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:50.418368] [I] [thread 364565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:50.418374] [I] [thread 364565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:50.418385] [I] [thread 364565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:50.418386] [I] [thread 364565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:50.516696] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:50.516903] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.518058] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.746968] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.747162] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.748046] [D] [thread 364570] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:51.748069] [I] [thread 364570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:51.748073] [I] [thread 364570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:51.748083] [I] [thread 364570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:51.748084] [I] [thread 364570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:51.880996] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:51.881207] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:52.882391] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:53.176369] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:53.176571] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:53.177574] [D] [thread 364575] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:53.177598] [I] [thread 364575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:53.177605] [I] [thread 364575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:53.177617] [I] [thread 364575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:53.177618] [I] [thread 364575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:53.276222] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:53.276446] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:54.277636] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:54.538067] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:54.538280] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:54.539183] [D] [thread 364580] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:54.539208] [I] [thread 364580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:54.539215] [I] [thread 364580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:54.539226] [I] [thread 364580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:54.539227] [I] [thread 364580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:54.635980] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:54.636182] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:55.637362] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:56.578424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:56.578623] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:56.579536] [D] [thread 364585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:56.579559] [I] [thread 364585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:56.579563] [I] [thread 364585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:56.579574] [I] [thread 364585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:56.579575] [I] [thread 364585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:56.750542] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:56.750731] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:57.751888] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:58.228093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:58.228282] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:58.229308] [D] [thread 364590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:58.229334] [I] [thread 364590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:58.229344] [I] [thread 364590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:58.229355] [I] [thread 364590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:58.229356] [I] [thread 364590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:58.370629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:58.370874] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:59.372094] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:59.721375] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:59.721622] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:59.722762] [D] [thread 364595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:38:59.722786] [I] [thread 364595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:59.722790] [I] [thread 364595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:38:59.722802] [I] [thread 364595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:38:59.722803] [I] [thread 364595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:38:59.825830] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:38:59.826016] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:00.061710] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.062130] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,24,1604287423,1701171540061
[m
[36m[11:39:00.062376] [D] [thread 364245] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1701171540062[m
[36m[11:39:00.062653] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.062684] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:39:00.062816] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,100,1811351699,1701171540062
[m
[36m[11:39:00.112718] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.112752] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:39:00.112882] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,54,1660704981,1701171540112
[m
[36m[11:39:00.113018] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.113051] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:39:00.113149] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,63,1258104636,1701171540113
[m
[36m[11:39:00.113249] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.113276] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:39:00.113367] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,47,1203742457,1701171540113
[m
[36m[11:39:00.165711] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:39:00.165734] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:39:00.165830] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171480000,1701171540000,13,1459996935,1701171540165
[m
[36m[11:39:00.827177] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:01.828389] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:02.829578] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:03.376855] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:03.377280] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:03.378181] [D] [thread 364600] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:03.378241] [I] [thread 364600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:03.378248] [I] [thread 364600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:03.378263] [I] [thread 364600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:03.378264] [I] [thread 364600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:03.665549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:03.665764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:04.666928] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:04.939288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:04.939471] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:04.940412] [D] [thread 364605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:04.940435] [I] [thread 364605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:04.940445] [I] [thread 364605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:04.940457] [I] [thread 364605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:04.940458] [I] [thread 364605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:05.077102] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:05.077313] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:06.078489] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:06.341977] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:06.342188] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:06.343551] [D] [thread 364610] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:06.343575] [I] [thread 364610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:06.343578] [I] [thread 364610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:06.343590] [I] [thread 364610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:06.343591] [I] [thread 364610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:06.456403] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:06.456579] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:07.457796] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:08.458994] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:08.846039] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:08.846239] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:08.847115] [D] [thread 364616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:08.847139] [I] [thread 364616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:08.847145] [I] [thread 364616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:08.847156] [I] [thread 364616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:08.847157] [I] [thread 364616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:09.068687] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:09.068934] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:10.070112] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:10.678063] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:10.678259] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:10.679164] [D] [thread 364621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:10.679187] [I] [thread 364621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:10.679191] [I] [thread 364621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:10.679202] [I] [thread 364621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:10.679203] [I] [thread 364621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:10.788092] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:10.788295] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:11.789458] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:12.084569] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:12.084760] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:12.086264] [D] [thread 364626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:12.086291] [I] [thread 364626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:12.086295] [I] [thread 364626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:12.086306] [I] [thread 364626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:12.086307] [I] [thread 364626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:12.470703] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:12.470883] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:13.472037] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:14.158462] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:14.158641] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:14.159604] [D] [thread 364631] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:14.159628] [I] [thread 364631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:14.159632] [I] [thread 364631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:14.159643] [I] [thread 364631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:14.159644] [I] [thread 364631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:14.298035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:14.298228] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:15.299392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:15.692457] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:15.692637] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:15.693916] [D] [thread 364636] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:15.693939] [I] [thread 364636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:15.693945] [I] [thread 364636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:15.693956] [I] [thread 364636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:15.693957] [I] [thread 364636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:15.833972] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:15.834156] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:16.835335] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:17.836549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:18.057185] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:18.057397] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:18.058287] [D] [thread 364641] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:18.058311] [I] [thread 364641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:18.058319] [I] [thread 364641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:18.058331] [I] [thread 364641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:18.058332] [I] [thread 364641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:18.339823] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:18.340035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:19.341250] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:19.736640] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:19.736848] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:19.738089] [D] [thread 364646] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:19.738112] [I] [thread 364646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:19.738116] [I] [thread 364646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:19.738127] [I] [thread 364646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:19.738128] [I] [thread 364646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:19.850603] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:19.850814] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:20.852004] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:21.142267] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:21.142490] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:21.143751] [D] [thread 364651] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:21.143775] [I] [thread 364651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:21.143779] [I] [thread 364651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:21.143790] [I] [thread 364651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:21.143791] [I] [thread 364651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:21.274126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:21.274334] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:22.275508] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:22.531099] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:22.531313] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:22.532247] [D] [thread 364656] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:22.532272] [I] [thread 364656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:22.532276] [I] [thread 364656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:22.532288] [I] [thread 364656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:22.532289] [I] [thread 364656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:22.696480] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:22.696691] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:23.697879] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:23.999411] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:23.999626] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:24.000514] [D] [thread 364661] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:24.000537] [I] [thread 364661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:24.000542] [I] [thread 364661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:24.000553] [I] [thread 364661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:24.000554] [I] [thread 364661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:24.100369] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:24.100577] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:25.101733] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:25.379310] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:25.379503] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:25.380474] [D] [thread 364666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:25.380498] [I] [thread 364666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:25.380504] [I] [thread 364666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:25.380515] [I] [thread 364666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:25.380516] [I] [thread 364666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:25.517833] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:25.518015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:26.519197] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:26.839680] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:26.839902] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:26.840817] [D] [thread 364671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:26.840843] [I] [thread 364671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:26.840847] [I] [thread 364671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:26.840858] [I] [thread 364671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:26.840859] [I] [thread 364671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:26.942609] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:26.942827] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:27.944011] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:28.187586] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:28.187793] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:28.188734] [D] [thread 364676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:28.188759] [I] [thread 364676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:28.188765] [I] [thread 364676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:28.188783] [I] [thread 364676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:28.188784] [I] [thread 364676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:28.345112] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:28.345313] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:29.346475] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:29.702516] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:29.702713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:29.703566] [D] [thread 364681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:29.703588] [I] [thread 364681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:29.703592] [I] [thread 364681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:29.703610] [I] [thread 364681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:29.703611] [I] [thread 364681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:29.870503] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:29.870681] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:30.871870] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:31.873076] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:32.357817] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:32.358019] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:32.358883] [D] [thread 364686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:32.358906] [I] [thread 364686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:32.358909] [I] [thread 364686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:32.358923] [I] [thread 364686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:32.358924] [I] [thread 364686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:32.613240] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:32.613527] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:33.614708] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:34.591643] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:34.591833] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:34.592749] [D] [thread 364691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:34.592774] [I] [thread 364691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:34.592784] [I] [thread 364691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:34.592795] [I] [thread 364691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:34.592796] [I] [thread 364691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:34.730362] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:34.730550] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:35.731708] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:35.924155] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:35.924397] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:35.925278] [D] [thread 364696] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:35.925302] [I] [thread 364696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:35.925306] [I] [thread 364696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:35.925324] [I] [thread 364696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:35.925325] [I] [thread 364696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:36.032904] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:36.033099] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:37.034278] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:37.272661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:37.272860] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:37.273779] [D] [thread 364701] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:37.273804] [I] [thread 364701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:37.273808] [I] [thread 364701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:37.273819] [I] [thread 364701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:37.273820] [I] [thread 364701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:37.383027] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:37.383272] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:38.384485] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:38.744599] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:38.744821] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:38.745716] [D] [thread 364706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:38.745742] [I] [thread 364706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:38.745753] [I] [thread 364706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:38.745764] [I] [thread 364706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:38.745765] [I] [thread 364706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:38.852931] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:38.853118] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:39.854302] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:40.109934] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:40.110120] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:40.111339] [D] [thread 364711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:40.111363] [I] [thread 364711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:40.111366] [I] [thread 364711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:40.111377] [I] [thread 364711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:40.111378] [I] [thread 364711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:40.302243] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:40.302447] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:41.303599] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:41.575074] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:41.575581] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:41.576716] [D] [thread 364716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:41.576767] [I] [thread 364716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:41.576770] [I] [thread 364716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:41.576782] [I] [thread 364716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:41.576783] [I] [thread 364716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:41.674382] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:41.674572] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:42.675843] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:42.888944] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:42.889153] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:42.890032] [D] [thread 364721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:42.890055] [I] [thread 364721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:42.890059] [I] [thread 364721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:42.890070] [I] [thread 364721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:42.890071] [I] [thread 364721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:42.987047] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:42.987252] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:43.988455] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:44.218519] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:44.218738] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:44.219628] [D] [thread 364726] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:44.219650] [I] [thread 364726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:44.219661] [I] [thread 364726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:44.219672] [I] [thread 364726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:44.219673] [I] [thread 364726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:44.324072] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:44.324289] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:45.325472] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:45.726841] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:45.727045] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:45.727980] [D] [thread 364731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:45.728007] [I] [thread 364731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:45.728010] [I] [thread 364731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:45.728024] [I] [thread 364731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:45.728025] [I] [thread 364731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:45.862240] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:45.862472] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:46.863639] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:47.611992] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:47.612197] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:47.613154] [D] [thread 364736] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:47.613181] [I] [thread 364736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:47.613185] [I] [thread 364736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:47.613197] [I] [thread 364736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:47.613198] [I] [thread 364736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:47.720754] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:47.720956] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:48.722165] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:49.191125] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:49.191324] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:49.192224] [D] [thread 364741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:49.192249] [I] [thread 364741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:49.192253] [I] [thread 364741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:49.192263] [I] [thread 364741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:49.192264] [I] [thread 364741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:49.337632] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:49.337839] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:50.339020] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:50.562549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:50.562790] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:50.563626] [D] [thread 364746] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:50.563649] [I] [thread 364746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:50.563653] [I] [thread 364746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:50.563665] [I] [thread 364746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:50.563666] [I] [thread 364746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:50.656649] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:50.656853] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:51.658037] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:51.914032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:51.914230] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:51.915095] [D] [thread 364751] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:51.915118] [I] [thread 364751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:51.915122] [I] [thread 364751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:51.915134] [I] [thread 364751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:51.915135] [I] [thread 364751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:52.013563] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:52.013771] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:53.014937] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:53.850247] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:53.850515] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:53.851361] [D] [thread 364756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:53.851383] [I] [thread 364756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:53.851389] [I] [thread 364756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:53.851400] [I] [thread 364756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:53.851401] [I] [thread 364756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:53.953730] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:53.953935] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:54.955137] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:55.201939] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:55.202178] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:55.202997] [D] [thread 364761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:55.203019] [I] [thread 364761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:55.203022] [I] [thread 364761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:55.203033] [I] [thread 364761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:55.203034] [I] [thread 364761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:55.301692] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:55.301914] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:56.303085] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:56.657390] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:56.657623] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:56.658493] [D] [thread 364766] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:56.658516] [I] [thread 364766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:56.658524] [I] [thread 364766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:56.658535] [I] [thread 364766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:56.658536] [I] [thread 364766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:56.762826] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:56.763057] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:57.764286] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:58.052823] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:58.053019] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:58.053912] [D] [thread 364771] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:39:58.053935] [I] [thread 364771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:58.053939] [I] [thread 364771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:39:58.053957] [I] [thread 364771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:39:58.053958] [I] [thread 364771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:39:58.154326] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:58.154560] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:39:59.155747] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:00.092823] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.092863] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.093021] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,47,4728286233,1701171600092
[m
[36m[11:40:00.093181] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.093220] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.093326] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,100,11245808059,1701171600093
[m
[36m[11:40:00.105289] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.105312] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.105410] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,24,4830386766,1701171600105
[m
[36m[11:40:00.139593] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.139623] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.139743] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,13,4882131189,1701171600139
[m
[36m[11:40:00.139864] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.139893] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.139987] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,63,4441311916,1701171600139
[m
[36m[11:40:00.140086] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:40:00.140113] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:40:00.140203] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171540000,1701171600000,54,6647851545,1701171600140
[m
[36m[11:40:00.156592] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:00.781103] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:00.781383] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:00.782185] [D] [thread 364776] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:00.782207] [I] [thread 364776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:00.782211] [I] [thread 364776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:00.782222] [I] [thread 364776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:00.782223] [I] [thread 364776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:01.169744] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:01.169942] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:02.171134] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:03.172304] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:03.313555] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:03.313735] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:03.315254] [D] [thread 364783] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:03.315278] [I] [thread 364783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:03.315282] [I] [thread 364783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:03.315294] [I] [thread 364783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:03.315295] [I] [thread 364783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:03.589407] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:03.589588] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:04.590764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:04.991248] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:04.991454] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:04.992488] [D] [thread 364789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:04.992516] [I] [thread 364789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:04.992521] [I] [thread 364789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:04.992532] [I] [thread 364789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:04.992533] [I] [thread 364789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:05.133278] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:05.133488] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:06.134136] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:06.639573] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:06.639822] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:06.640745] [D] [thread 364795] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:06.640760] [I] [thread 364795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:06.640764] [I] [thread 364795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:06.640775] [I] [thread 364795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:06.640775] [I] [thread 364795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:06.745874] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:06.746139] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:07.747319] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:08.073433] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:08.073627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:08.074519] [D] [thread 364802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:08.074544] [I] [thread 364802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:08.074548] [I] [thread 364802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:08.074558] [I] [thread 364802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:08.074559] [I] [thread 364802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:08.211835] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:08.212058] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:09.212434] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:09.545295] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:09.545501] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:09.546433] [D] [thread 364809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:09.546482] [I] [thread 364809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:09.546486] [I] [thread 364809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:09.546497] [I] [thread 364809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:09.546498] [I] [thread 364809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:09.641921] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:09.642128] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:10.643308] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:11.004593] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:11.004778] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:11.005763] [D] [thread 364816] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:11.005787] [I] [thread 364816] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:11.005791] [I] [thread 364816] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:11.005802] [I] [thread 364816] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:11.005803] [I] [thread 364816] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:11.117496] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:11.117689] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:12.118855] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:12.367380] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:12.367687] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:12.368526] [D] [thread 364823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:12.368558] [I] [thread 364823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:12.368562] [I] [thread 364823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:12.368576] [I] [thread 364823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:12.368577] [I] [thread 364823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:12.508757] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:12.508956] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:13.510151] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:13.751737] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:13.751977] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:13.752928] [D] [thread 364830] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:13.752953] [I] [thread 364830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:13.752956] [I] [thread 364830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:13.752968] [I] [thread 364830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:13.752969] [I] [thread 364830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:13.848127] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:13.848364] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:14.849551] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:15.207946] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:15.208147] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:15.209078] [D] [thread 364838] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:15.209101] [I] [thread 364838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:15.209107] [I] [thread 364838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:15.209117] [I] [thread 364838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:15.209118] [I] [thread 364838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:15.311838] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:15.312019] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:16.313219] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:17.314398] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:18.074174] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:18.074414] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:18.075282] [D] [thread 364843] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:18.075305] [I] [thread 364843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:18.075309] [I] [thread 364843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:18.075320] [I] [thread 364843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:18.075321] [I] [thread 364843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:18.262552] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:18.262775] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:19.263924] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:19.610805] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:19.611045] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:19.612495] [D] [thread 364848] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:19.612519] [I] [thread 364848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:19.612522] [I] [thread 364848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:19.612534] [I] [thread 364848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:19.612535] [I] [thread 364848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:19.748914] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:19.749161] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:20.750315] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:20.968443] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:20.968656] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:20.969605] [D] [thread 364853] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:20.969629] [I] [thread 364853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:20.969633] [I] [thread 364853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:20.969644] [I] [thread 364853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:20.969645] [I] [thread 364853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:21.074627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:21.074833] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:22.075990] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:22.329216] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:22.329430] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:22.330318] [D] [thread 364858] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:22.330342] [I] [thread 364858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:22.330346] [I] [thread 364858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:22.330357] [I] [thread 364858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:22.330358] [I] [thread 364858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:22.434590] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:22.434788] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:23.435967] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:23.789651] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:23.789883] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:23.790832] [D] [thread 364863] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:23.790856] [I] [thread 364863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:23.790860] [I] [thread 364863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:23.790871] [I] [thread 364863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:23.790872] [I] [thread 364863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:23.891233] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:23.891420] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:24.892613] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:25.177219] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:25.177402] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:25.178363] [D] [thread 364868] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:25.178415] [I] [thread 364868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:25.178419] [I] [thread 364868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:25.178431] [I] [thread 364868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:25.178431] [I] [thread 364868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:25.273709] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:25.273908] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:26.275100] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:26.650645] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:26.650850] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:26.651685] [D] [thread 364873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:26.651707] [I] [thread 364873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:26.651710] [I] [thread 364873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:26.651723] [I] [thread 364873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:26.651724] [I] [thread 364873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:26.754651] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:26.754837] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:27.756035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:28.193058] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:28.193326] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:28.194172] [D] [thread 364879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:28.194196] [I] [thread 364879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:28.194202] [I] [thread 364879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:28.194213] [I] [thread 364879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:28.194214] [I] [thread 364879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:28.310164] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:28.310337] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:29.311485] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:29.595757] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:29.595965] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:29.596816] [D] [thread 364884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:29.596840] [I] [thread 364884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:29.596843] [I] [thread 364884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:29.596861] [I] [thread 364884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:29.596862] [I] [thread 364884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:29.767479] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:29.767756] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:30.768935] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:31.376792] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:31.376985] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:31.377902] [D] [thread 364889] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:31.377926] [I] [thread 364889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:31.377930] [I] [thread 364889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:31.377941] [I] [thread 364889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:31.377942] [I] [thread 364889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:31.542229] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:31.542411] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:32.543732] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:33.295477] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:33.295671] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:33.296605] [D] [thread 364894] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:33.296629] [I] [thread 364894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:33.296633] [I] [thread 364894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:33.296644] [I] [thread 364894] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:33.296645] [I] [thread 364894] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:33.410703] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:33.410911] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:34.412097] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:34.758251] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:34.758457] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:34.759377] [D] [thread 364899] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:34.759392] [I] [thread 364899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:34.759395] [I] [thread 364899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:34.759406] [I] [thread 364899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:34.759407] [I] [thread 364899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:34.966629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:34.966808] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:35.967435] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:36.140076] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:36.140309] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:36.141227] [D] [thread 364904] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:36.141252] [I] [thread 364904] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:36.141255] [I] [thread 364904] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:36.141266] [I] [thread 364904] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:36.141267] [I] [thread 364904] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:36.233442] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:36.233635] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:37.234811] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:37.514840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:37.515082] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:37.515956] [D] [thread 364909] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:37.515980] [I] [thread 364909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:37.515984] [I] [thread 364909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:37.515995] [I] [thread 364909] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:37.515996] [I] [thread 364909] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:37.657168] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:37.657357] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:38.658542] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:38.929956] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:38.930194] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:38.931098] [D] [thread 364914] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:38.931145] [I] [thread 364914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:38.931239] [I] [thread 364914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:38.931252] [I] [thread 364914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:38.931253] [I] [thread 364914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:39.074113] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:39.074321] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:40.075557] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:40.357974] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:40.358174] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:40.359041] [D] [thread 364919] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:40.359065] [I] [thread 364919] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:40.359069] [I] [thread 364919] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:40.359081] [I] [thread 364919] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:40.359081] [I] [thread 364919] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:40.493001] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:40.493183] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:41.494360] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:41.725379] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:41.725593] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:41.726427] [D] [thread 364924] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:41.726450] [I] [thread 364924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:41.726454] [I] [thread 364924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:41.726465] [I] [thread 364924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:41.726466] [I] [thread 364924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:41.830316] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:41.830564] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:42.831736] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:43.153260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:43.153459] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:43.154537] [D] [thread 364929] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:43.154577] [I] [thread 364929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:43.154582] [I] [thread 364929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:43.154595] [I] [thread 364929] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:43.154597] [I] [thread 364929] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:43.260622] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:43.260833] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:44.262008] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:44.656803] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:44.657003] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:44.657907] [D] [thread 364934] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:44.657930] [I] [thread 364934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:44.657935] [I] [thread 364934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:44.657946] [I] [thread 364934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:44.657947] [I] [thread 364934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:44.793944] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:44.794145] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:45.795305] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:46.796491] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:46.982070] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:46.982291] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:46.983174] [D] [thread 364939] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:46.983199] [I] [thread 364939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:46.983211] [I] [thread 364939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:46.983221] [I] [thread 364939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:46.983222] [I] [thread 364939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:47.093808] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:47.094018] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:48.095212] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:48.971420] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:48.971614] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:48.972551] [D] [thread 364944] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:48.972574] [I] [thread 364944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:48.972580] [I] [thread 364944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:48.972591] [I] [thread 364944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:48.972593] [I] [thread 364944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:49.217706] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:49.217897] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:50.219029] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:50.631841] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:50.632077] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:50.633015] [D] [thread 364949] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:50.633053] [I] [thread 364949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:50.633058] [I] [thread 364949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:50.633071] [I] [thread 364949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:50.633072] [I] [thread 364949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:50.707428] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:50.707619] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:51.708425] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:51.917672] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:51.917865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:51.918752] [D] [thread 364954] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:51.918774] [I] [thread 364954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:51.918785] [I] [thread 364954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:51.918796] [I] [thread 364954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:51.918797] [I] [thread 364954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:52.057399] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:52.057593] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:53.058781] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:53.390995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:53.391177] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:53.392090] [D] [thread 364959] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:53.392113] [I] [thread 364959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:53.392123] [I] [thread 364959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:53.392134] [I] [thread 364959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:53.392135] [I] [thread 364959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:53.533738] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:53.533932] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:54.535122] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:54.866534] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:54.867107] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:54.867768] [D] [thread 364964] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:54.867799] [I] [thread 364964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:54.867804] [I] [thread 364964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:54.867822] [I] [thread 364964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:54.867823] [I] [thread 364964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:54.975575] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:54.975810] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:55.977024] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:56.229856] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:56.230085] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:56.230974] [D] [thread 364969] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:56.230996] [I] [thread 364969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:56.231000] [I] [thread 364969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:56.231011] [I] [thread 364969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:56.231012] [I] [thread 364969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:56.358573] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:56.358799] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:57.359953] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:57.617649] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:57.617924] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:57.618792] [D] [thread 364974] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:57.618818] [I] [thread 364974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:57.618824] [I] [thread 364974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:57.618835] [I] [thread 364974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:57.618836] [I] [thread 364974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:57.724165] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:57.724443] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:58.725596] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:58.990143] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:58.990356] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:58.991212] [D] [thread 364979] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:40:58.991235] [I] [thread 364979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:58.991238] [I] [thread 364979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:40:58.991250] [I] [thread 364979] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:40:58.991251] [I] [thread 364979] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:40:59.098878] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:40:59.099076] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:00.059696] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.059734] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.059891] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,13,12299030381,1701171660059
[m
[36m[11:41:00.100259] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:00.113281] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.113315] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.113464] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,24,26007112182,1701171660113
[m
[36m[11:41:00.113601] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.113631] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.113736] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,100,12535672159,1701171660113
[m
[36m[11:41:00.127528] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.127556] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.127676] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,54,26434499741,1701171660127
[m
[36m[11:41:00.127795] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.127824] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.127920] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,47,25194191631,1701171660127
[m
[36m[11:41:00.130635] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:41:00.130666] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:41:00.130809] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171600000,1701171660000,63,25582651692,1701171660130
[m
[36m[11:41:00.617866] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:00.618112] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:00.619029] [D] [thread 364984] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:00.619056] [I] [thread 364984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:00.619060] [I] [thread 364984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:00.619070] [I] [thread 364984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:00.619071] [I] [thread 364984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:00.773544] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:00.773745] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:01.774933] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:02.702365] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:02.702692] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:02.703428] [D] [thread 364989] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:02.703441] [I] [thread 364989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:02.703444] [I] [thread 364989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:02.703454] [I] [thread 364989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:02.703455] [I] [thread 364989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:03.077414] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:03.077615] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:04.078853] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:04.343190] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:04.343397] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:04.344255] [D] [thread 364994] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:04.344278] [I] [thread 364994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:04.344281] [I] [thread 364994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:04.344294] [I] [thread 364994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:04.344296] [I] [thread 364994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:04.440927] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:04.441158] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:05.442337] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:05.758463] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:05.758646] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:05.759872] [D] [thread 364999] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:05.759897] [I] [thread 364999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:05.759901] [I] [thread 364999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:05.759912] [I] [thread 364999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:05.759913] [I] [thread 364999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:05.873482] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:05.873682] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:06.874842] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:07.096226] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:07.096469] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:07.097359] [D] [thread 365004] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:07.097382] [I] [thread 365004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:07.097386] [I] [thread 365004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:07.097397] [I] [thread 365004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:07.097398] [I] [thread 365004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:07.209785] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:07.209990] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:08.211175] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:08.497418] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:08.497619] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:08.498515] [D] [thread 365009] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:08.498540] [I] [thread 365009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:08.498550] [I] [thread 365009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:08.498561] [I] [thread 365009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:08.498562] [I] [thread 365009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:08.598289] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:08.598488] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:09.599780] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:09.850683] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:09.850872] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:09.852078] [D] [thread 365014] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:09.852103] [I] [thread 365014] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:09.852107] [I] [thread 365014] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:09.852118] [I] [thread 365014] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:09.852119] [I] [thread 365014] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:09.954565] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:09.954742] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:10.955903] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:11.238166] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:11.238350] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:11.239607] [D] [thread 365019] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:11.239630] [I] [thread 365019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:11.239640] [I] [thread 365019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:11.239651] [I] [thread 365019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:11.239652] [I] [thread 365019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:11.345242] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:11.345430] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:12.346583] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:12.604509] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:12.604745] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:12.605651] [D] [thread 365024] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:12.605676] [I] [thread 365024] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:12.605686] [I] [thread 365024] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:12.605696] [I] [thread 365024] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:12.605697] [I] [thread 365024] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:12.700070] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:12.700285] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:13.701469] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:13.950659] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:13.950842] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:13.951776] [D] [thread 365029] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:13.951807] [I] [thread 365029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:13.951811] [I] [thread 365029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:13.951821] [I] [thread 365029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:13.951822] [I] [thread 365029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:14.062780] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:14.063011] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:15.064233] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:15.434110] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:15.434359] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:15.435203] [D] [thread 365034] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:15.435230] [I] [thread 365034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:15.435234] [I] [thread 365034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:15.435251] [I] [thread 365034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:15.435252] [I] [thread 365034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:15.534109] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:15.534294] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:16.535466] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:17.334353] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:17.334631] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:17.335470] [D] [thread 365039] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:17.335495] [I] [thread 365039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:17.335499] [I] [thread 365039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:17.335510] [I] [thread 365039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:17.335511] [I] [thread 365039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:17.717993] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:17.718187] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:18.719404] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:19.142238] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:19.142415] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:19.143339] [D] [thread 365044] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:19.143353] [I] [thread 365044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:19.143356] [I] [thread 365044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:19.143367] [I] [thread 365044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:19.143368] [I] [thread 365044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:19.252610] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:19.252823] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:20.253995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:20.669655] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:20.669922] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:20.670758] [D] [thread 365049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:20.670782] [I] [thread 365049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:20.670786] [I] [thread 365049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:20.670798] [I] [thread 365049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:20.670799] [I] [thread 365049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:20.778247] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:20.778489] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:21.779661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:22.004777] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:22.004976] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:22.005822] [D] [thread 365054] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:22.005844] [I] [thread 365054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:22.005847] [I] [thread 365054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:22.005865] [I] [thread 365054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:22.005866] [I] [thread 365054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:22.104999] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:22.105222] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:23.106415] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:23.505978] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:23.506151] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:23.507789] [D] [thread 365059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:23.507817] [I] [thread 365059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:23.507820] [I] [thread 365059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:23.507831] [I] [thread 365059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:23.507833] [I] [thread 365059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:23.643596] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:23.643785] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:24.644950] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:24.890476] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:24.890667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:24.891636] [D] [thread 365064] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:24.891659] [I] [thread 365064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:24.891669] [I] [thread 365064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:24.891680] [I] [thread 365064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:24.891681] [I] [thread 365064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:25.023284] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:25.023493] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:26.024655] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:26.365867] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:26.366087] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:26.367213] [D] [thread 365069] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:26.367235] [I] [thread 365069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:26.367238] [I] [thread 365069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:26.367250] [I] [thread 365069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:26.367251] [I] [thread 365069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:26.469606] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:26.469784] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:27.470932] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:27.759080] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:27.759283] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:27.760274] [D] [thread 365074] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:27.760306] [I] [thread 365074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:27.760310] [I] [thread 365074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:27.760414] [I] [thread 365074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:27.760418] [I] [thread 365074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:27.861008] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:27.861256] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:28.862395] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:29.120236] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:29.120472] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:29.121427] [D] [thread 365079] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:29.121451] [I] [thread 365079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:29.121462] [I] [thread 365079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:29.121472] [I] [thread 365079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:29.121473] [I] [thread 365079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:29.223903] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:29.224110] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:30.225302] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:30.484722] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:30.484930] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:30.485754] [D] [thread 365084] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:30.485777] [I] [thread 365084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:30.485780] [I] [thread 365084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:30.485792] [I] [thread 365084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:30.485793] [I] [thread 365084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:30.619509] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:30.619697] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:31.620863] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:32.288403] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:32.288627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:32.290103] [D] [thread 365089] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:32.290127] [I] [thread 365089] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:32.290132] [I] [thread 365089] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:32.290148] [I] [thread 365089] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:32.290149] [I] [thread 365089] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:32.690381] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:32.690568] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:33.691757] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:34.334102] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:34.334286] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:34.335181] [D] [thread 365094] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:34.335205] [I] [thread 365094] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:34.335211] [I] [thread 365094] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:34.335222] [I] [thread 365094] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:34.335223] [I] [thread 365094] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:34.668865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:34.669053] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:35.670218] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:36.095354] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:36.095541] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:36.097117] [D] [thread 365099] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:36.097141] [I] [thread 365099] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:36.097145] [I] [thread 365099] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:36.097156] [I] [thread 365099] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:36.097157] [I] [thread 365099] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:36.290307] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:36.290516] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:37.291706] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:37.573796] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:37.574005] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:37.574902] [D] [thread 365104] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:37.574926] [I] [thread 365104] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:37.574929] [I] [thread 365104] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:37.574940] [I] [thread 365104] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:37.574941] [I] [thread 365104] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:37.736449] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:37.736655] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:38.737845] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:39.101808] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:39.102017] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:39.102914] [D] [thread 365109] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:39.102940] [I] [thread 365109] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:39.102947] [I] [thread 365109] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:39.102958] [I] [thread 365109] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:39.102959] [I] [thread 365109] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:39.245161] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:39.245390] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:40.246557] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:40.602208] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:40.602451] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:40.603323] [D] [thread 365114] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:40.603349] [I] [thread 365114] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:40.603356] [I] [thread 365114] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:40.603367] [I] [thread 365114] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:40.603368] [I] [thread 365114] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:40.737908] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:40.738117] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:41.739288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:42.067049] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:42.067257] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:42.068123] [D] [thread 365119] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:42.068148] [I] [thread 365119] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:42.068151] [I] [thread 365119] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:42.068162] [I] [thread 365119] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:42.068163] [I] [thread 365119] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:42.186610] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:42.186808] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:43.187969] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:43.427667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:43.427877] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:43.428776] [D] [thread 365124] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:43.428799] [I] [thread 365124] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:43.428805] [I] [thread 365124] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:43.428816] [I] [thread 365124] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:43.428817] [I] [thread 365124] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:43.528893] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:43.529095] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:44.530247] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:45.249784] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:45.249995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:45.250986] [D] [thread 365129] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:45.251011] [I] [thread 365129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:45.251015] [I] [thread 365129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:45.251026] [I] [thread 365129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:45.251027] [I] [thread 365129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:45.807662] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:45.807869] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:46.809036] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:47.810232] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:48.086650] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:48.086837] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:48.087852] [D] [thread 365134] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:48.087878] [I] [thread 365134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:48.087884] [I] [thread 365134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:48.087895] [I] [thread 365134] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:48.087896] [I] [thread 365134] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:48.289396] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:48.289593] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:49.290791] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:49.614698] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:49.614881] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:49.615824] [D] [thread 365139] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:49.615849] [I] [thread 365139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:49.615853] [I] [thread 365139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:49.615865] [I] [thread 365139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:49.615866] [I] [thread 365139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:49.724832] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:49.725081] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:50.726239] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:51.054319] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:51.054522] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:51.055400] [D] [thread 365145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:51.055414] [I] [thread 365145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:51.055417] [I] [thread 365145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:51.055428] [I] [thread 365145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:51.055429] [I] [thread 365145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:51.166107] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:51.166311] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:52.167485] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:53.145977] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:53.146225] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:53.147087] [D] [thread 365150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:53.147110] [I] [thread 365150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:53.147114] [I] [thread 365150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:53.147125] [I] [thread 365150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:53.147126] [I] [thread 365150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:53.253444] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:53.253764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:54.254938] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:54.593487] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:54.593693] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:54.594521] [D] [thread 365155] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:54.594544] [I] [thread 365155] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:54.594547] [I] [thread 365155] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:54.594559] [I] [thread 365155] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:54.594560] [I] [thread 365155] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:54.699377] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:54.699571] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:55.700733] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:56.157263] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:56.157605] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:56.158390] [D] [thread 365160] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:56.158403] [I] [thread 365160] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:56.158406] [I] [thread 365160] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:56.158416] [I] [thread 365160] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:56.158417] [I] [thread 365160] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:56.265538] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:56.265718] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:57.266902] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:58.268110] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:58.795127] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:58.795336] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:58.796216] [D] [thread 365165] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:41:58.796241] [I] [thread 365165] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:58.796245] [I] [thread 365165] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:41:58.796256] [I] [thread 365165] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:41:58.796257] [I] [thread 365165] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:41:58.903036] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:58.903248] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:41:59.904470] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:00.050304] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.050341] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.050485] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,63,24548462333,1701171720050
[m
[36m[11:42:00.085114] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.085146] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.085279] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,100,12366103402,1701171720085
[m
[36m[11:42:00.089889] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.089924] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.090037] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,54,22869061438,1701171720089
[m
[36m[11:42:00.090151] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.090157] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.090246] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,24,31475476878,1701171720090
[m
[36m[11:42:00.090342] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.090347] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.090432] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,13,15161683476,1701171720090
[m
[36m[11:42:00.119358] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:42:00.119388] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:42:00.119501] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171660000,1701171720000,47,24934175535,1701171720119
[m
[36m[11:42:00.246611] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:00.246795] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:00.247956] [D] [thread 365170] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:00.247979] [I] [thread 365170] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:00.247982] [I] [thread 365170] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:00.247993] [I] [thread 365170] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:00.247994] [I] [thread 365170] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:00.391414] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:00.391627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:01.392452] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:02.393624] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:02.689268] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:02.689454] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:02.690379] [D] [thread 365175] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:02.690402] [I] [thread 365175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:02.690406] [I] [thread 365175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:02.690417] [I] [thread 365175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:02.690418] [I] [thread 365175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:02.926084] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:02.926290] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:03.927424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:04.564573] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:04.564782] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:04.565641] [D] [thread 365180] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:04.565665] [I] [thread 365180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:04.565673] [I] [thread 365180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:04.565684] [I] [thread 365180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:04.565685] [I] [thread 365180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:04.656840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:04.657049] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:05.658243] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:05.866119] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:05.866381] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:05.867219] [D] [thread 365185] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:05.867241] [I] [thread 365185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:05.867248] [I] [thread 365185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:05.867258] [I] [thread 365185] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:05.867260] [I] [thread 365185] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:05.966307] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:05.966526] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:06.967720] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:07.362699] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:07.362926] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:07.363817] [D] [thread 365190] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:07.363843] [I] [thread 365190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:07.363849] [I] [thread 365190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:07.363860] [I] [thread 365190] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:07.363861] [I] [thread 365190] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:07.470403] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:07.470607] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:08.471764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:08.788806] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:08.788989] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:08.789880] [D] [thread 365195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:08.789904] [I] [thread 365195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:08.789907] [I] [thread 365195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:08.789919] [I] [thread 365195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:08.789920] [I] [thread 365195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:08.901965] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:08.902141] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:09.903320] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:10.180396] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:10.180572] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:10.182055] [D] [thread 365200] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:10.182079] [I] [thread 365200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:10.182082] [I] [thread 365200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:10.182093] [I] [thread 365200] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:10.182094] [I] [thread 365200] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:10.275250] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:10.275473] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:11.276425] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:11.552789] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:11.552999] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:11.553885] [D] [thread 365205] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:11.553909] [I] [thread 365205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:11.553913] [I] [thread 365205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:11.553926] [I] [thread 365205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:11.553927] [I] [thread 365205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:11.692836] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:11.693046] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:12.694190] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:13.077701] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:13.077881] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:13.078765] [D] [thread 365210] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:13.078790] [I] [thread 365210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:13.078794] [I] [thread 365210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:13.078805] [I] [thread 365210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:13.078806] [I] [thread 365210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:13.216534] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:13.216707] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:14.217889] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:14.456896] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:14.457091] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:14.458156] [D] [thread 365215] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:14.458182] [I] [thread 365215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:14.458186] [I] [thread 365215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:14.458197] [I] [thread 365215] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:14.458198] [I] [thread 365215] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:14.557786] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:14.557975] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:15.559187] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:15.850271] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:15.850597] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:15.851345] [D] [thread 365221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:15.851369] [I] [thread 365221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:15.851373] [I] [thread 365221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:15.851386] [I] [thread 365221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:15.851387] [I] [thread 365221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:16.030251] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:16.030617] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:17.031825] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:18.033031] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:18.177798] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:18.178035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:18.178890] [D] [thread 365226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:18.178915] [I] [thread 365226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:18.178919] [I] [thread 365226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:18.178931] [I] [thread 365226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:18.178932] [I] [thread 365226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:18.565629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:18.565830] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:19.567006] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:20.154730] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:20.154912] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:20.156427] [D] [thread 365231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:20.156452] [I] [thread 365231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:20.156458] [I] [thread 365231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:20.156470] [I] [thread 365231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:20.156471] [I] [thread 365231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:20.262987] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:20.263165] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:21.264373] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:21.949664] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:21.949847] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:21.951359] [D] [thread 365236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:21.951382] [I] [thread 365236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:21.951393] [I] [thread 365236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:21.951404] [I] [thread 365236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:21.951405] [I] [thread 365236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:22.060348] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:22.060525] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:23.061690] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:23.306254] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:23.306467] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:23.307322] [D] [thread 365241] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:23.307335] [I] [thread 365241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:23.307338] [I] [thread 365241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:23.307349] [I] [thread 365241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:23.307350] [I] [thread 365241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:23.442166] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:23.442378] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:24.443521] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:24.693626] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:24.693809] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:24.694658] [D] [thread 365246] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:24.694682] [I] [thread 365246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:24.694685] [I] [thread 365246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:24.694695] [I] [thread 365246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:24.694697] [I] [thread 365246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:24.835126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:24.835310] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:25.836463] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:26.158695] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:26.158910] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:26.159890] [D] [thread 365251] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:26.159928] [I] [thread 365251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:26.159932] [I] [thread 365251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:26.159949] [I] [thread 365251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:26.159950] [I] [thread 365251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:26.292111] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:26.292300] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:27.293512] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:27.509840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:27.510035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:27.510922] [D] [thread 365256] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:27.510946] [I] [thread 365256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:27.510952] [I] [thread 365256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:27.510963] [I] [thread 365256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:27.510964] [I] [thread 365256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:27.648116] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:27.648309] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:28.649565] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:28.886040] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:28.886232] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:28.887483] [D] [thread 365261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:28.887506] [I] [thread 365261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:28.887509] [I] [thread 365261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:28.887520] [I] [thread 365261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:28.887521] [I] [thread 365261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:29.033238] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:29.033421] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:30.034601] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:30.403614] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:30.403867] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:30.405249] [D] [thread 365266] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:30.405287] [I] [thread 365266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:30.405292] [I] [thread 365266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:30.405305] [I] [thread 365266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:30.405306] [I] [thread 365266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:30.509838] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:30.510019] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:31.511156] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:32.226137] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:32.226323] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:32.227269] [D] [thread 365271] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:32.227294] [I] [thread 365271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:32.227297] [I] [thread 365271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:32.227307] [I] [thread 365271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:32.227308] [I] [thread 365271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:32.681673] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:32.681854] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:33.683048] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:33.966667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:33.966885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:33.967790] [D] [thread 365276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:33.967815] [I] [thread 365276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:33.967819] [I] [thread 365276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:33.967829] [I] [thread 365276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:33.967830] [I] [thread 365276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:34.074652] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:34.074835] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:35.076017] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:35.337463] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:35.337652] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:35.338606] [D] [thread 365281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:35.338630] [I] [thread 365281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:35.338636] [I] [thread 365281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:35.338646] [I] [thread 365281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:35.338647] [I] [thread 365281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:35.441834] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:35.442036] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:36.443189] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:36.751263] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:36.751496] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:36.752425] [D] [thread 365286] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:36.752493] [I] [thread 365286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:36.752497] [I] [thread 365286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:36.752509] [I] [thread 365286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:36.752510] [I] [thread 365286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:36.885682] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:36.885882] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:37.887046] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:38.186849] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:38.187050] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:38.187903] [D] [thread 365291] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:38.187926] [I] [thread 365291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:38.187930] [I] [thread 365291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:38.187947] [I] [thread 365291] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:38.187948] [I] [thread 365291] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:38.312051] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:38.312233] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:39.313343] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:39.738187] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:39.738400] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:39.739286] [D] [thread 365296] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:39.739310] [I] [thread 365296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:39.739313] [I] [thread 365296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:39.739324] [I] [thread 365296] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:39.739326] [I] [thread 365296] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:39.858126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:39.858302] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:40.859456] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:41.105686] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:41.105876] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:41.106831] [D] [thread 365301] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:41.106859] [I] [thread 365301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:41.106863] [I] [thread 365301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:41.106874] [I] [thread 365301] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:41.106875] [I] [thread 365301] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:41.267801] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:41.268015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:42.269197] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:42.759001] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:42.759210] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:42.760748] [D] [thread 365306] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:42.760772] [I] [thread 365306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:42.760776] [I] [thread 365306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:42.760787] [I] [thread 365306] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:42.760788] [I] [thread 365306] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:42.926648] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:42.926824] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:43.928002] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:44.240285] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:44.240522] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:44.241512] [D] [thread 365311] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:44.241536] [I] [thread 365311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:44.241540] [I] [thread 365311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:44.241551] [I] [thread 365311] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:44.241552] [I] [thread 365311] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:44.344904] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:44.345114] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:45.346269] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:45.627421] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:45.627626] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:45.628515] [D] [thread 365316] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:45.628540] [I] [thread 365316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:45.628550] [I] [thread 365316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:45.628560] [I] [thread 365316] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:45.628561] [I] [thread 365316] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:45.728286] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:45.728530] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:46.729707] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:47.730910] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:48.509316] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:48.509530] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:48.510471] [D] [thread 365321] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:48.510495] [I] [thread 365321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:48.510501] [I] [thread 365321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:48.510512] [I] [thread 365321] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:48.510513] [I] [thread 365321] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:48.741047] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:48.741238] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:49.742424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:50.003444] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:50.003633] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:50.004555] [D] [thread 365327] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:50.004582] [I] [thread 365327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:50.004586] [I] [thread 365327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:50.004597] [I] [thread 365327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:50.004598] [I] [thread 365327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:50.100677] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:50.100866] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:51.102039] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:51.822408] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:51.822615] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:51.823523] [D] [thread 365333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:51.823547] [I] [thread 365333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:51.823551] [I] [thread 365333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:51.823562] [I] [thread 365333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:51.823563] [I] [thread 365333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:51.933694] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:51.933898] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:52.935078] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:53.297272] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:53.297496] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:53.298372] [D] [thread 365338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:53.298396] [I] [thread 365338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:53.298400] [I] [thread 365338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:53.298410] [I] [thread 365338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:53.298411] [I] [thread 365338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:53.403927] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:53.404128] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:54.404508] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:55.405719] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:56.382620] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:56.382850] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:56.383762] [D] [thread 365343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:56.383786] [I] [thread 365343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:56.383789] [I] [thread 365343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:56.383800] [I] [thread 365343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:56.383801] [I] [thread 365343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:56.943995] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:56.944413] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:57.945563] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:58.556597] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:58.556822] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:58.557690] [D] [thread 365348] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:58.557712] [I] [thread 365348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:58.557715] [I] [thread 365348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:58.557726] [I] [thread 365348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:58.557727] [I] [thread 365348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:42:58.662282] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:58.662491] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:59.663669] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:59.917455] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:59.917669] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:42:59.918597] [D] [thread 365353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:42:59.918620] [I] [thread 365353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:59.918627] [I] [thread 365353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:42:59.918637] [I] [thread 365353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:42:59.918638] [I] [thread 365353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:00.056864] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:00.057071] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:00.058777] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.058799] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.058901] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,100,13294493599,1701171780058
[m
[36m[11:43:00.136109] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.136146] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.136274] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,47,29987519373,1701171780136
[m
[36m[11:43:00.136458] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.136465] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.136546] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,54,26459516704,1701171780136
[m
[36m[11:43:00.136638] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.136642] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.136704] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,24,32188355924,1701171780136
[m
[36m[11:43:00.136771] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.136774] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.136827] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,63,31489207369,1701171780136
[m
[36m[11:43:00.136880] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:43:00.136882] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:43:00.136928] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171720000,1701171780000,13,12388322799,1701171780136
[m
[36m[11:43:01.058237] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:02.059440] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:02.586555] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:02.586772] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:02.588296] [D] [thread 365358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:02.588350] [I] [thread 365358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:02.588354] [I] [thread 365358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:02.588365] [I] [thread 365358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:02.588366] [I] [thread 365358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:02.841619] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:02.841797] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:03.842967] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:04.239265] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:04.239477] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:04.240482] [D] [thread 365363] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:04.240507] [I] [thread 365363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:04.240511] [I] [thread 365363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:04.240522] [I] [thread 365363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:04.240523] [I] [thread 365363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:04.367812] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:04.368020] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:05.369202] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:05.716388] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:05.716591] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:05.717544] [D] [thread 365368] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:05.717569] [I] [thread 365368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:05.717575] [I] [thread 365368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:05.717586] [I] [thread 365368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:05.717587] [I] [thread 365368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:05.828395] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:05.828591] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:06.829417] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:07.074982] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:07.075199] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:07.076086] [D] [thread 365373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:07.076111] [I] [thread 365373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:07.076121] [I] [thread 365373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:07.076131] [I] [thread 365373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:07.076132] [I] [thread 365373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:07.180736] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:07.180938] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:08.182100] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:08.545064] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:08.545252] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:08.546148] [D] [thread 365378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:08.546172] [I] [thread 365378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:08.546179] [I] [thread 365378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:08.546190] [I] [thread 365378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:08.546191] [I] [thread 365378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:08.656021] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:08.656226] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:09.657416] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:09.911358] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:09.911564] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:09.912436] [D] [thread 365383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:09.912459] [I] [thread 365383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:09.912463] [I] [thread 365383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:09.912481] [I] [thread 365383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:09.912482] [I] [thread 365383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:10.027455] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:10.027705] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:11.028894] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:11.305086] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:11.305264] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:11.306185] [D] [thread 365388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:11.306208] [I] [thread 365388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:11.306211] [I] [thread 365388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:11.306222] [I] [thread 365388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:11.306223] [I] [thread 365388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:11.447630] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:11.447811] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:12.448970] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:12.786851] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:12.787055] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:12.787925] [D] [thread 365393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:12.787948] [I] [thread 365393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:12.787951] [I] [thread 365393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:12.787962] [I] [thread 365393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:12.787963] [I] [thread 365393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:12.905966] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:12.906153] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:13.907350] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:14.908715] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:15.766825] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:15.767064] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:15.768015] [D] [thread 365398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:15.768040] [I] [thread 365398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:15.768044] [I] [thread 365398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:15.768056] [I] [thread 365398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:15.768057] [I] [thread 365398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:16.374462] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:16.374645] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:17.375815] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:18.284139] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:18.284352] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:18.285221] [D] [thread 365403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:18.285248] [I] [thread 365403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:18.285251] [I] [thread 365403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:18.285262] [I] [thread 365403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:18.285263] [I] [thread 365403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:18.666967] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:18.667158] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:19.668384] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:19.898371] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:19.898559] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:19.899506] [D] [thread 365408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:19.899531] [I] [thread 365408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:19.899535] [I] [thread 365408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:19.899545] [I] [thread 365408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:19.899546] [I] [thread 365408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:20.025183] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:20.025376] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:21.026556] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:21.317740] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:21.317948] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:21.318786] [D] [thread 365413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:21.318809] [I] [thread 365413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:21.318813] [I] [thread 365413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:21.318824] [I] [thread 365413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:21.318825] [I] [thread 365413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:21.454520] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:21.454759] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:22.455931] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:22.890527] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:22.890719] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:22.891654] [D] [thread 365418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:22.891677] [I] [thread 365418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:22.891681] [I] [thread 365418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:22.891699] [I] [thread 365418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:22.891701] [I] [thread 365418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:22.999425] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:22.999610] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:24.000764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:24.354603] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:24.354782] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:24.355642] [D] [thread 365423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:24.355665] [I] [thread 365423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:24.355668] [I] [thread 365423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:24.355679] [I] [thread 365423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:24.355681] [I] [thread 365423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:24.461113] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:24.461288] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:25.462466] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:25.741694] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:25.741887] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:25.742786] [D] [thread 365428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:25.742812] [I] [thread 365428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:25.742816] [I] [thread 365428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:25.742826] [I] [thread 365428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:25.742827] [I] [thread 365428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:25.863703] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:25.863886] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:26.865033] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:27.143875] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:27.144085] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:27.145479] [D] [thread 365433] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:27.145503] [I] [thread 365433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:27.145507] [I] [thread 365433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:27.145518] [I] [thread 365433] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:27.145519] [I] [thread 365433] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:27.265574] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:27.265751] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:28.266974] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:28.493932] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:28.494120] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:28.495058] [D] [thread 365438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:28.495082] [I] [thread 365438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:28.495086] [I] [thread 365438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:28.495097] [I] [thread 365438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:28.495098] [I] [thread 365438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:28.630836] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:28.631040] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:29.632215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:29.864227] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:29.864596] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:29.865444] [D] [thread 365443] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:29.865481] [I] [thread 365443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:29.865484] [I] [thread 365443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:29.865495] [I] [thread 365443] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:29.865497] [I] [thread 365443] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:30.002132] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:30.002345] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:31.003617] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:31.798543] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:31.798729] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:31.799674] [D] [thread 365448] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:31.799698] [I] [thread 365448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:31.799704] [I] [thread 365448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:31.799715] [I] [thread 365448] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:31.799716] [I] [thread 365448] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:32.179032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:32.179244] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:33.180481] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:33.962394] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:33.962614] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:33.963553] [D] [thread 365453] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:33.963578] [I] [thread 365453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:33.963584] [I] [thread 365453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:33.963595] [I] [thread 365453] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:33.963596] [I] [thread 365453] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:34.079150] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:34.079371] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:35.080541] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:35.345498] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:35.345713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:35.346688] [D] [thread 365458] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:35.346714] [I] [thread 365458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:35.346717] [I] [thread 365458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:35.346728] [I] [thread 365458] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:35.346729] [I] [thread 365458] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:35.449933] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:35.450121] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:36.451314] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:36.703521] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:36.703736] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:36.705241] [D] [thread 365463] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:36.705268] [I] [thread 365463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:36.705272] [I] [thread 365463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:36.705283] [I] [thread 365463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:36.705284] [I] [thread 365463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:36.857029] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:36.857232] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:37.858401] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:38.140723] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:38.140934] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:38.141847] [D] [thread 365468] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:38.141873] [I] [thread 365468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:38.141876] [I] [thread 365468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:38.141887] [I] [thread 365468] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:38.141888] [I] [thread 365468] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:38.263484] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:38.263681] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:39.264845] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:39.538934] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:39.539184] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:39.540045] [D] [thread 365474] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:39.540069] [I] [thread 365474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:39.540073] [I] [thread 365474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:39.540090] [I] [thread 365474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:39.540091] [I] [thread 365474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:39.675081] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:39.675267] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:40.676459] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:40.906105] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:40.906292] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:40.907207] [D] [thread 365480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:40.907230] [I] [thread 365480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:40.907234] [I] [thread 365480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:40.907244] [I] [thread 365480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:40.907245] [I] [thread 365480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:41.040530] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:41.040732] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:42.041880] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:42.272385] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:42.272604] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:42.273584] [D] [thread 365488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:42.273608] [I] [thread 365488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:42.273618] [I] [thread 365488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:42.273630] [I] [thread 365488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:42.273631] [I] [thread 365488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:42.408720] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:42.408911] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:43.410088] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:43.692731] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:43.692908] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:43.694232] [D] [thread 365494] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:43.694259] [I] [thread 365494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:43.694263] [I] [thread 365494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:43.694274] [I] [thread 365494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:43.694275] [I] [thread 365494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:43.823457] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:43.823636] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:44.824810] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:45.178389] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:45.178576] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:45.180039] [D] [thread 365499] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:45.180063] [I] [thread 365499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:45.180069] [I] [thread 365499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:45.180080] [I] [thread 365499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:45.180081] [I] [thread 365499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:45.288782] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:45.288989] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:46.290172] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:47.291476] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:47.462311] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:47.462530] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:47.463381] [D] [thread 365507] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:47.463404] [I] [thread 365507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:47.463408] [I] [thread 365507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:47.463419] [I] [thread 365507] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:47.463420] [I] [thread 365507] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:47.767961] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:47.768155] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:48.769335] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:49.226559] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:49.226774] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:49.227696] [D] [thread 365512] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:49.227721] [I] [thread 365512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:49.227724] [I] [thread 365512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:49.227735] [I] [thread 365512] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:49.227736] [I] [thread 365512] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:49.295113] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:49.295320] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:50.296478] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:51.041787] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:51.041996] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:51.042927] [D] [thread 365518] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:51.042952] [I] [thread 365518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:51.042958] [I] [thread 365518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:51.042968] [I] [thread 365518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:51.042969] [I] [thread 365518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:51.150706] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:51.150917] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:52.152193] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:52.468854] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:52.469053] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:52.470508] [D] [thread 365525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:52.470522] [I] [thread 365525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:52.470525] [I] [thread 365525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:52.470536] [I] [thread 365525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:52.470537] [I] [thread 365525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:52.572667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:52.572877] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:53.574059] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:53.852673] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:53.852869] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:53.853785] [D] [thread 365530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:53.853811] [I] [thread 365530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:53.853816] [I] [thread 365530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:53.853827] [I] [thread 365530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:53.853828] [I] [thread 365530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:53.966290] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:53.966516] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:54.967714] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:55.233305] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:55.233504] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:55.234404] [D] [thread 365535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:55.234427] [I] [thread 365535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:55.234433] [I] [thread 365535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:55.234443] [I] [thread 365535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:55.234444] [I] [thread 365535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:55.348273] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:55.348528] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:56.349679] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:56.720207] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:56.720413] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:56.721334] [D] [thread 365540] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:56.721358] [I] [thread 365540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:56.721362] [I] [thread 365540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:56.721379] [I] [thread 365540] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:56.721381] [I] [thread 365540] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:56.864250] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:56.864474] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:57.865660] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:58.254165] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:58.254358] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:58.255650] [D] [thread 365545] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:58.255672] [I] [thread 365545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:58.255678] [I] [thread 365545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:58.255689] [I] [thread 365545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:58.255690] [I] [thread 365545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:58.372958] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:58.373140] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:59.374324] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:59.752573] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:59.752758] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:59.754296] [D] [thread 365550] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:43:59.754319] [I] [thread 365550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:59.754323] [I] [thread 365550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:43:59.754334] [I] [thread 365550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:43:59.754335] [I] [thread 365550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:43:59.882133] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:43:59.882335] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:00.103119] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.103158] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.103317] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,63,24556402640,1701171840103
[m
[36m[11:44:00.103489] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.103521] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.103626] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,13,14453724580,1701171840103
[m
[36m[11:44:00.103735] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.103762] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.103857] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,100,9418825496,1701171840103
[m
[36m[11:44:00.122341] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.122374] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.122483] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,47,22850195983,1701171840122
[m
[36m[11:44:00.122594] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.122600] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.122689] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,24,25726533343,1701171840122
[m
[36m[11:44:00.122793] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:44:00.122797] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:44:00.122880] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171780000,1701171840000,54,28555850220,1701171840122
[m
[36m[11:44:00.883409] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:01.884596] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:02.885743] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:03.610178] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:03.610439] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:03.611812] [D] [thread 365555] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:03.611839] [I] [thread 365555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:03.611843] [I] [thread 365555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:03.611862] [I] [thread 365555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:03.611863] [I] [thread 365555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:03.773416] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:03.773620] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:04.774812] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:05.048390] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:05.048579] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:05.049454] [D] [thread 365560] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:05.049479] [I] [thread 365560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:05.049483] [I] [thread 365560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:05.049501] [I] [thread 365560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:05.049502] [I] [thread 365560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:05.161839] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:05.162070] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:06.163260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:06.436873] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:06.437064] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:06.438007] [D] [thread 365565] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:06.438030] [I] [thread 365565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:06.438034] [I] [thread 365565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:06.438045] [I] [thread 365565] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:06.438046] [I] [thread 365565] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:06.540909] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:06.541118] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:07.542305] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:08.154865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:08.155076] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:08.156552] [D] [thread 365570] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:08.156576] [I] [thread 365570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:08.156580] [I] [thread 365570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:08.156591] [I] [thread 365570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:08.156592] [I] [thread 365570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:08.268978] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:08.269184] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:09.270352] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:10.271584] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:11.006726] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:11.006919] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:11.008411] [D] [thread 365575] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:11.008435] [I] [thread 365575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:11.008438] [I] [thread 365575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:11.008450] [I] [thread 365575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:11.008451] [I] [thread 365575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:11.116727] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:11.116945] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:12.118124] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:12.403361] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:12.403553] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:12.404493] [D] [thread 365580] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:12.404517] [I] [thread 365580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:12.404528] [I] [thread 365580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:12.404539] [I] [thread 365580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:12.404540] [I] [thread 365580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:12.537059] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:12.537243] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:13.538431] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:14.466330] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:14.466534] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:14.467525] [D] [thread 365585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:14.467539] [I] [thread 365585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:14.467543] [I] [thread 365585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:14.467553] [I] [thread 365585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:14.467554] [I] [thread 365585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:14.715829] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:14.716035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:15.717176] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:16.718353] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:16.961959] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:16.962148] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:16.963132] [D] [thread 365590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:16.963159] [I] [thread 365590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:16.963164] [I] [thread 365590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:16.963176] [I] [thread 365590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:16.963177] [I] [thread 365590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:17.334294] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:17.334573] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:18.335759] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:18.972306] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:18.972542] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:18.973367] [D] [thread 365595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:18.973389] [I] [thread 365595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:18.973393] [I] [thread 365595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:18.973404] [I] [thread 365595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:18.973405] [I] [thread 365595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:19.109627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:19.109904] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:20.111064] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:20.451234] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:20.451424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:20.452933] [D] [thread 365601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:20.452958] [I] [thread 365601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:20.452969] [I] [thread 365601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:20.452980] [I] [thread 365601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:20.452981] [I] [thread 365601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:20.591895] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:20.592088] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:21.593250] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:21.889230] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:21.889444] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:21.890659] [D] [thread 365606] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:21.890685] [I] [thread 365606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:21.890689] [I] [thread 365606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:21.890700] [I] [thread 365606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:21.890701] [I] [thread 365606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:22.026713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:22.026916] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:23.028087] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:23.374900] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:23.375106] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:23.376028] [D] [thread 365611] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:23.376052] [I] [thread 365611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:23.376055] [I] [thread 365611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:23.376067] [I] [thread 365611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:23.376068] [I] [thread 365611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:23.520290] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:23.520540] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:24.521704] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:25.051613] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:25.051817] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:25.053065] [D] [thread 365616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:25.053105] [I] [thread 365616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:25.053109] [I] [thread 365616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:25.053120] [I] [thread 365616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:25.053121] [I] [thread 365616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:25.319255] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:25.319461] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:26.320648] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:26.942260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:26.942535] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:26.943326] [D] [thread 365621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:26.943351] [I] [thread 365621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:26.943354] [I] [thread 365621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:26.943365] [I] [thread 365621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:26.943367] [I] [thread 365621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:27.049330] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:27.049561] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:28.050759] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:28.526760] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:28.526994] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:28.527816] [D] [thread 365626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:28.527839] [I] [thread 365626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:28.527843] [I] [thread 365626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:28.527854] [I] [thread 365626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:28.527855] [I] [thread 365626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:28.646713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:28.646894] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:29.648150] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:30.648542] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:31.649758] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:32.650981] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:32.888843] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:32.889022] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:32.889894] [D] [thread 365633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:32.889915] [I] [thread 365633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:32.889919] [I] [thread 365633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:32.889929] [I] [thread 365633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:32.889930] [I] [thread 365633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:33.132669] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:33.132883] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:34.134054] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:34.926532] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:34.926743] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:34.927965] [D] [thread 365640] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:34.927988] [I] [thread 365640] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:34.927995] [I] [thread 365640] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:34.928005] [I] [thread 365640] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:34.928006] [I] [thread 365640] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:35.033994] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:35.034192] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:36.035339] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:36.761245] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:36.761460] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:36.762386] [D] [thread 365646] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:36.762414] [I] [thread 365646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:36.762418] [I] [thread 365646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:36.762430] [I] [thread 365646] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:36.762432] [I] [thread 365646] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:36.870663] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:36.870864] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:37.872038] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:38.320831] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:38.321100] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:38.321921] [D] [thread 365651] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:38.321946] [I] [thread 365651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:38.321957] [I] [thread 365651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:38.321968] [I] [thread 365651] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:38.321969] [I] [thread 365651] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:38.441244] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:38.441436] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:39.442629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:39.678059] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:39.678241] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:39.679513] [D] [thread 365656] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:39.679535] [I] [thread 365656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:39.679538] [I] [thread 365656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:39.679549] [I] [thread 365656] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:39.679550] [I] [thread 365656] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:39.779074] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:39.779256] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:40.780454] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:41.046118] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:41.046302] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:41.047178] [D] [thread 365661] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:41.047203] [I] [thread 365661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:41.047214] [I] [thread 365661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:41.047225] [I] [thread 365661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:41.047226] [I] [thread 365661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:41.180312] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:41.180548] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:42.181736] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:42.442422] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:42.442628] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:42.443895] [D] [thread 365666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:42.443919] [I] [thread 365666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:42.443923] [I] [thread 365666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:42.443934] [I] [thread 365666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:42.443935] [I] [thread 365666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:42.604471] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:42.604662] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:43.605822] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:43.899022] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:43.899206] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:43.900174] [D] [thread 365671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:43.900199] [I] [thread 365671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:43.900203] [I] [thread 365671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:43.900214] [I] [thread 365671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:43.900215] [I] [thread 365671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:44.007131] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:44.007319] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:45.008488] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:45.470545] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:45.470744] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:45.471649] [D] [thread 365676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:45.471672] [I] [thread 365676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:45.471675] [I] [thread 365676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:45.471687] [I] [thread 365676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:45.471688] [I] [thread 365676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:45.640702] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:45.640911] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:46.642093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:47.643300] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:48.644515] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:48.997922] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:48.998129] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:48.999001] [D] [thread 365681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:48.999024] [I] [thread 365681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:48.999031] [I] [thread 365681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:48.999042] [I] [thread 365681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:48.999043] [I] [thread 365681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:49.126669] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:49.126884] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:50.128062] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:50.427377] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:50.427586] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:50.428497] [D] [thread 365686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:50.428523] [I] [thread 365686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:50.428527] [I] [thread 365686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:50.428538] [I] [thread 365686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:50.428539] [I] [thread 365686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:50.541771] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:50.542131] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:51.543334] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:51.891637] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:51.891952] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:51.892721] [D] [thread 365691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:51.892746] [I] [thread 365691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:51.892750] [I] [thread 365691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:51.892761] [I] [thread 365691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:51.892762] [I] [thread 365691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:51.984637] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:51.984840] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:52.985992] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:53.588530] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:53.588735] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:53.589610] [D] [thread 365696] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:53.589633] [I] [thread 365696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:53.589637] [I] [thread 365696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:53.589655] [I] [thread 365696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:53.589656] [I] [thread 365696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:53.711033] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:53.711333] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:54.712517] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:54.985067] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:54.985266] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:54.986110] [D] [thread 365701] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:54.986134] [I] [thread 365701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:54.986137] [I] [thread 365701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:54.986149] [I] [thread 365701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:54.986150] [I] [thread 365701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:55.125471] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:55.125712] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:56.126965] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:56.415411] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:56.415637] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:56.416458] [D] [thread 365706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:56.416483] [I] [thread 365706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:56.416487] [I] [thread 365706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:56.416501] [I] [thread 365706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:56.416502] [I] [thread 365706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:56.523981] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:56.524206] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:57.525392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:57.850779] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:57.851097] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:57.851807] [D] [thread 365711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:57.851833] [I] [thread 365711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:57.851837] [I] [thread 365711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:57.851849] [I] [thread 365711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:57.851850] [I] [thread 365711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:57.968032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:57.968645] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:58.969863] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:59.603440] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:59.603713] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:59.604581] [D] [thread 365716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:44:59.604606] [I] [thread 365716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:59.604617] [I] [thread 365716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:44:59.604628] [I] [thread 365716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:44:59.604629] [I] [thread 365716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:44:59.897249] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:44:59.897444] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:00.109509] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.109543] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.109704] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,100,12672874764,1701171900109
[m
[36m[11:45:00.130661] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.130691] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.130819] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,63,31598122923,1701171900130
[m
[36m[11:45:00.130915] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.130933] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.130999] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,47,24276119075,1701171900130
[m
[36m[11:45:00.131060] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.131068] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.131122] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,24,24115089797,1701171900131
[m
[36m[11:45:00.131335] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.131354] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.131429] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,13,13215284001,1701171900131
[m
[36m[11:45:00.145131] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:45:00.145149] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:45:00.145225] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171840000,1701171900000,54,20901765155,1701171900145
[m
[36m[11:45:00.898676] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:01.899885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:02.623066] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:02.623341] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:02.624164] [D] [thread 365721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:02.624190] [I] [thread 365721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:02.624194] [I] [thread 365721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:02.624212] [I] [thread 365721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:02.624213] [I] [thread 365721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:02.926714] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:02.926937] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:03.928113] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:04.477255] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:04.477457] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:04.478353] [D] [thread 365726] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:04.478377] [I] [thread 365726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:04.478380] [I] [thread 365726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:04.478391] [I] [thread 365726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:04.478392] [I] [thread 365726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:04.596907] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:04.597183] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:05.598342] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:06.599503] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:07.600721] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:08.601896] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:08.957142] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:08.957326] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:08.958239] [D] [thread 365731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:08.958265] [I] [thread 365731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:08.958269] [I] [thread 365731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:08.958280] [I] [thread 365731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:08.958281] [I] [thread 365731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:09.052733] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:09.052917] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:10.054067] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:10.666924] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:10.667123] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:10.668001] [D] [thread 365736] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:10.668014] [I] [thread 365736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:10.668018] [I] [thread 365736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:10.668028] [I] [thread 365736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:10.668029] [I] [thread 365736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:10.801427] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:10.801630] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:11.802735] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:12.308297] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:12.308527] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:12.309404] [D] [thread 365741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:12.309429] [I] [thread 365741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:12.309433] [I] [thread 365741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:12.309447] [I] [thread 365741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:12.309448] [I] [thread 365741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:12.413047] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:12.413247] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:13.414481] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:13.789564] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:13.789836] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:13.790615] [D] [thread 365746] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:13.790641] [I] [thread 365746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:13.790645] [I] [thread 365746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:13.790664] [I] [thread 365746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:13.790665] [I] [thread 365746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:13.935539] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:13.935733] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:14.936424] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:15.202243] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:15.202429] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:15.203356] [D] [thread 365751] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:15.203377] [I] [thread 365751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:15.203381] [I] [thread 365751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:15.203400] [I] [thread 365751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:15.203401] [I] [thread 365751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:15.345553] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:15.345735] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:16.346895] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:17.348107] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:18.349319] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:18.806289] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:18.806500] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:18.807357] [D] [thread 365756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:18.807382] [I] [thread 365756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:18.807386] [I] [thread 365756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:18.807398] [I] [thread 365756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:18.807399] [I] [thread 365756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:18.910875] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:18.911093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:19.912245] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:20.153314] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:20.153518] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:20.154412] [D] [thread 365761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:20.154442] [I] [thread 365761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:20.154445] [I] [thread 365761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:20.154465] [I] [thread 365761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:20.154466] [I] [thread 365761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:20.259245] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:20.259450] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:21.260600] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:21.586778] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:21.587005] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:21.587865] [D] [thread 365767] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:21.587890] [I] [thread 365767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:21.587894] [I] [thread 365767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:21.587905] [I] [thread 365767] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:21.587907] [I] [thread 365767] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:21.722945] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:21.723171] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:22.724389] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:23.066868] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:23.067148] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:23.067928] [D] [thread 365773] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:23.067951] [I] [thread 365773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:23.067955] [I] [thread 365773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:23.067967] [I] [thread 365773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:23.067968] [I] [thread 365773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:23.237705] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:23.237900] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:24.239085] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:24.577788] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:24.578027] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:24.578898] [D] [thread 365779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:24.578920] [I] [thread 365779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:24.578925] [I] [thread 365779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:24.578937] [I] [thread 365779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:24.578938] [I] [thread 365779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:24.694392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:24.694590] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:25.695796] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:26.696985] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:27.698157] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:27.715198] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:27.715453] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:27.716303] [D] [thread 365784] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:27.716372] [I] [thread 365784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:27.716376] [I] [thread 365784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:27.716400] [I] [thread 365784] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:27.716401] [I] [thread 365784] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:27.856742] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:27.856949] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:28.858153] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:29.402632] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:29.402909] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:29.403738] [D] [thread 365789] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:29.403761] [I] [thread 365789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:29.403764] [I] [thread 365789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:29.403776] [I] [thread 365789] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:29.403777] [I] [thread 365789] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:29.545002] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:29.545211] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:30.546357] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:31.547523] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:32.045895] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:32.046179] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:32.046976] [D] [thread 365794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:32.046998] [I] [thread 365794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:32.047009] [I] [thread 365794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:32.047021] [I] [thread 365794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:32.047022] [I] [thread 365794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:32.563020] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:32.563262] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:33.564465] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:34.062606] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:34.062799] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:34.063742] [D] [thread 365799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:34.063770] [I] [thread 365799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:34.063775] [I] [thread 365799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:34.063788] [I] [thread 365799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:34.063789] [I] [thread 365799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:34.182142] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:34.182372] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:35.183511] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:35.670426] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:35.670608] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:35.671486] [D] [thread 365804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:35.671508] [I] [thread 365804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:35.671511] [I] [thread 365804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:35.671522] [I] [thread 365804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:35.671523] [I] [thread 365804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:35.780858] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:35.781031] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:36.782215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:37.783432] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:37.810011] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:37.810222] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:37.811105] [D] [thread 365809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:37.811128] [I] [thread 365809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:37.811132] [I] [thread 365809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:37.811143] [I] [thread 365809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:37.811144] [I] [thread 365809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:38.070409] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:38.070618] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:39.071767] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:39.457520] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:39.457716] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:39.458883] [D] [thread 365814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:39.458907] [I] [thread 365814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:39.458910] [I] [thread 365814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:39.458921] [I] [thread 365814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:39.458922] [I] [thread 365814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:39.596910] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:39.597093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:40.598274] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:41.199079] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:41.199278] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:41.200265] [D] [thread 365819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:41.200291] [I] [thread 365819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:41.200296] [I] [thread 365819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:41.200308] [I] [thread 365819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:41.200309] [I] [thread 365819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:41.295666] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:41.295841] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:42.297012] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:42.603505] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:42.603688] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:42.604737] [D] [thread 365824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:42.604763] [I] [thread 365824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:42.604766] [I] [thread 365824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:42.604778] [I] [thread 365824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:42.604779] [I] [thread 365824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:42.717238] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:42.717423] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:43.718616] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:44.077996] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:44.078195] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:44.079038] [D] [thread 365829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:44.079061] [I] [thread 365829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:44.079065] [I] [thread 365829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:44.079076] [I] [thread 365829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:44.079077] [I] [thread 365829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:44.233802] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:44.234003] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:45.235182] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:46.198700] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:46.198885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:46.200464] [D] [thread 365834] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:46.200489] [I] [thread 365834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:46.200492] [I] [thread 365834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:46.200503] [I] [thread 365834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:46.200504] [I] [thread 365834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:46.460865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:46.461052] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:47.462232] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:48.463446] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:49.181696] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:49.181880] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:49.183406] [D] [thread 365839] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:49.183432] [I] [thread 365839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:49.183442] [I] [thread 365839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:49.183454] [I] [thread 365839] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:49.183455] [I] [thread 365839] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:49.420599] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:49.420764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:50.421938] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:50.932590] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:50.932813] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:50.933753] [D] [thread 365844] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:50.933777] [I] [thread 365844] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:50.933781] [I] [thread 365844] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:50.933792] [I] [thread 365844] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:50.933793] [I] [thread 365844] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:51.052843] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:51.053032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:52.054200] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:52.390989] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:52.391182] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:52.392090] [D] [thread 365849] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:52.392115] [I] [thread 365849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:52.392123] [I] [thread 365849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:52.392134] [I] [thread 365849] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:52.392136] [I] [thread 365849] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:52.531845] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:52.532054] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:53.533221] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:53.907202] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:53.907393] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:53.908308] [D] [thread 365856] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:53.908355] [I] [thread 365856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:53.908359] [I] [thread 365856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:53.908371] [I] [thread 365856] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:53.908372] [I] [thread 365856] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:54.062627] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:54.062813] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:55.064032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:55.440609] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:55.440830] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:55.442072] [D] [thread 365862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:55.442096] [I] [thread 365862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:55.442100] [I] [thread 365862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:55.442111] [I] [thread 365862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:55.442112] [I] [thread 365862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:55.637547] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:55.637749] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:56.638935] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:56.896885] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:56.897089] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:56.898002] [D] [thread 365867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:56.898036] [I] [thread 365867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:56.898040] [I] [thread 365867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:56.898051] [I] [thread 365867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:56.898052] [I] [thread 365867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:57.026844] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:57.027059] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:58.028243] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:58.342519] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:58.342701] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:58.344227] [D] [thread 365872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:58.344252] [I] [thread 365872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:58.344262] [I] [thread 365872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:58.344273] [I] [thread 365872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:58.344274] [I] [thread 365872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:58.470974] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:58.471184] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:59.472392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:59.726135] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:59.726328] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:59.727229] [D] [thread 365879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:45:59.727256] [I] [thread 365879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:59.727260] [I] [thread 365879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:45:59.727271] [I] [thread 365879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:45:59.727272] [I] [thread 365879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:45:59.870981] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:45:59.871166] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:00.038415] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.038452] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.038609] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,47,30615877356,1701171960038
[m
[36m[11:46:00.117721] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.117754] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.117890] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,100,11711644612,1701171960117
[m
[36m[11:46:00.134157] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.134185] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.134296] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,13,12551858992,1701171960134
[m
[36m[11:46:00.136670] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.136698] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.136807] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,24,30011568001,1701171960136
[m
[36m[11:46:00.145391] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.145419] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.145535] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,63,25618757158,1701171960145
[m
[36m[11:46:00.145650] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:46:00.145666] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:46:00.145759] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171900000,1701171960000,54,36220585316,1701171960145
[m
[36m[11:46:00.872388] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:01.873601] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:02.235087] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:02.235470] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:02.236281] [D] [thread 365885] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:02.236295] [I] [thread 365885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:02.236298] [I] [thread 365885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:02.236308] [I] [thread 365885] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:02.236310] [I] [thread 365885] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:02.565248] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:02.565513] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:03.566698] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:04.035244] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:04.035495] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:04.036450] [D] [thread 365890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:04.036475] [I] [thread 365890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:04.036485] [I] [thread 365890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:04.036496] [I] [thread 365890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:04.036497] [I] [thread 365890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:04.142629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:04.142848] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:05.144032] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:05.892671] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:05.892897] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:05.893752] [D] [thread 365895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:05.893786] [I] [thread 365895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:05.893790] [I] [thread 365895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:05.893801] [I] [thread 365895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:05.893803] [I] [thread 365895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:06.006328] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:06.006547] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:07.007764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:07.393898] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:07.394081] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:07.395528] [D] [thread 365900] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:07.395542] [I] [thread 365900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:07.395545] [I] [thread 365900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:07.395556] [I] [thread 365900] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:07.395557] [I] [thread 365900] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:07.530860] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:07.531039] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:08.532195] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:08.781962] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:08.782190] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:08.783082] [D] [thread 365905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:08.783107] [I] [thread 365905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:08.783110] [I] [thread 365905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:08.783121] [I] [thread 365905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:08.783122] [I] [thread 365905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:08.891673] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:08.891853] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:09.893035] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:10.614334] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:10.614549] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:10.615428] [D] [thread 365910] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:10.615453] [I] [thread 365910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:10.615461] [I] [thread 365910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:10.615472] [I] [thread 365910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:10.615473] [I] [thread 365910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:10.798115] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:10.798323] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:11.799480] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:12.105076] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:12.105282] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:12.106174] [D] [thread 365915] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:12.106198] [I] [thread 365915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:12.106209] [I] [thread 365915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:12.106219] [I] [thread 365915] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:12.106220] [I] [thread 365915] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:12.244893] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:12.245114] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:13.246279] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:13.909947] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:13.910171] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:13.911084] [D] [thread 365920] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:13.911107] [I] [thread 365920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:13.911111] [I] [thread 365920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:13.911122] [I] [thread 365920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:13.911123] [I] [thread 365920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:14.071253] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:14.071464] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:15.072614] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:16.061923] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:16.062135] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:16.063043] [D] [thread 365926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:16.063070] [I] [thread 365926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:16.063073] [I] [thread 365926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:16.063085] [I] [thread 365926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:16.063086] [I] [thread 365926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:16.769625] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:16.769882] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:17.771099] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:18.772300] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:19.182438] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:19.182653] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:19.183573] [D] [thread 365931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:19.183598] [I] [thread 365931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:19.183602] [I] [thread 365931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:19.183612] [I] [thread 365931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:19.183614] [I] [thread 365931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:19.294997] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:19.295191] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:20.296386] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:20.814710] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:20.814986] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:20.815903] [D] [thread 365937] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:20.815928] [I] [thread 365937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:20.815932] [I] [thread 365937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:20.815943] [I] [thread 365937] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:20.815944] [I] [thread 365937] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:20.933742] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:20.933931] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:21.935131] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:22.183524] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:22.183720] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:22.184671] [D] [thread 365942] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:22.184698] [I] [thread 365942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:22.184702] [I] [thread 365942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:22.184713] [I] [thread 365942] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:22.184714] [I] [thread 365942] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:22.290354] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:22.290588] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:23.291750] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:23.636571] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:23.636811] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:23.637687] [D] [thread 365947] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:23.637713] [I] [thread 365947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:23.637722] [I] [thread 365947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:23.637734] [I] [thread 365947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:23.637735] [I] [thread 365947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:24.126593] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:24.126775] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:25.127930] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:25.422201] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:25.422429] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:25.423278] [D] [thread 365952] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:25.423300] [I] [thread 365952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:25.423306] [I] [thread 365952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:25.423317] [I] [thread 365952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:25.423318] [I] [thread 365952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:25.547686] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:25.547865] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:26.549042] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:26.782211] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:26.782398] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:26.783282] [D] [thread 365957] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:26.783305] [I] [thread 365957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:26.783310] [I] [thread 365957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:26.783322] [I] [thread 365957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:26.783323] [I] [thread 365957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:26.967650] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:26.967831] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:27.968976] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:28.251988] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:28.252172] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:28.253153] [D] [thread 365963] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:28.253177] [I] [thread 365963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:28.253181] [I] [thread 365963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:28.253192] [I] [thread 365963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:28.253193] [I] [thread 365963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:28.353665] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:28.353848] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:29.355014] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:29.681279] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:29.681486] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:29.683003] [D] [thread 365969] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:29.683027] [I] [thread 365969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:29.683031] [I] [thread 365969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:29.683042] [I] [thread 365969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:29.683043] [I] [thread 365969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:29.808615] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:29.808816] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:30.810004] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:31.811204] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:32.750232] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:32.750473] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:32.751279] [D] [thread 365974] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:32.751304] [I] [thread 365974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:32.751307] [I] [thread 365974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:32.751325] [I] [thread 365974] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:32.751327] [I] [thread 365974] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:33.153939] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:33.154140] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:34.155362] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:34.646796] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:34.647015] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:34.648590] [D] [thread 365981] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:34.648615] [I] [thread 365981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:34.648618] [I] [thread 365981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:34.648630] [I] [thread 365981] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:34.648631] [I] [thread 365981] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:34.761747] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:34.761935] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:35.763118] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:36.338863] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:36.339052] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:36.339973] [D] [thread 365987] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:36.339997] [I] [thread 365987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:36.340001] [I] [thread 365987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:36.340012] [I] [thread 365987] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:36.340013] [I] [thread 365987] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:36.553503] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:36.553691] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:37.554848] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:38.373920] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:38.374100] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:38.374973] [D] [thread 365992] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:38.374994] [I] [thread 365992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:38.375000] [I] [thread 365992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:38.375014] [I] [thread 365992] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:38.375016] [I] [thread 365992] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:38.709661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:38.709848] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:39.711029] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:40.507036] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:40.507215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:40.508867] [D] [thread 365997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:40.508882] [I] [thread 365997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:40.508885] [I] [thread 365997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:40.508895] [I] [thread 365997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:40.508897] [I] [thread 365997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:40.657334] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:40.657539] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:41.658703] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:42.277896] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:42.278147] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:42.279047] [D] [thread 366002] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:42.279073] [I] [thread 366002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:42.279076] [I] [thread 366002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:42.279088] [I] [thread 366002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:42.279089] [I] [thread 366002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:43.279326] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:43.634495] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:43.634730] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:44.635893] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:45.175090] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:45.175489] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:45.176179] [D] [thread 366007] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:45.176213] [I] [thread 366007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:45.176217] [I] [thread 366007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:45.176228] [I] [thread 366007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:45.176229] [I] [thread 366007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:45.374516] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:45.374739] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:46.375931] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:47.377149] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:48.378280] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:48.601020] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:48.601230] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:48.602092] [D] [thread 366012] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:48.602115] [I] [thread 366012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:48.602125] [I] [thread 366012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:48.602136] [I] [thread 366012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:48.602137] [I] [thread 366012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:48.797630] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:48.797884] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:49.799068] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:50.336695] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:50.336913] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:50.337813] [D] [thread 366017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:50.337838] [I] [thread 366017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:50.337841] [I] [thread 366017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:50.337852] [I] [thread 366017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:50.337853] [I] [thread 366017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:50.475447] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:50.475618] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:51.476766] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:51.941286] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:51.941477] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:51.942392] [D] [thread 366022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:51.942415] [I] [thread 366022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:51.942419] [I] [thread 366022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:51.942430] [I] [thread 366022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:51.942431] [I] [thread 366022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:52.063384] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:52.063575] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:53.064711] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:53.789560] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:53.789769] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:53.790672] [D] [thread 366027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:53.790697] [I] [thread 366027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:53.790701] [I] [thread 366027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:53.790712] [I] [thread 366027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:53.790713] [I] [thread 366027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:53.996077] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:53.996284] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:54.997468] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:55.437924] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:55.438133] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:55.439013] [D] [thread 366032] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:55.439035] [I] [thread 366032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:55.439039] [I] [thread 366032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:55.439050] [I] [thread 366032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:55.439051] [I] [thread 366032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:55.567820] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:55.568019] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:56.569171] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:56.924095] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:56.924298] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:56.925182] [D] [thread 366037] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:56.925206] [I] [thread 366037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:56.925210] [I] [thread 366037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:56.925222] [I] [thread 366037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:56.925223] [I] [thread 366037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:57.017228] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:57.017465] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:58.018667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:58.455612] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:58.455881] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:58.456799] [D] [thread 366042] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:46:58.456824] [I] [thread 366042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:58.456827] [I] [thread 366042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:46:58.456839] [I] [thread 366042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:46:58.456840] [I] [thread 366042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:46:58.613534] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:58.613730] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:46:59.614909] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:00.040725] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.040752] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.040852] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,13,15632728213,1701172020040
[m
[36m[11:47:00.047733] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.047763] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.047883] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,54,24554918598,1701172020047
[m
[36m[11:47:00.078092] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:00.078295] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:00.079192] [D] [thread 366047] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:00.079219] [I] [thread 366047] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:00.079229] [I] [thread 366047] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:00.079241] [I] [thread 366047] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:00.079242] [I] [thread 366047] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:00.102934] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.102972] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.103136] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,24,25125927516,1701172020102
[m
[36m[11:47:00.103286] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.103318] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.103421] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,100,10498938695,1701172020103
[m
[36m[11:47:00.145569] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.145600] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.145729] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,47,23973683840,1701172020145
[m
[36m[11:47:00.154473] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:47:00.154498] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:47:00.154604] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701171960000,1701172020000,63,24222990697,1701172020154
[m
[36m[11:47:00.200495] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:00.200720] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:01.201943] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:02.203194] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:02.826862] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:02.827093] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:02.828046] [D] [thread 366052] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:02.828071] [I] [thread 366052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:02.828077] [I] [thread 366052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:02.828088] [I] [thread 366052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:02.828089] [I] [thread 366052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:03.233763] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:03.233945] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:04.235126] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:05.121652] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:05.121852] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:05.122745] [D] [thread 366057] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:05.122769] [I] [thread 366057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:05.122773] [I] [thread 366057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:05.122785] [I] [thread 366057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:05.122786] [I] [thread 366057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:05.321352] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:05.321589] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:06.322766] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:07.074766] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:07.074951] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:07.075848] [D] [thread 366062] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:07.075873] [I] [thread 366062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:07.075877] [I] [thread 366062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:07.075889] [I] [thread 366062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:07.075890] [I] [thread 366062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:07.234129] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:07.234366] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:08.235531] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:08.891347] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:08.891584] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:08.892509] [D] [thread 366067] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:08.892534] [I] [thread 366067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:08.892540] [I] [thread 366067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:08.892551] [I] [thread 366067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:08.892552] [I] [thread 366067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:09.072029] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:09.072210] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:10.072466] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:11.073392] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:12.074169] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:12.207883] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:12.208062] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:12.209034] [D] [thread 366072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:12.209059] [I] [thread 366072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:12.209070] [I] [thread 366072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:12.209081] [I] [thread 366072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:12.209082] [I] [thread 366072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:12.340771] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:12.340993] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:13.342156] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:13.862231] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:13.862557] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:13.863316] [D] [thread 366077] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:13.863363] [I] [thread 366077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:13.863368] [I] [thread 366077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:13.863391] [I] [thread 366077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:13.863392] [I] [thread 366077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:13.989775] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:13.989978] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:14.991171] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:15.992419] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:16.993605] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:17.994792] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:18.128391] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:18.128654] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:18.129511] [D] [thread 366082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:18.129536] [I] [thread 366082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:18.129540] [I] [thread 366082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:18.129551] [I] [thread 366082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:18.129552] [I] [thread 366082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:18.505071] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:18.505245] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:19.506414] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:20.155169] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:20.155351] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:20.156249] [D] [thread 366087] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:20.156271] [I] [thread 366087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:20.156276] [I] [thread 366087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:20.156287] [I] [thread 366087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:20.156288] [I] [thread 366087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:20.315880] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:20.316104] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:21.316456] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:22.090641] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:22.090819] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:22.091777] [D] [thread 366092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:22.091799] [I] [thread 366092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:22.091803] [I] [thread 366092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:22.091813] [I] [thread 366092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:22.091814] [I] [thread 366092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:22.206203] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:22.206384] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:23.207532] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:23.480198] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:23.480411] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:23.481312] [D] [thread 366097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:23.481335] [I] [thread 366097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:23.481344] [I] [thread 366097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:23.481356] [I] [thread 366097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:23.481358] [I] [thread 366097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:23.580387] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:23.580569] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:24.581769] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:25.166120] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:25.166308] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:25.167238] [D] [thread 366102] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:25.167262] [I] [thread 366102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:25.167265] [I] [thread 366102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:25.167276] [I] [thread 366102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:25.167277] [I] [thread 366102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:25.336017] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:25.336229] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:26.337379] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:26.665115] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:26.665310] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:26.666223] [D] [thread 366107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:26.666247] [I] [thread 366107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:26.666258] [I] [thread 366107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:26.666270] [I] [thread 366107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:26.666271] [I] [thread 366107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:26.792227] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:26.792442] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:27.793604] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:28.118411] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:28.118612] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:28.119519] [D] [thread 366112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:28.119544] [I] [thread 366112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:28.119550] [I] [thread 366112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:28.119561] [I] [thread 366112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:28.119562] [I] [thread 366112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:28.269046] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:28.269240] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:29.270436] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:30.091461] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:30.091667] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:30.092563] [D] [thread 366117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:30.092587] [I] [thread 366117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:30.092591] [I] [thread 366117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:30.092602] [I] [thread 366117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:30.092604] [I] [thread 366117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:30.226820] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:30.226998] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:31.228161] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:32.229350] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:33.230532] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:33.696751] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:33.696948] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:33.697873] [D] [thread 366123] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:33.697896] [I] [thread 366123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:33.697900] [I] [thread 366123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:33.697912] [I] [thread 366123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:33.697912] [I] [thread 366123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:34.045944] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:34.046281] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:35.047504] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:35.780014] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:35.780260] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:35.781106] [D] [thread 366130] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:35.781131] [I] [thread 366130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:35.781134] [I] [thread 366130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:35.781153] [I] [thread 366130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:35.781154] [I] [thread 366130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:35.917674] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:35.917862] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:36.919045] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:37.172988] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:37.173168] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:37.174123] [D] [thread 366135] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:37.174149] [I] [thread 366135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:37.174155] [I] [thread 366135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:37.174166] [I] [thread 366135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:37.174167] [I] [thread 366135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:37.276381] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:37.276559] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:38.277648] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:38.658158] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:38.658364] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:38.659249] [D] [thread 366140] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:38.659273] [I] [thread 366140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:38.659278] [I] [thread 366140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:38.659290] [I] [thread 366140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:38.659291] [I] [thread 366140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:38.782552] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:38.782778] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:39.783966] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:40.132481] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:40.132661] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:40.133570] [D] [thread 366145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:40.133584] [I] [thread 366145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:40.133587] [I] [thread 366145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:40.133597] [I] [thread 366145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:40.133598] [I] [thread 366145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:40.250737] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:40.250980] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:41.252128] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:41.601139] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:41.601327] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:41.602208] [D] [thread 366150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:41.602231] [I] [thread 366150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:41.602234] [I] [thread 366150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:41.602245] [I] [thread 366150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:41.602246] [I] [thread 366150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:41.709234] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:41.709419] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:42.710629] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:43.025641] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:43.025859] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:43.026823] [D] [thread 366156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:43.026848] [I] [thread 366156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:43.026851] [I] [thread 366156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:43.026862] [I] [thread 366156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:43.026864] [I] [thread 366156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:43.133890] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:43.134066] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:44.135215] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:44.435367] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:44.435580] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:44.436568] [D] [thread 366161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:44.436596] [I] [thread 366161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:44.436599] [I] [thread 366161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:44.436610] [I] [thread 366161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:44.436611] [I] [thread 366161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:44.539048] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:44.539253] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:45.540459] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:45.831012] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:45.831200] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:45.832157] [D] [thread 366167] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:45.832181] [I] [thread 366167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:45.832184] [I] [thread 366167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:45.832195] [I] [thread 366167] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:45.832196] [I] [thread 366167] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:46.060929] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:46.061132] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:47.062332] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:48.063523] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:48.686189] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:48.686519] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:48.687284] [D] [thread 366172] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:48.687309] [I] [thread 366172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:48.687320] [I] [thread 366172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:48.687331] [I] [thread 366172] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:48.687332] [I] [thread 366172] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:48.941446] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:48.941649] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:49.942841] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:50.316746] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:50.317005] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:50.317787] [D] [thread 366177] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:50.317812] [I] [thread 366177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:50.317816] [I] [thread 366177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:50.317827] [I] [thread 366177] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:50.317828] [I] [thread 366177] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:50.457046] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:50.457244] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:51.458406] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:52.459585] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:53.460777] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:53.921527] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:53.921716] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:53.923223] [D] [thread 366182] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:53.923246] [I] [thread 366182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:53.923250] [I] [thread 366182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:53.923261] [I] [thread 366182] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:53.923262] [I] [thread 366182] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:54.370351] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:54.370639] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:55.371810] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:56.372434] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:57.373631] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:57.717381] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:57.717566] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:57.718449] [D] [thread 366187] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:47:57.718472] [I] [thread 366187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:57.718476] [I] [thread 366187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:47:57.718487] [I] [thread 366187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:47:57.718489] [I] [thread 366187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:47:58.014111] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:58.014367] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:47:59.015633] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:00.016813] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:00.066428] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.066464] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.066622] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,54,27488770684,1701172080066
[m
[36m[11:48:00.066786] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.066817] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.066922] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,13,13926855936,1701172080066
[m
[36m[11:48:00.139447] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.139486] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.139632] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,24,29843578271,1701172080139
[m
[36m[11:48:00.139769] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.139774] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.139865] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,47,29261372135,1701172080139
[m
[36m[11:48:00.139965] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.139970] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.140055] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,100,10417063165,1701172080139
[m
[36m[11:48:00.171664] [D] [thread 364245] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode OVERWRITE[m
[36m[11:48:00.171696] [D] [thread 364245] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[11:48:00.171828] [D] [thread 364245] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsChain.out following content 1701172020000,1701172080000,63,21200669121,1701172080171
[m
[36m[11:48:00.828618] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:00.828800] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:00.829687] [D] [thread 366192] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[11:48:00.829710] [I] [thread 366192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:48:00.829716] [I] [thread 366192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[11:48:00.829728] [I] [thread 366192] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[11:48:00.829729] [I] [thread 366192] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[11:48:01.198358] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:01.198605] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:01.933380] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[11:48:01.933582] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[11:48:01.934498] [I] [thread 366196] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[11:48:01.934523] [D] [thread 366196] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[11:48:01.934540] [I] [thread 366196] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[11:48:01.934542] [I] [thread 366196] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[11:48:01.934566] [I] [thread 364235] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[11:48:01.934574] [I] [thread 364235] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[11:48:01.934579] [I] [thread 364235] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[11:48:01.934594] [I] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[11:48:01.934599] [D] [thread 364235] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[11:48:01.934604] [D] [thread 364235] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[11:48:01.934643] [D] [thread 364235] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[11:48:01.934696] [D] [thread 364235] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[11:48:01.934699] [D] [thread 364235] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[11:48:01.934703] [D] [thread 364235] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[11:48:01.934705] [D] [thread 364235] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[11:48:01.934707] [D] [thread 364235] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[11:48:01.934713] [D] [thread 364235] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[11:48:01.934725] [D] [thread 364235] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[11:48:01.934729] [D] [thread 364235] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[11:48:01.934732] [D] [thread 364235] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[11:48:01.934756] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:41815[m
[36m[11:48:01.934761] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:41815 queryId=1[m
[36m[11:48:01.935832] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:37313[m
[36m[11:48:01.935863] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:37313 queryId=1[m
[36m[11:48:01.936934] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:44099[m
[36m[11:48:01.936973] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:44099 queryId=1[m
[36m[11:48:01.938070] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:34589[m
[36m[11:48:01.938101] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:34589 queryId=1[m
[36m[11:48:01.938931] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:46653[m
[36m[11:48:01.938959] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:46653 queryId=1[m
[36m[11:48:01.939652] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:33711[m
[36m[11:48:01.939678] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:33711 queryId=1[m
[36m[11:48:01.940408] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:38255[m
[36m[11:48:01.940429] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:38255 queryId=1[m
[36m[11:48:01.941276] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:35873[m
[36m[11:48:01.941300] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:35873 queryId=1[m
[36m[11:48:01.942075] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:41373[m
[36m[11:48:01.942102] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:41373 queryId=1[m
[36m[11:48:01.942774] [D] [thread 364235] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:42955[m
[36m[11:48:01.942798] [D] [thread 364235] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:42955 queryId=1[m
[36m[11:48:01.943449] [D] [thread 364235] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[11:48:02.046381] [D] [thread 364247] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[11:48:02.046445] [D] [thread 364247] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[11:48:02.046463] [D] [thread 364247] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[11:48:02.046475] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046494] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046531] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046617] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 32 is notifying completion: HardStop[m
[36m[11:48:02.046629] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 32 is terminated; tokens left = 7[m
[36m[11:48:02.046641] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 32 terminationType=HardStop[m
[36m[11:48:02.046658] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046675] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046696] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=32 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046705] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.046710] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046717] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046729] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046745] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 47 is notifying completion: HardStop[m
2023-11-28 11:48:02.47 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=60 processedTuple=60 processedBuffers=60 processedWatermarks=0 latencyAVG=1701171810112 queueSizeAVG=0 availableGlobalBufferAVG=894 availableFixedBufferAVG=0
[36m[11:48:02.046748] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 47 is terminated; tokens left = 6[m
[36m[11:48:02.046754] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 47 terminationType=HardStop[m
[36m[11:48:02.046759] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046769] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046781] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=47 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046786] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:47 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.046789] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046793] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046799] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046809] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 65 is notifying completion: HardStop[m
[36m[11:48:02.046811] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 65 is terminated; tokens left = 5[m
[36m[11:48:02.046815] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 65 terminationType=HardStop[m
[36m[11:48:02.046818] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046824] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046832] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=65 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046836] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:65 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.046838] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046842] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046848] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046857] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 86 is notifying completion: HardStop[m
[36m[11:48:02.046859] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 86 is terminated; tokens left = 4[m
[36m[11:48:02.046863] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 86 terminationType=HardStop[m
[36m[11:48:02.046868] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046874] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046881] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=86 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046885] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:86 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.046888] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046891] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046897] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046906] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 110 is notifying completion: HardStop[m
[36m[11:48:02.046908] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 110 is terminated; tokens left = 3[m
[36m[11:48:02.046911] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 110 terminationType=HardStop[m
[36m[11:48:02.046914] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046921] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046928] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=110 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046932] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:110 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.046935] [D] [thread 364247] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0[m
[36m[11:48:02.046938] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046945] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[11:48:02.046956] [D] [thread 364247] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 137 is notifying completion: HardStop[m
[36m[11:48:02.046958] [D] [thread 364247] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 137 is terminated; tokens left = 2[m
[36m[11:48:02.046962] [D] [thread 364247] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 137 terminationType=HardStop[m
[36m[11:48:02.046965] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046971] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.046978] [D] [thread 364247] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=137 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[11:48:02.046996] [D] [thread 364247] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:137 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[11:48:02.047123] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[11:48:02.047145] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::32::0::0 Thread 0[m
[36m[11:48:02.047151] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[11:48:02.047156] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::32::0::0[m
[36m[11:48:02.047164] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::32::0::0[m
[32m[11:48:02.047178] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(1)[m
[36m[11:48:02.047183] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::32::0::0, counter is at 1.[m
[36m[11:48:02.047228] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047253] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::47::0::0[m
[36m[11:48:02.047259] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::47::0::0 Thread 0[m
[36m[11:48:02.047264] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::47::0::0[m
[36m[11:48:02.047268] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::47::0::0[m
[36m[11:48:02.047272] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::47::0::0[m
[32m[11:48:02.047277] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::47::0::0; newCnt(1)[m
[36m[11:48:02.047281] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::47::0::0, counter is at 1.[m
[36m[11:48:02.047309] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047333] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::65::0::0[m
[36m[11:48:02.047339] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::65::0::0 Thread 0[m
[36m[11:48:02.047344] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::65::0::0[m
[36m[11:48:02.047348] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::65::0::0[m
[36m[11:48:02.047352] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::65::0::0[m
[32m[11:48:02.047357] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::65::0::0; newCnt(1)[m
[36m[11:48:02.047361] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::65::0::0, counter is at 1.[m
[36m[11:48:02.047388] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047412] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::86::0::0[m
[36m[11:48:02.047417] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::86::0::0 Thread 0[m
[36m[11:48:02.047421] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::86::0::0[m
[36m[11:48:02.047425] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::86::0::0[m
[36m[11:48:02.047429] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::86::0::0[m
[32m[11:48:02.047434] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::86::0::0; newCnt(1)[m
[36m[11:48:02.047438] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::86::0::0, counter is at 1.[m
[36m[11:48:02.047466] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047490] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::110::0::0[m
[36m[11:48:02.047496] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::110::0::0 Thread 0[m
[36m[11:48:02.047500] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::110::0::0[m
[36m[11:48:02.047504] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::110::0::0[m
[36m[11:48:02.047508] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::110::0::0[m
[32m[11:48:02.047513] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::110::0::0; newCnt(1)[m
[36m[11:48:02.047517] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::110::0::0, counter is at 1.[m
[36m[11:48:02.047544] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047569] [D] [thread 364245] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::137::0::0[m
[36m[11:48:02.047574] [D] [thread 364245] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::137::0::0 Thread 0[m
[36m[11:48:02.047579] [D] [thread 364245] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::137::0::0[m
[36m[11:48:02.047583] [D] [thread 364245] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::137::0::0[m
[36m[11:48:02.047587] [D] [thread 364245] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::137::0::0[m
[32m[11:48:02.047592] [I] [thread 364245] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::137::0::0; newCnt(1)[m
[36m[11:48:02.047596] [D] [thread 364245] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::137::0::0, counter is at 1.[m
[36m[11:48:02.047622] [D] [thread 364245] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[11:48:02.047647] [D] [thread 364245] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[11:48:02.047656] [D] [thread 364245] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.047669] [D] [thread 364245] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[11:48:02.047692] [D] [thread 364245] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[11:48:02.047840] [D] [thread 364245] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[11:48:02.047849] [D] [thread 364245] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[11:48:02.047851] [D] [thread 364245] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[11:48:02.047924] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[11:48:02.047944] [D] [thread 364247] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[11:48:02.048058] [D] [thread 364247] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[11:48:02.048074] [D] [thread 364247] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[11:48:02.048077] [D] [thread 364247] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[11:48:02.048080] [D] [thread 364247] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[11:48:02.055749] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.055789] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::47::0::0(threadId=0)[m
[32m[11:48:02.055806] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::47::0::0; newCnt(0)[m
[36m[11:48:02.055818] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::47::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.057186] [D] [thread 364235] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Stop succeed[m
[36m[11:48:02.057209] [D] [thread 364235] [QueryUndeploymentPhase.cpp:114] [stopQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[36m[11:48:02.057436] [D] [thread 364235] [QueryUndeploymentPhase.cpp:59] [execute] QueryUndeploymentPhase:removeQuery: undeploy query  1[m
[36m[11:48:02.057454] [D] [thread 364235] [QueryUndeploymentPhase.cpp:125] [undeployQuery] QueryUndeploymentPhase::undeployQuery queryId= 1[m
[36m[11:48:02.057476] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=5 and IP=192.168.2.32:41815[m
[36m[11:48:02.057480] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.32:41815 queryId=1[m
[36m[11:48:02.058437] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=6 and IP=192.168.2.33:37313[m
[36m[11:48:02.058464] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.33:37313 queryId=1[m
[36m[11:48:02.059321] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=7 and IP=192.168.2.34:44099[m
[36m[11:48:02.059349] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.34:44099 queryId=1[m
[36m[11:48:02.060110] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=8 and IP=192.168.2.35:34589[m
[36m[11:48:02.060135] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.35:34589 queryId=1[m
[36m[11:48:02.060945] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=9 and IP=192.168.2.37:46653[m
[36m[11:48:02.060970] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.37:46653 queryId=1[m
[36m[11:48:02.061710] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=10 and IP=192.168.2.38:33711[m
[36m[11:48:02.061737] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.38:33711 queryId=1[m
[36m[11:48:02.062446] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=1 and IP=192.168.2.11:38255[m
[36m[11:48:02.062471] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.11:38255 queryId=1[m
[36m[11:48:02.063321] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=4 and IP=192.168.2.31:35873[m
[36m[11:48:02.063346] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.31:35873 queryId=1[m
[36m[11:48:02.064168] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=3 and IP=192.168.2.30:41373[m
[36m[11:48:02.064196] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.30:41373 queryId=1[m
[36m[11:48:02.064963] [D] [thread 364235] [QueryUndeploymentPhase.cpp:139] [undeployQuery] QueryUndeploymentPhase::undeployQuery query at execution node with id=2 and IP=192.168.2.12:42955[m
[36m[11:48:02.064990] [D] [thread 364235] [WorkerRPCClient.cpp:150] [unregisterQueryAsync] WorkerRPCClient::unregisterQueryAsync address=192.168.2.12:42955 queryId=1[m
[36m[11:48:02.065682] [D] [thread 364235] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Unregister for 10 queues[m
[36m[11:48:02.436855] [D] [thread 364315] [WorkerRPCServer.cpp:64] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: got request for 1[m
[36m[11:48:02.436909] [D] [thread 364315] [NodeEngine.cpp:206] [unregisterQuery] Runtime: unregisterQuery query= 1[m
[36m[11:48:02.436922] [D] [thread 364315] [NodeEngine.cpp:231] [unregisterQuery] Runtime: unregister of query  7 : current status is stopped= true[m
[36m[11:48:02.436946] [D] [thread 364315] [QueryManagerLifecycle.cpp:222] [deregisterQuery] AbstractQueryManager::deregisterAndUndeployQuery: query 1[m
[36m[11:48:02.436962] [D] [thread 364315] [NodeEngine.cpp:234] [unregisterQuery] Runtime: unregister of query  7  succeeded[m
[36m[11:48:02.436975] [D] [thread 364315] [WorkerRPCServer.cpp:67] [UnregisterQuery] WorkerRPCServer::UnregisterQuery: success[m
[36m[11:48:02.444625] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.444693] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::65::0::0(threadId=0)[m
[32m[11:48:02.444710] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::65::0::0; newCnt(0)[m
[36m[11:48:02.444722] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::65::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.446148] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.446189] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::86::0::0(threadId=0)[m
[32m[11:48:02.446200] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::86::0::0; newCnt(0)[m
[36m[11:48:02.446206] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::86::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.448375] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.448407] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::32::0::0(threadId=0)[m
[32m[11:48:02.448417] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(0)[m
[36m[11:48:02.448423] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::32::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.450598] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.450628] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::137::0::0(threadId=0)[m
[32m[11:48:02.450637] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::137::0::0; newCnt(0)[m
[36m[11:48:02.450643] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::137::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.452083] [D] [thread 364244] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35213): EndOfStream received for channel [m
[36m[11:48:02.452111] [D] [thread 364244] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::110::0::0(threadId=0)[m
[32m[11:48:02.452118] [I] [thread 364244] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::110::0::0; newCnt(0)[m
[36m[11:48:02.452125] [D] [thread 364244] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::110::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[11:48:02.582114] [D] [thread 364235] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Unregister succeed[m
[36m[11:48:02.582302] [D] [thread 364235] [QueryUndeploymentPhase.cpp:146] [undeployQuery] QueryDeploymentPhase: Finished stopping execution plan for query with Id 1[m
[32m[11:48:02.582792] [I] [thread 364235] [GlobalExecutionPlan.cpp:208] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: Get a map of occupied resources for the query 1[m
[36m[11:48:02.582829] [D] [thread 364235] [GlobalExecutionPlan.cpp:211] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: Found 10 Execution node for query with id 1[m
[36m[11:48:02.582840] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.582848] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.582855] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.582859] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.582861] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.582928] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.582933] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.582936] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.582938] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.582954] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.582956] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.582959] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.582961] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.582974] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.582977] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.582979] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.582997] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583013] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.583016] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583018] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583020] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583033] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.583035] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583038] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583040] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583052] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 5[m
[36m[11:48:02.583066] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583068] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583071] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583074] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583075] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583102] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[11:48:02.583105] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583107] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583109] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583120] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[11:48:02.583123] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583126] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583127] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583139] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[11:48:02.583141] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583143] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583145] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583157] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[11:48:02.583159] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583161] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583163] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583175] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 6[m
[36m[11:48:02.583180] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583182] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583185] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583187] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583189] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583213] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 7[m
[36m[11:48:02.583216] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583219] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583220] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583232] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 7[m
[36m[11:48:02.583234] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583236] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583238] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583250] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 7[m
[36m[11:48:02.583252] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583254] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583256] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583268] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 7[m
[36m[11:48:02.583272] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583274] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583277] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583279] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583281] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583305] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 8[m
[36m[11:48:02.583308] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583310] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583312] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583324] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 8[m
[36m[11:48:02.583327] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583329] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583331] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583343] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 8[m
[36m[11:48:02.583347] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583349] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583351] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583353] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583355] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583378] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 9[m
[36m[11:48:02.583381] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583383] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583384] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583397] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 9[m
[36m[11:48:02.583401] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583403] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583405] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583407] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583409] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583432] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 3 CPU resources from the node with id 10[m
[36m[11:48:02.583437] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583439] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583441] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583443] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583445] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583476] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 1 CPU resources from the node with id 1[m
[36m[11:48:02.583481] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583483] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583486] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583488] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583490] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583502] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583504] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583506] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583508] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583520] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583522] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583525] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583526] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583538] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583540] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583543] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583544] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583556] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583558] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583560] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583562] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583573] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583575] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583578] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583579] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583591] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 4[m
[36m[11:48:02.583599] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583601] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583620] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583623] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583625] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583639] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583641] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583644] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583646] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583658] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583660] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583662] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583664] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583676] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583678] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583680] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583682] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583693] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583695] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583697] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583698] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583708] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583709] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583711] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583712] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583721] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 3[m
[36m[11:48:02.583724] [D] [thread 364235] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[11:48:02.583736] [D] [thread 364235] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[11:48:02.583739] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583741] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583742] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583753] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583755] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583756] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583758] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583766] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583768] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583770] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583771] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583780] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583781] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583783] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583785] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583793] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583795] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583797] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583798] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583807] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583808] [D] [thread 364235] [ExecutionNode.cpp:64] [getOccupiedResources] ExecutionNode : calculate the number of resources occupied by the query sub plan and release them[m
[36m[11:48:02.583810] [D] [thread 364235] [ExecutionNode.cpp:68] [getOccupiedResources] ExecutionNode : Iterate over all root nodes in the query sub graph to calculate occupied resources[m
[36m[11:48:02.583811] [D] [thread 364235] [ExecutionNode.cpp:70] [getOccupiedResources] ExecutionNode : Iterate the root node using BFS[m
[32m[11:48:02.583820] [I] [thread 364235] [ExecutionNode.cpp:103] [getOccupiedResources] ExecutionNode: Releasing 0 CPU resources from the node with id 2[m
[36m[11:48:02.583903] [D] [thread 364235] [GlobalExecutionPlan.cpp:216] [getMapOfTopologyNodeIdToOccupiedResource] GlobalExecutionPlan: returning the map of occupied resources for the query  1[m
[32m[11:48:02.583922] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 1 resources from node with id 1[m
[32m[11:48:02.583931] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 0 resources from node with id 2[m
[32m[11:48:02.583934] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 0 resources from node with id 3[m
[32m[11:48:02.583937] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 0 resources from node with id 4[m
[32m[11:48:02.583939] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 5[m
[32m[11:48:02.583942] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 6[m
[32m[11:48:02.583944] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 7[m
[32m[11:48:02.583947] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 8[m
[32m[11:48:02.583950] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 9[m
[32m[11:48:02.583952] [I] [thread 364235] [Topology.cpp:380] [increaseResources] Topology: Increase 3 resources from node with id 10[m
[36m[11:48:02.583960] [D] [thread 364235] [GlobalExecutionPlan.cpp:111] [removeQuerySubPlans] GlobalExecutionPlan: Found 10 Execution node for query with id 1[m
[36m[11:48:02.583975] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.583981] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  5[m
[36m[11:48:02.583984] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[11:48:02.583986] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  5[m
[36m[11:48:02.583997] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584000] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  6[m
[36m[11:48:02.584001] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[11:48:02.584003] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  6[m
[36m[11:48:02.584008] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584010] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  7[m
[36m[11:48:02.584012] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[11:48:02.584013] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  7[m
[36m[11:48:02.584017] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584019] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  8[m
[36m[11:48:02.584020] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[11:48:02.584022] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  8[m
[36m[11:48:02.584026] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584027] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  9[m
[36m[11:48:02.584029] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[11:48:02.584030] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  9[m
[36m[11:48:02.584033] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584035] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  10[m
[36m[11:48:02.584037] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[11:48:02.584038] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  10[m
[36m[11:48:02.584041] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584043] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  1[m
[36m[11:48:02.584044] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[11:48:02.584046] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  1[m
[36m[11:48:02.584055] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584056] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  4[m
[36m[11:48:02.584058] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[11:48:02.584059] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  4[m
[36m[11:48:02.584065] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584066] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  3[m
[36m[11:48:02.584068] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[11:48:02.584069] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  3[m
[36m[11:48:02.584075] [D] [thread 364235] [ExecutionNode.cpp:48] [removeQuerySubPlans] ExecutionNode: Successfully removed query sub plan and released the resources[m
[36m[11:48:02.584076] [D] [thread 364235] [GlobalExecutionPlan.cpp:88] [removeExecutionNode] GlobalExecutionPlan: Removing Execution node with id  2[m
[36m[11:48:02.584078] [D] [thread 364235] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[11:48:02.584079] [D] [thread 364235] [GlobalExecutionPlan.cpp:90] [removeExecutionNode] GlobalExecutionPlan: Removed execution node with id  2[m
[36m[11:48:02.584090] [D] [thread 364235] [GlobalExecutionPlan.cpp:125] [removeQuerySubPlans] GlobalExecutionPlan: Removed all Execution nodes for Query with id  1[m
[32m[11:48:02.584129] [I] [thread 364235] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[11:48:02.584151] [D] [thread 364235] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[11:48:02.934764] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:48:03.756668] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:03.756816] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:42955 went dead so we remove it[m
[32m[11:48:03.756875] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[11:48:03.756879] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:03.756882] [I] [thread 364251] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[11:48:03.756884] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:03.756886] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:03.756892] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:03.758116] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:03.758269] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:41373 went dead so we remove it[m
[32m[11:48:03.758323] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[11:48:03.758332] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:03.758334] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:03.758337] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:03.758341] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:03.759503] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:03.759636] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:35873 went dead so we remove it[m
[32m[11:48:03.759685] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[11:48:03.759698] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:03.759701] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:03.759710] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:03.759714] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:48:03.935950] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[11:48:04.812748] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.812894] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:42955 went dead so we remove it[m
[32m[11:48:04.812945] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:48:04.812960] [W] [thread 364251] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[11:48:04.814114] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.814242] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:41373 went dead so we remove it[m
[32m[11:48:04.814287] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:48:04.814295] [W] [thread 364251] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[11:48:04.815376] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.815505] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:35873 went dead so we remove it[m
[32m[11:48:04.815551] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[11:48:04.815567] [W] [thread 364251] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[11:48:04.816692] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.816816] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:41815 went dead so we remove it[m
[32m[11:48:04.816862] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[32m[11:48:04.816869] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:04.816871] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:04.816875] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:04.816878] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:04.817982] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.818105] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:37313 went dead so we remove it[m
[32m[11:48:04.818150] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[32m[11:48:04.818156] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:04.818159] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:04.818161] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:04.818164] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:04.819299] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.819429] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:44099 went dead so we remove it[m
[32m[11:48:04.819476] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0][m
[32m[11:48:04.819482] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:04.819484] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:04.819487] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:04.819490] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:04.820616] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.820744] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:34589 went dead so we remove it[m
[32m[11:48:04.820791] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0][m
[32m[11:48:04.820798] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:04.820800] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:04.820803] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:04.820806] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[11:48:04.821921] [E] [thread 364251] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[11:48:04.822044] [W] [thread 364251] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.37:46653 went dead so we remove it[m
[32m[11:48:04.822090] [I] [thread 364251] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0][m
[32m[11:48:04.822096] [I] [thread 364251] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[11:48:04.822099] [I] [thread 364251] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[11:48:04.822102] [I] [thread 364251] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[11:48:04.822105] [D] [thread 364251] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[11:48:04.937168] [D] [thread 364250] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
