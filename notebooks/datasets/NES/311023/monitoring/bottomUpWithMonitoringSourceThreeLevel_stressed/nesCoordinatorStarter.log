
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.210-SNAPSHOT
[32m[10:31:13.693063] [I] [thread 22005] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [DEFAULT|THREAD_LOCAL]. 
Value: DEFAULT
Default Value: DEFAULT

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[10:31:13.693246] [I] [thread 22005] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[10:31:13.693473] [D] [thread 22005] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.30 restPort=8081 rpcIp=192.168.2.30 rpcPort=4000[m
[36m[10:31:13.694403] [D] [thread 22005] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:31:13.694728] [I] [thread 22005] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:31:13.695430] [D] [thread 22005] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[10:31:13.695494] [D] [thread 22005] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[10:31:13.696111] [D] [thread 22005] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[10:31:13.696205] [D] [thread 22005] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[10:31:13.696306] [D] [thread 22005] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[10:31:13.696606] [D] [thread 22005] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[10:31:13.696753] [D] [thread 22005] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[10:31:13.744326] [D] [thread 22005] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[10:31:13.744421] [D] [thread 22005] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:31:13.744874] [D] [thread 22005] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:31:13.745282] [D] [thread 22005] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:31:13.745616] [D] [thread 22005] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:31:13.745912] [D] [thread 22005] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:31:13.746100] [D] [thread 22005] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:31:13.746490] [D] [thread 22005] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[10:31:13.747628] [D] [thread 22005] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[10:31:13.747705] [D] [thread 22005] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[10:31:13.748009] [D] [thread 22005] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[10:31:13.748312] [D] [thread 22005] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[10:31:13.748614] [D] [thread 22005] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[10:31:13.749563] [D] [thread 22005] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[10:31:13.750060] [D] [thread 22005] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[10:31:13.750250] [D] [thread 22005] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[10:31:13.750505] [D] [thread 22005] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[10:31:13.751271] [I] [thread 22005] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[10:31:13.751811] [I] [thread 22005] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[10:31:13.752318] [I] [thread 22005] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[10:31:13.753096] [I] [thread 22005] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[10:31:13.753223] [I] [thread 22005] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[10:31:13.753239] [D] [thread 22005] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[10:31:13.753552] [D] [thread 22005] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[10:31:13.753583] [I] [thread 22013] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[10:31:13.753658] [D] [thread 22013] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:31:13.753935] [D] [thread 22014] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[10:31:13.760185] [D] [thread 22014] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.30:4000[m
[36m[10:31:13.760208] [D] [thread 22005] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[10:31:13.760255] [D] [thread 22005] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[10:31:13.760659] [D] [thread 22005] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[10:31:13.760716] [D] [thread 22005] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[10:31:13.760747] [D] [thread 22005] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[10:31:13.760895] [D] [thread 22005] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[10:31:13.760927] [D] [thread 22005] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[10:31:13.760940] [D] [thread 22005] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[10:31:13.761100] [D] [thread 22005] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[10:31:13.761118] [D] [thread 22005] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[10:31:13.761134] [D] [thread 22005] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[10:31:13.761344] [D] [thread 22005] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:31:13.761368] [D] [thread 22005] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[10:31:13.761384] [D] [thread 22005] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[10:31:13.761427] [D] [thread 22005] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[10:31:13.761439] [D] [thread 22005] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[10:31:13.762094] [D] [thread 22005] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[10:31:13.762256] [D] [thread 22005] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.30 coordinatorPort=4000 localWorkerIp=192.168.2.30 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=DEFAULT[m
[36m[10:31:13.762273] [D] [thread 22005] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[10:31:13.762302] [D] [thread 22005] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[10:31:13.762567] [D] [thread 22005] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[10:31:13.762625] [D] [thread 22005] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[10:31:13.762716] [I] [thread 22005] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:31:13.763327] [I] [thread 22005] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[10:31:13.763389] [I] [thread 22005] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:31:13.763674] [I] [thread 22005] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[10:31:13.763742] [I] [thread 22005] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:31:13.764366] [I] [thread 22005] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[10:31:13.764436] [I] [thread 22005] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[10:31:13.765172] [I] [thread 22005] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[10:31:13.765574] [D] [thread 22005] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[10:31:13.765853] [D] [thread 22005] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[10:31:13.766127] [I] [thread 22005] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[10:31:13.766406] [I] [thread 22005] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[10:31:13.766507] [I] [thread 22005] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[10:31:13.766566] [I] [thread 22005] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[10:31:13.778286] [D] [thread 22005] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[10:31:13.787758] [D] [thread 22005] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[10:31:13.831204] [D] [thread 22005] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[10:31:13.832236] [D] [thread 22005] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[10:31:13.832497] [I] [thread 22005] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[10:31:13.832631] [D] [thread 22005] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[10:31:13.832703] [D] [thread 22005] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[10:31:13.832891] [D] [thread 22005] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[10:31:13.832979] [D] [thread 22005] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[10:31:13.833036] [D] [thread 22005] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[10:31:13.833073] [D] [thread 22005] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[10:31:13.833152] [D] [thread 22005] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[10:31:13.833240] [D] [thread 22005] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[10:31:13.833708] [D] [thread 22005] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[10:31:13.833819] [D] [thread 22005] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[10:31:13.834087] [D] [thread 22005] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[10:31:13.834276] [D] [thread 22005] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.30:0) Creating ZmqServer()[m
[33m[1m[10:31:13.834314] [W] [thread 22005] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.30:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[10:31:13.834371] [D] [thread 22005] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.30:0): Starting server..[m
[36m[10:31:13.836604] [D] [thread 22019] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.30:0):  Trying to bind on tcp://192.168.2.30:0[m
[36m[10:31:13.838059] [D] [thread 22019] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.30:0):  Created socket on 192.168.2.30: 0[m
[36m[10:31:13.838316] [D] [thread 22019] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.30: 44297[m
[36m[10:31:13.839346] [D] [thread 22022] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.30: 44297[m
[32m[10:31:13.839479] [I] [thread 22005] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.30:44297[m
[36m[10:31:13.839580] [D] [thread 22005] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698327045  with numThreads= 1[m
[36m[10:31:13.839863] [D] [thread 22005] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[10:31:13.840336] [D] [thread 22005] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[10:31:13.840383] [D] [thread 22005] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[10:31:13.840444] [D] [thread 22023] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[10:31:13.840550] [D] [thread 22005] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[10:31:13.840590] [D] [thread 22005] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.30:0: 0[m
[36m[10:31:13.840681] [D] [thread 22023] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[10:31:13.841148] [D] [thread 22024] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[10:31:13.841595] [D] [thread 22024] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[10:31:13.844580] [D] [thread 22024] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.30:0: 40207[m
[36m[10:31:13.844619] [D] [thread 22005] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.30:40207: 40207[m
[36m[10:31:13.844646] [D] [thread 22005] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[10:31:13.844676] [D] [thread 22005] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.30:4000[m
[36m[10:31:13.844788] [D] [thread 22005] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.30:4000[m
[36m[10:31:13.846881] [D] [thread 22024] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[10:31:13.847376] [D] [thread 22005] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[10:31:13.848466] [I] [thread 22005] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[10:31:13.848633] [D] [thread 22005] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[10:31:13.851929] [D] [thread 22005] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.30"
grpcPort: 40207
dataPort: 44297
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 30516047
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:13.864733] [D] [thread 22015] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 40207
dataPort: 44297
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 30516047
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:13.865052] [D] [thread 22015] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 40207
dataPort: 44297
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 30516047
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:13.865177] [D] [thread 22015] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[10:31:13.865204] [W] [thread 22015] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[10:31:13.865215] [D] [thread 22015] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:13.865263] [D] [thread 22015] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:13.865305] [D] [thread 22015] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[10:31:13.865474] [D] [thread 22015] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[10:31:13.865556] [I] [thread 22015] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[10:31:13.865666] [D] [thread 22015] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:13.865905] [D] [thread 22015] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:13.865996] [I] [thread 22015] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:13.866029] [D] [thread 22015] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:13.866068] [D] [thread 22015] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:13.866079] [D] [thread 22015] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:13.866113] [D] [thread 22015] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:13.867355] [D] [thread 22015] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[10:31:13.869008] [D] [thread 22005] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[10:31:13.869085] [D] [thread 22005] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[10:31:13.869180] [D] [thread 22005] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[10:31:13.869193] [D] [thread 22005] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[10:31:13.898593] [D] [thread 22005] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[10:31:13.898714] [D] [thread 22005] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[10:31:13.898728] [D] [thread 22005] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[10:31:13.899236] [D] [thread 22005] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[10:31:13.899289] [D] [thread 22005] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[10:31:13.899310] [D] [thread 22005] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[10:31:13.899317] [D] [thread 22005] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[10:31:13.899351] [D] [thread 22005] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[10:31:13.899629] [D] [thread 22005] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[10:31:13.901818] [D] [thread 22015] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:13.901922] [I] [thread 22015] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:13.901946] [D] [thread 22015] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:13.902030] [D] [thread 22015] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:13.902251] [D] [thread 22015] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:13.902303] [D] [thread 22015] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:13.902487] [D] [thread 22015] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:13.902591] [D] [thread 22015] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:13.902665] [D] [thread 22015] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:31:13.902728] [D] [thread 22015] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:13.902876] [D] [thread 22015] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:13.902930] [D] [thread 22015] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:13.902986] [D] [thread 22015] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:13.903004] [D] [thread 22015] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:13.903028] [D] [thread 22015] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:31:13.903055] [D] [thread 22015] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:13.903134] [D] [thread 22015] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:13.903155] [D] [thread 22015] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:13.903181] [D] [thread 22015] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:13.903198] [D] [thread 22015] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:13.903217] [D] [thread 22015] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:31:13.903239] [D] [thread 22015] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:13.903301] [D] [thread 22015] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:13.903321] [D] [thread 22015] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:13.903345] [D] [thread 22015] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:13.903358] [D] [thread 22015] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:13.903376] [D] [thread 22015] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[10:31:13.903386] [D] [thread 22015] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:13.904713] [D] [thread 22005] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[10:31:13.904832] [D] [thread 22005] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[10:31:13.904848] [D] [thread 22005] [NesWorker.cpp:379] [connect] registered= true[m
[36m[10:31:13.904893] [D] [thread 22005] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[10:31:13.905019] [D] [thread 22005] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[10:31:13.905575] [D] [thread 22005] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[10:31:13.905651] [I] [thread 22028] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.30:8081[m
[32m[10:31:13.922517] [I] [thread 22028] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[10:31:13.922653] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:13.933633] [D] [thread 22005] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[10:31:13.933724] [D] [thread 22005] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[10:31:13.933746] [D] [thread 22005] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[10:31:13.934175] [D] [thread 22005] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[10:31:14.924116] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:15.925417] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:16.926759] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:17.570953] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:17.572222] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:17.574373] [D] [thread 22031] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[10:31:17.577433] [D] [thread 22031] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:31:17.577549] [D] [thread 22031] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[10:31:17.577670] [D] [thread 22031] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[10:31:17.580046] [D] [thread 22032] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_10-31-17_5137465.cpp[m
[36m[10:31:17.580816] [D] [thread 22032] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:31:17.581529] [D] [thread 22032] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -o/tmp/query_26-10-2023_10-31-17_5137465.so -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_26-10-2023_10-31-17_5137465.cpp'[m
[36m[10:31:18.573465] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:19.262561] [I] [thread 22032] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1682.722035ms[m
[36m[10:31:19.264266] [D] [thread 22031] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[10:31:19.264349] [D] [thread 22031] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[10:31:19.264376] [D] [thread 22031] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[10:31:19.264424] [D] [thread 22031] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[10:31:19.521226] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:19.521735] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:19.522982] [I] [thread 22037] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:19.524298] [I] [thread 22037] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:19.825272] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:19.825744] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:19.826562] [I] [thread 22038] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:19.827136] [I] [thread 22038] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:20.001869] [D] [thread 22026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.10"
grpcPort: 35843
dataPort: 37525
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:31:20.002135] [D] [thread 22026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.10"
grpcPort: 35843
dataPort: 37525
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:31:20.002213] [D] [thread 22026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:20.002444] [D] [thread 22026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:20.002517] [D] [thread 22026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:20.002587] [D] [thread 22026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[10:31:20.002855] [D] [thread 22026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:20.003059] [I] [thread 22026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:20.003401] [I] [thread 22026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:20.003815] [D] [thread 22026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[10:31:20.004220] [D] [thread 22026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:20.004579] [D] [thread 22026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:20.004698] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:31:20.004732] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:31:20.004771] [D] [thread 22026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:20.004787] [D] [thread 22026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:20.004807] [D] [thread 22026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:20.005604] [D] [thread 22026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[10:31:20.827033] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:21.828315] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:22.829591] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:23.063896] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:23.064425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:23.065621] [I] [thread 22039] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:23.066545] [I] [thread 22039] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:23.206184] [D] [thread 22026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 45373
dataPort: 38035
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:31:23.206597] [D] [thread 22026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 45373
dataPort: 38035
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[10:31:23.206730] [D] [thread 22026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:23.207138] [D] [thread 22026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:23.207280] [D] [thread 22026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:23.207404] [D] [thread 22026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[10:31:23.207643] [D] [thread 22026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:23.207819] [I] [thread 22026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:23.208147] [I] [thread 22026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:23.208321] [D] [thread 22026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[10:31:23.208453] [D] [thread 22026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:23.208821] [D] [thread 22026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:23.208934] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:31:23.208963] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:31:23.209002] [D] [thread 22026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:23.209095] [D] [thread 22026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:23.209119] [D] [thread 22026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:23.209863] [D] [thread 22026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[10:31:24.065708] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:25.067012] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:26.068320] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:26.145054] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:26.145493] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:26.146084] [I] [thread 22040] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:26.147212] [I] [thread 22040] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:26.300719] [D] [thread 22026] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 37993
dataPort: 37323
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482557685
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:26.300974] [D] [thread 22026] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 37993
dataPort: 37323
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482557685
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:26.301045] [D] [thread 22026] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:26.301338] [D] [thread 22026] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:26.301365] [D] [thread 22026] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:26.301415] [D] [thread 22026] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[10:31:26.301553] [D] [thread 22026] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:26.301646] [I] [thread 22026] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:26.301773] [I] [thread 22026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:26.301856] [D] [thread 22026] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[10:31:26.301947] [D] [thread 22026] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:26.302198] [D] [thread 22026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:26.302253] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:26.302279] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:31:26.302318] [D] [thread 22026] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:26.302337] [D] [thread 22026] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:26.302359] [D] [thread 22026] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:26.302897] [D] [thread 22026] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[10:31:26.338301] [D] [thread 22026] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:26.338414] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:26.338451] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:31:26.338531] [D] [thread 22026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[10:31:26.338720] [D] [thread 22026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:26.338765] [D] [thread 22026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[10:31:26.338849] [D] [thread 22026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[10:31:26.338880] [D] [thread 22026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:26.338924] [D] [thread 22026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:31:26.338982] [D] [thread 22026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:26.339082] [D] [thread 22026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:26.339119] [D] [thread 22026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:26.339198] [D] [thread 22026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:26.339244] [D] [thread 22026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:26.339269] [D] [thread 22026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:26.339326] [D] [thread 22026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:31:26.339370] [D] [thread 22026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:26.339494] [D] [thread 22026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:26.339540] [D] [thread 22026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:26.339581] [D] [thread 22026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:26.339611] [D] [thread 22026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:26.339635] [D] [thread 22026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:26.339670] [D] [thread 22026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:31:26.339713] [D] [thread 22026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:26.339855] [D] [thread 22026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:26.339902] [D] [thread 22026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:26.340010] [D] [thread 22026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:26.340052] [D] [thread 22026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:26.340103] [D] [thread 22026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:26.340153] [D] [thread 22026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:31:26.340204] [D] [thread 22026] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:26.340339] [D] [thread 22026] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:26.340381] [D] [thread 22026] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:26.340424] [D] [thread 22026] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:26.340456] [D] [thread 22026] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:26.340481] [D] [thread 22026] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:26.340518] [D] [thread 22026] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[10:31:26.340539] [D] [thread 22026] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:26.344374] [D] [thread 22026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[10:31:26.344498] [D] [thread 22026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[10:31:26.344533] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:26.344563] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:31:26.344592] [D] [thread 22026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[10:31:26.344608] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:26.344625] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:26.344645] [D] [thread 22026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:26.344725] [D] [thread 22026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:26.344876] [I] [thread 22026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:26.344937] [D] [thread 22026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:26.344982] [D] [thread 22026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:26.345018] [D] [thread 22026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[10:31:26.345038] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:26.345059] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[10:31:26.345081] [D] [thread 22026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[10:31:26.345098] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:31:26.345115] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:31:26.345136] [D] [thread 22026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:31:26.345247] [I] [thread 22026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[10:31:26.345302] [D] [thread 22026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:26.345585] [D] [thread 22026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:26.345617] [D] [thread 22026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:27.146865] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:28.148153] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:29.149574] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:29.382580] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:29.383031] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:29.383649] [I] [thread 22042] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:29.384851] [I] [thread 22042] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:29.535600] [D] [thread 22041] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 40301
dataPort: 33057
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482104385
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:29.535881] [D] [thread 22041] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 40301
dataPort: 33057
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482104385
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:29.536014] [D] [thread 22041] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:29.536545] [D] [thread 22041] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:29.536616] [D] [thread 22041] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:29.536693] [D] [thread 22041] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[10:31:29.536945] [D] [thread 22041] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:29.537133] [I] [thread 22041] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:29.537362] [I] [thread 22041] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:29.537543] [D] [thread 22041] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[10:31:29.537790] [D] [thread 22041] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:29.538396] [D] [thread 22041] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:29.538504] [I] [thread 22041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:29.538546] [D] [thread 22041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:31:29.538595] [D] [thread 22041] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:29.538620] [D] [thread 22041] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:29.538664] [D] [thread 22041] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:29.539461] [D] [thread 22041] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[10:31:29.576495] [D] [thread 22041] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:29.576623] [I] [thread 22041] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:29.576656] [D] [thread 22041] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:31:29.576732] [D] [thread 22041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[10:31:29.576909] [D] [thread 22041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:29.576949] [D] [thread 22041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[10:31:29.577013] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:29.577082] [D] [thread 22041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[10:31:29.577110] [D] [thread 22041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:29.577175] [D] [thread 22041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:31:29.577226] [D] [thread 22041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:29.577456] [D] [thread 22041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:29.577516] [D] [thread 22041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:29.577617] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:29.577710] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:29.577781] [D] [thread 22041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:29.577831] [D] [thread 22041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:29.577937] [D] [thread 22041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:31:29.578028] [D] [thread 22041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:29.578380] [D] [thread 22041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:29.578485] [D] [thread 22041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:29.578647] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:29.578688] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:29.578717] [D] [thread 22041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:29.578800] [D] [thread 22041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:29.578856] [D] [thread 22041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:31:29.578969] [D] [thread 22041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:29.579279] [D] [thread 22041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:29.579436] [D] [thread 22041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:29.579557] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:29.579616] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:29.579703] [D] [thread 22041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:29.579781] [D] [thread 22041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:29.579908] [D] [thread 22041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:31:29.580157] [D] [thread 22041] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:29.580429] [D] [thread 22041] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:29.580533] [D] [thread 22041] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:29.580694] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:29.580771] [D] [thread 22041] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:29.580854] [D] [thread 22041] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:29.580926] [D] [thread 22041] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:29.581026] [D] [thread 22041] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[10:31:29.581051] [D] [thread 22041] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:29.585245] [D] [thread 22026] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[10:31:29.585346] [D] [thread 22026] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[10:31:29.585373] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:29.585400] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:31:29.585425] [D] [thread 22026] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[10:31:29.585439] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:29.585454] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:29.585472] [D] [thread 22026] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:29.585539] [D] [thread 22026] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:29.585675] [I] [thread 22026] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:29.585713] [D] [thread 22026] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:29.585734] [D] [thread 22026] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:29.585755] [D] [thread 22026] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[10:31:29.585771] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:29.585789] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[10:31:29.585808] [D] [thread 22026] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[10:31:29.585822] [I] [thread 22026] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:31:29.585837] [D] [thread 22026] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:31:29.585855] [D] [thread 22026] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:31:29.585956] [I] [thread 22026] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[10:31:29.586008] [D] [thread 22026] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:29.586286] [D] [thread 22026] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:29.586339] [D] [thread 22026] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:30.384300] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:31.385606] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:32.386915] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:33.388190] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:33.395925] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:33.396417] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:33.397035] [I] [thread 22044] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:33.398650] [I] [thread 22044] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:33.541105] [D] [thread 22043] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 33935
dataPort: 43363
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2481834484
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:33.541402] [D] [thread 22043] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 33935
dataPort: 43363
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2481834484
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:33.541488] [D] [thread 22043] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:33.541920] [D] [thread 22043] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:33.541988] [D] [thread 22043] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:33.542055] [D] [thread 22043] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[10:31:33.542227] [D] [thread 22043] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:33.542314] [I] [thread 22043] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:33.542453] [I] [thread 22043] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:33.542534] [D] [thread 22043] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[10:31:33.542634] [D] [thread 22043] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:33.543014] [D] [thread 22043] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:33.543074] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:33.543105] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:31:33.543149] [D] [thread 22043] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:33.543197] [D] [thread 22043] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:33.543226] [D] [thread 22043] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:33.543821] [D] [thread 22043] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[10:31:33.578990] [D] [thread 22043] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:33.579141] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:33.579178] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:31:33.579258] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[10:31:33.579450] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:33.579495] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[10:31:33.579566] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:33.579597] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:33.579627] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[10:31:33.579654] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:33.579728] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:31:33.579777] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:33.579889] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:33.579927] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:33.580035] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:33.580067] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:33.580090] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:33.580199] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:33.580226] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:33.580251] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:31:33.580294] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:33.580403] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:33.580440] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:33.580481] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:33.580509] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:33.580532] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:33.580557] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:33.580578] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:33.580602] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:31:33.580640] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:33.580734] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:33.580773] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:33.580813] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:33.580841] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:33.580865] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:33.580890] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:33.580914] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:33.580940] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:31:33.580983] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:33.581095] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:33.581135] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:33.581179] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:33.581207] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:33.581230] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:33.581256] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:33.581279] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:33.581304] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[10:31:33.581323] [D] [thread 22043] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:33.585343] [D] [thread 22043] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[10:31:33.585448] [D] [thread 22043] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[10:31:33.585483] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:33.585513] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:31:33.585542] [D] [thread 22043] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[10:31:33.585558] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:33.585575] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:33.585595] [D] [thread 22043] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:33.585667] [D] [thread 22043] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:33.585815] [I] [thread 22043] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:33.585854] [D] [thread 22043] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:33.585878] [D] [thread 22043] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:33.585902] [D] [thread 22043] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[10:31:33.585921] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:33.585941] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[10:31:33.585975] [D] [thread 22043] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[10:31:33.585994] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:31:33.586011] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:31:33.586030] [D] [thread 22043] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:31:33.586146] [I] [thread 22043] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[10:31:33.586202] [D] [thread 22043] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:33.586552] [D] [thread 22043] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:33.586582] [D] [thread 22043] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:34.397682] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:35.398898] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:36.400298] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:37.204393] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:37.204935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:37.205962] [I] [thread 22046] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:37.208009] [I] [thread 22046] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:37.356948] [D] [thread 22045] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 33923
dataPort: 43245
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2481714610
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:37.357237] [D] [thread 22045] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 33923
dataPort: 43245
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2481714610
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:37.357320] [D] [thread 22045] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:37.357842] [D] [thread 22045] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:37.357916] [D] [thread 22045] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:37.357990] [D] [thread 22045] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[10:31:37.358162] [D] [thread 22045] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:37.358249] [I] [thread 22045] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:37.358418] [I] [thread 22045] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:37.358503] [D] [thread 22045] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[10:31:37.358604] [D] [thread 22045] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:37.359037] [D] [thread 22045] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:37.359099] [I] [thread 22045] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:37.359129] [D] [thread 22045] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:31:37.359172] [D] [thread 22045] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:37.359195] [D] [thread 22045] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:37.359222] [D] [thread 22045] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:37.359811] [D] [thread 22045] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[10:31:37.396184] [D] [thread 22043] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:37.396300] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:37.396341] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:31:37.396423] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[10:31:37.396617] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:37.396662] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[10:31:37.396731] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:37.396761] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:37.396784] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:31:37.396813] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[10:31:37.396840] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:37.396885] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:31:37.396934] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:37.397045] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:37.397082] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:37.397126] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:37.397155] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:37.397178] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:37.397200] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:31:37.397227] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:37.397251] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:37.397293] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:31:37.397335] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:37.397474] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:37.397515] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:37.397564] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:37.397592] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:37.397634] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:37.397659] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:31:37.397687] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:37.397712] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:37.397772] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:31:37.397822] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:37.397939] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:37.397977] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:37.398021] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:37.398051] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:37.398074] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:37.398097] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:37.398123] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:37.398148] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:37.398183] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:31:37.398226] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:37.398333] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:37.398372] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:37.398470] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:37.398509] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:37.398533] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:37.398556] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:37.398584] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:37.398612] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:37.398654] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[10:31:37.398676] [D] [thread 22043] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:37.403076] [D] [thread 22043] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[10:31:37.403187] [D] [thread 22043] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[10:31:37.403222] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:37.403251] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:31:37.403281] [D] [thread 22043] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[10:31:37.403297] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:37.403314] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:37.403333] [D] [thread 22043] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:37.403404] [D] [thread 22043] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:37.403548] [I] [thread 22043] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:37.403586] [D] [thread 22043] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:37.403610] [D] [thread 22043] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:37.403633] [D] [thread 22043] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[10:31:37.403651] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:37.403670] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[10:31:37.403691] [D] [thread 22043] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[10:31:37.403726] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[10:31:37.403745] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[10:31:37.403765] [D] [thread 22043] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[10:31:37.403884] [I] [thread 22043] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[10:31:37.403927] [D] [thread 22043] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:37.404377] [D] [thread 22043] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:37.404410] [D] [thread 22043] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:38.206217] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:39.207530] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:40.208836] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:40.404559] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:40.405038] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:40.405895] [I] [thread 22048] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:40.408502] [I] [thread 22048] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:40.556867] [D] [thread 22047] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 40763
dataPort: 39547
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482329614
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:40.557153] [D] [thread 22047] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 40763
dataPort: 39547
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482329614
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:40.557234] [D] [thread 22047] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:40.557757] [D] [thread 22047] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:40.557826] [D] [thread 22047] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:40.557895] [D] [thread 22047] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[10:31:40.558068] [D] [thread 22047] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:40.558156] [I] [thread 22047] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:40.558310] [I] [thread 22047] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:40.558399] [D] [thread 22047] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[10:31:40.558500] [D] [thread 22047] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:40.558977] [D] [thread 22047] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:40.559040] [I] [thread 22047] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:40.559072] [D] [thread 22047] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:31:40.559115] [D] [thread 22047] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:40.559138] [D] [thread 22047] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:40.559165] [D] [thread 22047] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:40.559754] [D] [thread 22047] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[10:31:40.596558] [D] [thread 22043] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:40.596747] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:40.596790] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:31:40.596880] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[10:31:40.597098] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:40.597152] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[10:31:40.597232] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:40.597268] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:40.597293] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:31:40.597316] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:31:40.597347] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[10:31:40.597377] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:40.597527] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:31:40.597595] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:40.597747] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:40.597792] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:40.597846] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:40.597877] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:40.597901] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:40.597924] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:31:40.597947] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:31:40.598001] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:40.598031] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:40.598061] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:31:40.598108] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:40.598241] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:40.598281] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:40.598328] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:40.598371] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:40.598396] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:40.598418] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:31:40.598441] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:31:40.598468] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:40.598618] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:40.598655] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:31:40.598704] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:40.598852] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:40.598895] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:40.598946] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:40.598975] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:40.598999] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:40.599038] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:40.599064] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:40.599093] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:40.599120] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:40.599149] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:31:40.599215] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:40.599360] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:40.599402] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:40.599471] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:40.599501] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:40.599525] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:40.599548] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:40.599571] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:40.599598] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:40.599624] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:40.599651] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[10:31:40.599671] [D] [thread 22043] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:40.605057] [D] [thread 22049] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[10:31:40.605166] [D] [thread 22049] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[10:31:40.605196] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:40.605226] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:31:40.605254] [D] [thread 22049] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[10:31:40.605271] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:40.605288] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:40.605307] [D] [thread 22049] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:40.605381] [D] [thread 22049] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:40.605568] [I] [thread 22049] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:40.605614] [D] [thread 22049] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:40.605724] [D] [thread 22049] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:40.605817] [D] [thread 22049] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[10:31:40.605888] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:40.605976] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[10:31:40.606053] [D] [thread 22049] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[10:31:40.606098] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:31:40.606120] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:31:40.606210] [D] [thread 22049] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:31:40.606462] [I] [thread 22049] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:31:40.606635] [D] [thread 22049] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:40.607780] [D] [thread 22049] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:40.608121] [D] [thread 22049] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:41.406322] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:42.407639] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:43.408960] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:44.275914] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:44.276451] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:44.277179] [I] [thread 22050] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:44.279494] [I] [thread 22050] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:44.425537] [D] [thread 22049] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 41837
dataPort: 39441
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482595347
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:44.425868] [D] [thread 22049] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 41837
dataPort: 39441
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2482595347
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:44.425954] [D] [thread 22049] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:44.426256] [D] [thread 22049] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:44.426291] [D] [thread 22049] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:44.426333] [D] [thread 22049] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[10:31:44.426437] [D] [thread 22049] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:44.426483] [I] [thread 22049] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:44.426559] [I] [thread 22049] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:44.426614] [D] [thread 22049] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[10:31:44.426687] [D] [thread 22049] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:44.426937] [D] [thread 22049] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:44.427023] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:44.427046] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:31:44.427078] [D] [thread 22049] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:44.427087] [D] [thread 22049] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:44.427103] [D] [thread 22049] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:44.427537] [D] [thread 22049] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[10:31:44.464060] [D] [thread 22043] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:44.464211] [I] [thread 22043] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:44.464254] [D] [thread 22043] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:31:44.464336] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[10:31:44.464531] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:44.464577] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[10:31:44.464799] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:44.464868] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:44.464895] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:31:44.464918] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:31:44.465025] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:31:44.465148] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[10:31:44.465279] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:44.465480] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:31:44.465554] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:44.465968] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:44.466096] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:44.466277] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:44.466392] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:44.466453] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:44.466529] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:31:44.466581] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:31:44.466608] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:31:44.466830] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:44.468142] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:44.468303] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:31:44.468436] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:44.468717] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:44.468919] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:44.469002] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469033] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469057] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469215] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469244] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469341] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:31:44.469395] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:44.469429] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:44.469462] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:31:44.469523] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:44.469702] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:44.469744] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:44.469794] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469822] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469846] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469868] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469891] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469933] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:44.469961] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:44.469985] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:44.470010] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:31:44.470050] [D] [thread 22043] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:44.470148] [D] [thread 22043] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:44.470183] [D] [thread 22043] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:44.470222] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470249] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470272] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470294] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470317] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470339] [D] [thread 22043] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:44.470364] [D] [thread 22043] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:44.470386] [D] [thread 22043] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:44.470409] [D] [thread 22043] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[10:31:44.470427] [D] [thread 22043] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:44.474199] [D] [thread 22051] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[10:31:44.474279] [D] [thread 22051] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[10:31:44.474297] [I] [thread 22051] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:44.474316] [D] [thread 22051] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:31:44.474334] [D] [thread 22051] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[10:31:44.474342] [I] [thread 22051] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:44.474352] [D] [thread 22051] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:44.474363] [D] [thread 22051] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:44.474415] [D] [thread 22051] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:44.474521] [I] [thread 22051] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:44.474546] [D] [thread 22051] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:44.474562] [D] [thread 22051] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:44.474575] [D] [thread 22051] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[10:31:44.474585] [I] [thread 22051] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:44.474596] [D] [thread 22051] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[10:31:44.474609] [D] [thread 22051] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[10:31:44.474618] [I] [thread 22051] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:31:44.474627] [D] [thread 22051] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:31:44.474638] [D] [thread 22051] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:31:44.474701] [I] [thread 22051] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:31:44.474739] [D] [thread 22051] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:44.475014] [D] [thread 22051] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:44.475033] [D] [thread 22051] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:45.277718] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:46.279038] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:47.280319] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:48.281630] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:48.360359] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:48.360842] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:48.361466] [I] [thread 22052] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:48.364113] [I] [thread 22052] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:48.511520] [D] [thread 22049] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 34293
dataPort: 41885
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482439486
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:48.511832] [D] [thread 22049] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 34293
dataPort: 41885
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482439486
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:48.511924] [D] [thread 22049] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:48.512588] [D] [thread 22049] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:48.512656] [D] [thread 22049] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:48.512842] [D] [thread 22049] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[10:31:48.513135] [D] [thread 22049] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:48.513305] [I] [thread 22049] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:48.513619] [I] [thread 22049] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:48.513835] [D] [thread 22049] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[10:31:48.514000] [D] [thread 22049] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:48.514841] [D] [thread 22049] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:48.514972] [I] [thread 22049] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:48.515014] [D] [thread 22049] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:31:48.515066] [D] [thread 22049] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:48.515090] [D] [thread 22049] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:48.515116] [D] [thread 22049] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:48.515696] [D] [thread 22049] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[10:31:48.550950] [D] [thread 22053] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:48.551065] [I] [thread 22053] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:48.551103] [D] [thread 22053] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:31:48.551178] [D] [thread 22053] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[10:31:48.551355] [D] [thread 22053] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:48.551396] [D] [thread 22053] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[10:31:48.551464] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:48.551490] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:48.551510] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:31:48.551531] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:31:48.551551] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:31:48.551570] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:31:48.551597] [D] [thread 22053] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[10:31:48.551622] [D] [thread 22053] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:48.551648] [D] [thread 22053] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:31:48.551685] [D] [thread 22053] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:48.551773] [D] [thread 22053] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:48.551807] [D] [thread 22053] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:48.551845] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:48.551870] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:48.551891] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:48.551910] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:31:48.551930] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:31:48.551992] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:31:48.552018] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:31:48.552046] [D] [thread 22053] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:48.552073] [D] [thread 22053] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:48.552098] [D] [thread 22053] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:31:48.552143] [D] [thread 22053] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:48.552269] [D] [thread 22053] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:48.552306] [D] [thread 22053] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:48.552351] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552376] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552396] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552416] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552436] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552456] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552476] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:31:48.552501] [D] [thread 22053] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:48.552522] [D] [thread 22053] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:48.552546] [D] [thread 22053] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:31:48.552616] [D] [thread 22053] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:48.552744] [D] [thread 22053] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:48.552779] [D] [thread 22053] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:48.552824] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552850] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552870] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552890] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552910] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552930] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552950] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:48.552975] [D] [thread 22053] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:48.553000] [D] [thread 22053] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:48.553024] [D] [thread 22053] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:31:48.553062] [D] [thread 22053] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:48.553172] [D] [thread 22053] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:48.553207] [D] [thread 22053] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:48.553245] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553270] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553291] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553311] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553331] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553351] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553371] [D] [thread 22053] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:48.553395] [D] [thread 22053] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:48.553417] [D] [thread 22053] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:48.553440] [D] [thread 22053] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[10:31:48.553456] [D] [thread 22053] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:48.558911] [D] [thread 22054] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[10:31:48.559011] [D] [thread 22054] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[10:31:48.559038] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:48.559065] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:31:48.559092] [D] [thread 22054] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[10:31:48.559106] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:48.559120] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:48.559138] [D] [thread 22054] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:48.559204] [D] [thread 22054] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:48.559369] [I] [thread 22054] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:48.559478] [D] [thread 22054] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:48.559527] [D] [thread 22054] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:48.559553] [D] [thread 22054] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[10:31:48.559723] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:48.559786] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[10:31:48.559831] [D] [thread 22054] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[10:31:48.559844] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:31:48.559855] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:31:48.560025] [D] [thread 22054] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:31:48.560196] [I] [thread 22054] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:31:48.560311] [D] [thread 22054] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:48.560930] [D] [thread 22054] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:48.561007] [D] [thread 22054] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:49.362084] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:50.363508] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:51.364735] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:52.365941] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:52.514071] [D] [thread 22054] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 38565
dataPort: 34345
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482418036
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:52.514251] [D] [thread 22054] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 38565
dataPort: 34345
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2482418036
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[10:31:52.514298] [D] [thread 22054] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[10:31:52.514725] [D] [thread 22054] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[10:31:52.514795] [D] [thread 22054] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[10:31:52.514837] [D] [thread 22054] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[10:31:52.514941] [D] [thread 22054] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[10:31:52.514998] [I] [thread 22054] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[10:31:52.515167] [I] [thread 22054] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:52.515235] [D] [thread 22054] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[10:31:52.515345] [D] [thread 22054] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[10:31:52.515918] [D] [thread 22054] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[10:31:52.516049] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:52.516084] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:31:52.516126] [D] [thread 22054] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[10:31:52.516144] [D] [thread 22054] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[10:31:52.516166] [D] [thread 22054] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[10:31:52.516945] [D] [thread 22054] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[10:31:52.553336] [D] [thread 22054] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[10:31:52.553464] [I] [thread 22054] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:52.553511] [D] [thread 22054] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:31:52.553602] [D] [thread 22054] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[10:31:52.553811] [D] [thread 22054] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[10:31:52.553866] [D] [thread 22054] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[10:31:52.553994] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[10:31:52.554037] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[10:31:52.554064] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[10:31:52.554231] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[10:31:52.554457] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[10:31:52.554491] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[10:31:52.554573] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[10:31:52.554661] [D] [thread 22054] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[10:31:52.554753] [D] [thread 22054] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:52.554842] [D] [thread 22054] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:31:52.554949] [D] [thread 22054] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[10:31:52.555347] [D] [thread 22054] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[10:31:52.556309] [D] [thread 22054] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[10:31:52.556453] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[10:31:52.556482] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[10:31:52.556501] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[10:31:52.556519] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[10:31:52.556537] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[10:31:52.556555] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[10:31:52.556573] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[10:31:52.556591] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[10:31:52.556619] [D] [thread 22054] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[10:31:52.556663] [D] [thread 22054] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:52.556714] [D] [thread 22054] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:31:52.556763] [D] [thread 22054] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[10:31:52.557072] [D] [thread 22054] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[10:31:52.557158] [D] [thread 22054] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[10:31:52.557254] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557330] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557398] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557445] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557516] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557571] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557598] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557616] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[10:31:52.557706] [D] [thread 22054] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[10:31:52.557753] [D] [thread 22054] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:52.557835] [D] [thread 22054] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:31:52.557937] [D] [thread 22054] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[10:31:52.558149] [D] [thread 22054] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[10:31:52.558225] [D] [thread 22054] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[10:31:52.558358] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558407] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558428] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558491] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558511] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558587] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558665] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558689] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[10:31:52.558748] [D] [thread 22054] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[10:31:52.558775] [D] [thread 22054] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:52.558853] [D] [thread 22054] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:31:52.558947] [D] [thread 22054] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[10:31:52.559211] [D] [thread 22054] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[10:31:52.559252] [D] [thread 22054] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[10:31:52.559334] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559414] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559436] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559478] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559535] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559595] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559646] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559722] [D] [thread 22054] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[10:31:52.559755] [D] [thread 22054] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[10:31:52.559817] [D] [thread 22054] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[10:31:52.559898] [D] [thread 22054] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[10:31:52.560008] [D] [thread 22054] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[10:31:52.563997] [D] [thread 22055] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[10:31:52.564099] [D] [thread 22055] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[10:31:52.564125] [I] [thread 22055] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:52.564149] [D] [thread 22055] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:31:52.564172] [D] [thread 22055] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[10:31:52.564185] [I] [thread 22055] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:52.564199] [D] [thread 22055] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[10:31:52.564214] [D] [thread 22055] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[10:31:52.564277] [D] [thread 22055] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[10:31:52.564401] [I] [thread 22055] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[10:31:52.564434] [D] [thread 22055] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[10:31:52.564449] [D] [thread 22055] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[10:31:52.564461] [D] [thread 22055] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[10:31:52.564471] [I] [thread 22055] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:52.564482] [D] [thread 22055] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[10:31:52.564494] [D] [thread 22055] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[10:31:52.564502] [I] [thread 22055] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[10:31:52.564510] [D] [thread 22055] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[10:31:52.564521] [D] [thread 22055] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[10:31:52.564587] [I] [thread 22055] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[10:31:52.564613] [D] [thread 22055] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[10:31:52.564917] [D] [thread 22055] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[10:31:52.564936] [D] [thread 22055] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[10:31:52.980795] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:52.981281] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:52.982899] [I] [thread 22056] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[10:31:52.985916] [I] [thread 22056] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[10:31:53.982551] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:54.642818] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:54.643361] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:54.860002] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:54.860576] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:54.862814] [D] [thread 22061] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceThreeLevel.out", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[10:31:54.862940] [I] [thread 22061] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[10:31:54.862974] [I] [thread 22061] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[10:31:54.863028] [D] [thread 22061] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[10:31:54.863133] [D] [thread 22061] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[10:31:54.863205] [D] [thread 22061] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceThreeLevel.out", true));[m
[36m[10:31:54.863243] [D] [thread 22061] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceThreeLevel.out", true));
}
}
[m
[36m[10:31:54.864965] [D] [thread 22062] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_10-31-54_1872023.cpp[m
[36m[10:31:54.865570] [D] [thread 22062] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[10:31:54.865662] [D] [thread 22062] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[10:31:54.866009] [D] [thread 22062] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -o/tmp/query_26-10-2023_10-31-54_1872023.so -DFMT_HEADER_ONLY /tmp/query_26-10-2023_10-31-54_1872023.cpp'[m
[36m[10:31:55.861800] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:56.863042] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:31:57.699340] [I] [thread 22062] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2834.47512ms[m
[36m[10:31:57.699653] [D] [thread 22061] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[10:31:57.699699] [D] [thread 22061] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[10:31:57.700113] [I] [thread 22061] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.701460] [D] [thread 22061] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[10:31:57.701902] [D] [thread 22061] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[10:31:57.702258] [I] [thread 22061] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.702412] [D] [thread 22061] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[10:31:57.702579] [D] [thread 22061] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.702602] [D] [thread 22061] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.703065] [I] [thread 22061] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[10:31:57.703252] [D] [thread 22061] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[10:31:57.703390] [D] [thread 22061] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.703406] [D] [thread 22061] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.703623] [D] [thread 22061] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[10:31:57.703749] [I] [thread 22061] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:31:57.703866] [D] [thread 22061] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:31:57.704041] [D] [thread 22061] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.704063] [D] [thread 22061] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.704992] [D] [thread 22061] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.705200] [D] [thread 22061] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.705356] [D] [thread 22061] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.705530] [D] [thread 22061] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.705576] [D] [thread 22061] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.705604] [D] [thread 22061] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.705705] [D] [thread 22061] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[10:31:57.705769] [D] [thread 22061] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.705803] [D] [thread 22061] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.705827] [D] [thread 22061] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.706492] [D] [thread 22061] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.706530] [D] [thread 22061] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.706645] [D] [thread 22061] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.707712] [D] [thread 22061] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.708466] [D] [thread 22061] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:31:57.708987] [I] [thread 22061] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[10:31:57.709808] [I] [thread 22061] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[10:31:57.709893] [I] [thread 22061] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:31:57.709951] [I] [thread 22013] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:31:57.710076] [I] [thread 22013] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:31:57.710114] [I] [thread 22013] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:31:57.710392] [I] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[10:31:57.710522] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:31:57.710552] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.710618] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.710661] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.710715] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.710754] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.711563] [D] [thread 22013] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.712157] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.712230] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:31:57.712256] [D] [thread 22013] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:31:57.712507] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[10:31:57.712550] [I] [thread 22013] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:31:57.712769] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:31:57.713063] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:31:57.713365] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:31:57.713570] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.713844] [D] [thread 22013] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[10:31:57.714194] [D] [thread 22013] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.714420] [D] [thread 22013] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:31:57.714564] [I] [thread 22013] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.714715] [D] [thread 22013] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:31:57.714733] [I] [thread 22013] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:31:57.714830] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:31:57.715033] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:31:57.715248] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:31:57.715468] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.715694] [D] [thread 22013] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[10:31:57.715907] [I] [thread 22013] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.716006] [D] [thread 22013] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[10:31:57.716022] [I] [thread 22013] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:31:57.716109] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:31:57.716241] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[10:31:57.716436] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[10:31:57.716601] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.716786] [D] [thread 22013] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[10:31:57.716932] [I] [thread 22013] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[10:31:57.717068] [I] [thread 22013] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.717195] [D] [thread 22013] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[10:31:57.717323] [D] [thread 22013] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.717411] [D] [thread 22013] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.717512] [D] [thread 22013] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[10:31:57.717609] [D] [thread 22013] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.717691] [D] [thread 22013] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.717787] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.717835] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.717871] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.717918] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.717954] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.718703] [D] [thread 22013] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.719154] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[10:31:57.719225] [I] [thread 22013] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[10:31:57.719399] [I] [thread 22013] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[10:31:57.719415] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.719454] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.719489] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[10:31:57.720167] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.720256] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.720358] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.720381] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.720415] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.720621] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.721082] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.721154] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.721229] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.721250] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.721279] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.721436] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.721694] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.721733] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.721808] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.721828] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.721854] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.722004] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.722245] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.722282] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.722336] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.722350] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.722374] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.722516] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.722749] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.722786] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.722835] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.722849] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.722892] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.723042] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.723290] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.723329] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.723382] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.723397] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.723421] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.723562] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.723807] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.723844] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.723893] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.723908] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.723930] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.724137] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.724431] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.724474] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.724535] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.724551] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.724578] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.724725] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[10:31:57.724991] [I] [thread 22013] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[10:31:57.725029] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[10:31:57.725082] [D] [thread 22013] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[10:31:57.725097] [D] [thread 22013] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[10:31:57.725121] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[10:31:57.725283] [D] [thread 22013] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[10:31:57.725882] [D] [thread 22013] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[10:31:57.725972] [I] [thread 22013] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[10:31:57.726267] [D] [thread 22013] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.726571] [D] [thread 22013] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[10:31:57.726882] [D] [thread 22013] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.726941] [D] [thread 22013] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[10:31:57.727223] [D] [thread 22013] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.727601] [D] [thread 22013] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[10:31:57.727684] [D] [thread 22013] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:31:57.727734] [D] [thread 22013] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.727856] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:57.727880] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:31:57.727912] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:57.727924] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:31:57.728342] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:57.728386] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:31:57.728566] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:57.728597] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:31:57.728686] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:57.728701] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:31:57.728768] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:57.728781] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:31:57.728893] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:57.728914] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:31:57.728992] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:57.729006] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:31:57.729077] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:57.729091] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:31:57.729595] [I] [thread 22013] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:31:57.729646] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729657] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729666] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729689] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729699] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729709] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729718] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729727] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729736] [I] [thread 22013] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:57.729745] [I] [thread 22013] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:57.729757] [I] [thread 22013] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:31:57.729765] [I] [thread 22013] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:31:57.729917] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:31:57.730178] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.730396] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:31:57.730517] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.730661] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[10:31:57.730754] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.730891] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[10:31:57.730979] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.731118] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:31:57.731205] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(27) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.731352] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[10:31:57.731436] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(28) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.731579] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[10:31:57.731662] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(29) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[10:31:57.731818] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:31:57.731907] [D] [thread 22013] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(30) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[10:31:57.732486] [D] [thread 22013] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.732926] [D] [thread 22013] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.733195] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.733301] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.733386] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[10:31:57.733448] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.733484] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.734174] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.734477] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.734593] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.735251] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.735523] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.735633] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.736298] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.736564] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.736677] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.737319] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.737579] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.737691] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.738297] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.738564] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.738675] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.739295] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.739553] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.739661] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.740420] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.740699] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.740817] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.741468] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.741731] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.741844] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.742040] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.742917] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[10:31:57.742965] [D] [thread 22013] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[10:31:57.743335] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[10:31:57.743445] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[10:31:57.743465] [D] [thread 22013] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[10:31:57.743531] [I] [thread 22013] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[10:31:57.743572] [I] [thread 22013] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[10:31:57.743682] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[10:31:57.743843] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[10:31:57.744219] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[10:31:57.744447] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[10:31:57.744628] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[10:31:57.744805] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[32m[10:31:57.744978] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[32m[10:31:57.745152] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[32m[10:31:57.745333] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[32m[10:31:57.745576] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[10:31:57.745737] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[10:31:57.745872] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[10:31:57.746002] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[10:31:57.746111] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[10:31:57.746229] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[10:31:57.746384] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[10:31:57.746533] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[10:31:57.746686] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[10:31:57.746902] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[10:31:57.747077] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[10:31:57.747240] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[10:31:57.747434] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[10:31:57.747609] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[10:31:57.747774] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[10:31:57.747936] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:31:57.748630] [D] [thread 22013] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:31:57.748692] [D] [thread 22013] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:31:57.748778] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748822] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748845] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748865] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748885] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748905] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748924] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748944] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748964] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.748985] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749005] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749026] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749047] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749067] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749087] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749108] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749129] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749149] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749160] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749186] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749197] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749237] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749250] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749270] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749281] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749296] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749307] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749337] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749349] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749366] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749381] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.749397] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.749408] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.750711] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:31:57.750744] [D] [thread 22013] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:31:57.750816] [D] [thread 22013] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:31:57.750850] [D] [thread 22013] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:31:57.750860] [D] [thread 22013] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[10:31:57.750870] [D] [thread 22013] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[10:31:57.750895] [I] [thread 22013] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[10:31:57.751542] [D] [thread 22013] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.751576] [D] [thread 22013] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[10:31:57.751587] [D] [thread 22013] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[10:31:57.751640] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751680] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751701] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751721] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751756] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751778] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751798] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751819] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751839] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751858] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751878] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.751898] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752004] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752029] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752049] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752070] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752098] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752120] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752132] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752164] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752175] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752209] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752223] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752243] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752254] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752322] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752337] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752361] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752372] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752388] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752400] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752416] [D] [thread 22013] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[10:31:57.752427] [D] [thread 22013] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[10:31:57.752651] [D] [thread 22013] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[10:31:57.752698] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[10:31:57.752718] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[10:31:57.752794] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[10:31:57.752806] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[10:31:57.752840] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[10:31:57.752851] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[10:31:57.752870] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[10:31:57.752880] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[10:31:57.752915] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[10:31:57.752926] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[10:31:57.752944] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[10:31:57.752954] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[10:31:57.752970] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[10:31:57.752980] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[10:31:57.753004] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[10:31:57.753014] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[10:31:57.753034] [I] [thread 22013] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[10:31:57.753044] [D] [thread 22013] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[10:31:57.753116] [I] [thread 22013] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[10:31:57.753335] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.753499] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.753606] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.753688] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.753857] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.753921] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.753985] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754053] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754171] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.754224] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754323] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754402] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754517] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.754569] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754628] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754695] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754796] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.754871] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.754936] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755006] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755117] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.755168] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755226] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755291] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755414] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.755468] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755528] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755594] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755694] [D] [thread 22013] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[10:31:57.755745] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755802] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.755899] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[10:31:57.755984] [I] [thread 22013] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[10:31:57.755999] [D] [thread 22013] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[10:31:57.756405] [D] [thread 22013] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[10:31:57.756421] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.756497] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.756510] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.756546] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:31:57.756619] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.756703] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.756739] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.756813] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.756826] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.756850] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[10:31:57.756906] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.756964] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757009] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757020] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757038] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757080] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757094] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757138] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757149] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757162] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757201] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757216] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757261] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757271] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757289] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757328] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757343] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757408] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757423] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757438] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757479] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757493] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757540] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757552] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757565] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757606] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757620] [D] [thread 22013] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[10:31:57.757662] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[10:31:57.757673] [D] [thread 22013] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[10:31:57.757686] [D] [thread 22013] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[10:31:57.757724] [W] [thread 22013] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[10:31:57.757815] [D] [thread 22013] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:31:57.757831] [D] [thread 22013] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[10:31:57.757838] [D] [thread 22013] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[10:31:57.757884] [D] [thread 22013] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[10:31:57.757906] [D] [thread 22013] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:31:57.757914] [D] [thread 22013] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[10:31:57.757937] [D] [thread 22013] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[10:31:57.758116] [D] [thread 22013] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[10:31:57.758190] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.758259] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.758292] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.758349] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[10:31:57.758372] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.758445] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[10:31:57.758461] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.758524] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.758540] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.758559] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.758671] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.758710] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.758723] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.758933] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.758986] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.759022] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.759040] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759079] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[10:31:57.759094] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759156] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[10:31:57.759172] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759207] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.759222] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.759235] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.759333] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.759354] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.759365] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.759542] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.759587] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.759622] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.759638] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759673] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[10:31:57.759699] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759750] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[10:31:57.759766] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.759801] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.759815] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.759826] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.759920] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.759981] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.759995] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.760190] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.760239] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.760275] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.760294] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.760379] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[10:31:57.760399] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.760456] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[10:31:57.760472] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.760508] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.760523] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.760545] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.760649] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.760674] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.760685] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.760869] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.760917] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.760963] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.760982] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761019] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[10:31:57.761042] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761096] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(27)[m
[36m[10:31:57.761111] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761145] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.761159] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.761170] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.761263] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.761287] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.761298] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.761487] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.761552] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.761593] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.761616] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761659] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[10:31:57.761674] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761738] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(28)[m
[36m[10:31:57.761756] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.761794] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.761809] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.761839] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.761956] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.761989] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.762002] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.762224] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.762293] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.762334] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.762358] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.762406] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[10:31:57.762422] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.762492] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(29)[m
[36m[10:31:57.762510] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.762551] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.762567] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.762580] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.762698] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.762731] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.762745] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.762962] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.763035] [D] [thread 22013] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[10:31:57.763076] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[10:31:57.763098] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.763139] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[10:31:57.763154] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.763212] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(30)[m
[36m[10:31:57.763227] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.763263] [D] [thread 22013] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[10:31:57.763277] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.763291] [D] [thread 22013] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[10:31:57.763393] [D] [thread 22013] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[10:31:57.763419] [D] [thread 22013] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[10:31:57.763431] [D] [thread 22013] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[10:31:57.763614] [D] [thread 22013] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[10:31:57.763629] [D] [thread 22013] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.763642] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.763702] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.763746] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.764020] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[10:31:57.764049] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.764081] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.764320] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[10:31:57.764522] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.764541] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.764549] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.764577] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.764590] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.764725] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:31:57.764811] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.764850] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:31:57.764862] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:31:57.764953] [D] [thread 22013] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 7[m
[36m[10:31:57.765135] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.765159] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.765184] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:31:57.765206] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.765264] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.765345] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.765429] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.765500] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.765513] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:31:57.765553] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[10:31:57.765565] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.765582] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.765617] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.765630] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.765681] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.765694] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.765771] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.765782] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.765814] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.765913] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[10:31:57.766112] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.766133] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.766149] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[10:31:57.766158] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[10:31:57.766286] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.766348] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.766365] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.766403] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:31:57.766420] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.766434] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:31:57.766456] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:31:57.766558] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:31:57.766616] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.766634] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.766659] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:31:57.766681] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.766731] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.766804] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.766823] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.766873] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.766884] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:31:57.766912] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 7[m
[36m[10:31:57.766924] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.766935] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.766957] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.766982] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.767007] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.767017] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.767056] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.767066] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.767083] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.767151] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[10:31:57.767333] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.767351] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.767363] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:31:57.767372] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[10:31:57.767467] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[10:31:57.767508] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.767522] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.767556] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[10:31:57.767571] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.767584] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[10:31:57.767594] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[10:31:57.767645] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[10:31:57.767682] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.767698] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.767713] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[10:31:57.767732] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.767828] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.767901] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.767921] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.767930] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.767975] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.767989] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.768049] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.768069] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.768165] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[10:31:57.768180] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.768191] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.768287] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[10:31:57.768459] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.768478] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.768486] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.768509] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.768520] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.768573] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:31:57.768608] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.768622] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:31:57.768631] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:31:57.768684] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[10:31:57.768763] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.768783] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.768810] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:31:57.768830] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.768879] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.768948] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.768967] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.769019] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.769031] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:31:57.769060] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[10:31:57.769071] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.769083] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.769105] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.769116] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.769144] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.769155] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.769206] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.769217] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.769235] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.769304] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[10:31:57.769466] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.769486] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.769498] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[10:31:57.769507] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[10:31:57.769625] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.769672] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.769687] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.769721] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:31:57.769736] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.769750] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:31:57.769758] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:31:57.769808] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:31:57.769860] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.769877] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.769891] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:31:57.769910] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.769953] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.770016] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.770034] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.770083] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.770095] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:31:57.770124] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 6[m
[36m[10:31:57.770146] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.770157] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.770177] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.770197] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.770218] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.770228] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.770313] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.770325] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.770343] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.770460] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[10:31:57.770652] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.770673] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.770686] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:31:57.770694] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[10:31:57.770795] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[10:31:57.770838] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.770853] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.770889] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[10:31:57.770905] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.770919] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[10:31:57.770928] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[10:31:57.770980] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[10:31:57.771020] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.771036] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.771050] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[10:31:57.771070] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.771112] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.771191] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.771214] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.771223] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.771247] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.771255] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.771310] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.771329] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.771418] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[10:31:57.771433] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.771443] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.771530] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[10:31:57.771693] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.771710] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.771718] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.771740] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.771761] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.771811] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:31:57.771842] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.771857] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:31:57.771866] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:31:57.771917] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[10:31:57.772005] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.772028] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.772043] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:31:57.772061] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.772115] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.772187] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.772216] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.772269] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.772280] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:31:57.772309] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[10:31:57.772321] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.772332] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.772354] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.772365] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.772396] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.772407] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.772459] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.772469] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.772486] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.772558] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[10:31:57.772725] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.772746] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.772758] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[10:31:57.772767] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[10:31:57.772884] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.772932] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.772948] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.772980] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:31:57.772996] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.773010] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:31:57.773018] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:31:57.773076] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:31:57.773114] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.773140] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.773156] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:31:57.773175] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.773217] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.773284] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.773303] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.773350] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.773362] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:31:57.773390] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 5[m
[36m[10:31:57.773401] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.773462] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.773485] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.773506] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.773529] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.773545] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.773588] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.773599] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.773616] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.773689] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[10:31:57.773867] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.773888] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.773916] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:31:57.773925] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[10:31:57.774024] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[10:31:57.774065] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.774080] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.774115] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[10:31:57.774131] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.774144] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[10:31:57.774152] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[10:31:57.774203] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[10:31:57.774250] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.774267] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.774280] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[10:31:57.774299] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.774344] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.774411] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.774433] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.774441] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.774455] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.774462] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.774516] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.774534] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.774618] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[10:31:57.774631] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.774642] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.774729] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[10:31:57.774939] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.774958] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.774965] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.774988] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.774999] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.775048] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:31:57.775076] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.775091] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:31:57.775100] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:31:57.775149] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[10:31:57.775195] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.775213] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.775227] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:31:57.775244] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.775289] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.775354] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.775371] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.775421] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.775433] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:31:57.775461] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[10:31:57.775472] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.775483] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.775502] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.775513] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.775541] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.775552] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.775601] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.775611] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.775628] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.775694] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[10:31:57.775847] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.775866] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.775878] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[10:31:57.775887] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[10:31:57.776039] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.776091] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.776117] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.776156] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:31:57.776172] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.776185] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:31:57.776194] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:31:57.776248] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:31:57.776289] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.776306] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.776321] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:31:57.776340] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.776385] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.776452] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.776478] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.776530] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.776541] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:31:57.776571] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 4[m
[36m[10:31:57.776583] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.776594] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.776616] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.776636] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.776661] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.776671] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.776715] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.776725] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.776742] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.776807] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[10:31:57.776986] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.777005] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.777017] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:31:57.777026] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[10:31:57.777118] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[10:31:57.777156] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.777171] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.777204] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[10:31:57.777220] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.777233] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[10:31:57.777242] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[10:31:57.777290] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[10:31:57.777328] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.777343] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.777357] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[10:31:57.777374] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.777469] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.777544] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.777569] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.777577] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.777590] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.777597] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.777652] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.777670] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.777758] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[10:31:57.777773] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.777784] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.777878] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[10:31:57.778042] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.778061] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.778068] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.778089] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.778100] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.778150] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:31:57.778177] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.778191] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:31:57.778200] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:31:57.778248] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[10:31:57.778295] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.778312] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.778325] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:31:57.778389] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.778440] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.778508] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.778526] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.778577] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.778588] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:31:57.778616] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[10:31:57.778628] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.778639] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.778700] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.778714] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.778743] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.778756] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.778813] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.778824] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.778842] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.778976] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[10:31:57.779148] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.779168] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.779180] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[10:31:57.779189] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[10:31:57.779310] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.779368] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.779386] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.779422] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:31:57.779450] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.779465] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:31:57.779474] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:31:57.779525] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[10:31:57.779573] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.779592] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.779606] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:31:57.779626] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.779676] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.779743] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.779769] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.779818] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.779830] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:31:57.779858] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(27) on execution node with id 11[m
[36m[10:31:57.779870] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.779881] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.779902] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.779922] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.779972] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.779988] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.780043] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.780055] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.780074] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.780143] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[10:31:57.780326] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.780347] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.780359] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:31:57.780367] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[10:31:57.780465] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[10:31:57.780504] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.780519] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.780553] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[10:31:57.780569] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.780582] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[10:31:57.780591] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[10:31:57.780642] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[10:31:57.780680] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.780696] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.780710] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[10:31:57.780730] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.780771] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.780836] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.780861] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.780870] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.780883] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.780891] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.780945] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.780962] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.781045] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[10:31:57.781059] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.781070] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.781157] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[10:31:57.781314] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.781331] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.781339] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.781361] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.781371] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.781418] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:31:57.781447] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.781462] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:31:57.781470] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:31:57.781515] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[10:31:57.781563] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.781579] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.781593] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:31:57.781611] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.781656] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.781721] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.781739] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.781790] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.781801] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:31:57.781829] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[10:31:57.781841] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.781853] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.781872] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.781883] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.781910] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.781920] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.781969] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.781980] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.781996] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.782059] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[10:31:57.782210] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.782228] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.782240] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[10:31:57.782249] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[10:31:57.782365] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.782410] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.782426] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.782457] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:31:57.782473] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.782486] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:31:57.782495] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:31:57.782544] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:31:57.782583] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.782599] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.782613] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:31:57.782631] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.782689] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.782754] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.782771] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.782819] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.782831] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:31:57.782859] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(28) on execution node with id 10[m
[36m[10:31:57.782870] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.782880] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.782901] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.782921] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.782943] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.782953] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.782990] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.783000] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.783016] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.783117] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[10:31:57.783294] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.783314] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.783328] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:31:57.783337] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[10:31:57.783432] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[10:31:57.783471] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.783486] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.783520] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[10:31:57.783537] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.783550] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[10:31:57.783573] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[10:31:57.783627] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[10:31:57.783666] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.783682] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.783696] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[10:31:57.783716] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.783758] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.783838] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.783866] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.783884] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.783898] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.783905] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.783986] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.784016] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.784121] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[10:31:57.784136] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.784148] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.784242] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[10:31:57.784416] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.784434] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.784442] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.784464] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.784475] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.784527] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:31:57.784556] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.784571] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:31:57.784591] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:31:57.784646] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[10:31:57.784696] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.784714] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.784728] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:31:57.784756] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.784807] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.784872] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.784890] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.784942] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.784963] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:31:57.784993] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[10:31:57.785005] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.785016] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.785038] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.785050] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.785087] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.785099] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.785150] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.785161] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.785187] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.785255] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[10:31:57.785417] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.785435] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.785447] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[10:31:57.785456] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[10:31:57.785572] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.785618] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.785633] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.785667] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:31:57.785684] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.785697] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:31:57.785705] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:31:57.785756] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:31:57.785849] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.785869] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.785883] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:31:57.785933] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.785979] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.786049] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.786067] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.786119] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.786131] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:31:57.786162] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(29) on execution node with id 9[m
[36m[10:31:57.786172] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.786184] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.786207] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.786230] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.786253] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.786263] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.786303] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.786313] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.786331] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.786399] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[10:31:57.786598] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.786620] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.786632] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:31:57.786641] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[10:31:57.786740] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[10:31:57.786780] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.786796] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.786834] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[10:31:57.786851] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.786865] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[10:31:57.786874] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[10:31:57.786927] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[10:31:57.786968] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.786984] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.786999] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[10:31:57.787018] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.787061] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.787127] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[10:31:57.787155] [W] [thread 22013] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[10:31:57.787164] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.787177] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.787184] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.787241] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.787259] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.787344] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[10:31:57.787366] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.787379] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.787508] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[10:31:57.787688] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[10:31:57.787708] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.787715] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.787737] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.787749] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.787802] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:31:57.787835] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.787861] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:31:57.787870] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:31:57.787925] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[10:31:57.788010] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.788032] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.788048] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:31:57.788067] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.788161] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.788239] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.788257] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.788309] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.788320] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:31:57.788351] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[10:31:57.788362] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.788374] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.788396] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.788408] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.788438] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.788449] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.788500] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.788511] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.788528] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.788597] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[10:31:57.788764] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.788783] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.788796] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[10:31:57.788805] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[10:31:57.788936] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[10:31:57.788986] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.789001] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.789036] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:31:57.789053] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.789067] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:31:57.789076] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:31:57.789126] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:31:57.789165] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.789181] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.789196] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:31:57.789214] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.789269] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.789334] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[10:31:57.789352] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.789401] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.789412] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:31:57.789440] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(30) on execution node with id 8[m
[36m[10:31:57.789452] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.789463] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.789482] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.789502] [D] [thread 22013] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[10:31:57.789524] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.789534] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.789570] [D] [thread 22013] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[10:31:57.789580] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.789596] [D] [thread 22013] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[10:31:57.789660] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[10:31:57.789837] [D] [thread 22013] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[10:31:57.789859] [D] [thread 22013] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[10:31:57.789871] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:31:57.789880] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[10:31:57.789974] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[10:31:57.790014] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.790040] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.790074] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[10:31:57.790090] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.790103] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[10:31:57.790112] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[10:31:57.790163] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[10:31:57.790202] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.790219] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.790233] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[10:31:57.790251] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.790292] [D] [thread 22013] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[10:31:57.790360] [D] [thread 22013] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[10:31:57.790391] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.790476] [D] [thread 22013] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[10:31:57.790490] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[10:31:57.790501] [W] [thread 22013] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[10:31:57.790587] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[10:31:57.790743] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[10:31:57.790760] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.790768] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.790788] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.790799] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.790884] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:31:57.790917] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.790932] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[10:31:57.790941] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[10:31:57.790992] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[10:31:57.791038] [D] [thread 22013] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[10:31:57.791055] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[10:31:57.791083] [I] [thread 22013] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[10:31:57.791102] [D] [thread 22013] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[10:31:57.791125] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.791143] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.791151] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.791159] [D] [thread 22013] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[10:31:57.791175] [D] [thread 22013] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[10:31:57.791217] [I] [thread 22013] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[10:31:57.791240] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.791300] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[10:31:57.791340] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.791368] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:31:57.791391] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[10:31:57.791423] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.791571] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.791607] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.791630] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[10:31:57.791679] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.791754] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.791770] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.791795] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.791807] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.791813] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.791934] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.792045] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.792057] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:31:57.792079] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.792094] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.792121] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[10:31:57.792134] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[10:31:57.792285] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[10:31:57.792470] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[10:31:57.792547] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[10:31:57.792810] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[10:31:57.792912] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.35:43245 1::31::0::0}) as new root of the plan.[m
[36m[10:31:57.792927] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.792934] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.793018] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[10:31:57.793086] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.793201] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.793214] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.793240] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.793254] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.793308] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.793340] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.793357] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:31:57.793365] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:31:57.793423] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[10:31:57.793476] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[10:31:57.793490] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[10:31:57.793500] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[10:31:57.793514] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.793545] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.793561] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.793616] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.793628] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.793641] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.793653] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.793789] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[10:31:57.793893] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.793910] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.794068] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.794085] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:31:57.794097] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:31:57.794106] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.794128] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:31:57.794160] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.794203] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[10:31:57.794279] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.794312] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:31:57.794323] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[10:31:57.794339] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.794462] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.794507] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.794541] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.794580] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.794644] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.794658] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.794684] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.794695] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.794702] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.794773] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.794844] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.794863] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:31:57.794880] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.794895] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.794922] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[10:31:57.794934] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[10:31:57.795005] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[10:31:57.795160] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[10:31:57.795258] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.795307] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.795319] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:31:57.795448] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[10:31:57.795531] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.34:43363 1::37::0::0}) as new root of the plan.[m
[36m[10:31:57.795546] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.795554] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.795627] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[10:31:57.795693] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.795839] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.795855] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.795880] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.795896] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.795984] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.796007] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.796033] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:31:57.796043] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:31:57.796107] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:31:57.796140] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[10:31:57.796152] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[10:31:57.796162] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[10:31:57.796170] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.796221] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.796239] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.796297] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.796309] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.796324] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.796335] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.796449] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[10:31:57.796495] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.796509] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.796665] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.796684] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:31:57.796695] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:31:57.796704] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.796717] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:31:57.796744] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.796786] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[10:31:57.796822] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.796849] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[10:31:57.796867] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[10:31:57.796924] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.797056] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.797106] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.797145] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[10:31:57.797185] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.797263] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.797280] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.797306] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.797318] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.797324] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.797396] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.797479] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.797492] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:31:57.797509] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.797525] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.797552] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[10:31:57.797563] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[10:31:57.797636] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[10:31:57.797791] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[10:31:57.797861] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.797905] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.797923] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:31:57.798054] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[10:31:57.798134] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.33:33057 1::43::0::0}) as new root of the plan.[m
[36m[10:31:57.798148] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.798155] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.798226] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[10:31:57.798307] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.798418] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.798431] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.798455] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.798470] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.798514] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.798531] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.798545] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:31:57.798554] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:31:57.798652] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:31:57.798690] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[10:31:57.798702] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[10:31:57.798712] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[10:31:57.798722] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.798758] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.798774] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.798828] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.798840] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.798854] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.798865] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.798962] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[10:31:57.799006] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.799029] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.799189] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.799214] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:31:57.799229] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:31:57.799238] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.799252] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:31:57.799280] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.799323] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[10:31:57.799357] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.799384] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[10:31:57.799394] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[10:31:57.799411] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.799539] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.799588] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.799628] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[10:31:57.799670] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.799733] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.799748] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.799773] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.799784] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.799791] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.799863] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.799934] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.799980] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:31:57.799998] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.800013] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.800040] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[10:31:57.800052] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[10:31:57.800123] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[10:31:57.800283] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[10:31:57.800353] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.800397] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.800409] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[10:31:57.800533] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[10:31:57.800611] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.32:37323 1::49::0::0}) as new root of the plan.[m
[36m[10:31:57.800625] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.800632] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.800701] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[10:31:57.800767] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.800874] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.800886] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.800928] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.800946] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.800993] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.801010] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.801024] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[10:31:57.801033] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[10:31:57.801129] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[10:31:57.801166] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[10:31:57.801178] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[10:31:57.801188] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[10:31:57.801197] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.801245] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[10:31:57.801264] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.801320] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.801333] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.801348] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.801359] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.801463] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[10:31:57.801510] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.801524] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.801683] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[10:31:57.801700] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[10:31:57.801711] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[10:31:57.801720] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.801734] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[10:31:57.801760] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.801802] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[10:31:57.801837] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.801866] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[10:31:57.801877] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[36m[10:31:57.801894] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.802011] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.802063] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.802105] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[10:31:57.802144] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.802208] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.802222] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.802247] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.802259] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.802265] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.802335] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.802418] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.802432] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:31:57.802449] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.802462] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.802488] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[10:31:57.802500] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[32m[10:31:57.802568] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[10:31:57.802715] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(27) as root operator.[m
[36m[10:31:57.802782] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[10:31:57.802956] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[10:31:57.803041] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.39:34345 1::55::0::0}) as new root of the plan.[m
[36m[10:31:57.803115] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.803127] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.803215] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[10:31:57.803296] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.803416] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.803429] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.803458] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.803471] [D] [thread 22013] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[10:31:57.803529] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.803561] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.803578] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:31:57.803587] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:31:57.803697] [D] [thread 22013] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[10:31:57.803753] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[10:31:57.803769] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[10:31:57.803779] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[10:31:57.803788] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.803820] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.803837] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.803895] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.803908] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.803922] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.803933] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.804073] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[10:31:57.804122] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.804137] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.804320] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.804339] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:31:57.804351] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:31:57.804360] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.804388] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:31:57.804430] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.804477] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[10:31:57.804513] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.804541] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[10:31:57.804552] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[36m[10:31:57.804568] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.804686] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.804742] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.804783] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[10:31:57.804826] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.804894] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.804910] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.804935] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.804948] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.804954] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.805040] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.805125] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.805139] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:31:57.805159] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.805175] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.805208] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[10:31:57.805221] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[32m[10:31:57.805306] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[10:31:57.805500] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(28) as root operator.[m
[36m[10:31:57.805592] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.805651] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.805663] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:31:57.805820] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[10:31:57.805926] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.38:41885 1::61::0::0}) as new root of the plan.[m
[36m[10:31:57.805943] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.805951] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.806051] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[10:31:57.806194] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(66: {NetworkSinkDescriptor(partition=1::64::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.806339] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.806355] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.806396] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.806415] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.806470] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.806492] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.806510] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:31:57.806519] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:31:57.806592] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:31:57.806628] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[10:31:57.806641] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[10:31:57.806652] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[10:31:57.806662] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.806706] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.806723] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.806793] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.806806] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.806822] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.806834] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.806953] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[36m[10:31:57.807003] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.807018] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.807204] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.807223] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:31:57.807233] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:31:57.807243] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.807256] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:31:57.807284] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.807327] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[10:31:57.807363] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.807390] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[10:31:57.807401] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[36m[10:31:57.807418] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.807538] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.807596] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.807641] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[10:31:57.807684] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.807749] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.807778] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.807807] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.807819] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.807826] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.807898] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.807995] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.808022] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:31:57.808041] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.808056] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.808085] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[10:31:57.808098] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[32m[10:31:57.808174] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[10:31:57.808331] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(29) as root operator.[m
[36m[10:31:57.808405] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.808452] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.808465] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:31:57.808593] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[10:31:57.808675] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.37:39441 1::67::0::0}) as new root of the plan.[m
[36m[10:31:57.808690] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.808697] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.808777] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[10:31:57.808884] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.809001] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.809014] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.809041] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.809057] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.809102] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.809119] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.809133] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:31:57.809155] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:31:57.809217] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:31:57.809248] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[10:31:57.809260] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[10:31:57.809271] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[10:31:57.809280] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.809315] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.809330] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.809437] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.809452] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.809468] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.809481] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.809587] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[10:31:57.809632] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.809647] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.809830] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.809849] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:31:57.809860] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:31:57.809869] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.809884] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:31:57.809911] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.809954] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[10:31:57.809988] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.810030] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 30 exists in the query plan or not[m
[36m[10:31:57.810041] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 30 in the query plan[m
[36m[10:31:57.810059] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.810177] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.810238] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.810297] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 7 source operators.[m
[36m[10:31:57.810343] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.810409] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.810424] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.810449] [D] [thread 22013] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[10:31:57.810460] [D] [thread 22013] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[10:31:57.810467] [D] [thread 22013] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[10:31:57.810539] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.810612] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.810624] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:31:57.810640] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.810665] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.810694] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 30 exists in the query plan or not[m
[36m[10:31:57.810706] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 30 in the query plan[m
[32m[10:31:57.810780] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[10:31:57.810932] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(30) as root operator.[m
[36m[10:31:57.811004] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.811050] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.811062] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[10:31:57.811191] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[10:31:57.811273] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.36:39547 1::73::0::0}) as new root of the plan.[m
[36m[10:31:57.811288] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.811296] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:57.811370] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[10:31:57.811488] [D] [thread 22013] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.30:44297)}) as new root of the plan.[m
[36m[10:31:57.811608] [D] [thread 22013] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:57.811620] [D] [thread 22013] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:57.811648] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.811666] [D] [thread 22013] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[10:31:57.811713] [D] [thread 22013] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.811730] [D] [thread 22013] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[10:31:57.811745] [W] [thread 22013] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[10:31:57.811754] [D] [thread 22013] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[10:31:57.811816] [D] [thread 22013] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[10:31:57.811847] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[10:31:57.811860] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[10:31:57.811869] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[10:31:57.811879] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.811911] [D] [thread 22013] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[10:31:57.811927] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.812015] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.812031] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.812047] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.812070] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[10:31:57.812174] [I] [thread 22013] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[10:31:57.812217] [D] [thread 22013] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[10:31:57.812231] [D] [thread 22013] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[10:31:57.812412] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[10:31:57.812429] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[10:31:57.812440] [D] [thread 22013] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[10:31:57.812450] [D] [thread 22013] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[10:31:57.812464] [D] [thread 22013] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[10:31:57.812521] [D] [thread 22013] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[10:31:57.812557] [D] [thread 22013] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[10:31:57.812579] [D] [thread 22013] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[10:31:57.812590] [D] [thread 22013] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[10:31:57.812605] [D] [thread 22013] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[10:31:57.812624] [D] [thread 22013] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[10:31:57.812690] [D] [thread 22013] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[10:31:57.812711] [D] [thread 22013] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:31:57.812732] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.812747] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.812975] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.813025] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.813059] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.813103] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.813128] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.813868] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.814167] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.814336] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.814460] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.814511] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.814538] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.814720] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.814773] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.814807] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.814848] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.814870] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.815556] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.815822] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.815919] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.816106] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.816163] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.816180] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.816347] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.816386] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.816416] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.816455] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.816475] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.817158] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.817436] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.817535] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.817637] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.817682] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.817698] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.817882] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.817923] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.817954] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.817992] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.818013] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.818652] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.818954] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.819061] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.819170] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.819220] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.819250] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.819419] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.819470] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.819503] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.819542] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.819563] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.820278] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.820584] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.820688] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.820797] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.820848] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.820865] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.821030] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.821072] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.821103] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.821140] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.821160] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.821834] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.822103] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.822221] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.822357] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.822405] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.822423] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.822589] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.822629] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.822660] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.822698] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.822719] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.823388] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.823703] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.823807] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.823990] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.824044] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.824060] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.824232] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.824273] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.824304] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.824344] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.824381] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.825066] [D] [thread 22013] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[10:31:57.825366] [I] [thread 22013] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[10:31:57.825469] [I] [thread 22013] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.825578] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.825626] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.825643] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.825848] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.825904] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.825993] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[10:31:57.826040] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.826065] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.826289] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.826327] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.826353] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.826471] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.826501] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.826526] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.826552] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.826571] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.826698] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.826790] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.826814] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.826837] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.826859] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.826889] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.827052] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.827152] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.827178] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.827200] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.827227] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.827245] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.827363] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.827449] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.827474] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.827495] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.827517] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.827535] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.827659] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.827692] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.827707] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.827798] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.827823] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.827845] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.827868] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.827885] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.828032] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.828137] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.828163] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.828186] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.828210] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.828228] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.828383] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.828475] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.828500] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.828523] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.828547] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.828576] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.828689] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.828773] [D] [thread 22013] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[10:31:57.828798] [D] [thread 22013] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[10:31:57.828819] [D] [thread 22013] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[10:31:57.828841] [D] [thread 22013] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[10:31:57.828858] [D] [thread 22013] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[10:31:57.828966] [D] [thread 22013] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[10:31:57.829029] [D] [thread 22013] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[10:31:57.831369] [D] [thread 22013] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.30, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:9)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::34::0::0})
|    SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::40::0::0})
|    SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::46::0::0})
|    SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::52::0::0})
|    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::58::0::0})
|    SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::64::0::0})
|    SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::70::0::0})
|    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::76::0::0})
|--ExecutionNode(id:2, ip:192.168.2.10, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.35:43245 1::31::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.34:43363 1::37::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.33:33057 1::43::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.32:37323 1::49::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:37525)})
|  |  |    CENTRALWINDOW(23)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.10:37525)})
|  |  |    CENTRALWINDOW(24)
|  |  |      WATERMARKASSIGNER(12)
|  |  |        SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.10:37525)})
|  |  |    CENTRALWINDOW(25)
|  |  |      WATERMARKASSIGNER(10)
|  |  |        SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.10:37525)})
|  |  |    CENTRALWINDOW(26)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.39:34345 1::55::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  SINK(66: {NetworkSinkDescriptor(partition=1::64::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.38:41885 1::61::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.37:39441 1::67::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.30:44297)})
|  |    SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.36:39547 1::73::0::0})
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(57: {NetworkSinkDescriptor(partition=1::55::0::0;nodeLocation=tcp://192.168.2.31:38035)})
|  |  |    CENTRALWINDOW(27)
|  |  |      WATERMARKASSIGNER(22)
|  |  |        SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(63: {NetworkSinkDescriptor(partition=1::61::0::0;nodeLocation=tcp://192.168.2.31:38035)})
|  |  |    CENTRALWINDOW(28)
|  |  |      WATERMARKASSIGNER(20)
|  |  |        SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(69: {NetworkSinkDescriptor(partition=1::67::0::0;nodeLocation=tcp://192.168.2.31:38035)})
|  |  |    CENTRALWINDOW(29)
|  |  |      WATERMARKASSIGNER(18)
|  |  |        SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(75: {NetworkSinkDescriptor(partition=1::73::0::0;nodeLocation=tcp://192.168.2.31:38035)})
|  |  |    CENTRALWINDOW(30)
|  |  |      WATERMARKASSIGNER(16)
|  |  |        SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.831503] [D] [thread 22013] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[10:31:57.831534] [D] [thread 22013] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:31:57.831810] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.831834] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832078] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832101] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832165] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832178] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832213] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832234] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832282] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832294] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832328] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832348] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832384] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832396] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832429] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832483] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832538] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832550] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832599] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832612] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832693] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832705] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.832918] [D] [thread 22013] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[10:31:57.832951] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[10:31:57.832961] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.832971] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.833184] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:33923[m
[36m[10:31:57.833227] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:33923 queryId=1 querySubPlanId = 1[m
[36m[10:31:57.833502] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:37525)})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.833539] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.833794] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.837436] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.838277] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.838598] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.838753] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.839389] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.840481] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.840794] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.840904] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.840946] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.841008] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.841622] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.842115] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.842324] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.842459] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.842975] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.843066] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.843397] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.843868] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.844238] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.844701] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.845287] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.845611] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.846109] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.846765] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.847327] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.847710] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.848276] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.861781] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[10:31:57.861819] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.861837] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.861970] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:33935[m
[36m[10:31:57.862000] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:33935 queryId=1 querySubPlanId = 2[m
[36m[10:31:57.862216] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.10:37525)})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.862255] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.862414] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.862658] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.862827] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.862993] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.863126] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.863518] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.863640] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.863789] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.863885] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.863924] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.864058] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:57.864185] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.864560] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.865039] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.865242] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.865378] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.865792] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.865877] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.866163] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.866634] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.866950] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.867409] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.867866] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.868141] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.868642] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.869120] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.869596] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.869912] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.870372] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.880733] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[10:31:57.880770] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.880788] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.880920] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:40301[m
[36m[10:31:57.880951] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:40301 queryId=1 querySubPlanId = 3[m
[36m[10:31:57.881162] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.10:37525)})
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.881200] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.881378] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.881626] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.881797] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.881948] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.882074] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.882456] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.882577] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.882721] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.882801] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.882835] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.882952] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.883310] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.883785] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.884030] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.884180] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.884595] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.884678] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.884959] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.885426] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.885736] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.886188] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.886655] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.886897] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.887376] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.887849] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.888365] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.888688] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.889145] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.899439] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[10:31:57.899476] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.899493] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.899632] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:37993[m
[36m[10:31:57.899662] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:37993 queryId=1 querySubPlanId = 4[m
[36m[10:31:57.899879] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.10:37525)})
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.899915] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.900115] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.900358] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.900528] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.900679] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.900807] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.901183] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.901301] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.901447] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.901528] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.901562] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.901625] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.901983] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.902451] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.902645] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.902773] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.903170] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.903252] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.903530] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.904060] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.904391] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.904843] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.905326] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.905572] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.906055] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.906531] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.907002] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.907305] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.907765] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.918092] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[10:31:57.918126] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.918144] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.918271] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:38565[m
[36m[10:31:57.918316] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:38565 queryId=1 querySubPlanId = 5[m
[36m[10:31:57.918528] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(57: {NetworkSinkDescriptor(partition=1::55::0::0;nodeLocation=tcp://192.168.2.31:38035)})
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.918565] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.918715] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.918957] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.919123] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.919291] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.919426] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.919818] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.919968] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.920126] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.920210] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.920243] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.920299] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.920654] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.921135] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.921334] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.921460] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.921859] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.921936] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.922216] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.922688] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.923007] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.923459] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.923927] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.924250] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.924743] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.925219] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.925688] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.925999] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.926472] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.936783] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[10:31:57.936817] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.936836] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.936964] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:34293[m
[36m[10:31:57.936994] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:34293 queryId=1 querySubPlanId = 6[m
[36m[10:31:57.937203] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(63: {NetworkSinkDescriptor(partition=1::61::0::0;nodeLocation=tcp://192.168.2.31:38035)})
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.937240] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.937417] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.937657] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.937824] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.937971] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.938104] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.938483] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.938612] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.938775] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.938871] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.938905] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.938963] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.939314] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.939808] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.940055] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.940211] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.940639] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.940746] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.941030] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.941512] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.941846] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.942319] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.942801] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.943061] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.943560] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.944095] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.944579] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.944908] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.945381] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.954705] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[10:31:57.954791] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.954818] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.954941] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:41837[m
[36m[10:31:57.954971] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:41837 queryId=1 querySubPlanId = 7[m
[36m[10:31:57.955183] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(69: {NetworkSinkDescriptor(partition=1::67::0::0;nodeLocation=tcp://192.168.2.31:38035)})
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.955218] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.955439] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.955686] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.955867] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.956074] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.956225] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.956658] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.956820] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.956977] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.957084] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.957120] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.957182] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.957539] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.958044] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.958272] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.958428] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.958857] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.958959] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.959241] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.959738] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.960108] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.960591] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.961077] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.961338] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.961834] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.962321] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.962801] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.963130] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.963608] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.973004] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[10:31:57.973128] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.973151] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.973277] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:40763[m
[36m[10:31:57.973306] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:40763 queryId=1 querySubPlanId = 8[m
[36m[10:31:57.973517] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(75: {NetworkSinkDescriptor(partition=1::73::0::0;nodeLocation=tcp://192.168.2.31:38035)})
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[10:31:57.973598] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.973764] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.974002] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.974191] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.974338] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.974487] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.974871] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[10:31:57.975004] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.975145] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.975219] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.975266] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[10:31:57.975327] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.975682] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.976233] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.976461] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.976614] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.977042] [D] [thread 22013] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[10:31:57.977146] [D] [thread 22013] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[10:31:57.977423] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.977924] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.978262] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.978738] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.979211] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[10:31:57.979473] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.980007] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.980503] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.980997] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.981331] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[10:31:57.981808] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.991235] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[10:31:57.991321] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:57.991343] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:57.991461] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:40207[m
[36m[10:31:57.991491] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:40207 queryId=1 querySubPlanId = 9[m
[36m[10:31:57.991842] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::34::0::0})
  SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::40::0::0})
  SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::46::0::0})
  SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::52::0::0})
  SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::58::0::0})
  SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::64::0::0})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::70::0::0})
  SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::76::0::0})
[m
[36m[10:31:57.991881] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:57.992074] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:57.992414] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.992611] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.992769] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.992936] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.993339] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::34::0::0}[m
[36m[10:31:57.993498] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.993707] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.994034] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.994232] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.994381] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.994531] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.994884] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::40::0::0}[m
[36m[10:31:57.995000] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.995147] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.995408] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.995558] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.995695] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.995841] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.996248] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::46::0::0}[m
[36m[10:31:57.996369] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.996524] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.996786] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.996933] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.997063] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.997218] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.997602] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::52::0::0}[m
[36m[10:31:57.997720] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.997870] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.998120] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.998271] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.998397] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.998543] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.998875] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::58::0::0}[m
[36m[10:31:57.998986] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.999132] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.999374] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.999524] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:57.999654] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:57.999791] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.000180] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::64::0::0}[m
[36m[10:31:58.000295] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.000448] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.000683] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.000836] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.000964] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.001087] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.001415] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::70::0::0}[m
[36m[10:31:58.001529] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.001673] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.001907] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.002057] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.002185] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.002311] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.002633] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::76::0::0}[m
[36m[10:31:58.002742] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.002884] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.003128] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.003283] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.003418] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.003560] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.012662] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[10:31:58.012750] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:58.012817] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:58.012957] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.10:35843[m
[36m[10:31:58.012998] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:35843 queryId=1 querySubPlanId = 10[m
[36m[10:31:58.013205] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.35:43245 1::31::0::0})
[m
[36m[10:31:58.013241] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.013397] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.013640] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.013838] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.014003] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.014156] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.014540] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:43245 1::31::0::0}[m
[36m[10:31:58.014662] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.014812] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.015082] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.015239] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.015365] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.015514] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.021377] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:35843 queryId=1 querySubPlanId = 11[m
[36m[10:31:58.021651] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.34:43363 1::37::0::0})
[m
[36m[10:31:58.021692] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.021846] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.022105] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.022295] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.022461] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.022612] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.022969] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:43363 1::37::0::0}[m
[36m[10:31:58.023087] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.023235] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.023477] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.023629] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.023758] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.023884] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.029575] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:35843 queryId=1 querySubPlanId = 12[m
[36m[10:31:58.029854] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.33:33057 1::43::0::0})
[m
[36m[10:31:58.029891] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.030045] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.030289] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.030476] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.030638] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.030795] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.031176] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:33057 1::43::0::0}[m
[36m[10:31:58.031304] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.031462] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.031735] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.031891] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.032062] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.032211] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.037793] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:35843 queryId=1 querySubPlanId = 13[m
[36m[10:31:58.038071] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.32:37323 1::49::0::0})
[m
[36m[10:31:58.038132] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.038326] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.038570] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.038756] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.038915] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.039061] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.039415] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:37323 1::49::0::0}[m
[36m[10:31:58.039536] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.039686] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.039980] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.040136] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.040277] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.040417] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.046026] [D] [thread 22013] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[10:31:58.046108] [D] [thread 22013] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[10:31:58.046130] [D] [thread 22013] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[10:31:58.046240] [D] [thread 22013] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:45373[m
[36m[10:31:58.046269] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45373 queryId=1 querySubPlanId = 14[m
[36m[10:31:58.046463] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.39:34345 1::55::0::0})
[m
[36m[10:31:58.046493] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.046643] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.046884] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.047047] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.047195] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.047322] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.047672] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:34345 1::55::0::0}[m
[36m[10:31:58.047797] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.048006] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.048282] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.048435] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.048559] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.048701] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.054360] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45373 queryId=1 querySubPlanId = 15[m
[36m[10:31:58.054676] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(66: {NetworkSinkDescriptor(partition=1::64::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.38:41885 1::61::0::0})
[m
[36m[10:31:58.054731] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.054921] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.055167] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.055352] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.055510] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.055652] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.056052] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:41885 1::61::0::0}[m
[36m[10:31:58.056172] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.056326] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.056575] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.056724] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.056839] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.056980] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.062619] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45373 queryId=1 querySubPlanId = 16[m
[36m[10:31:58.062893] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.37:39441 1::67::0::0})
[m
[36m[10:31:58.062935] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.063089] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.063347] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.063534] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.063694] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.063835] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.064261] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:39441 1::67::0::0}[m
[36m[10:31:58.064386] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.064543] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.064805] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.064960] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.065082] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.065228] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.070849] [D] [thread 22013] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45373 queryId=1 querySubPlanId = 17[m
[36m[10:31:58.071124] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.30:44297)})
  SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.36:39547 1::73::0::0})
[m
[36m[10:31:58.071197] [D] [thread 22013] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[10:31:58.071356] [D] [thread 22013] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[10:31:58.071596] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.071785] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.072004] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.072166] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.072545] [D] [thread 22013] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:39547 1::73::0::0}[m
[36m[10:31:58.072664] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.072815] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.073077] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.073236] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.073371] [D] [thread 22013] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.073518] [D] [thread 22013] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[10:31:58.079203] [D] [thread 22013] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[10:31:58.479694] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:58.480066] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:31:58.867860] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.868092] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.868628] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.868844] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[10:31:58.868931] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.869345] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.869418] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.869771] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.871209] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.871321] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.871737] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.871890] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[10:31:58.871990] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.872403] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.872466] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.872817] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.874190] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.874300] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.874710] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.874866] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 81[m
[36m[10:31:58.874938] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.875325] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.875384] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.875724] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.877124] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.877236] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.877654] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.877807] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[10:31:58.877877] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.878281] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.878341] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.878686] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.880047] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.880150] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.880545] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.880697] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 83[m
[36m[10:31:58.880764] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.881149] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.881209] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.881537] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.882816] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.882922] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.883312] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.883465] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[10:31:58.883526] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.883893] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.883975] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.884318] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.885609] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.885715] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.886099] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.886246] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[36m[10:31:58.886301] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.886663] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.886720] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.887035] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.888362] [D] [thread 22025] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[10:31:58.888498] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.888896] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.889045] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 86[m
[36m[10:31:58.889110] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.889487] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.889542] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.889862] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[10:31:58.891063] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 87[m
[36m[10:31:58.891162] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.891552] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.891610] [D] [thread 22025] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[10:31:58.891934] [D] [thread 22025] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[10:31:58.893774] [D] [thread 22025] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(87: {FileSinkDescriptor()})
  SOURCE(80,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::34::0::0})
  SOURCE(84,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::40::0::0})
  SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::46::0::0})
  SOURCE(83,,NetworkSourceDescriptor{tcp://192.168.2.10:37525 1::52::0::0})
  SOURCE(86,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::58::0::0})
  SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::64::0::0})
  SOURCE(85,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::70::0::0})
  SOURCE(81,,NetworkSourceDescriptor{tcp://192.168.2.31:38035 1::76::0::0})
[m
[32m[10:31:58.893852] [I] [thread 22025] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 9 [m
[32m[10:31:58.893976] [I] [thread 22025] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[10:31:58.894415] [D] [thread 22025] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 9[m
[36m[10:31:58.894480] [D] [thread 22025] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 1. LogicalQueryPlan[m
[36m[10:31:58.894521] [D] [thread 22025] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 9 for context QueryCompilation-1-9-2023-10-26 10:31:58 and scope 1. LogicalQueryPlan[m
[32m[10:31:58.896360] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[32m[10:31:58.896511] [I] [thread 22025] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:31:58.896529] [I] [thread 22025] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[10:31:58.896536] [I] [thread 22025] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:31:58.896555] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896564] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896573] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896593] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896603] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896612] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896620] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896628] [I] [thread 22025] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:31:58.896711] [I] [thread 22025] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.897314] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[10:31:58.897470] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[10:31:58.897487] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.897494] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[10:31:58.897571] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.897584] [D] [thread 22025] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[10:31:58.897626] [D] [thread 22025] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[10:31:58.897644] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.897777] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[10:31:58.897880] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.897903] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.897959] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.897969] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.897983] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.898074] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.898090] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.898146] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[10:31:58.898215] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.898240] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.898277] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.898285] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.898295] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.898367] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.898381] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.898423] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[10:31:58.898480] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.898496] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.898533] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.898541] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.898550] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.898618] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.898633] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.898674] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[10:31:58.898729] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.898745] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.898784] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.898792] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.898802] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.898872] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.898886] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.898926] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[10:31:58.898980] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.898996] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.899036] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.899044] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.899053] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.899121] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.899135] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.899175] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[10:31:58.899230] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.899247] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.899292] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.899299] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.899308] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.899375] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.899390] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.899424] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[10:31:58.899480] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.899496] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.899539] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.899547] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.899555] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.899619] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.899634] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[10:31:58.899666] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[10:31:58.899708] [D] [thread 22025] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[10:31:58.899723] [D] [thread 22025] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[10:31:58.899767] [I] [thread 22025] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[10:31:58.899775] [I] [thread 22025] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:31:58.899783] [I] [thread 22025] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[10:31:58.899844] [D] [thread 22025] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[10:31:58.899867] [D] [thread 22025] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[10:31:58.900037] [D] [thread 22025] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 2. PhysicalQueryPlan[m
[36m[10:31:58.900069] [D] [thread 22025] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 9 for context QueryCompilation-1-9-2023-10-26 10:31:58 and scope 2. PhysicalQueryPlan[m
[36m[10:31:58.900937] [D] [thread 22025] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 9[m
[32m[10:31:58.901291] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 89[m
[36m[10:31:58.901469] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[10:31:58.901485] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.901493] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.901899] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[10:31:58.902009] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902022] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902044] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902135] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[10:31:58.902200] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902212] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902218] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902280] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[10:31:58.902337] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902348] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902355] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902411] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[10:31:58.902463] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902474] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902480] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902535] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[10:31:58.902588] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902599] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902605] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902657] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[10:31:58.902710] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902721] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902727] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902778] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[10:31:58.902830] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902840] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902846] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[10:31:58.902899] [I] [thread 22025] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[10:31:58.902951] [D] [thread 22025] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[10:31:58.902962] [D] [thread 22025] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[10:31:58.902968] [D] [thread 22025] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[10:31:58.903035] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 3. AfterPipelinedQueryPlan[m
[36m[10:31:58.903072] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[36m[10:31:58.904252] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 4. AfterAddScanAndEmitPhase[m
[36m[10:31:58.904300] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[36m[10:31:58.905452] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 5. GeneratableOperators[m
[36m[10:31:58.905498] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[36m[10:31:58.906629] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 6. BufferOptimizationPhase[m
[36m[10:31:58.906678] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::76::0::0[m
[36m[10:31:58.906711] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[32m[10:31:58.906764] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::76::0::0(threadId=0) Data[m
[33m[1m[10:31:58.906885] [W] [thread 22022] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::76::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:31:58.906966] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::76::0::0[m
[33m[1m[10:31:58.907185] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::76::0::0[m
[36m[10:31:58.907861] [D] [thread 22025] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[10:31:58.907926] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 7. PredicationOptimizationPhase[m
[36m[10:31:58.907976] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[36m[10:31:58.908985] [D] [thread 22025] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 9[m
[36m[10:31:58.909047] [D] [thread 22025] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 10:31:58 - 8. ExecutableOperatorPlan[m
[36m[10:31:58.909067] [D] [thread 22025] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 10:31:58[m
[36m[10:31:58.909932] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::40::0::0[m
[32m[10:31:58.910026] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::40::0::0(threadId=0) Data[m
[33m[1m[10:31:58.910093] [W] [thread 22022] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::40::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:31:58.910131] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::40::0::0[m
[33m[1m[10:31:58.910256] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::40::0::0[m
[32m[10:31:58.910322] [I] [thread 22025] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 15.3221 ms
DefaultQueryCompiler_LogicalQueryPlan:	1.6127 ms
DefaultQueryCompiler_PhysicalQueryPlan:	4.73387 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	3.24139 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	1.17239 ms
DefaultQueryCompiler_GeneratableOperators:	1.13356 ms
DefaultQueryCompiler_BufferOptimizationPhase:	1.21219 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	1.09773 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	1.11313 ms[m
[36m[10:31:58.910671] [D] [thread 22025] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  89[m
[32m[10:31:58.910761] [I] [thread 22025] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[10:31:58.911144] [D] [thread 22025] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpWithMonitoringSourceThreeLevel.out[m
[32m[10:31:58.911796] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.912516] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  34 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.913469] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.913805] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  40 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.914172] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.914412] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  46 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.914715] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.914956] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  52 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.915248] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.915478] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  58 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.915761] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.916031] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  64 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.916366] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.916624] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  70 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[10:31:58.916941] [I] [thread 22025] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[10:31:58.917195] [D] [thread 22025] [DataSource.cpp:75] [DataSource] DataSource  76 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[10:31:58.918241] [D] [thread 22025] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 9[m
[36m[10:31:58.918442] [D] [thread 22025] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  9  as a singleton[m
[36m[10:31:58.918466] [D] [thread 22025] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=9[m
[36m[10:31:58.918509] [D] [thread 22025] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 8[m
[36m[10:31:58.918543] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  34  not found. Creating new element with with qep [m
[36m[10:31:58.918797] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  40  not found. Creating new element with with qep [m
[36m[10:31:58.918850] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  46  not found. Creating new element with with qep [m
[36m[10:31:58.918871] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  52  not found. Creating new element with with qep [m
[36m[10:31:58.918890] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  58  not found. Creating new element with with qep [m
[36m[10:31:58.918909] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  64  not found. Creating new element with with qep [m
[36m[10:31:58.918927] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  70  not found. Creating new element with with qep [m
[36m[10:31:58.918949] [D] [thread 22025] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  76  not found. Creating new element with with qep [m
2023-10-26 10:31:58.919 setup: queryId=1, querySubPlanId=9; 
[36m[10:31:58.918987] [D] [thread 22025] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 9  pair queryId= 1  subplanId= 9[m
[36m[10:31:58.919016] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::76::0::0[m
2023-10-26 10:31:58.919 start: queryId=1, querySubPlanId=9; 
[32m[10:31:58.919066] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::76::0::0(threadId=0) Data[m
[33m[1m[10:31:58.919116] [W] [thread 22022] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::76::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[10:31:58.919147] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::76::0::0[m
[33m[1m[10:31:58.919265] [W] [thread 22022] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::76::0::0[m
[36m[10:31:58.919409] [D] [thread 22025] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=9[m
[36m[10:31:58.919516] [D] [thread 22025] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=9[m
[36m[10:31:58.919848] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::34::0::0 from 192.168.2.10[m
[36m[10:31:58.920171] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::34::0::0=1[m
[36m[10:31:58.920205] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5801da10  started successfully[m
[36m[10:31:58.920256] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::40::0::0 from 192.168.2.10[m
[36m[10:31:58.920314] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::40::0::0=1[m
[36m[10:31:58.920332] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5801e100  started successfully[m
[36m[10:31:58.920363] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::46::0::0 from 192.168.2.10[m
[36m[10:31:58.920399] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::46::0::0=1[m
[36m[10:31:58.920412] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5801ea30  started successfully[m
[36m[10:31:58.920440] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::52::0::0 from 192.168.2.10[m
[36m[10:31:58.920475] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::52::0::0=1[m
[36m[10:31:58.920488] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5801f600  started successfully[m
[36m[10:31:58.920515] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::58::0::0 from 192.168.2.31[m
[36m[10:31:58.920548] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::58::0::0=1[m
[36m[10:31:58.920561] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff58020130  started successfully[m
[36m[10:31:58.920588] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::64::0::0 from 192.168.2.31[m
[36m[10:31:58.920622] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::64::0::0=1[m
[36m[10:31:58.920635] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff58020c90  started successfully[m
[36m[10:31:58.920676] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::70::0::0 from 192.168.2.31[m
[36m[10:31:58.920712] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::70::0::0=1[m
[36m[10:31:58.920726] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff580217a0  started successfully[m
[36m[10:31:58.920754] [D] [thread 22025] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::76::0::0 from 192.168.2.31[m
[36m[10:31:58.920791] [D] [thread 22025] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::76::0::0=1[m
[36m[10:31:58.920804] [D] [thread 22025] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff58022300  started successfully[m
[36m[10:31:58.920855] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.920981] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.921327] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.922138] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::40::0::0[m
[36m[10:31:58.922174] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::34::0::0[m
[32m[10:31:58.922217] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::40::0::0(threadId=0) Data[m
[36m[10:31:58.922314] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::40::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.922470] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::34::0::0[m
[36m[10:31:58.922780] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.922811] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5801da10  started successfully[m
[36m[10:31:58.922856] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.922924] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.923061] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.923384] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::40::0::0[m
[36m[10:31:58.923513] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::40::0::0[m
[36m[10:31:58.923665] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.923688] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5801e100  started successfully[m
[36m[10:31:58.923720] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.923774] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.923876] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.924160] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::46::0::0[m
[36m[10:31:58.924248] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::46::0::0[m
[36m[10:31:58.924355] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.924372] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5801ea30  started successfully[m
[36m[10:31:58.924401] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.924455] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.924538] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.924759] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:31:58.924833] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:31:58.924926] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.924943] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5801f600  started successfully[m
[36m[10:31:58.924972] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:58 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.925038] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.925126] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.925349] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::58::0::0[m
[36m[10:31:58.925424] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::58::0::0[m
[36m[10:31:58.925521] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:58 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.925539] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff58020130  started successfully[m
[36m[10:31:58.925568] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:64 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.925616] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.925694] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.925894] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::64::0::0[m
[36m[10:31:58.925964] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::64::0::0[m
[36m[10:31:58.926063] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:64 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.926082] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff58020c90  started successfully[m
[36m[10:31:58.926121] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.926168] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.926242] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.926443] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::70::0::0[m
[36m[10:31:58.926517] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::70::0::0[m
[36m[10:31:58.926612] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.926629] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff580217a0  started successfully[m
[36m[10:31:58.926669] [D] [thread 22025] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:76 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.926718] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.926793] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[10:31:58.926993] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::76::0::0[m
[36m[10:31:58.927065] [D] [thread 22025] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::76::0::0[m
[36m[10:31:58.927154] [D] [thread 22025] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:76 PartitionId: 0 SubpartitionID: 0[m
[36m[10:31:58.927179] [D] [thread 22025] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff58022300  started successfully[m
[36m[10:31:58.927305] [D] [thread 22025] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:31:58.927591] [D] [thread 22025] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  9  succeeded[m
[36m[10:31:58.927690] [D] [thread 22025] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[10:31:58.934381] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::46::0::0[m
[32m[10:31:58.934481] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::46::0::0(threadId=0) Data[m
[36m[10:31:58.934549] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::46::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.940722] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::76::0::0[m
[32m[10:31:58.940860] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::76::0::0(threadId=0) Data[m
[36m[10:31:58.940924] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::76::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.942011] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::52::0::0[m
[32m[10:31:58.942098] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::52::0::0(threadId=0) Data[m
[36m[10:31:58.942158] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::52::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.949728] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::64::0::0[m
[32m[10:31:58.949852] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::64::0::0(threadId=0) Data[m
[36m[10:31:58.949945] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::64::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.951128] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::34::0::0[m
[32m[10:31:58.951229] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::34::0::0(threadId=0) Data[m
[36m[10:31:58.951303] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::34::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.958767] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::70::0::0[m
[32m[10:31:58.958870] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::70::0::0(threadId=0) Data[m
[36m[10:31:58.958941] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::70::0::0(threadId=0) REGISTERED[m
[36m[10:31:58.966196] [D] [thread 22022] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): ClientAnnouncement received for channel 0:1::58::0::0[m
[32m[10:31:58.966321] [I] [thread 22022] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::58::0::0(threadId=0) Data[m
[36m[10:31:58.966407] [D] [thread 22022] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::58::0::0(threadId=0) REGISTERED[m
[36m[10:31:59.481281] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:00.196514] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:00.196970] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:01.198207] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:01.394262] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:01.394702] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:01.395817] [D] [thread 22081] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:01.395970] [I] [thread 22081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:01.395992] [I] [thread 22081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:01.396230] [I] [thread 22081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:01.396266] [I] [thread 22081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:01.607611] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:01.608110] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:02.609342] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:03.610664] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:03.750524] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:03.750841] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:03.751874] [D] [thread 22086] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:03.751998] [I] [thread 22086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:03.752019] [I] [thread 22086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:03.752135] [I] [thread 22086] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:03.752148] [I] [thread 22086] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:03.951598] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:03.952084] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:04.953343] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:05.954625] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:06.098766] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:06.099324] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:06.100137] [D] [thread 22091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:06.100225] [I] [thread 22091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:06.100244] [I] [thread 22091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:06.100361] [I] [thread 22091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:06.100373] [I] [thread 22091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:06.268595] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:06.269077] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:07.270360] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:08.271674] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:08.322592] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:08.323106] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:08.324057] [D] [thread 22096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:08.324146] [I] [thread 22096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:08.324164] [I] [thread 22096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:08.324283] [I] [thread 22096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:08.324296] [I] [thread 22096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:08.509248] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:08.509700] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:09.511008] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:10.499587] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:10.500204] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:10.500951] [D] [thread 22101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:10.501044] [I] [thread 22101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:10.501061] [I] [thread 22101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:10.501177] [I] [thread 22101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:10.501189] [I] [thread 22101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:10.715363] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:10.715684] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:11.716961] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:12.718182] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:12.823107] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:12.823444] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:12.824502] [D] [thread 22107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:12.824599] [I] [thread 22107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:12.824616] [I] [thread 22107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:12.824733] [I] [thread 22107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:12.824756] [I] [thread 22107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:12.990641] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:12.990974] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:13.992164] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:14.993567] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:15.025549] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:15.026003] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:15.026849] [D] [thread 22112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:15.026943] [I] [thread 22112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:15.026960] [I] [thread 22112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:15.027079] [I] [thread 22112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:15.027093] [I] [thread 22112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:15.227387] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:15.227828] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:16.229075] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:17.230396] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:17.259967] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:17.260296] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:17.261888] [D] [thread 22117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:17.261980] [I] [thread 22117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:17.261997] [I] [thread 22117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:17.262116] [I] [thread 22117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:17.262129] [I] [thread 22117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:17.485573] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:17.485893] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:18.487135] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:19.488474] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:19.596407] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:19.596719] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:19.597717] [D] [thread 22123] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:19.597810] [I] [thread 22123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:19.597827] [I] [thread 22123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:19.597942] [I] [thread 22123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:19.597955] [I] [thread 22123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:19.802738] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:19.803081] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:20.804385] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:21.805651] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:21.866567] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:21.866907] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:21.867871] [D] [thread 22128] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:21.867990] [I] [thread 22128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:21.868011] [I] [thread 22128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:21.868127] [I] [thread 22128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:21.868140] [I] [thread 22128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:22.053640] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:22.054159] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:23.055533] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:24.056855] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:24.199275] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:24.199816] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:24.200677] [D] [thread 22133] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:24.200767] [I] [thread 22133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:24.200785] [I] [thread 22133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:24.200901] [I] [thread 22133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:24.200913] [I] [thread 22133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:24.366599] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:24.367144] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:25.368415] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:26.369726] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:26.476075] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:26.476382] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:26.477495] [D] [thread 22138] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:26.477589] [I] [thread 22138] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:26.477606] [I] [thread 22138] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:26.477721] [I] [thread 22138] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:26.477740] [I] [thread 22138] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:26.680100] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:26.680422] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:27.681644] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:28.683001] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:28.824521] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:28.824835] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:28.825857] [D] [thread 22143] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:28.825956] [I] [thread 22143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:28.825973] [I] [thread 22143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:28.826088] [I] [thread 22143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:28.826170] [I] [thread 22143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:29.025794] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:29.026265] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:30.027476] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:31.028293] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:31.088585] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:31.088960] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:31.090327] [D] [thread 22148] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:31.090431] [I] [thread 22148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:31.090450] [I] [thread 22148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:31.090580] [I] [thread 22148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:31.090595] [I] [thread 22148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:31.280715] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:31.281032] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:32.282241] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:33.283556] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:33.385445] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:33.385777] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:33.387308] [D] [thread 22153] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:33.387400] [I] [thread 22153] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:33.387416] [I] [thread 22153] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:33.387533] [I] [thread 22153] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:33.387547] [I] [thread 22153] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:33.644272] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:33.644611] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:34.645811] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:35.647040] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:35.785613] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:35.785953] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:35.786940] [D] [thread 22158] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:35.787036] [I] [thread 22158] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:35.787052] [I] [thread 22158] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:35.787168] [I] [thread 22158] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:35.787192] [I] [thread 22158] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:35.943006] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:35.943346] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:36.944630] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:37.937195] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:37.937503] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:37.938537] [D] [thread 22164] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:37.938633] [I] [thread 22164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:37.938649] [I] [thread 22164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:37.938767] [I] [thread 22164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:37.938789] [I] [thread 22164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:38.133696] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:38.134032] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:39.135247] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:40.136090] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:40.272352] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:40.272691] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:40.273862] [D] [thread 22169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:40.273957] [I] [thread 22169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:40.273974] [I] [thread 22169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:40.274092] [I] [thread 22169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:40.274105] [I] [thread 22169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:40.424963] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:40.425309] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:41.426600] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:42.428007] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:42.547774] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:42.548315] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:42.549397] [D] [thread 22175] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:42.549503] [I] [thread 22175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:42.549521] [I] [thread 22175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:42.549647] [I] [thread 22175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:42.549662] [I] [thread 22175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:42.756325] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:42.756782] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:43.758031] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:44.759615] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:44.816831] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:44.817334] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:44.818333] [D] [thread 22180] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:44.818447] [I] [thread 22180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:44.818464] [I] [thread 22180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:44.818592] [I] [thread 22180] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:44.818614] [I] [thread 22180] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:44.987096] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:44.987632] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:45.988850] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:46.990261] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:47.088167] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:47.089294] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:47.090389] [D] [thread 22186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:47.090629] [I] [thread 22186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:47.090651] [I] [thread 22186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:47.090811] [I] [thread 22186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:47.090897] [I] [thread 22186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:47.307612] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:47.307971] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:48.309137] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:49.310377] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:49.324215] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:49.324522] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:49.325509] [D] [thread 22191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:49.325603] [I] [thread 22191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:49.325619] [I] [thread 22191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:49.325736] [I] [thread 22191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:49.325749] [I] [thread 22191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:49.518506] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:49.518803] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:50.520072] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:51.521358] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:51.571658] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:51.572001] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:51.573002] [D] [thread 22198] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:51.573096] [I] [thread 22198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:51.573113] [I] [thread 22198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:51.573232] [I] [thread 22198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:51.573245] [I] [thread 22198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:51.757262] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:51.757573] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:52.758788] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:53.760108] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:53.897385] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:53.897719] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:53.899238] [D] [thread 22203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:53.899329] [I] [thread 22203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:53.899346] [I] [thread 22203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:53.899463] [I] [thread 22203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:53.899476] [I] [thread 22203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:54.066948] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:54.067262] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:55.068593] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:56.070010] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:56.128472] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:56.128787] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:56.129797] [D] [thread 22210] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:56.129894] [I] [thread 22210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:56.129911] [I] [thread 22210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:56.130028] [I] [thread 22210] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:56.130051] [I] [thread 22210] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:56.321085] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:56.321425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:57.322663] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:58.323934] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:58.378824] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:58.379183] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:58.380776] [D] [thread 22216] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:32:58.380868] [I] [thread 22216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:58.380885] [I] [thread 22216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:32:58.381003] [I] [thread 22216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:32:58.381017] [I] [thread 22216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:32:58.544634] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:58.544951] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:32:59.546161] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:00.547473] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:00.587694] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:00.588237] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:00.589207] [D] [thread 22221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:00.589300] [I] [thread 22221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:00.589317] [I] [thread 22221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:00.589434] [I] [thread 22221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:00.589447] [I] [thread 22221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:00.777456] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:00.777880] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:01.779149] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:02.780404] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:02.818686] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:02.819246] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:02.820070] [D] [thread 22228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:02.820160] [I] [thread 22228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:02.820179] [I] [thread 22228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:02.820298] [I] [thread 22228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:02.820310] [I] [thread 22228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:03.015598] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:03.016150] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:04.017441] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:05.018747] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:05.158737] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:05.159232] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:05.160079] [D] [thread 22234] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:05.160167] [I] [thread 22234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:05.160186] [I] [thread 22234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:05.160304] [I] [thread 22234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:05.160317] [I] [thread 22234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:05.368059] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:05.368508] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:06.369798] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:07.371077] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:07.510125] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:07.510649] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:07.511483] [D] [thread 22240] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:07.511572] [I] [thread 22240] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:07.511589] [I] [thread 22240] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:07.511707] [I] [thread 22240] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:07.511720] [I] [thread 22240] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:07.715871] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:07.716357] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:08.717604] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:09.718866] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:09.784757] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:09.785246] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:09.786078] [D] [thread 22245] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:09.786200] [I] [thread 22245] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:09.786219] [I] [thread 22245] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:09.786340] [I] [thread 22245] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:09.786362] [I] [thread 22245] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:09.952536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:09.953012] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:10.954212] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:11.955601] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:12.071898] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:12.072384] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:12.073255] [D] [thread 22250] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:12.073348] [I] [thread 22250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:12.073365] [I] [thread 22250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:12.073485] [I] [thread 22250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:12.073498] [I] [thread 22250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:12.342698] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:12.343146] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:13.344398] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:14.345764] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:14.490931] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:14.491494] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:14.492996] [D] [thread 22255] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:14.493110] [I] [thread 22255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:14.493128] [I] [thread 22255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:14.493254] [I] [thread 22255] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:14.493271] [I] [thread 22255] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:14.660261] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:14.660569] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:15.661912] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:16.663319] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:16.845408] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:16.845726] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:16.846739] [D] [thread 22261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:16.846834] [I] [thread 22261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:16.846852] [I] [thread 22261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:16.846971] [I] [thread 22261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:16.846983] [I] [thread 22261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:17.047575] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:17.048252] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:18.049528] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:19.050827] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:19.759620] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:19.760176] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:19.760981] [D] [thread 22266] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:19.761071] [I] [thread 22266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:19.761087] [I] [thread 22266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:19.761205] [I] [thread 22266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:19.761218] [I] [thread 22266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:19.965926] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:19.966471] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:20.967721] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:21.969018] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:22.023044] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:22.023515] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:22.024401] [D] [thread 22271] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:22.024494] [I] [thread 22271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:22.024511] [I] [thread 22271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:22.024629] [I] [thread 22271] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:22.024641] [I] [thread 22271] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:22.214152] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:22.214604] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:23.215855] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:24.217214] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:24.271016] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:24.271537] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:24.272354] [D] [thread 22276] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:24.272447] [I] [thread 22276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:24.272463] [I] [thread 22276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:24.272579] [I] [thread 22276] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:24.272591] [I] [thread 22276] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:24.464458] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:24.465423] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:25.466830] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:26.468122] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:26.532331] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:26.532689] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:26.534250] [D] [thread 22281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:26.534345] [I] [thread 22281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:26.534362] [I] [thread 22281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:26.534480] [I] [thread 22281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:26.534492] [I] [thread 22281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:26.727263] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:26.727608] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:27.728815] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:28.730197] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:28.855613] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:28.855927] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:28.857005] [D] [thread 22287] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:28.857102] [I] [thread 22287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:28.857119] [I] [thread 22287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:28.857235] [I] [thread 22287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:28.857258] [I] [thread 22287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:29.122116] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:29.123020] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:30.124067] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:31.125256] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:31.171497] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:31.171993] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:31.172881] [D] [thread 22293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:31.172974] [I] [thread 22293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:31.172991] [I] [thread 22293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:31.173108] [I] [thread 22293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:31.173121] [I] [thread 22293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:31.358048] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:31.358530] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:32.359815] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:33.361101] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:33.424312] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:33.424631] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:33.426183] [D] [thread 22298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:33.426276] [I] [thread 22298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:33.426294] [I] [thread 22298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:33.426414] [I] [thread 22298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:33.426444] [I] [thread 22298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:33.609621] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:33.609965] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:34.611190] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:35.612138] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:35.630826] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:35.631171] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:35.632403] [D] [thread 22303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:35.632499] [I] [thread 22303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:35.632515] [I] [thread 22303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:35.632633] [I] [thread 22303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:35.632646] [I] [thread 22303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:35.841275] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:35.841615] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:36.842841] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:37.844141] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:37.946142] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:37.946491] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:37.947660] [D] [thread 22308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:37.947756] [I] [thread 22308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:37.947772] [I] [thread 22308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:37.947891] [I] [thread 22308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:37.947903] [I] [thread 22308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:38.205362] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:38.205717] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:39.207004] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:40.208298] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:40.236398] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:40.236737] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:40.238243] [D] [thread 22313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:40.238367] [I] [thread 22313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:40.238386] [I] [thread 22313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:40.238508] [I] [thread 22313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:40.238520] [I] [thread 22313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:40.440084] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:40.440433] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:41.441719] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:42.442985] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:42.545936] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:42.546305] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:42.547316] [D] [thread 22318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:42.547413] [I] [thread 22318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:42.547430] [I] [thread 22318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:42.547546] [I] [thread 22318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:42.547559] [I] [thread 22318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:42.754655] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:42.755003] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:43.756229] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:44.757560] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:44.896021] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:44.896362] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:44.897899] [D] [thread 22323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:44.897990] [I] [thread 22323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:44.898008] [I] [thread 22323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:44.898127] [I] [thread 22323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:44.898140] [I] [thread 22323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:45.048408] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:45.048750] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:46.049991] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:47.051260] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:47.086846] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:47.087179] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:47.088642] [D] [thread 22328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:47.088738] [I] [thread 22328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:47.088755] [I] [thread 22328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:47.088872] [I] [thread 22328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:47.088885] [I] [thread 22328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:47.269735] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:47.270130] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:48.271290] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:49.272511] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:49.412296] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:49.412622] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:49.413840] [D] [thread 22333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:49.413945] [I] [thread 22333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:49.413963] [I] [thread 22333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:49.414107] [I] [thread 22333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:49.414129] [I] [thread 22333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:49.572790] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:49.573135] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:50.574276] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:51.575645] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:51.600748] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:51.601219] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:51.602059] [D] [thread 22338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:51.602150] [I] [thread 22338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:51.602167] [I] [thread 22338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:51.602287] [I] [thread 22338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:51.602301] [I] [thread 22338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:51.809510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:51.809998] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:52.811342] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:53.812592] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:53.881332] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:53.881845] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:53.882740] [D] [thread 22344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:53.882835] [I] [thread 22344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:53.882852] [I] [thread 22344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:53.882971] [I] [thread 22344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:53.882984] [I] [thread 22344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:54.079741] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:54.080337] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:55.081617] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:56.083004] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:56.224721] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:56.225176] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:56.226035] [D] [thread 22349] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:56.226128] [I] [thread 22349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:56.226145] [I] [thread 22349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:56.226266] [I] [thread 22349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:56.226278] [I] [thread 22349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:56.432583] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:56.433113] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:57.434356] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:58.435679] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:58.574342] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:58.574798] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:58.575674] [D] [thread 22354] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:33:58.575761] [I] [thread 22354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:58.575779] [I] [thread 22354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:33:58.575898] [I] [thread 22354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:33:58.575910] [I] [thread 22354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:33:58.837280] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:58.837810] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:33:59.839027] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:00.840277] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:00.889647] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:00.890035] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:00.891605] [D] [thread 22359] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:00.891700] [I] [thread 22359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:00.891717] [I] [thread 22359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:00.891837] [I] [thread 22359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:00.891850] [I] [thread 22359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:01.073082] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:01.073417] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:02.074625] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:03.075990] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:03.215345] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:03.215666] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:03.216771] [D] [thread 22364] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:03.216867] [I] [thread 22364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:03.216884] [I] [thread 22364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:03.217003] [I] [thread 22364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:03.217078] [I] [thread 22364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:03.367344] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:03.367653] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:04.368880] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:05.370162] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:05.495820] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:05.496197] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:05.497755] [D] [thread 22369] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:05.497849] [I] [thread 22369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:05.497866] [I] [thread 22369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:05.497982] [I] [thread 22369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:05.497995] [I] [thread 22369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:05.761769] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:05.762116] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:06.763324] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:07.764580] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:07.812591] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:07.812929] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:07.814070] [D] [thread 22374] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:07.814199] [I] [thread 22374] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:07.814218] [I] [thread 22374] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:07.814335] [I] [thread 22374] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:07.814348] [I] [thread 22374] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:07.983251] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:07.983579] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:08.984830] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:09.986056] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:10.127630] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:10.128217] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:10.129004] [D] [thread 22379] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:10.129098] [I] [thread 22379] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:10.129115] [I] [thread 22379] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:10.129233] [I] [thread 22379] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:10.129246] [I] [thread 22379] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:10.335416] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:10.335999] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:11.337311] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:12.338547] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:12.386434] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:12.386919] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:12.387768] [D] [thread 22384] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:12.387859] [I] [thread 22384] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:12.387877] [I] [thread 22384] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:12.388028] [I] [thread 22384] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:12.388045] [I] [thread 22384] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:12.579203] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:12.579582] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:13.580766] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:14.581986] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:14.716607] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:14.716929] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:14.717916] [D] [thread 22389] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:14.718007] [I] [thread 22389] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:14.718024] [I] [thread 22389] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:14.718142] [I] [thread 22389] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:14.718154] [I] [thread 22389] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:14.868313] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:14.868628] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:15.869825] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:16.871108] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:16.915117] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:16.915411] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:16.916667] [D] [thread 22394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:16.916766] [I] [thread 22394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:16.916783] [I] [thread 22394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:16.916904] [I] [thread 22394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:16.916916] [I] [thread 22394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:17.099670] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:17.100059] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:18.101223] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:19.102496] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:19.162349] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:19.162699] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:19.163863] [D] [thread 22399] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:19.163989] [I] [thread 22399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:19.164010] [I] [thread 22399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:19.164130] [I] [thread 22399] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:19.164143] [I] [thread 22399] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:19.358593] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:19.358903] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:20.360233] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:21.361543] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:21.405047] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:21.405380] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:21.406343] [D] [thread 22404] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:21.406434] [I] [thread 22404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:21.406451] [I] [thread 22404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:21.406570] [I] [thread 22404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:21.406583] [I] [thread 22404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:21.597595] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:21.598592] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:22.599898] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:23.601236] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:23.746570] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:23.747059] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:23.747863] [D] [thread 22409] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:23.747981] [I] [thread 22409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:23.748000] [I] [thread 22409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:23.748118] [I] [thread 22409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:23.748131] [I] [thread 22409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:23.960638] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:23.961155] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:24.962479] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:25.963787] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:26.107831] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:26.108200] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:26.109727] [D] [thread 22415] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:26.109818] [I] [thread 22415] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:26.109835] [I] [thread 22415] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:26.109954] [I] [thread 22415] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:26.109967] [I] [thread 22415] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:26.320765] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:26.321090] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:27.322304] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:28.323625] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:28.464959] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:28.465282] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:28.466829] [D] [thread 22420] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:28.466920] [I] [thread 22420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:28.466936] [I] [thread 22420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:28.467054] [I] [thread 22420] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:28.467066] [I] [thread 22420] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:28.674317] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:28.674632] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:29.675843] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:30.677240] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:30.787156] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:30.787473] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:30.789129] [D] [thread 22425] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:30.789226] [I] [thread 22425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:30.789242] [I] [thread 22425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:30.789358] [I] [thread 22425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:30.789371] [I] [thread 22425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:30.959374] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:30.959713] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:31.960954] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:32.962225] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:33.100624] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:33.100968] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:33.101955] [D] [thread 22430] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:33.102081] [I] [thread 22430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:33.102099] [I] [thread 22430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:33.102220] [I] [thread 22430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:33.102233] [I] [thread 22430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:33.305121] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:33.305467] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:34.306715] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:35.308089] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:35.331485] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:35.331791] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:35.332855] [D] [thread 22435] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:35.332952] [I] [thread 22435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:35.332968] [I] [thread 22435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:35.333088] [I] [thread 22435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:35.333101] [I] [thread 22435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:35.589312] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:35.589653] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:36.590874] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:37.592161] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:37.611349] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:37.611849] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:37.612730] [D] [thread 22440] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:37.612820] [I] [thread 22440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:37.612836] [I] [thread 22440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:37.612955] [I] [thread 22440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:37.612967] [I] [thread 22440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:37.809627] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:37.809961] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:38.811175] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:39.812141] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:39.924328] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:39.924639] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:39.925626] [D] [thread 22445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:39.925718] [I] [thread 22445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:39.925736] [I] [thread 22445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:39.925854] [I] [thread 22445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:39.925866] [I] [thread 22445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:40.091935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:40.092307] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:41.093511] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:42.094791] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:42.133094] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:42.133407] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:42.134391] [D] [thread 22450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:42.134483] [I] [thread 22450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:42.134501] [I] [thread 22450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:42.134616] [I] [thread 22450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:42.134628] [I] [thread 22450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:42.317235] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:42.317544] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:43.318784] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:44.320128] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:44.463171] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:44.463480] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:44.464552] [D] [thread 22455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:44.464649] [I] [thread 22455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:44.464667] [I] [thread 22455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:44.464785] [I] [thread 22455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:44.464809] [I] [thread 22455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:44.682559] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:44.682884] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:45.684205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:46.685470] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:46.723798] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:46.724185] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:46.725255] [D] [thread 22460] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:46.725351] [I] [thread 22460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:46.725369] [I] [thread 22460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:46.725488] [I] [thread 22460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:46.725501] [I] [thread 22460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:46.876084] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:46.876427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:47.877603] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:48.878863] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:48.992142] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:48.992500] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:48.993688] [D] [thread 22465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:48.993782] [I] [thread 22465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:48.993799] [I] [thread 22465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:48.993919] [I] [thread 22465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:48.993931] [I] [thread 22465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:49.194786] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:49.195129] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:50.196402] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:51.197660] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:51.244437] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:51.244782] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:51.246312] [D] [thread 22470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:51.246408] [I] [thread 22470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:51.246425] [I] [thread 22470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:51.246544] [I] [thread 22470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:51.246558] [I] [thread 22470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:51.432971] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:51.433440] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:52.434736] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:53.436041] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:53.501350] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:53.501850] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:53.502650] [D] [thread 22475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:53.502743] [I] [thread 22475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:53.502760] [I] [thread 22475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:53.502877] [I] [thread 22475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:53.502891] [I] [thread 22475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:53.691677] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:53.692202] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:54.693477] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:55.694784] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:55.755680] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:55.756040] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:55.757031] [D] [thread 22480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:55.757130] [I] [thread 22480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:55.757147] [I] [thread 22480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:55.757264] [I] [thread 22480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:55.757276] [I] [thread 22480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:55.896878] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:55.897185] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:56.898377] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:57.899622] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:58.022901] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:58.023345] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:58.024388] [D] [thread 22485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:34:58.024484] [I] [thread 22485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:58.024501] [I] [thread 22485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:34:58.024620] [I] [thread 22485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:34:58.024634] [I] [thread 22485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:34:58.227536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:58.228065] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:34:59.229300] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:00.230555] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:00.284153] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:00.284622] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:00.285679] [D] [thread 22490] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:00.285777] [I] [thread 22490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:00.285795] [I] [thread 22490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:00.285919] [I] [thread 22490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:00.285933] [I] [thread 22490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:00.452684] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:00.453175] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:01.454424] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:02.455689] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:02.715128] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:02.715676] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:02.716454] [D] [thread 22496] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:02.716545] [I] [thread 22496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:02.716562] [I] [thread 22496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:02.716677] [I] [thread 22496] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:02.716690] [I] [thread 22496] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:02.934218] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:02.934682] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:03.936058] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:04.896679] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:04.896988] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:04.898602] [D] [thread 22503] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:04.898724] [I] [thread 22503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:04.898742] [I] [thread 22503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:04.898870] [I] [thread 22503] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:04.898885] [I] [thread 22503] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:05.100707] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:05.101058] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:06.102235] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:07.103490] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:07.244951] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:07.245287] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:07.247061] [D] [thread 22511] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:07.247167] [I] [thread 22511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:07.247185] [I] [thread 22511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:07.247301] [I] [thread 22511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:07.247314] [I] [thread 22511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:07.455193] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:07.455676] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:08.456123] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:09.457390] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:09.521148] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:09.521448] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:09.522607] [D] [thread 22517] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:09.522722] [I] [thread 22517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:09.522740] [I] [thread 22517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:09.522866] [I] [thread 22517] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:09.522893] [I] [thread 22517] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:09.709299] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:09.709701] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:10.710871] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:11.712155] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:11.859275] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:11.859595] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:11.860985] [D] [thread 22524] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:11.861104] [I] [thread 22524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:11.861122] [I] [thread 22524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:11.861249] [I] [thread 22524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:11.861320] [I] [thread 22524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:12.075665] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:12.076024] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:13.077314] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:14.078742] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:14.116511] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:14.117009] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:14.117824] [D] [thread 22531] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:14.117914] [I] [thread 22531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:14.117931] [I] [thread 22531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:14.118048] [I] [thread 22531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:14.118060] [I] [thread 22531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:14.310012] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:14.310336] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:15.311509] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:16.312783] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:16.355296] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:16.355635] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:16.356744] [D] [thread 22537] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:16.356840] [I] [thread 22537] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:16.356858] [I] [thread 22537] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:16.356973] [I] [thread 22537] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:16.356996] [I] [thread 22537] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:16.548369] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:16.548698] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:17.549915] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:18.551206] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:18.639909] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:18.640252] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:18.641323] [D] [thread 22545] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:18.641419] [I] [thread 22545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:18.641435] [I] [thread 22545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:18.641553] [I] [thread 22545] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:18.641566] [I] [thread 22545] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:18.847395] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:18.847874] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:19.849530] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:20.850822] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:20.895981] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:20.896529] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:20.897303] [D] [thread 22551] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:20.897394] [I] [thread 22551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:20.897411] [I] [thread 22551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:20.897529] [I] [thread 22551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:20.897542] [I] [thread 22551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:21.060872] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:21.061330] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:22.062607] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:23.063926] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:23.180923] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:23.181244] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:23.182799] [D] [thread 22556] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:23.182895] [I] [thread 22556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:23.182912] [I] [thread 22556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:23.183029] [I] [thread 22556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:23.183041] [I] [thread 22556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:23.437651] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:23.437980] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:24.439198] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:25.440608] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:25.489397] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:25.489745] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:25.490688] [D] [thread 22561] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:25.490780] [I] [thread 22561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:25.490796] [I] [thread 22561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:25.490913] [I] [thread 22561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:25.490925] [I] [thread 22561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:25.655503] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:25.655990] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:26.657374] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:27.658809] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:27.796726] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:27.797246] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:27.798106] [D] [thread 22566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:27.798197] [I] [thread 22566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:27.798214] [I] [thread 22566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:27.798331] [I] [thread 22566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:27.798343] [I] [thread 22566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:28.000309] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:28.000637] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:29.001861] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:30.003139] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:30.068909] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:30.069267] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:30.070786] [D] [thread 22571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:30.070878] [I] [thread 22571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:30.070895] [I] [thread 22571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:30.071013] [I] [thread 22571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:30.071026] [I] [thread 22571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:30.263392] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:30.263887] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:31.265354] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:32.266657] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:32.393762] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:32.394290] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:32.395109] [D] [thread 22576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:32.395200] [I] [thread 22576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:32.395217] [I] [thread 22576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:32.395334] [I] [thread 22576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:32.395348] [I] [thread 22576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:32.603447] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:32.603768] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:33.604994] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:34.605804] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:34.745074] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:34.745543] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:34.746503] [D] [thread 22582] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:34.746597] [I] [thread 22582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:34.746614] [I] [thread 22582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:34.746732] [I] [thread 22582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:34.746746] [I] [thread 22582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:34.892247] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:34.892769] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:35.894071] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:36.895376] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:37.033788] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:37.034383] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:37.035166] [D] [thread 22587] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:37.035256] [I] [thread 22587] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:37.035272] [I] [thread 22587] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:37.035391] [I] [thread 22587] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:37.035404] [I] [thread 22587] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:37.249213] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:37.249685] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:38.250928] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:39.252205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:39.311883] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:39.312421] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:39.313665] [D] [thread 22594] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:39.313766] [I] [thread 22594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:39.313783] [I] [thread 22594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:39.313897] [I] [thread 22594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:39.313956] [I] [thread 22594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:39.502659] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:39.503117] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:40.504425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:41.505819] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:41.546814] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:41.547335] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:41.548148] [D] [thread 22600] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:41.548236] [I] [thread 22600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:41.548255] [I] [thread 22600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:41.548372] [I] [thread 22600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:41.548384] [I] [thread 22600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:41.696604] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:41.697101] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:42.698273] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:43.693188] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:43.693509] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:43.694488] [D] [thread 22607] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:43.694579] [I] [thread 22607] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:43.694597] [I] [thread 22607] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:43.694713] [I] [thread 22607] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:43.694726] [I] [thread 22607] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:43.960602] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:43.960928] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:44.962177] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:45.963509] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:45.984242] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:45.984554] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:45.985605] [D] [thread 22613] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:45.985699] [I] [thread 22613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:45.985716] [I] [thread 22613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:45.985834] [I] [thread 22613] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:45.985846] [I] [thread 22613] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:46.192566] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:46.192866] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:47.194122] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:48.195364] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:48.235167] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:48.235513] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:48.236719] [D] [thread 22620] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:48.236823] [I] [thread 22620] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:48.236842] [I] [thread 22620] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:48.236974] [I] [thread 22620] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:48.236990] [I] [thread 22620] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:48.435646] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:48.435992] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:49.437163] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:50.438448] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:50.469425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:50.469995] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:50.470954] [D] [thread 22626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:50.471072] [I] [thread 22626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:50.471090] [I] [thread 22626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:50.471219] [I] [thread 22626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:50.471236] [I] [thread 22626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:50.630452] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:50.630910] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:51.632110] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:52.430799] [D] [thread 22013] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[10:35:52.431049] [D] [thread 22013] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[10:35:52.432113] [D] [thread 22013] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[10:35:52.432289] [D] [thread 22013] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[10:35:52.432310] [D] [thread 22013] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[10:35:52.432471] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[10:35:52.432503] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:33923 queryId=1[m
[36m[10:35:52.437498] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[10:35:52.437581] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:33935 queryId=1[m
[36m[10:35:52.442094] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[10:35:52.442219] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:40301 queryId=1[m
[36m[10:35:52.446724] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[10:35:52.446810] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:37993 queryId=1[m
[36m[10:35:52.451320] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[10:35:52.451404] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:38565 queryId=1[m
[36m[10:35:52.455842] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[10:35:52.455994] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:34293 queryId=1[m
[36m[10:35:52.460463] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[10:35:52.460542] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:41837 queryId=1[m
[36m[10:35:52.465013] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[10:35:52.465096] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:40763 queryId=1[m
[36m[10:35:52.469912] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.30[m
[36m[10:35:52.469992] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:40207 queryId=1[m
[36m[10:35:52.474581] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.10[m
[36m[10:35:52.474667] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.10:35843 queryId=1[m
[36m[10:35:52.479098] [D] [thread 22013] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[10:35:52.479223] [D] [thread 22013] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:45373 queryId=1[m
[36m[10:35:52.483576] [D] [thread 22013] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[10:35:52.613759] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:52.614288] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:52.615205] [D] [thread 22633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:52.615294] [I] [thread 22633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:52.615311] [I] [thread 22633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:52.615427] [I] [thread 22633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:52.615440] [I] [thread 22633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:52.643257] [D] [thread 22076] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[10:35:52.643367] [D] [thread 22076] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[10:35:52.643495] [D] [thread 22076] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  9   1[m
[36m[10:35:52.643600] [D] [thread 22076] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698316552643[m
[36m[10:35:52.643685] [D] [thread 22076] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  9  succeeded[m
[36m[10:35:52.643716] [D] [thread 22076] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[10:35:52.664344] [D] [thread 22013] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[10:35:52.664445] [D] [thread 22013] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[10:35:52.665354] [I] [thread 22013] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[10:35:52.665535] [D] [thread 22013] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[10:35:52.823335] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:52.823638] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:53.824853] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:54.826144] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:54.857876] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:54.858245] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:54.859175] [D] [thread 22638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:54.859266] [I] [thread 22638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:54.859283] [I] [thread 22638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:54.859399] [I] [thread 22638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:54.859411] [I] [thread 22638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:55.052611] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:55.052962] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:56.054183] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:57.055454] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:57.196105] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:57.196432] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:57.197651] [D] [thread 22643] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:57.197744] [I] [thread 22643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:57.197762] [I] [thread 22643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:57.197880] [I] [thread 22643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:57.197892] [I] [thread 22643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:57.406555] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:57.406873] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:58.408127] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:59.409362] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:59.459732] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:59.460126] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:59.461123] [D] [thread 22648] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:35:59.461213] [I] [thread 22648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:59.461229] [I] [thread 22648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:35:59.461346] [I] [thread 22648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:35:59.461357] [I] [thread 22648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:35:59.641650] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:35:59.642000] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:00.643265] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:01.644558] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:01.709808] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:01.710145] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:01.711689] [D] [thread 22653] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:01.711781] [I] [thread 22653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:01.711799] [I] [thread 22653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:01.711917] [I] [thread 22653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:01.711929] [I] [thread 22653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:01.908022] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:01.908364] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:02.909664] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:03.910960] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:04.087527] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:04.087869] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:04.088928] [D] [thread 22658] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:04.089024] [I] [thread 22658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:04.089041] [I] [thread 22658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:04.089159] [I] [thread 22658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:04.089182] [I] [thread 22658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:04.299626] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:04.299981] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:05.301215] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:06.302529] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:06.356005] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:06.356328] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:06.357420] [D] [thread 22663] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:06.357517] [I] [thread 22663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:06.357534] [I] [thread 22663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:06.357649] [I] [thread 22663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:06.357707] [I] [thread 22663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:06.540008] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:06.540357] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:07.541606] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:08.542912] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:08.591614] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:08.592155] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:08.592990] [D] [thread 22668] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:08.593084] [I] [thread 22668] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:08.593100] [I] [thread 22668] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:08.593218] [I] [thread 22668] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:08.593230] [I] [thread 22668] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:08.755445] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:08.755975] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:09.757168] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:10.758395] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:10.805263] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:10.805604] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:10.806616] [D] [thread 22673] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:10.806751] [I] [thread 22673] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:10.806770] [I] [thread 22673] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:10.806907] [I] [thread 22673] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:10.806923] [I] [thread 22673] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:10.988897] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:10.989261] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:11.990510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:12.991815] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:13.130879] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:13.131348] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:13.132316] [D] [thread 22680] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:13.132409] [I] [thread 22680] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:13.132426] [I] [thread 22680] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:13.132544] [I] [thread 22680] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:13.132556] [I] [thread 22680] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:13.388644] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:13.389187] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:14.390435] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:15.391743] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:15.436477] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:15.436781] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:15.437925] [D] [thread 22687] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:15.438119] [I] [thread 22687] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:15.438139] [I] [thread 22687] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:15.438258] [I] [thread 22687] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:15.438271] [I] [thread 22687] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:15.603307] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:15.603639] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:16.604879] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:17.606187] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:17.747859] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:17.748384] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:17.749191] [D] [thread 22693] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:17.749279] [I] [thread 22693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:17.749296] [I] [thread 22693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:17.749414] [I] [thread 22693] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:17.749427] [I] [thread 22693] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:17.961808] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:17.962295] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:18.963568] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:19.964192] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:19.994289] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:19.994598] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:19.995598] [D] [thread 22699] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:19.995689] [I] [thread 22699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:19.995705] [I] [thread 22699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:19.995824] [I] [thread 22699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:19.995836] [I] [thread 22699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:20.152069] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:20.152394] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:21.153640] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:22.154994] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:22.216934] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:22.217260] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:22.218605] [D] [thread 22706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:22.218697] [I] [thread 22706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:22.218714] [I] [thread 22706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:22.218832] [I] [thread 22706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:22.218845] [I] [thread 22706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:22.400892] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:22.401198] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:23.402453] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:24.403713] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:24.406363] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:24.406665] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:24.408078] [D] [thread 22712] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:24.408187] [I] [thread 22712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:24.408207] [I] [thread 22712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:24.408340] [I] [thread 22712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:24.408356] [I] [thread 22712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:24.607456] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:24.607804] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:25.608096] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:26.609428] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:26.746247] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:26.746792] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:26.747871] [D] [thread 22718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:26.748016] [I] [thread 22718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:26.748036] [I] [thread 22718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:26.748174] [I] [thread 22718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:26.748187] [I] [thread 22718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:26.891886] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:26.892430] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:27.893713] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:28.894998] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:28.942905] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:28.943381] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:28.944396] [D] [thread 22725] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:28.944502] [I] [thread 22725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:28.944520] [I] [thread 22725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:28.944650] [I] [thread 22725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:28.944742] [I] [thread 22725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:29.135510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:29.135935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:30.137169] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:31.138450] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:31.275569] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:31.276124] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:31.277137] [D] [thread 22732] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:31.277250] [I] [thread 22732] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:31.277268] [I] [thread 22732] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:31.277389] [I] [thread 22732] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:31.277405] [I] [thread 22732] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:31.422383] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:31.422874] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:32.424095] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:33.425384] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:33.458766] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:33.459058] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:33.460149] [D] [thread 22739] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:33.460243] [I] [thread 22739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:33.460260] [I] [thread 22739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:33.460379] [I] [thread 22739] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:33.460393] [I] [thread 22739] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:33.643418] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:33.643729] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:34.644972] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:35.646278] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:35.686153] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:35.686476] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:35.688056] [D] [thread 22744] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:35.688148] [I] [thread 22744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:35.688164] [I] [thread 22744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:35.688283] [I] [thread 22744] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:35.688296] [I] [thread 22744] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:35.852352] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:35.852655] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:36.853888] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:37.855156] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:37.960493] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:37.960807] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:37.961777] [D] [thread 22750] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:37.961869] [I] [thread 22750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:37.961886] [I] [thread 22750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:37.962003] [I] [thread 22750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:37.962015] [I] [thread 22750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:38.175006] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:38.175329] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:39.176556] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:40.177846] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:40.319267] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:40.319616] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:40.320650] [D] [thread 22756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:40.320745] [I] [thread 22756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:40.320762] [I] [thread 22756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:40.320879] [I] [thread 22756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:40.320892] [I] [thread 22756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:40.527243] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:40.527587] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:41.528828] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:42.502926] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:42.503252] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:42.504513] [D] [thread 22761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:42.504609] [I] [thread 22761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:42.504626] [I] [thread 22761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:42.504745] [I] [thread 22761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:42.504757] [I] [thread 22761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:42.719674] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:42.720052] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:43.721302] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:44.712865] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:44.713183] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:44.714212] [D] [thread 22768] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:44.714289] [I] [thread 22768] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:44.714305] [I] [thread 22768] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:44.714413] [I] [thread 22768] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:44.714424] [I] [thread 22768] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:44.867153] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:44.867499] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:45.868715] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:46.870017] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:46.988472] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:46.988816] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:46.989777] [D] [thread 22774] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:46.989866] [I] [thread 22774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:46.989883] [I] [thread 22774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:46.989998] [I] [thread 22774] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:46.990011] [I] [thread 22774] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:47.245224] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:47.245574] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:48.246800] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:49.248092] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:49.388024] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:49.388367] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:49.389399] [D] [thread 22781] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:49.389490] [I] [thread 22781] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:49.389507] [I] [thread 22781] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:49.389624] [I] [thread 22781] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:49.389637] [I] [thread 22781] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:49.598157] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:49.598505] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:50.599720] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:51.600123] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:51.616769] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:51.617259] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:51.618104] [D] [thread 22788] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:51.618197] [I] [thread 22788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:51.618214] [I] [thread 22788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:51.618332] [I] [thread 22788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:51.618345] [I] [thread 22788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:51.830422] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:51.830728] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:52.832021] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:53.833305] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:53.874580] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:53.874935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:53.876005] [D] [thread 22793] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:53.876096] [I] [thread 22793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:53.876115] [I] [thread 22793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:53.876234] [I] [thread 22793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:53.876257] [I] [thread 22793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:54.036596] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:54.036914] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:55.038111] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:56.039403] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:56.081429] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:56.081776] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:56.082727] [D] [thread 22799] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:56.082822] [I] [thread 22799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:56.082839] [I] [thread 22799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:56.082958] [I] [thread 22799] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:56.082971] [I] [thread 22799] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:56.264603] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:56.264950] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:57.266314] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:58.267626] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:58.300302] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:58.300632] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:58.301762] [D] [thread 22804] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:36:58.301859] [I] [thread 22804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:58.301876] [I] [thread 22804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:36:58.301993] [I] [thread 22804] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:36:58.302006] [I] [thread 22804] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:36:58.481942] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:58.482275] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:36:59.483472] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:00.475016] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:00.475589] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:00.476671] [D] [thread 22809] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:00.476778] [I] [thread 22809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:00.476796] [I] [thread 22809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:00.476928] [I] [thread 22809] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:00.476943] [I] [thread 22809] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:00.672530] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:00.672972] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:01.674172] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:02.675455] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:02.726210] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:02.726528] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:02.727988] [D] [thread 22814] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:02.728077] [I] [thread 22814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:02.728096] [I] [thread 22814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:02.728213] [I] [thread 22814] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:02.728225] [I] [thread 22814] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:02.906009] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:02.906325] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:03.907538] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:04.908809] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:04.947405] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:04.947744] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:04.948774] [D] [thread 22819] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:04.948875] [I] [thread 22819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:04.948893] [I] [thread 22819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:04.949006] [I] [thread 22819] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:04.949019] [I] [thread 22819] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:05.137206] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:05.137542] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:06.138779] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:07.140113] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:07.240847] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:07.241220] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:07.242359] [D] [thread 22824] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:07.242552] [I] [thread 22824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:07.242572] [I] [thread 22824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:07.242706] [I] [thread 22824] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:07.242748] [I] [thread 22824] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:07.456097] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:07.456424] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:08.457727] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:09.459100] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:09.576861] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:09.577176] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:09.578172] [D] [thread 22829] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:09.578294] [I] [thread 22829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:09.578313] [I] [thread 22829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:09.578430] [I] [thread 22829] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:09.578442] [I] [thread 22829] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:09.791898] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:09.792241] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:10.793603] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:11.794833] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:11.796086] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:11.796372] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:11.797385] [D] [thread 22835] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:11.797475] [I] [thread 22835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:11.797492] [I] [thread 22835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:11.797609] [I] [thread 22835] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:11.797623] [I] [thread 22835] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:11.960930] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:11.961245] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:12.962487] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:13.960087] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:13.960410] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:13.961607] [D] [thread 22840] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:13.961703] [I] [thread 22840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:13.961720] [I] [thread 22840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:13.961838] [I] [thread 22840] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:13.961850] [I] [thread 22840] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:14.219411] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:14.219733] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:15.220973] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:16.222251] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:16.388330] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:16.388651] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:16.389875] [D] [thread 22847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:16.389978] [I] [thread 22847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:16.389995] [I] [thread 22847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:16.390123] [I] [thread 22847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:16.390139] [I] [thread 22847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:16.593952] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:16.594322] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:17.595676] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:18.596113] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:18.613210] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:18.613716] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:18.614519] [D] [thread 22852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:18.614611] [I] [thread 22852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:18.614628] [I] [thread 22852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:18.614745] [I] [thread 22852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:18.614758] [I] [thread 22852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:18.827039] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:18.827559] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:19.828823] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:20.823308] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:20.823794] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:20.824693] [D] [thread 22857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:20.824788] [I] [thread 22857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:20.824805] [I] [thread 22857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:20.824922] [I] [thread 22857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:20.824935] [I] [thread 22857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:21.030879] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:21.031357] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:22.032609] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:23.033920] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:23.093959] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:23.094427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:23.095261] [D] [thread 22862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:23.095352] [I] [thread 22862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:23.095370] [I] [thread 22862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:23.095486] [I] [thread 22862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:23.095498] [I] [thread 22862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:23.258919] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:23.259377] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:24.260628] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:25.261952] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:25.316091] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:25.316531] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:25.317632] [D] [thread 22867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:25.317728] [I] [thread 22867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:25.317745] [I] [thread 22867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:25.317864] [I] [thread 22867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:25.317876] [I] [thread 22867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:25.502939] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:25.503442] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:26.504658] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:27.505964] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:27.540044] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:27.540543] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:27.541417] [D] [thread 22872] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:27.541510] [I] [thread 22872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:27.541527] [I] [thread 22872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:27.541645] [I] [thread 22872] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:27.541658] [I] [thread 22872] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:27.727650] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:27.728083] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:28.729289] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:29.730548] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:29.750090] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:29.750408] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:29.751674] [D] [thread 22877] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:29.751789] [I] [thread 22877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:29.751809] [I] [thread 22877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:29.752134] [I] [thread 22877] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:29.752199] [I] [thread 22877] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:29.951080] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:29.951423] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:30.952197] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:31.953479] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:31.975623] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:31.975985] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:31.976939] [D] [thread 22882] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:31.977031] [I] [thread 22882] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:31.977049] [I] [thread 22882] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:31.977167] [I] [thread 22882] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:31.977180] [I] [thread 22882] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:32.140119] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:32.140457] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:33.141666] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:34.143098] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:34.163693] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:34.164045] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:34.165186] [D] [thread 22887] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:34.165280] [I] [thread 22887] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:34.165296] [I] [thread 22887] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:34.165415] [I] [thread 22887] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:34.165427] [I] [thread 22887] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:34.370213] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:34.370762] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:35.372040] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:36.367743] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:36.368288] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:36.369071] [D] [thread 22892] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:36.369143] [I] [thread 22892] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:36.369158] [I] [thread 22892] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:36.369265] [I] [thread 22892] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:36.369276] [I] [thread 22892] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:36.578044] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:36.578595] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:37.580051] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:38.581358] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:38.635653] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:38.636325] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:38.637077] [D] [thread 22897] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:38.637168] [I] [thread 22897] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:38.637185] [I] [thread 22897] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:38.637301] [I] [thread 22897] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:38.637313] [I] [thread 22897] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:38.810779] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:38.811108] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:39.812090] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:40.813313] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:40.831178] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:40.831498] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:40.833166] [D] [thread 22903] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:40.833261] [I] [thread 22903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:40.833278] [I] [thread 22903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:40.833394] [I] [thread 22903] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:40.833407] [I] [thread 22903] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:41.047322] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:41.047642] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:42.048880] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:43.049843] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:43.069007] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:43.069536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:43.070326] [D] [thread 22910] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:43.070420] [I] [thread 22910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:43.070437] [I] [thread 22910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:43.070554] [I] [thread 22910] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:43.070566] [I] [thread 22910] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:43.275115] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:43.275607] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:44.276946] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:45.278224] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:45.336136] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:45.336522] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:45.338094] [D] [thread 22916] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:45.338184] [I] [thread 22916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:45.338201] [I] [thread 22916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:45.338319] [I] [thread 22916] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:45.338332] [I] [thread 22916] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:45.503096] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:45.503426] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:46.504644] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:47.505892] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:47.519459] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:47.519772] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:47.520827] [D] [thread 22922] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:47.520960] [I] [thread 22922] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:47.520979] [I] [thread 22922] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:47.521097] [I] [thread 22922] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:47.521128] [I] [thread 22922] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:47.726118] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:47.726446] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:48.727663] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:49.728927] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:49.769086] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:49.769415] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:49.770400] [D] [thread 22928] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:49.770493] [I] [thread 22928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:49.770510] [I] [thread 22928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:49.770630] [I] [thread 22928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:49.770642] [I] [thread 22928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:49.934313] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:49.934655] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:50.935862] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:51.937155] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:51.986059] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:51.986370] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:51.987474] [D] [thread 22933] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:51.987578] [I] [thread 22933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:51.987673] [I] [thread 22933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:51.987823] [I] [thread 22933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:51.987842] [I] [thread 22933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:52.173294] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:52.173602] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:53.174774] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:54.176070] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:54.312756] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:54.313257] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:54.314302] [D] [thread 22938] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:54.314412] [I] [thread 22938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:54.314429] [I] [thread 22938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:54.314555] [I] [thread 22938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:54.314573] [I] [thread 22938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:54.523111] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:54.523614] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:55.524811] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:56.526095] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:56.582264] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:56.582730] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:56.583808] [D] [thread 22943] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:56.583921] [I] [thread 22943] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:56.583965] [I] [thread 22943] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:56.584099] [I] [thread 22943] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:56.584118] [I] [thread 22943] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:56.749719] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:56.750267] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:57.751500] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:58.752778] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:58.793662] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:58.794205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:58.794970] [D] [thread 22949] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:37:58.795060] [I] [thread 22949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:58.795076] [I] [thread 22949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:37:58.795194] [I] [thread 22949] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:37:58.795206] [I] [thread 22949] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:37:58.983999] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:58.984498] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:37:59.985912] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:00.987264] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:01.037560] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:01.038149] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:01.038905] [D] [thread 22954] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:01.038992] [I] [thread 22954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:01.039009] [I] [thread 22954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:01.039125] [I] [thread 22954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:01.039138] [I] [thread 22954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:01.223282] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:01.223598] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:02.224806] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:03.226197] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:03.332646] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:03.333161] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:03.333947] [D] [thread 22959] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:03.334017] [I] [thread 22959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:03.334032] [I] [thread 22959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:03.334141] [I] [thread 22959] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:03.334151] [I] [thread 22959] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:03.494682] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:03.495169] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:04.496117] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:05.497337] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:05.534650] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:05.534985] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:05.536663] [D] [thread 22964] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:05.536757] [I] [thread 22964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:05.536774] [I] [thread 22964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:05.536892] [I] [thread 22964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:05.536905] [I] [thread 22964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:05.718969] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:05.719318] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:06.720557] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:07.721826] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:07.784590] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:07.784915] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:07.785949] [D] [thread 22969] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:07.786078] [I] [thread 22969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:07.786097] [I] [thread 22969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:07.786216] [I] [thread 22969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:07.786247] [I] [thread 22969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:07.943935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:07.944312] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:08.945606] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:09.946983] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:09.998539] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:09.998877] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:09.999921] [D] [thread 22975] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:10.000044] [I] [thread 22975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:10.000061] [I] [thread 22975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:10.000180] [I] [thread 22975] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:10.000203] [I] [thread 22975] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:10.185095] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:10.185431] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:11.186613] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:12.187842] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:12.190750] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:12.191080] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:12.192130] [D] [thread 22980] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:12.192219] [I] [thread 22980] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:12.192238] [I] [thread 22980] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:12.192356] [I] [thread 22980] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:12.192369] [I] [thread 22980] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:12.390943] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:12.391297] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:13.392580] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:14.393875] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:14.422807] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:14.423344] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:14.424158] [D] [thread 22985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:14.424251] [I] [thread 22985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:14.424270] [I] [thread 22985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:14.424388] [I] [thread 22985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:14.424401] [I] [thread 22985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:14.588752] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:14.589262] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:15.590476] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:16.581366] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:16.581674] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:16.582820] [D] [thread 22991] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:16.582936] [I] [thread 22991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:16.582953] [I] [thread 22991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:16.583081] [I] [thread 22991] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:16.583097] [I] [thread 22991] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:16.760025] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:16.760378] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:17.761540] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:18.762824] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:18.899627] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:18.900141] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:18.901178] [D] [thread 22997] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:18.901271] [I] [thread 22997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:18.901289] [I] [thread 22997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:18.901403] [I] [thread 22997] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:18.901415] [I] [thread 22997] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:19.103811] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:19.104437] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:20.105623] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:21.106883] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:21.145240] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:21.145763] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:21.146537] [D] [thread 23002] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:21.146628] [I] [thread 23002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:21.146645] [I] [thread 23002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:21.146764] [I] [thread 23002] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:21.146776] [I] [thread 23002] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:21.316693] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:21.317039] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:22.318241] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:23.319523] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:23.464596] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:23.464919] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:23.465949] [D] [thread 23007] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:23.466075] [I] [thread 23007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:23.466092] [I] [thread 23007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:23.466211] [I] [thread 23007] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:23.466224] [I] [thread 23007] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:23.677188] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:23.677542] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:24.678775] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:25.680104] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:25.713314] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:25.713639] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:25.714823] [D] [thread 23012] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:25.714914] [I] [thread 23012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:25.714931] [I] [thread 23012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:25.715049] [I] [thread 23012] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:25.715061] [I] [thread 23012] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:25.898681] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:25.899127] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:26.900436] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:27.872549] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:27.873110] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:27.873876] [D] [thread 23017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:27.873961] [I] [thread 23017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:27.873977] [I] [thread 23017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:27.874093] [I] [thread 23017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:27.874106] [I] [thread 23017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:28.081600] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:28.082055] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:29.083364] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:30.084637] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:30.206771] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:30.207332] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:30.208138] [D] [thread 23022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:30.208228] [I] [thread 23022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:30.208247] [I] [thread 23022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:30.208367] [I] [thread 23022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:30.208379] [I] [thread 23022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:30.415434] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:30.415903] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:31.417265] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:32.418515] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:32.560130] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:32.560586] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:32.561511] [D] [thread 23027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:32.561600] [I] [thread 23027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:32.561616] [I] [thread 23027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:32.561732] [I] [thread 23027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:32.561744] [I] [thread 23027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:32.768362] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:32.768875] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:33.770087] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:34.771430] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:34.872231] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:34.872532] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:34.873575] [D] [thread 23032] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:34.873670] [I] [thread 23032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:34.873686] [I] [thread 23032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:34.873804] [I] [thread 23032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:34.873823] [I] [thread 23032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:35.080690] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:35.080998] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:36.082196] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:37.083451] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:37.223058] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:37.223510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:37.224383] [D] [thread 23039] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:37.224476] [I] [thread 23039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:37.224493] [I] [thread 23039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:37.224611] [I] [thread 23039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:37.224623] [I] [thread 23039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:37.385907] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:37.386464] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:38.387748] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:39.389045] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:39.437617] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:39.438183] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:39.438927] [D] [thread 23044] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:39.439018] [I] [thread 23044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:39.439035] [I] [thread 23044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:39.439155] [I] [thread 23044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:39.439167] [I] [thread 23044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:39.621452] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:39.621925] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:40.623290] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:41.624575] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:41.763876] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:41.764418] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:41.765237] [D] [thread 23049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:41.765324] [I] [thread 23049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:41.765341] [I] [thread 23049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:41.765457] [I] [thread 23049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:41.765470] [I] [thread 23049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:41.978923] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:41.979465] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:42.980770] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:43.982057] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:44.208302] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:44.208812] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:44.209862] [D] [thread 23054] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:44.209976] [I] [thread 23054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:44.209995] [I] [thread 23054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:44.210115] [I] [thread 23054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:44.210132] [I] [thread 23054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:44.422223] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:44.422725] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:45.424138] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:46.425417] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:46.461613] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:46.462151] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:46.462931] [D] [thread 23059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:46.463019] [I] [thread 23059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:46.463036] [I] [thread 23059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:46.463153] [I] [thread 23059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:46.463166] [I] [thread 23059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:46.631193] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:46.631703] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:47.633023] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:48.634292] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:48.778438] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:48.778942] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:48.779732] [D] [thread 23064] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:48.779823] [I] [thread 23064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:48.779840] [I] [thread 23064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:48.779999] [I] [thread 23064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:48.780016] [I] [thread 23064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:48.982674] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:48.983206] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:49.984466] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:50.985751] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:51.051801] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:51.052348] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:51.053194] [D] [thread 23069] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:51.053287] [I] [thread 23069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:51.053304] [I] [thread 23069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:51.053422] [I] [thread 23069] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:51.053435] [I] [thread 23069] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:51.239818] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:51.240179] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:52.241427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:53.242739] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:53.384372] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:53.384690] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:53.385677] [D] [thread 23074] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:53.385771] [I] [thread 23074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:53.385789] [I] [thread 23074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:53.385905] [I] [thread 23074] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:53.385917] [I] [thread 23074] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:53.643923] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:53.644298] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:54.645540] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:55.643811] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:55.644164] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:55.645137] [D] [thread 23079] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:55.645228] [I] [thread 23079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:55.645245] [I] [thread 23079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:55.645362] [I] [thread 23079] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:55.645375] [I] [thread 23079] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:55.854190] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:55.854512] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:56.855751] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:57.857057] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:57.896439] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:57.896763] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:57.897743] [D] [thread 23084] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:38:57.897836] [I] [thread 23084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:57.897853] [I] [thread 23084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:38:57.897967] [I] [thread 23084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:38:57.897980] [I] [thread 23084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:38:58.059041] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:58.059380] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:38:59.060588] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:00.061861] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:00.067580] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:00.067915] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:00.069494] [D] [thread 23090] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:00.069587] [I] [thread 23090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:00.069605] [I] [thread 23090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:00.069723] [I] [thread 23090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:00.069736] [I] [thread 23090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:00.279315] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:00.279658] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:01.280912] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:02.282280] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:02.314158] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:02.314475] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:02.316057] [D] [thread 23095] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:02.316145] [I] [thread 23095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:02.316161] [I] [thread 23095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:02.316279] [I] [thread 23095] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:02.316292] [I] [thread 23095] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:02.479285] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:02.479635] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:03.480878] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:04.482096] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:04.537426] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:04.537741] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:04.539032] [D] [thread 23100] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:04.539137] [I] [thread 23100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:04.539157] [I] [thread 23100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:04.539273] [I] [thread 23100] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:04.539286] [I] [thread 23100] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:04.723253] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:04.723642] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:05.724105] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:06.725496] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:06.862574] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:06.862924] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:06.864462] [D] [thread 23105] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:06.864564] [I] [thread 23105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:06.864581] [I] [thread 23105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:06.864700] [I] [thread 23105] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:06.864756] [I] [thread 23105] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:07.124813] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:07.125126] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:08.126305] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:09.127635] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:09.265132] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:09.265440] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:09.266605] [D] [thread 23112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:09.266722] [I] [thread 23112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:09.266740] [I] [thread 23112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:09.266865] [I] [thread 23112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:09.266879] [I] [thread 23112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:09.469484] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:09.469808] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:10.471068] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:11.469600] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:11.469953] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:11.471225] [D] [thread 23118] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:11.471348] [I] [thread 23118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:11.471366] [I] [thread 23118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:11.471500] [I] [thread 23118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:11.471515] [I] [thread 23118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:11.684673] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:11.684996] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:12.686145] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:13.687429] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:13.829429] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:13.829764] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:13.830824] [D] [thread 23125] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:13.830898] [I] [thread 23125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:13.830914] [I] [thread 23125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:13.831036] [I] [thread 23125] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:13.831052] [I] [thread 23125] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:14.044471] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:14.044795] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:15.045962] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:16.047252] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:16.186954] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:16.187266] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:16.188611] [D] [thread 23130] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:16.188718] [I] [thread 23130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:16.188735] [I] [thread 23130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:16.188852] [I] [thread 23130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:16.188866] [I] [thread 23130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:16.336976] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:16.337297] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:17.338453] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:18.339679] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:18.351915] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:18.352439] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:18.353259] [D] [thread 23135] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:18.353349] [I] [thread 23135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:18.353366] [I] [thread 23135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:18.353483] [I] [thread 23135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:18.353495] [I] [thread 23135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:18.605657] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:18.605961] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:19.607196] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:20.608516] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:20.649358] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:20.649670] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:20.650709] [D] [thread 23140] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:20.650806] [I] [thread 23140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:20.650823] [I] [thread 23140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:20.650943] [I] [thread 23140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:20.650955] [I] [thread 23140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:20.832474] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:20.832817] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:21.834062] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:22.835374] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:22.843541] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:22.843871] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:22.844949] [D] [thread 23145] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:22.845043] [I] [thread 23145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:22.845061] [I] [thread 23145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:22.845178] [I] [thread 23145] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:22.845192] [I] [thread 23145] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:23.008623] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:23.008969] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:24.010228] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:25.011536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:25.151498] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:25.151831] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:25.153570] [D] [thread 23150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:25.153671] [I] [thread 23150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:25.153688] [I] [thread 23150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:25.153802] [I] [thread 23150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:25.153816] [I] [thread 23150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:25.363911] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:25.364258] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:26.365450] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:27.366714] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:27.406429] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:27.406766] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:27.407761] [D] [thread 23156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:27.407859] [I] [thread 23156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:27.407875] [I] [thread 23156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:27.408033] [I] [thread 23156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:27.408049] [I] [thread 23156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:27.620615] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:27.620985] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:28.622205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:29.623625] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:29.728218] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:29.728556] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:29.729724] [D] [thread 23161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:29.729819] [I] [thread 23161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:29.729837] [I] [thread 23161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:29.729953] [I] [thread 23161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:29.729966] [I] [thread 23161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:29.927536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:29.927857] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:30.929078] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:31.930402] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:32.046828] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:32.047140] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:32.048195] [D] [thread 23166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:32.048291] [I] [thread 23166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:32.048307] [I] [thread 23166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:32.048424] [I] [thread 23166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:32.048487] [I] [thread 23166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:32.212893] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:32.213229] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:33.214422] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:34.215711] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:34.356007] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:34.356341] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:34.357334] [D] [thread 23171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:34.357424] [I] [thread 23171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:34.357441] [I] [thread 23171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:34.357556] [I] [thread 23171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:34.357568] [I] [thread 23171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:34.512082] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:34.512397] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:35.513689] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:36.514986] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:36.624453] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:36.624771] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:36.625788] [D] [thread 23176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:36.625883] [I] [thread 23176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:36.625900] [I] [thread 23176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:36.626018] [I] [thread 23176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:36.626039] [I] [thread 23176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:36.887833] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:36.888425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:37.889683] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:38.890976] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:39.032150] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:39.032654] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:39.033554] [D] [thread 23181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:39.033646] [I] [thread 23181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:39.033663] [I] [thread 23181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:39.033780] [I] [thread 23181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:39.033793] [I] [thread 23181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:39.248856] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:39.249344] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:40.250625] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:41.251914] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:41.395447] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:41.396062] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:41.396782] [D] [thread 23186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:41.396875] [I] [thread 23186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:41.396891] [I] [thread 23186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:41.397008] [I] [thread 23186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:41.397021] [I] [thread 23186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:41.658923] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:41.659422] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:42.660711] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:43.661999] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:43.722819] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:43.723261] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:43.724176] [D] [thread 23191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:43.724270] [I] [thread 23191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:43.724290] [I] [thread 23191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:43.724408] [I] [thread 23191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:43.724421] [I] [thread 23191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:43.895536] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:43.896025] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:44.897245] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:45.897795] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:45.943910] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:45.944286] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:45.945317] [D] [thread 23196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:45.945412] [I] [thread 23196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:45.945429] [I] [thread 23196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:45.945545] [I] [thread 23196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:45.945559] [I] [thread 23196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:46.126393] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:46.126708] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:47.128028] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:48.129391] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:48.232081] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:48.232427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:48.233430] [D] [thread 23201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:48.233525] [I] [thread 23201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:48.233541] [I] [thread 23201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:48.233656] [I] [thread 23201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:48.233668] [I] [thread 23201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:48.400881] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:48.401215] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:49.402458] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:50.403768] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:50.544013] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:50.544334] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:50.545527] [D] [thread 23206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:50.545622] [I] [thread 23206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:50.545639] [I] [thread 23206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:50.545758] [I] [thread 23206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:50.545771] [I] [thread 23206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:50.759769] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:50.760142] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:51.761412] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:52.762716] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:52.903358] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:52.903705] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:52.904753] [D] [thread 23211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:52.904846] [I] [thread 23211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:52.904864] [I] [thread 23211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:52.904982] [I] [thread 23211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:52.904994] [I] [thread 23211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:53.066800] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:53.067133] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:54.068325] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:55.069577] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:55.191150] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:55.191473] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:55.192568] [D] [thread 23218] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:55.192664] [I] [thread 23218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:55.192682] [I] [thread 23218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:55.192801] [I] [thread 23218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:55.192814] [I] [thread 23218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:55.408706] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:55.409218] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:56.410473] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:57.411812] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:57.479608] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:57.479980] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:57.480953] [D] [thread 23223] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:57.481044] [I] [thread 23223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:57.481061] [I] [thread 23223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:57.481177] [I] [thread 23223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:57.481190] [I] [thread 23223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:57.647683] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:57.648200] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:58.649485] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:59.650776] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:59.689016] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:59.689510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:59.690364] [D] [thread 23228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:39:59.690455] [I] [thread 23228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:59.690472] [I] [thread 23228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:39:59.690588] [I] [thread 23228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:39:59.690601] [I] [thread 23228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:39:59.872455] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:39:59.872937] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:00.874184] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:01.859481] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:01.859779] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:01.860877] [D] [thread 23233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:01.860971] [I] [thread 23233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:01.860988] [I] [thread 23233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:01.861204] [I] [thread 23233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:01.861226] [I] [thread 23233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:02.054145] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:02.054488] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:03.055690] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:04.056965] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:04.103182] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:04.103509] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:04.104523] [D] [thread 23238] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:04.104622] [I] [thread 23238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:04.104640] [I] [thread 23238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:04.104756] [I] [thread 23238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:04.104775] [I] [thread 23238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:04.262559] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:04.262879] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:05.264076] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:06.265369] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:06.646728] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:06.647035] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:06.648131] [D] [thread 23243] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:06.648240] [I] [thread 23243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:06.648260] [I] [thread 23243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:06.648392] [I] [thread 23243] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:06.648409] [I] [thread 23243] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:06.955394] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:06.955707] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:07.956935] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:08.958219] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:09.595932] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:09.596287] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:09.597320] [D] [thread 23248] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:09.597409] [I] [thread 23248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:09.597426] [I] [thread 23248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:09.597541] [I] [thread 23248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:09.597554] [I] [thread 23248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:09.923226] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:09.923555] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:10.924774] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:11.926054] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:12.637022] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:12.637338] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:12.638356] [D] [thread 23253] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:12.638452] [I] [thread 23253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:12.638469] [I] [thread 23253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:12.638592] [I] [thread 23253] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:12.638604] [I] [thread 23253] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:12.864790] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:12.865133] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:13.866335] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:14.867644] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:14.976303] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:14.976647] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:14.977672] [D] [thread 23258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:14.977766] [I] [thread 23258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:14.977783] [I] [thread 23258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:14.977901] [I] [thread 23258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:14.977925] [I] [thread 23258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:15.206903] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:15.207267] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:16.208510] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:17.209804] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:17.272027] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:17.272367] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:17.273360] [D] [thread 23263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:17.273454] [I] [thread 23263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:17.273471] [I] [thread 23263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:17.273589] [I] [thread 23263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:17.273612] [I] [thread 23263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:17.442454] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:17.442790] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:18.444075] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:19.445330] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:19.592072] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:19.592533] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:19.593395] [D] [thread 23268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:19.593488] [I] [thread 23268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:19.593505] [I] [thread 23268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:19.593622] [I] [thread 23268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:19.593635] [I] [thread 23268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:19.787039] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:19.787491] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:20.788172] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:21.789451] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:21.931651] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:21.932193] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:21.933018] [D] [thread 23273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:21.933106] [I] [thread 23273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:21.933124] [I] [thread 23273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:21.933243] [I] [thread 23273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:21.933256] [I] [thread 23273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:22.099689] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:22.100207] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:23.101520] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:24.102782] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:24.105150] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:24.105697] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:24.106742] [D] [thread 23278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:24.106851] [I] [thread 23278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:24.106869] [I] [thread 23278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:24.106995] [I] [thread 23278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:24.107009] [I] [thread 23278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:24.303457] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:24.304041] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:25.305358] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:26.306595] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:26.445253] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:26.445798] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:26.446873] [D] [thread 23283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:26.446986] [I] [thread 23283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:26.447004] [I] [thread 23283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:26.447142] [I] [thread 23283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:26.447156] [I] [thread 23283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:26.612394] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:26.612901] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:27.614156] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:28.615450] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:28.752784] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:28.753296] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:28.754120] [D] [thread 23288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:28.754212] [I] [thread 23288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:28.754229] [I] [thread 23288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:28.754345] [I] [thread 23288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:28.754358] [I] [thread 23288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:28.960505] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:28.960828] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:29.962040] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:30.963446] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:30.998212] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:30.998630] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:30.999528] [D] [thread 23293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:30.999623] [I] [thread 23293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:30.999641] [I] [thread 23293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:30.999771] [I] [thread 23293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:30.999786] [I] [thread 23293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:31.182741] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:31.183197] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:32.184095] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:33.183886] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:33.184464] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:33.185272] [D] [thread 23298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:33.185360] [I] [thread 23298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:33.185377] [I] [thread 23298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:33.185495] [I] [thread 23298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:33.185508] [I] [thread 23298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:33.440425] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:33.440911] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:34.441810] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:35.443090] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:35.468038] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:35.468380] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:35.469475] [D] [thread 23303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:35.469566] [I] [thread 23303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:35.469582] [I] [thread 23303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:35.469699] [I] [thread 23303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:35.469712] [I] [thread 23303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:35.673234] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:35.673581] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:36.674825] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:37.676138] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:37.783469] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:37.783839] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:37.785015] [D] [thread 23308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:37.785111] [I] [thread 23308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:37.785127] [I] [thread 23308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:37.785245] [I] [thread 23308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:37.785259] [I] [thread 23308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:37.999256] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:37.999602] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:39.000843] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:40.002132] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:40.109497] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:40.109866] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:40.110975] [D] [thread 23313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:40.111067] [I] [thread 23313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:40.111084] [I] [thread 23313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:40.111203] [I] [thread 23313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:40.111215] [I] [thread 23313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:40.251640] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:40.252014] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:41.253296] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:42.254560] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:42.309087] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:42.309411] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:42.310392] [D] [thread 23318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:42.310482] [I] [thread 23318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:42.310499] [I] [thread 23318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:42.310615] [I] [thread 23318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:42.310627] [I] [thread 23318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:42.492500] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:42.492819] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:43.494045] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:44.491862] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:44.492213] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:44.493388] [D] [thread 23323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:44.493483] [I] [thread 23323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:44.493499] [I] [thread 23323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:44.493615] [I] [thread 23323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:44.493627] [I] [thread 23323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:44.703094] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:44.703424] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:45.704675] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:46.705964] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:46.847890] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:46.848272] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:46.849539] [D] [thread 23328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:46.849658] [I] [thread 23328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:46.849677] [I] [thread 23328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:46.849801] [I] [thread 23328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:46.849817] [I] [thread 23328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:47.108360] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:47.108708] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:48.109965] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:49.111271] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:49.156364] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:49.156896] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:49.157682] [D] [thread 23333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:49.157771] [I] [thread 23333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:49.157788] [I] [thread 23333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:49.157905] [I] [thread 23333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:49.157917] [I] [thread 23333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:49.359294] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:49.359816] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:50.361192] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:51.362491] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:51.404482] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:51.404932] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:51.405786] [D] [thread 23338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:51.405876] [I] [thread 23338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:51.405893] [I] [thread 23338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:51.406008] [I] [thread 23338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:51.406021] [I] [thread 23338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:51.572512] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:51.572994] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:52.574287] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:53.575600] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:53.714069] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:53.714673] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:53.715385] [D] [thread 23344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:53.715476] [I] [thread 23344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:53.715492] [I] [thread 23344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:53.715611] [I] [thread 23344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:53.715624] [I] [thread 23344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:53.913589] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:53.914119] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:54.915416] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:55.915736] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:55.916092] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:55.917671] [D] [thread 23350] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:55.917765] [I] [thread 23350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:55.917782] [I] [thread 23350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:55.917899] [I] [thread 23350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:55.917913] [I] [thread 23350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:56.179250] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:56.179566] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:57.180834] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:58.182137] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:58.220815] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:58.221121] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:58.222143] [D] [thread 23356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:40:58.222240] [I] [thread 23356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:58.222256] [I] [thread 23356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:40:58.222373] [I] [thread 23356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:40:58.222386] [I] [thread 23356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:40:58.384205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:58.384519] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:40:59.385789] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:00.387135] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:00.543094] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:00.543427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:00.544478] [D] [thread 23361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:00.544570] [I] [thread 23361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:00.544588] [I] [thread 23361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:00.544706] [I] [thread 23361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:00.544719] [I] [thread 23361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:00.804337] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:00.804648] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:01.805854] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:02.807184] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:02.913682] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:02.914000] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:02.915005] [D] [thread 23366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:02.915097] [I] [thread 23366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:02.915114] [I] [thread 23366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:02.915231] [I] [thread 23366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:02.915244] [I] [thread 23366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:03.177674] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:03.178001] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:04.179276] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:05.168271] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:05.168608] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:05.169632] [D] [thread 23371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:05.169727] [I] [thread 23371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:05.169744] [I] [thread 23371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:05.169862] [I] [thread 23371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:05.169885] [I] [thread 23371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:05.378607] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:05.378955] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:06.380189] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:07.378592] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:07.378929] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:07.380065] [D] [thread 23377] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:07.380159] [I] [thread 23377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:07.380176] [I] [thread 23377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:07.380295] [I] [thread 23377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:07.380308] [I] [thread 23377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:07.571828] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:07.572205] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:08.573420] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:09.574698] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:09.712910] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:09.713264] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:09.714441] [D] [thread 23383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:09.714795] [I] [thread 23383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:09.714840] [I] [thread 23383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:09.715055] [I] [thread 23383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:09.715108] [I] [thread 23383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:09.923487] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:09.923831] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:10.925017] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:11.915584] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:11.915965] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:11.916920] [D] [thread 23388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:11.917013] [I] [thread 23388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:11.917030] [I] [thread 23388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:11.917147] [I] [thread 23388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:11.917159] [I] [thread 23388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:12.118852] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:12.119203] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:13.120393] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:14.121676] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:14.155974] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:14.156303] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:14.157379] [D] [thread 23393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:14.157471] [I] [thread 23393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:14.157488] [I] [thread 23393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:14.157605] [I] [thread 23393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:14.157664] [I] [thread 23393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:14.357085] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:14.357484] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:15.358738] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:16.360074] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:16.380660] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:16.381215] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:16.381973] [D] [thread 23398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:16.382063] [I] [thread 23398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:16.382079] [I] [thread 23398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:16.382198] [I] [thread 23398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:16.382210] [I] [thread 23398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:16.595027] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:16.595555] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:17.596812] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:18.598124] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:18.698824] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:18.699272] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:18.700154] [D] [thread 23404] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:18.700244] [I] [thread 23404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:18.700263] [I] [thread 23404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:18.700381] [I] [thread 23404] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:18.700394] [I] [thread 23404] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:18.899490] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:18.899985] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:19.901337] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:20.902637] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:20.954541] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:20.955086] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:20.955829] [D] [thread 23409] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:20.955918] [I] [thread 23409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:20.955935] [I] [thread 23409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:20.956089] [I] [thread 23409] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:20.956102] [I] [thread 23409] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:21.116663] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:21.116982] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:22.118219] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:23.119660] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:23.139315] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:23.139635] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:23.140660] [D] [thread 23414] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:23.140756] [I] [thread 23414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:23.140773] [I] [thread 23414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:23.140891] [I] [thread 23414] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:23.140904] [I] [thread 23414] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:23.351363] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:23.351715] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:24.352914] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:25.354194] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:25.467493] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:25.467842] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:25.468842] [D] [thread 23419] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:25.468939] [I] [thread 23419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:25.468956] [I] [thread 23419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:25.469076] [I] [thread 23419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:25.469088] [I] [thread 23419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:25.633371] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:25.633718] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:26.634965] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:27.636239] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:27.689528] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:27.690053] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:27.690818] [D] [thread 23424] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:27.690907] [I] [thread 23424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:27.690924] [I] [thread 23424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:27.691051] [I] [thread 23424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:27.691066] [I] [thread 23424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:27.878049] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:27.878438] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:28.879649] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:29.880883] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:29.891923] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:29.892258] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:29.893312] [D] [thread 23429] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:29.893402] [I] [thread 23429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:29.893419] [I] [thread 23429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:29.893534] [I] [thread 23429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:29.893547] [I] [thread 23429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:30.147427] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:30.147819] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:31.149034] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:32.150328] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:32.311500] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:32.311816] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:32.312853] [D] [thread 23434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:32.312947] [I] [thread 23434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:32.312965] [I] [thread 23434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:32.313081] [I] [thread 23434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:32.313094] [I] [thread 23434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:32.507982] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:32.508318] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:33.509560] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:34.510872] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:34.547477] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:34.547796] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:34.548817] [D] [thread 23439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:34.548911] [I] [thread 23439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:34.548928] [I] [thread 23439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:34.549044] [I] [thread 23439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:34.549057] [I] [thread 23439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:34.735104] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:34.735467] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:35.736817] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:36.738082] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:36.787981] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:36.788318] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:36.789289] [D] [thread 23445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:36.789380] [I] [thread 23445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:36.789397] [I] [thread 23445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:36.789512] [I] [thread 23445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:36.789525] [I] [thread 23445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:36.961564] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:36.961931] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:37.963275] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:38.964512] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:39.100877] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:39.101207] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:39.102165] [D] [thread 23450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:39.102257] [I] [thread 23450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:39.102274] [I] [thread 23450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:39.102390] [I] [thread 23450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:39.102402] [I] [thread 23450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:39.316926] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:39.317248] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:40.318468] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:41.319701] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:41.433490] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:41.433796] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:41.434849] [D] [thread 23455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:41.434945] [I] [thread 23455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:41.434961] [I] [thread 23455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:41.435079] [I] [thread 23455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:41.435103] [I] [thread 23455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:41.646787] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:41.647117] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:42.648363] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:43.649612] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:43.762881] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:43.763237] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:43.764266] [D] [thread 23461] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[10:41:43.764364] [I] [thread 23461] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:43.764381] [I] [thread 23461] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[10:41:43.764499] [I] [thread 23461] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[10:41:43.764581] [I] [thread 23461] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[10:41:43.967733] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:43.968221] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:44.153030] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[10:41:44.153515] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[10:41:44.154335] [I] [thread 23465] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[10:41:44.154420] [D] [thread 23465] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[10:41:44.154561] [I] [thread 23465] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[10:41:44.154578] [I] [thread 23465] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[10:41:44.154618] [I] [thread 22013] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[10:41:44.154668] [I] [thread 22013] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[10:41:44.154688] [I] [thread 22013] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[10:41:44.154739] [I] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[10:41:44.154753] [D] [thread 22013] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[10:41:44.154803] [D] [thread 22013] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[10:41:44.154972] [D] [thread 22013] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[10:41:44.155441] [D] [thread 22013] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[10:41:44.155466] [D] [thread 22013] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[10:41:44.155510] [D] [thread 22013] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[10:41:44.155524] [D] [thread 22013] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[10:41:44.155532] [D] [thread 22013] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[10:41:44.155559] [D] [thread 22013] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[10:41:44.155577] [D] [thread 22013] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[10:41:44.155605] [D] [thread 22013] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[10:41:44.155616] [D] [thread 22013] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[10:41:44.155749] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:33923[m
[36m[10:41:44.155775] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:33923 queryId=1[m
[36m[10:41:44.160943] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:33935[m
[36m[10:41:44.161029] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:33935 queryId=1[m
[36m[10:41:44.165414] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:40301[m
[36m[10:41:44.165499] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:40301 queryId=1[m
[36m[10:41:44.169854] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:37993[m
[36m[10:41:44.169944] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:37993 queryId=1[m
[36m[10:41:44.174247] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:38565[m
[36m[10:41:44.174439] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:38565 queryId=1[m
[36m[10:41:44.178717] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:34293[m
[36m[10:41:44.178800] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:34293 queryId=1[m
[36m[10:41:44.182979] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:41837[m
[36m[10:41:44.183064] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:41837 queryId=1[m
[36m[10:41:44.187235] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:40763[m
[36m[10:41:44.187360] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:40763 queryId=1[m
[36m[10:41:44.191515] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.30:40207[m
[36m[10:41:44.191601] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:40207 queryId=1[m
[36m[10:41:44.196060] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.10:35843[m
[36m[10:41:44.196142] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.10:35843 queryId=1[m
[36m[10:41:44.200470] [D] [thread 22013] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:45373[m
[36m[10:41:44.200548] [D] [thread 22013] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:45373 queryId=1[m
[36m[10:41:44.204717] [D] [thread 22013] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[10:41:44.207832] [D] [thread 22025] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[10:41:44.207970] [D] [thread 22025] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[10:41:44.208058] [D] [thread 22025] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  9  type= HardStop[m
[36m[10:41:44.208095] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.208155] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.208304] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.208619] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 34 is notifying completion: HardStop[m
[36m[10:41:44.208662] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::34::0::0[m
[36m[10:41:44.208701] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 34 is terminated; tokens left = 9[m
[36m[10:41:44.208735] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 34 terminationType=HardStop[m
[36m[10:41:44.208781] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::34::0::0 Thread 0[m
[36m[10:41:44.208809] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::34::0::0[m
[36m[10:41:44.208826] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::34::0::0[m
[36m[10:41:44.208832] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.208849] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::34::0::0[m
[32m[10:41:44.208917] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::34::0::0; newCnt(1)[m
[36m[10:41:44.208942] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.208938] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::34::0::0, counter is at 1.[m
[36m[10:41:44.209129] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=34 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.209180] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.209203] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.209234] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.209242] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.209314] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.209471] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 40 is notifying completion: HardStop[m
[36m[10:41:44.209484] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::40::0::0[m
[36m[10:41:44.209512] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 40 is terminated; tokens left = 8[m
[36m[10:41:44.209528] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::40::0::0 Thread 0[m
[36m[10:41:44.209535] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 40 terminationType=HardStop[m
[36m[10:41:44.209548] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::40::0::0[m
[36m[10:41:44.209565] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::40::0::0[m
[36m[10:41:44.209591] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.209595] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::40::0::0[m
[32m[10:41:44.209641] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::40::0::0; newCnt(1)[m
[36m[10:41:44.209661] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::40::0::0, counter is at 1.[m
[36m[10:41:44.209672] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.209815] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=40 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.209865] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.209889] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.209917] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.209917] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.210020] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.210181] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 46 is notifying completion: HardStop[m
[36m[10:41:44.210215] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 46 is terminated; tokens left = 7[m
[36m[10:41:44.210212] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::46::0::0[m
[36m[10:41:44.210241] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 46 terminationType=HardStop[m
[36m[10:41:44.210270] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::46::0::0 Thread 0[m
[36m[10:41:44.210297] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.210298] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::46::0::0[m
[36m[10:41:44.210333] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::46::0::0[m
[36m[10:41:44.210358] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::46::0::0[m
[36m[10:41:44.210394] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[32m[10:41:44.210409] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::46::0::0; newCnt(1)[m
[36m[10:41:44.210434] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::46::0::0, counter is at 1.[m
[36m[10:41:44.210545] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=46 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.210596] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.210624] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.210659] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.210703] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.210745] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.210923] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 52 is notifying completion: HardStop[m
[36m[10:41:44.210961] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 52 is terminated; tokens left = 6[m
[36m[10:41:44.210957] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[10:41:44.210999] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 52 terminationType=HardStop[m
[36m[10:41:44.211025] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::52::0::0 Thread 0[m
2023-10-26 10:41:44.215 postReconfigurationCallback: queryId=1, querySubPlanId=9; queryId=1 subPlanId=9 processedTasks=0 processedTuple=0 processedBuffers=0 processedWatermarks=0 latencyAVG=0 queueSizeAVG=0 availableGlobalBufferAVG=0 availableFixedBufferAVG=0
[36m[10:41:44.211052] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[10:41:44.211062] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.211073] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::52::0::0[m
[36m[10:41:44.211106] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::52::0::0[m
[36m[10:41:44.211155] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[32m[10:41:44.211157] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(1)[m
[36m[10:41:44.211192] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::52::0::0, counter is at 1.[m
[36m[10:41:44.211314] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=52 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.211365] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.211447] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:58 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.211460] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.211488] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.211635] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.211824] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 58 is notifying completion: HardStop[m
[36m[10:41:44.211859] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 58 is terminated; tokens left = 5[m
[36m[10:41:44.211862] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::58::0::0[m
[36m[10:41:44.211886] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 58 terminationType=HardStop[m
[36m[10:41:44.211914] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::58::0::0 Thread 0[m
[36m[10:41:44.211981] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::58::0::0[m
[36m[10:41:44.212012] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::58::0::0[m
[36m[10:41:44.212030] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.212035] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::58::0::0[m
[32m[10:41:44.212101] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::58::0::0; newCnt(1)[m
[36m[10:41:44.212126] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::58::0::0, counter is at 1.[m
[36m[10:41:44.212146] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.212343] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=58 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.212400] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:58 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.212429] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:64 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.212465] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.212466] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.212576] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.212774] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 64 is notifying completion: HardStop[m
[36m[10:41:44.212811] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 64 is terminated; tokens left = 4[m
[36m[10:41:44.212809] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::64::0::0[m
[36m[10:41:44.212839] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 64 terminationType=HardStop[m
[36m[10:41:44.212862] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::64::0::0 Thread 0[m
[36m[10:41:44.212890] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::64::0::0[m
[36m[10:41:44.212897] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.212911] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::64::0::0[m
[36m[10:41:44.212933] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::64::0::0[m
[32m[10:41:44.212984] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::64::0::0; newCnt(1)[m
[36m[10:41:44.212991] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.213008] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::64::0::0, counter is at 1.[m
[36m[10:41:44.213137] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=64 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.213187] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:64 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.213213] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.213246] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.213262] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.213327] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.213508] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 70 is notifying completion: HardStop[m
[36m[10:41:44.213540] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::70::0::0[m
[36m[10:41:44.213545] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 70 is terminated; tokens left = 3[m
[36m[10:41:44.213585] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 70 terminationType=HardStop[m
[36m[10:41:44.213601] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::70::0::0 Thread 0[m
[36m[10:41:44.213628] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::70::0::0[m
[36m[10:41:44.213646] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.213657] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::70::0::0[m
[36m[10:41:44.213680] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::70::0::0[m
[32m[10:41:44.213728] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::70::0::0; newCnt(1)[m
[36m[10:41:44.213736] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.213752] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::70::0::0, counter is at 1.[m
[36m[10:41:44.213883] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=70 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.213946] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.213975] [D] [thread 22025] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:76 PartitionId: 0 SubpartitionID: 0[m
[36m[10:41:44.214009] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.214023] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.214092] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[10:41:44.214268] [D] [thread 22025] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 76 is notifying completion: HardStop[m
[36m[10:41:44.214301] [D] [thread 22023] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::76::0::0[m
[36m[10:41:44.214304] [D] [thread 22025] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 76 is terminated; tokens left = 2[m
[36m[10:41:44.214345] [D] [thread 22025] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 76 terminationType=HardStop[m
[36m[10:41:44.214358] [D] [thread 22023] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::76::0::0 Thread 0[m
[36m[10:41:44.214386] [D] [thread 22023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::76::0::0[m
[36m[10:41:44.214407] [D] [thread 22023] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::76::0::0[m
[36m[10:41:44.214408] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.214429] [D] [thread 22023] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::76::0::0[m
[32m[10:41:44.214477] [I] [thread 22023] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::76::0::0; newCnt(1)[m
[36m[10:41:44.214495] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.214500] [D] [thread 22023] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::76::0::0, counter is at 1.[m
[36m[10:41:44.214642] [D] [thread 22025] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=76 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[10:41:44.214692] [D] [thread 22025] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:76 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[10:41:44.214757] [D] [thread 22023] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[10:41:44.214989] [D] [thread 22023] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 9 Sink FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits))) is terminated; tokens left = 1[m
[36m[10:41:44.215057] [D] [thread 22023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.215184] [D] [thread 22023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[10:41:44.215498] [D] [thread 22023] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits))) ] is completed with  HardStop[m
[36m[10:41:44.215894] [D] [thread 22023] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=9[m
[36m[10:41:44.215922] [D] [thread 22023] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=9[m
[36m[10:41:44.215971] [D] [thread 22023] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-9 is marked as stopped now[m
[36m[10:41:44.216218] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Destroy[m
[36m[10:41:44.216366] [D] [thread 22025] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Destroy[m
[36m[10:41:44.216801] [D] [thread 22025] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  9[m
[36m[10:41:44.216940] [D] [thread 22025] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 9 was successful[m
[36m[10:41:44.216964] [D] [thread 22025] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  9  succeeded[m
[36m[10:41:44.216984] [D] [thread 22025] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[36m[10:41:44.262833] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.262973] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::40::0::0(threadId=0)[m
[32m[10:41:44.263070] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::40::0::0; newCnt(0)[m
[36m[10:41:44.263138] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::40::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.379005] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.379143] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::76::0::0(threadId=0)[m
[32m[10:41:44.379233] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::76::0::0; newCnt(0)[m
[36m[10:41:44.379288] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::76::0::0(threadId=0) but there is still some active subpartition: 0[m
[1m[41m[10:41:44.387581] [C] [thread 22013] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[10:41:44.387678] [I] [thread 22013] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[10:41:44.387753] [I] [thread 22013] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[10:41:44.387832] [W] [thread 22013] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[10:41:44.387847] [I] [thread 22013] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[10:41:44.387858] [W] [thread 22013] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[10:41:44.517826] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.518225] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::34::0::0(threadId=0)[m
[32m[10:41:44.518364] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::34::0::0; newCnt(0)[m
[36m[10:41:44.518447] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::34::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.522488] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.522630] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::46::0::0(threadId=0)[m
[32m[10:41:44.522729] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::46::0::0; newCnt(0)[m
[36m[10:41:44.522911] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::46::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.527221] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.527354] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::52::0::0(threadId=0)[m
[32m[10:41:44.527453] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(0)[m
[36m[10:41:44.527525] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::52::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.809869] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.809990] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::58::0::0(threadId=0)[m
[32m[10:41:44.810072] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::58::0::0; newCnt(0)[m
[36m[10:41:44.810120] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::58::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.812936] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.813058] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::64::0::0(threadId=0)[m
[32m[10:41:44.813135] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::64::0::0; newCnt(0)[m
[36m[10:41:44.813179] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::64::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:44.816194] [D] [thread 22022] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:44297): EndOfStream received for channel [m
[36m[10:41:44.816326] [D] [thread 22022] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::70::0::0(threadId=0)[m
[32m[10:41:44.816409] [I] [thread 22022] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::70::0::0; newCnt(0)[m
[36m[10:41:44.816455] [D] [thread 22022] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::70::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[10:41:45.154824] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:41:45.337183] [E] [thread 23378] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::31::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab017d1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9d597d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab017db9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa747ffeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7298c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f6336c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9dcabb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f645ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f646c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab017d1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9d597d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab017db9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa747ffeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7298c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f6336c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9dcabb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f645ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f646c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:45.613111] [E] [thread 23378] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::55::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaafbbf1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff76e27e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaafbbfb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff80d0ffeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff80b28c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ec36c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7753bb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ed5ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ed6c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaafbbf1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff76e27e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaafbbfb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff80d0ffeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff80b28c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ec36c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7753bb17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ed5ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff78ed6c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:45.903305] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:45.904373] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:35843 went dead so we remove it[m
[32m[10:41:45.904522] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[32m[10:41:45.904547] [I] [thread 22029] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:41:45.904576] [I] [thread 22029] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:41:45.904583] [I] [thread 22029] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:41:45.904608] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.904619] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.904628] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.904636] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:41:45.904680] [D] [thread 22029] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:41:45.909478] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:45.910359] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45373 went dead so we remove it[m
[32m[10:41:45.910504] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[10:41:45.910529] [I] [thread 22029] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:41:45.910550] [I] [thread 22029] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[10:41:45.910557] [I] [thread 22029] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[10:41:45.910574] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.910583] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.910591] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[10:41:45.910600] [I] [thread 22029] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[10:41:45.910621] [D] [thread 22029] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:41:46.156151] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:41:46.319379] [E] [thread 23458] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 5 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 3 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab03911e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff92a1ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab0391b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c906feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c71f823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c74e623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff93132b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff94accca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff94acdc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab03911e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff92a1ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab0391b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c906feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c71f823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c74e623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff93132b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff94accca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff94acdc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:46.631549] [E] [thread 23378] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 6 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 2 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae172e1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8bde1e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae172eb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95cc9feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95ae2823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95b11623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8c4f5b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8de8fca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8de90c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae172e1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8bde1e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae172eb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95cc9feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95ae2823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff95b11623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8c4f5b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8de8fca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8de90c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:46.921304] [E] [thread 23458] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 7 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 1 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaba26f1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff89070e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaba26fb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92f58feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92d71823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92da0623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff89784b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8b11eca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8b11fc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaba26f1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff89070e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaba26fb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92f58feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92d71823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff92da0623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff89784b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8b11eca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff8b11fc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:47.060475] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:47.061461] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:35843 went dead so we remove it[m
[32m[10:41:47.061609] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[33m[1m[10:41:47.061637] [W] [thread 22029] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[10:41:47.066533] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:47.067507] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45373 went dead so we remove it[m
[32m[10:41:47.067651] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[10:41:47.067680] [W] [thread 22029] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[10:41:47.084446] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:47.085556] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:40301 went dead so we remove it[m
[32m[10:41:47.085707] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=3][m
[32m[10:41:47.085733] [I] [thread 22029] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:41:47.085745] [I] [thread 22029] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:41:47.085768] [D] [thread 22029] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:41:47.091118] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:47.092177] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:33935 went dead so we remove it[m
[32m[10:41:47.092325] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=3][m
[32m[10:41:47.092352] [I] [thread 22029] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:41:47.092364] [I] [thread 22029] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:41:47.092388] [D] [thread 22029] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[10:41:47.097878] [E] [thread 22029] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[10:41:47.098885] [W] [thread 22029] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:33923 went dead so we remove it[m
[32m[10:41:47.099037] [I] [thread 22029] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=3][m
[32m[10:41:47.099064] [I] [thread 22029] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[10:41:47.099075] [I] [thread 22029] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[10:41:47.099098] [D] [thread 22029] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[10:41:47.157417] [D] [thread 22028] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[10:41:47.243933] [E] [thread 23378] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 8 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 8 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5d431e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8e0eee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5d43b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97fdafeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97df3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97e22623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8e804b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff901a0ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff901a1c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5d431e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8e0eee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab5d43b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97fdafeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97df3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff97e22623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8e804b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff901a0ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff901a1c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[10:41:47.442082] [E] [thread 23458] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 4 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaea52d1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9b2b3e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaea52db9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa519bfeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa4fb4823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa4fe3623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9b9c7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d361ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d362c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaea52d1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9b2b3e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaea52db9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa519bfeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa4fb4823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa4fe3623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9b9c7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d361ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9d362c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
