
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.210-SNAPSHOT
[32m[12:31:25.055069] [I] [thread 29296] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [DEFAULT|THREAD_LOCAL]. 
Value: DEFAULT
Default Value: DEFAULT

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[12:31:25.055267] [I] [thread 29296] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[12:31:25.055521] [D] [thread 29296] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.30 restPort=8081 rpcIp=192.168.2.30 rpcPort=4000[m
[36m[12:31:25.056605] [D] [thread 29296] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[12:31:25.056997] [I] [thread 29296] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[12:31:25.057826] [D] [thread 29296] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[12:31:25.057894] [D] [thread 29296] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[12:31:25.058587] [D] [thread 29296] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[12:31:25.058665] [D] [thread 29296] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[12:31:25.058767] [D] [thread 29296] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[12:31:25.059163] [D] [thread 29296] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[12:31:25.059321] [D] [thread 29296] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[12:31:25.107620] [D] [thread 29296] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[12:31:25.107717] [D] [thread 29296] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:31:25.108291] [D] [thread 29296] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:31:25.108756] [D] [thread 29296] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[12:31:25.109140] [D] [thread 29296] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[12:31:25.109485] [D] [thread 29296] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[12:31:25.109725] [D] [thread 29296] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[12:31:25.110184] [D] [thread 29296] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[12:31:25.111380] [D] [thread 29296] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[12:31:25.111455] [D] [thread 29296] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[12:31:25.111773] [D] [thread 29296] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[12:31:25.112227] [D] [thread 29296] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[12:31:25.112552] [D] [thread 29296] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[12:31:25.113568] [D] [thread 29296] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[12:31:25.114138] [D] [thread 29296] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[12:31:25.114337] [D] [thread 29296] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[12:31:25.114645] [D] [thread 29296] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[12:31:25.115462] [I] [thread 29296] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[12:31:25.116124] [I] [thread 29296] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[12:31:25.116660] [I] [thread 29296] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[12:31:25.117532] [I] [thread 29296] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[12:31:25.117662] [I] [thread 29296] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[12:31:25.117681] [D] [thread 29296] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[32m[12:31:25.118074] [I] [thread 29304] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[12:31:25.118075] [D] [thread 29296] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[36m[12:31:25.118146] [D] [thread 29304] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[12:31:25.118514] [D] [thread 29305] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[12:31:25.125121] [D] [thread 29305] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.30:4000[m
[36m[12:31:25.125142] [D] [thread 29296] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[12:31:25.125193] [D] [thread 29296] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[12:31:25.125688] [D] [thread 29296] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[12:31:25.125750] [D] [thread 29296] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[12:31:25.125783] [D] [thread 29296] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[12:31:25.126006] [D] [thread 29296] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[12:31:25.126072] [D] [thread 29296] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[12:31:25.126095] [D] [thread 29296] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[12:31:25.126382] [D] [thread 29296] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[12:31:25.126439] [D] [thread 29296] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[12:31:25.126464] [D] [thread 29296] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[12:31:25.126751] [D] [thread 29296] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[12:31:25.126786] [D] [thread 29296] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[12:31:25.126804] [D] [thread 29296] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[12:31:25.126845] [D] [thread 29296] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[12:31:25.126854] [D] [thread 29296] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[12:31:25.127570] [D] [thread 29296] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[12:31:25.127738] [D] [thread 29296] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.30 coordinatorPort=4000 localWorkerIp=192.168.2.30 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=DEFAULT[m
[36m[12:31:25.127769] [D] [thread 29296] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[12:31:25.127817] [D] [thread 29296] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[12:31:25.128170] [D] [thread 29296] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[12:31:25.128285] [D] [thread 29296] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[12:31:25.128388] [I] [thread 29296] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:31:25.129015] [I] [thread 29296] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[12:31:25.129088] [I] [thread 29296] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:31:25.129348] [I] [thread 29296] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[12:31:25.129401] [I] [thread 29296] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:31:25.129975] [I] [thread 29296] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[12:31:25.130030] [I] [thread 29296] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:31:25.130694] [I] [thread 29296] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[12:31:25.131159] [D] [thread 29296] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[12:31:25.131476] [D] [thread 29296] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[12:31:25.131756] [I] [thread 29296] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[12:31:25.132079] [I] [thread 29296] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[12:31:25.132202] [I] [thread 29296] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[12:31:25.132280] [I] [thread 29296] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[12:31:25.145093] [D] [thread 29296] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[12:31:25.154637] [D] [thread 29296] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[12:31:25.197549] [D] [thread 29296] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[12:31:25.198617] [D] [thread 29296] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[12:31:25.198900] [I] [thread 29296] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[12:31:25.199073] [D] [thread 29296] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[12:31:25.199152] [D] [thread 29296] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[12:31:25.199411] [D] [thread 29296] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[12:31:25.199532] [D] [thread 29296] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[12:31:25.199602] [D] [thread 29296] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[12:31:25.199632] [D] [thread 29296] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[12:31:25.199755] [D] [thread 29296] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[12:31:25.199908] [D] [thread 29296] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[12:31:25.200484] [D] [thread 29296] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[12:31:25.200603] [D] [thread 29296] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[12:31:25.200947] [D] [thread 29296] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[12:31:25.201186] [D] [thread 29296] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.30:0) Creating ZmqServer()[m
[33m[1m[12:31:25.201227] [W] [thread 29296] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.30:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[12:31:25.201289] [D] [thread 29296] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.30:0): Starting server..[m
[36m[12:31:25.203602] [D] [thread 29310] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.30:0):  Trying to bind on tcp://192.168.2.30:0[m
[36m[12:31:25.205054] [D] [thread 29310] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.30:0):  Created socket on 192.168.2.30: 0[m
[36m[12:31:25.205209] [D] [thread 29310] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.30: 42455[m
[36m[12:31:25.206255] [D] [thread 29313] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.30: 42455[m
[32m[12:31:25.206395] [I] [thread 29296] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.30:42455[m
[36m[12:31:25.206498] [D] [thread 29296] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698311790  with numThreads= 1[m
[36m[12:31:25.206826] [D] [thread 29296] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[12:31:25.207255] [D] [thread 29296] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[12:31:25.207303] [D] [thread 29296] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[12:31:25.207333] [D] [thread 29314] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[12:31:25.207448] [D] [thread 29296] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[12:31:25.207483] [D] [thread 29296] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.30:0: 0[m
[36m[12:31:25.207547] [D] [thread 29314] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[12:31:25.208062] [D] [thread 29315] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[12:31:25.208544] [D] [thread 29315] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[12:31:25.211220] [D] [thread 29315] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.30:0: 41931[m
[36m[12:31:25.211256] [D] [thread 29296] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.30:41931: 41931[m
[36m[12:31:25.211278] [D] [thread 29296] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[12:31:25.211303] [D] [thread 29296] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.30:4000[m
[36m[12:31:25.211404] [D] [thread 29296] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.30:4000[m
[36m[12:31:25.213284] [D] [thread 29315] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[12:31:25.214057] [D] [thread 29296] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[12:31:25.215042] [I] [thread 29296] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[12:31:25.215112] [D] [thread 29296] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[12:31:25.218630] [D] [thread 29296] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.30"
grpcPort: 41931
dataPort: 42455
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 33389504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:25.231687] [D] [thread 29306] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 41931
dataPort: 42455
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 33389504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:25.232045] [D] [thread 29306] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 41931
dataPort: 42455
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 33389504
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:25.232172] [D] [thread 29306] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[12:31:25.232198] [W] [thread 29306] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[12:31:25.232217] [D] [thread 29306] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:25.232231] [D] [thread 29306] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:25.232270] [D] [thread 29306] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[12:31:25.232441] [D] [thread 29306] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[12:31:25.232526] [I] [thread 29306] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[12:31:25.232640] [D] [thread 29306] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:25.232905] [D] [thread 29306] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:25.233004] [I] [thread 29306] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:25.233039] [D] [thread 29306] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:25.233081] [D] [thread 29306] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:25.233091] [D] [thread 29306] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:25.233135] [D] [thread 29306] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:25.234363] [D] [thread 29306] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[12:31:25.236197] [D] [thread 29296] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[12:31:25.236277] [D] [thread 29296] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[12:31:25.236381] [D] [thread 29296] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[12:31:25.236398] [D] [thread 29296] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[12:31:25.264808] [D] [thread 29296] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[12:31:25.264936] [D] [thread 29296] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[12:31:25.264952] [D] [thread 29296] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[12:31:25.265551] [D] [thread 29296] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[12:31:25.265637] [D] [thread 29296] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[12:31:25.265662] [D] [thread 29296] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[12:31:25.265670] [D] [thread 29296] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[12:31:25.265703] [D] [thread 29296] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[12:31:25.266121] [D] [thread 29296] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[12:31:25.268612] [D] [thread 29306] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:25.268709] [I] [thread 29306] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:25.268731] [D] [thread 29306] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:25.268813] [D] [thread 29306] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:25.269035] [D] [thread 29306] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:25.269090] [D] [thread 29306] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:25.269278] [D] [thread 29306] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:25.269362] [D] [thread 29306] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:25.269438] [D] [thread 29306] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[12:31:25.269488] [D] [thread 29306] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:25.269630] [D] [thread 29306] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:25.269745] [D] [thread 29306] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:25.269813] [D] [thread 29306] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:25.269831] [D] [thread 29306] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:25.269861] [D] [thread 29306] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[12:31:25.269893] [D] [thread 29306] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:25.270023] [D] [thread 29306] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:25.270050] [D] [thread 29306] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:25.270087] [D] [thread 29306] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:25.270101] [D] [thread 29306] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:25.270123] [D] [thread 29306] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[12:31:25.270149] [D] [thread 29306] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:25.270227] [D] [thread 29306] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:25.270252] [D] [thread 29306] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:25.270300] [D] [thread 29306] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:25.270316] [D] [thread 29306] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:25.270337] [D] [thread 29306] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[12:31:25.270349] [D] [thread 29306] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:25.272016] [D] [thread 29296] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[12:31:25.272127] [D] [thread 29296] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[12:31:25.272142] [D] [thread 29296] [NesWorker.cpp:379] [connect] registered= true[m
[36m[12:31:25.272188] [D] [thread 29296] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[12:31:25.272320] [D] [thread 29296] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[12:31:25.273071] [D] [thread 29296] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[12:31:25.273163] [I] [thread 29320] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.30:8081[m
[32m[12:31:25.289097] [I] [thread 29320] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[12:31:25.289261] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:25.300159] [D] [thread 29296] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[12:31:25.300250] [D] [thread 29296] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[12:31:25.300319] [D] [thread 29296] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[12:31:25.300769] [D] [thread 29296] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[12:31:26.290449] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:27.291683] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:28.292966] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:29.294252] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:30.026451] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:30.027644] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:30.029616] [D] [thread 29324] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[12:31:30.032654] [D] [thread 29324] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[12:31:30.032769] [D] [thread 29324] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[12:31:30.032888] [D] [thread 29324] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[12:31:30.035026] [D] [thread 29325] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_12-31-30_5334880.cpp[m
[36m[12:31:30.035927] [D] [thread 29325] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[12:31:30.036808] [D] [thread 29325] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_26-10-2023_12-31-30_5334880.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_26-10-2023_12-31-30_5334880.cpp'[m
[36m[12:31:31.028119] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:31.720335] [I] [thread 29325] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1685.438759ms[m
[36m[12:31:31.721913] [D] [thread 29324] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[12:31:31.722003] [D] [thread 29324] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[12:31:31.722030] [D] [thread 29324] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[12:31:31.722080] [D] [thread 29324] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[12:31:32.029399] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:32.035340] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:32.035772] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:32.036705] [I] [thread 29330] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:32.038064] [I] [thread 29330] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:32.334877] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:32.335630] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:32.336401] [I] [thread 29331] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:32.337281] [I] [thread 29331] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:32.671581] [D] [thread 29306] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.10"
grpcPort: 42705
dataPort: 42327
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:31:32.671798] [D] [thread 29306] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.10"
grpcPort: 42705
dataPort: 42327
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:31:32.671859] [D] [thread 29306] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:32.672077] [D] [thread 29306] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:32.672106] [D] [thread 29306] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:32.672152] [D] [thread 29306] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[12:31:32.672269] [D] [thread 29306] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:32.672348] [I] [thread 29306] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:32.672497] [I] [thread 29306] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:32.672660] [D] [thread 29306] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[12:31:32.672880] [D] [thread 29306] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:32.673105] [D] [thread 29306] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:32.673194] [I] [thread 29306] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:31:32.673222] [D] [thread 29306] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:31:32.673262] [D] [thread 29306] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:32.673278] [D] [thread 29306] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:32.673299] [D] [thread 29306] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:32.673812] [D] [thread 29306] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[12:31:33.336938] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:34.338228] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:35.339521] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:35.567234] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:35.567676] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:35.568481] [I] [thread 29332] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:35.569408] [I] [thread 29332] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:35.710949] [D] [thread 29319] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 34411
dataPort: 39083
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:31:35.711223] [D] [thread 29319] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 34411
dataPort: 39083
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:31:35.711300] [D] [thread 29319] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:35.711601] [D] [thread 29319] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:35.711640] [D] [thread 29319] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:35.711704] [D] [thread 29319] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[12:31:35.711865] [D] [thread 29319] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:35.712041] [I] [thread 29319] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:35.712201] [I] [thread 29319] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:35.712313] [D] [thread 29319] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[12:31:35.712418] [D] [thread 29319] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:35.712728] [D] [thread 29319] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:35.712804] [I] [thread 29319] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:31:35.712836] [D] [thread 29319] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:31:35.712882] [D] [thread 29319] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:35.712906] [D] [thread 29319] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:35.712933] [D] [thread 29319] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:35.713524] [D] [thread 29319] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[12:31:36.569098] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:37.570398] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:38.571698] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:38.646090] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:38.646508] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:38.647366] [I] [thread 29333] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:38.648799] [I] [thread 29333] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:38.796830] [D] [thread 29319] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 34215
dataPort: 32995
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485440414
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:38.797049] [D] [thread 29319] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 34215
dataPort: 32995
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485440414
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:38.797111] [D] [thread 29319] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:38.797418] [D] [thread 29319] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:38.797449] [D] [thread 29319] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:38.797600] [D] [thread 29319] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[12:31:38.797909] [D] [thread 29319] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:38.798054] [I] [thread 29319] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:38.798256] [I] [thread 29319] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:38.798425] [D] [thread 29319] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[12:31:38.798577] [D] [thread 29319] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:38.798976] [D] [thread 29319] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:38.799117] [I] [thread 29319] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:31:38.799148] [D] [thread 29319] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:31:38.799190] [D] [thread 29319] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:38.799208] [D] [thread 29319] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:38.799229] [D] [thread 29319] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:38.800081] [D] [thread 29319] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[12:31:38.836000] [D] [thread 29319] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:38.836246] [I] [thread 29319] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:31:38.836291] [D] [thread 29319] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:31:38.836383] [D] [thread 29319] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[12:31:38.836590] [D] [thread 29319] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:38.836682] [D] [thread 29319] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[12:31:38.836810] [D] [thread 29319] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[12:31:38.836856] [D] [thread 29319] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:38.836937] [D] [thread 29319] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[12:31:38.837148] [D] [thread 29319] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:38.837513] [D] [thread 29319] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:38.837689] [D] [thread 29319] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:38.837940] [D] [thread 29319] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:38.838200] [D] [thread 29319] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:38.838325] [D] [thread 29319] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:38.838505] [D] [thread 29319] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[12:31:38.838674] [D] [thread 29319] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:38.839192] [D] [thread 29319] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:38.839310] [D] [thread 29319] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:38.839395] [D] [thread 29319] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:38.839477] [D] [thread 29319] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:38.839520] [D] [thread 29319] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:38.839584] [D] [thread 29319] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[12:31:38.839738] [D] [thread 29319] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:38.840171] [D] [thread 29319] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:38.840241] [D] [thread 29319] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:38.840388] [D] [thread 29319] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:38.840515] [D] [thread 29319] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:38.840586] [D] [thread 29319] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:38.840733] [D] [thread 29319] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[12:31:38.840878] [D] [thread 29319] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:38.841245] [D] [thread 29319] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:38.841366] [D] [thread 29319] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:38.841504] [D] [thread 29319] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:38.841554] [D] [thread 29319] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:38.841591] [D] [thread 29319] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:38.841704] [D] [thread 29319] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[12:31:38.841736] [D] [thread 29319] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:38.846300] [D] [thread 29334] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[12:31:38.846409] [D] [thread 29334] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[12:31:38.846428] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:31:38.846447] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:31:38.846465] [D] [thread 29334] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[12:31:38.846473] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:38.846482] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:38.846493] [D] [thread 29334] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:38.846550] [D] [thread 29334] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:38.846652] [I] [thread 29334] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:38.846692] [D] [thread 29334] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:38.846706] [D] [thread 29334] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:38.846739] [D] [thread 29334] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[12:31:38.846751] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:31:38.846763] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:31:38.846776] [D] [thread 29334] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[12:31:38.846836] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:31:38.846848] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:31:38.846859] [D] [thread 29334] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:31:38.846931] [I] [thread 29334] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[12:31:38.846976] [D] [thread 29334] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:38.847140] [D] [thread 29334] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:38.847157] [D] [thread 29334] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:39.647782] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:40.649088] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:41.650366] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:41.922325] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:41.922798] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:41.923464] [I] [thread 29335] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:41.924927] [I] [thread 29335] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:42.066978] [D] [thread 29334] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 35947
dataPort: 40149
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2484987088
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:42.067267] [D] [thread 29334] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 35947
dataPort: 40149
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2484987088
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:42.067346] [D] [thread 29334] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:42.067717] [D] [thread 29334] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:42.067748] [D] [thread 29334] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:42.067806] [D] [thread 29334] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[12:31:42.068046] [D] [thread 29334] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:42.068148] [I] [thread 29334] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:42.068295] [I] [thread 29334] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:42.068380] [D] [thread 29334] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[12:31:42.068480] [D] [thread 29334] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:42.068815] [D] [thread 29334] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:42.068880] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:31:42.068911] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:31:42.068957] [D] [thread 29334] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:42.068980] [D] [thread 29334] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:42.069006] [D] [thread 29334] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:42.069593] [D] [thread 29334] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[12:31:42.105866] [D] [thread 29334] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:42.105952] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:31:42.105976] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:31:42.106036] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[12:31:42.106182] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:42.106214] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[12:31:42.106266] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:31:42.106290] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[12:31:42.106309] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:42.106341] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:31:42.106389] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:42.106546] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:42.106620] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:42.106678] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:42.106711] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:31:42.106764] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:42.106794] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:42.106842] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:31:42.106896] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:42.107022] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:42.107066] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:42.107113] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:42.107146] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:31:42.107204] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:42.107236] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:42.107284] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:31:42.107342] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:42.107502] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:42.107553] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:42.107612] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:42.107672] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:42.107706] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:42.107737] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:42.107786] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:31:42.107842] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:42.108072] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:42.108136] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:42.108199] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:42.108232] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:42.108265] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:42.108296] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:42.108346] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:31:42.108373] [D] [thread 29334] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:42.112786] [D] [thread 29336] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[12:31:42.112903] [D] [thread 29336] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[12:31:42.112940] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:31:42.112974] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:31:42.113007] [D] [thread 29336] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[12:31:42.113027] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:42.113047] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:42.113070] [D] [thread 29336] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:42.113152] [D] [thread 29336] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:42.113318] [I] [thread 29336] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:42.113363] [D] [thread 29336] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:42.113391] [D] [thread 29336] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:42.113436] [D] [thread 29336] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[12:31:42.113461] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:31:42.113487] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:31:42.113514] [D] [thread 29336] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[12:31:42.113535] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:31:42.113555] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:31:42.113670] [D] [thread 29336] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:31:42.113819] [I] [thread 29336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[12:31:42.113886] [D] [thread 29336] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:42.114274] [D] [thread 29336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:42.114310] [D] [thread 29336] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:42.924078] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:43.925410] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:44.926722] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:45.790872] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:45.791318] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:45.791895] [I] [thread 29337] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:45.793582] [I] [thread 29337] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:45.939115] [D] [thread 29334] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 42673
dataPort: 35681
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2484716271
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:45.939355] [D] [thread 29334] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 42673
dataPort: 35681
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2484716271
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:45.939421] [D] [thread 29334] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:45.939848] [D] [thread 29334] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:45.940037] [D] [thread 29334] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:45.940145] [D] [thread 29334] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[12:31:45.940345] [D] [thread 29334] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:45.940429] [I] [thread 29334] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:45.940712] [I] [thread 29334] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:45.940931] [D] [thread 29334] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[12:31:45.941096] [D] [thread 29334] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:45.941686] [D] [thread 29334] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:45.941778] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:31:45.941811] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:31:45.941856] [D] [thread 29334] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:45.941876] [D] [thread 29334] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:45.941900] [D] [thread 29334] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:45.942742] [D] [thread 29334] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[12:31:45.978431] [D] [thread 29334] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:45.978520] [I] [thread 29334] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:31:45.978549] [D] [thread 29334] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:31:45.978613] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[12:31:45.978764] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:45.978799] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[12:31:45.978883] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:31:45.978908] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:31:45.978929] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[12:31:45.978965] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:45.979010] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:31:45.979045] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:45.979205] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:45.979278] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:45.979349] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:45.979452] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:31:45.979479] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:31:45.979499] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:45.979632] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:45.979679] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:31:45.979771] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:45.980145] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:45.980210] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:45.980351] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:45.980425] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:31:45.980479] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:31:45.980530] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:45.980590] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:45.980632] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:31:45.980718] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:45.980976] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:45.981077] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:45.981179] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:45.981296] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:45.981321] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:45.981380] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:45.981411] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:45.981473] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:31:45.981566] [D] [thread 29334] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:45.981869] [D] [thread 29334] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:45.981944] [D] [thread 29334] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:45.981995] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:45.982054] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:45.982114] [D] [thread 29334] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:45.982143] [D] [thread 29334] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:45.982188] [D] [thread 29334] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:45.982280] [D] [thread 29334] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:31:45.982301] [D] [thread 29334] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:45.986027] [D] [thread 29336] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[12:31:45.986110] [D] [thread 29336] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[12:31:45.986132] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:31:45.986153] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:31:45.986174] [D] [thread 29336] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[12:31:45.986184] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:45.986196] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:45.986209] [D] [thread 29336] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:45.986265] [D] [thread 29336] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:45.986372] [I] [thread 29336] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:45.986400] [D] [thread 29336] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:45.986417] [D] [thread 29336] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:45.986433] [D] [thread 29336] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[12:31:45.986445] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:31:45.986475] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:31:45.986492] [D] [thread 29336] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[12:31:45.986503] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:31:45.986514] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:31:45.986527] [D] [thread 29336] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:31:45.986608] [I] [thread 29336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[12:31:45.986663] [D] [thread 29336] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:45.986902] [D] [thread 29336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:45.986923] [D] [thread 29336] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:46.792560] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:47.793817] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:48.795212] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:49.602704] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:49.603303] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:49.604291] [I] [thread 29339] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:49.606319] [I] [thread 29339] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:49.748938] [D] [thread 29336] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 33423
dataPort: 46389
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2484596619
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:49.749218] [D] [thread 29336] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 33423
dataPort: 46389
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2484596619
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:49.749299] [D] [thread 29336] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:49.749771] [D] [thread 29336] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:49.749835] [D] [thread 29336] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:49.749928] [D] [thread 29336] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[12:31:49.750100] [D] [thread 29336] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:49.750190] [I] [thread 29336] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:49.750334] [I] [thread 29336] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:49.750417] [D] [thread 29336] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[12:31:49.750517] [D] [thread 29336] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:49.750973] [D] [thread 29336] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:49.751043] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:31:49.751077] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:31:49.751123] [D] [thread 29336] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:49.751146] [D] [thread 29336] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:49.751172] [D] [thread 29336] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:49.751764] [D] [thread 29336] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[12:31:49.788867] [D] [thread 29336] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:49.788990] [I] [thread 29336] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:31:49.789031] [D] [thread 29336] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:31:49.789121] [D] [thread 29336] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[12:31:49.789336] [D] [thread 29336] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:49.789397] [D] [thread 29336] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[12:31:49.789482] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:31:49.789518] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:31:49.789547] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:31:49.789584] [D] [thread 29336] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[12:31:49.789620] [D] [thread 29336] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:49.789658] [D] [thread 29336] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:31:49.789715] [D] [thread 29336] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:49.789872] [D] [thread 29336] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:49.789926] [D] [thread 29336] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:49.789984] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:49.790021] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:31:49.790048] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:31:49.790076] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[12:31:49.790109] [D] [thread 29336] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:49.790138] [D] [thread 29336] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:49.790189] [D] [thread 29336] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:31:49.790243] [D] [thread 29336] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:49.790383] [D] [thread 29336] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:49.790432] [D] [thread 29336] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:49.790489] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:49.790545] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:31:49.790575] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:31:49.790602] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[12:31:49.790636] [D] [thread 29336] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:49.790668] [D] [thread 29336] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:49.790734] [D] [thread 29336] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:31:49.790798] [D] [thread 29336] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:49.790963] [D] [thread 29336] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:49.791018] [D] [thread 29336] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:49.791083] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:49.791117] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:49.791146] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:49.791173] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:49.791206] [D] [thread 29336] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:49.791238] [D] [thread 29336] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:49.791287] [D] [thread 29336] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:31:49.791346] [D] [thread 29336] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:49.791505] [D] [thread 29336] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:49.791556] [D] [thread 29336] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:49.791616] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:49.791650] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:49.791679] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:49.791707] [D] [thread 29336] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:49.791740] [D] [thread 29336] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:49.791769] [D] [thread 29336] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:49.791815] [D] [thread 29336] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:31:49.791841] [D] [thread 29336] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:49.795908] [D] [thread 29338] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 2
[m
[36m[12:31:49.796027] [D] [thread 29338] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[12:31:49.796050] [I] [thread 29338] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:31:49.796074] [D] [thread 29338] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:31:49.796097] [D] [thread 29338] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[12:31:49.796109] [I] [thread 29338] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:49.796121] [D] [thread 29338] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:49.796135] [D] [thread 29338] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:49.796196] [D] [thread 29338] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:49.796312] [I] [thread 29338] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:49.796342] [D] [thread 29338] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:49.796376] [D] [thread 29338] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:49.796396] [D] [thread 29338] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 2[m
[32m[12:31:49.796410] [I] [thread 29338] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:31:49.796426] [D] [thread 29338] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:31:49.796443] [D] [thread 29338] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[12:31:49.796454] [I] [thread 29338] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:31:49.796467] [D] [thread 29338] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:31:49.796481] [D] [thread 29338] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:31:49.796573] [I] [thread 29338] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[12:31:49.796608] [D] [thread 29338] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:49.796966] [D] [thread 29338] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:49.796997] [D] [thread 29338] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:50.604572] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:51.605861] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:52.607164] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:52.842786] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:52.843241] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:52.843985] [I] [thread 29341] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:52.846304] [I] [thread 29341] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:52.996416] [D] [thread 29340] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 40825
dataPort: 33959
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485212529
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:52.996661] [D] [thread 29340] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 40825
dataPort: 33959
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485212529
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:52.996733] [D] [thread 29340] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:52.997223] [D] [thread 29340] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:52.997289] [D] [thread 29340] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:52.997355] [D] [thread 29340] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[12:31:52.997506] [D] [thread 29340] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:52.997587] [I] [thread 29340] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:52.997741] [I] [thread 29340] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:52.997819] [D] [thread 29340] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[12:31:52.997912] [D] [thread 29340] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:52.998320] [D] [thread 29340] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:52.998391] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:31:52.998422] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:31:52.998465] [D] [thread 29340] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:52.998485] [D] [thread 29340] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:52.998510] [D] [thread 29340] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:52.999050] [D] [thread 29340] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[12:31:53.034683] [D] [thread 29340] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:53.034796] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:31:53.034835] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:31:53.034917] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[12:31:53.035111] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:53.035158] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[12:31:53.035229] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:31:53.035272] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:31:53.035299] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:31:53.035322] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:31:53.035355] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[12:31:53.035385] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:53.035436] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:31:53.035485] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:53.035619] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:53.035663] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:53.035709] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:53.035753] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:31:53.035784] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:31:53.035808] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[12:31:53.035832] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[12:31:53.035860] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:53.035893] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:53.035921] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:31:53.036030] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:53.036158] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:53.036201] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:53.036248] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:53.036276] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:31:53.036300] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:31:53.036324] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[12:31:53.036347] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[12:31:53.036377] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:53.036401] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:53.036428] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:31:53.036487] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:53.036615] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:53.036659] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:53.036710] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:53.036752] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:53.036779] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:53.036803] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:53.036827] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:53.036859] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:53.036900] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:53.036932] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:31:53.036986] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:53.037144] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:53.037190] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:53.037245] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:53.037274] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:53.037298] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:53.037322] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:53.037346] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:53.037400] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:53.037431] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:53.037462] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:31:53.037484] [D] [thread 29340] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:53.041395] [D] [thread 29340] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[12:31:53.041486] [D] [thread 29340] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[12:31:53.041516] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:31:53.041547] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:31:53.041577] [D] [thread 29340] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[12:31:53.041594] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:53.041613] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:53.041633] [D] [thread 29340] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:53.041708] [D] [thread 29340] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:53.041855] [I] [thread 29340] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:53.041895] [D] [thread 29340] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:53.041920] [D] [thread 29340] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:53.041943] [D] [thread 29340] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[12:31:53.041962] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:31:53.041983] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:31:53.042005] [D] [thread 29340] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[12:31:53.042022] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:31:53.042041] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:31:53.042061] [D] [thread 29340] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:31:53.042163] [I] [thread 29340] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:31:53.042218] [D] [thread 29340] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:53.042650] [D] [thread 29340] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:53.042681] [D] [thread 29340] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:53.844619] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:54.845915] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:55.847231] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:56.765508] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:56.765843] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:31:56.766443] [I] [thread 29343] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:31:56.767829] [I] [thread 29343] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:31:56.918203] [D] [thread 29340] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 34799
dataPort: 45453
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485477775
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:56.918478] [D] [thread 29340] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 34799
dataPort: 45453
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2485477775
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:31:56.918559] [D] [thread 29340] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:31:56.919423] [D] [thread 29340] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:31:56.919495] [D] [thread 29340] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:31:56.919591] [D] [thread 29340] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[12:31:56.919760] [D] [thread 29340] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:31:56.919911] [I] [thread 29340] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:31:56.920205] [I] [thread 29340] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:56.920372] [D] [thread 29340] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[12:31:56.920544] [D] [thread 29340] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:31:56.921514] [D] [thread 29340] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:31:56.921629] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:31:56.921671] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:31:56.921724] [D] [thread 29340] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:31:56.921747] [D] [thread 29340] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:31:56.921776] [D] [thread 29340] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:31:56.922691] [D] [thread 29340] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[12:31:56.959682] [D] [thread 29340] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:31:56.959887] [I] [thread 29340] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:31:56.959920] [D] [thread 29340] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:31:56.960036] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[12:31:56.960360] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:31:56.960417] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[12:31:56.960519] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:31:56.960577] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:31:56.960600] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:31:56.960730] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:31:56.960763] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[12:31:56.960802] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[12:31:56.960899] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:56.960964] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:31:56.961090] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:31:56.961448] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:31:56.962466] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:31:56.962576] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:31:56.962610] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:31:56.962632] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:31:56.962653] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[12:31:56.962674] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[12:31:56.962694] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[12:31:56.962727] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:31:56.962818] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:56.962854] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:31:56.962910] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:31:56.963078] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:31:56.963115] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:31:56.963159] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963185] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963207] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963227] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963247] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963268] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[12:31:56.963294] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:31:56.963316] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:56.963339] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:31:56.963376] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:31:56.963470] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:31:56.963503] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:31:56.963545] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963569] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963590] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963611] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963632] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963652] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[12:31:56.963675] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:31:56.963696] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:56.963718] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:31:56.963753] [D] [thread 29340] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:31:56.963841] [D] [thread 29340] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:31:56.963873] [D] [thread 29340] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:31:56.963910] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.963934] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.963999] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.964023] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.964043] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.964064] [D] [thread 29340] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:31:56.964090] [D] [thread 29340] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:31:56.964114] [D] [thread 29340] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:31:56.964139] [D] [thread 29340] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:31:56.964157] [D] [thread 29340] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:31:56.968244] [D] [thread 29344] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 3
[m
[36m[12:31:56.968312] [D] [thread 29344] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[12:31:56.968335] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:31:56.968383] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:31:56.968411] [D] [thread 29344] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[12:31:56.968427] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:31:56.968443] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:31:56.968461] [D] [thread 29344] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:31:56.968529] [D] [thread 29344] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:31:56.968667] [I] [thread 29344] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:31:56.968704] [D] [thread 29344] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:31:56.968726] [D] [thread 29344] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:31:56.968765] [D] [thread 29344] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 3[m
[32m[12:31:56.968784] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:31:56.968803] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:31:56.968824] [D] [thread 29344] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[12:31:56.968838] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:31:56.968854] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:31:56.968872] [D] [thread 29344] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:31:56.968981] [I] [thread 29344] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:31:56.969034] [D] [thread 29344] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:31:56.969459] [D] [thread 29344] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:31:56.969488] [D] [thread 29344] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:31:57.767158] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:58.768444] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:31:59.769747] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:00.759247] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:00.759854] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:32:00.760380] [I] [thread 29345] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:32:00.762930] [I] [thread 29345] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:32:00.910837] [D] [thread 29344] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 38215
dataPort: 39597
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2485321964
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:32:00.911069] [D] [thread 29344] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 38215
dataPort: 39597
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2485321964
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:32:00.911133] [D] [thread 29344] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:32:00.911611] [D] [thread 29344] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:32:00.911662] [D] [thread 29344] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:32:00.911735] [D] [thread 29344] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[12:32:00.911870] [D] [thread 29344] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:32:00.911984] [I] [thread 29344] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:32:00.912175] [I] [thread 29344] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:32:00.912253] [D] [thread 29344] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[12:32:00.912339] [D] [thread 29344] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:32:00.912782] [D] [thread 29344] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:32:00.912909] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:00.912939] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:32:00.912980] [D] [thread 29344] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:32:00.912998] [D] [thread 29344] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:32:00.913020] [D] [thread 29344] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:32:00.913527] [D] [thread 29344] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[12:32:00.949565] [D] [thread 29342] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:32:00.949697] [I] [thread 29342] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:00.949743] [D] [thread 29342] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:32:00.949834] [D] [thread 29342] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[12:32:00.950046] [D] [thread 29342] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:32:00.950100] [D] [thread 29342] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[12:32:00.950180] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:32:00.950216] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:32:00.950245] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:32:00.950272] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:32:00.950298] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[12:32:00.950325] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[12:32:00.950362] [D] [thread 29342] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[12:32:00.950394] [D] [thread 29342] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:00.950429] [D] [thread 29342] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:32:00.950482] [D] [thread 29342] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:32:00.950607] [D] [thread 29342] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:32:00.950653] [D] [thread 29342] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:32:00.950708] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:32:00.950759] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:32:00.950791] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:32:00.950818] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[12:32:00.950845] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[12:32:00.950873] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[12:32:00.950900] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[12:32:00.950939] [D] [thread 29342] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:32:00.950974] [D] [thread 29342] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:00.951007] [D] [thread 29342] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:32:00.951062] [D] [thread 29342] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:32:00.951231] [D] [thread 29342] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:32:00.951287] [D] [thread 29342] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:32:00.951347] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951380] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951408] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951436] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951463] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951490] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951517] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[12:32:00.951551] [D] [thread 29342] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:32:00.951582] [D] [thread 29342] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:00.951614] [D] [thread 29342] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:32:00.951666] [D] [thread 29342] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:32:00.951818] [D] [thread 29342] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:32:00.951868] [D] [thread 29342] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:32:00.951926] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956550] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956599] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956628] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956655] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956682] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956709] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:00.956754] [D] [thread 29342] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:32:00.956821] [D] [thread 29342] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:00.956867] [D] [thread 29342] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:32:00.956938] [D] [thread 29342] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:32:00.957147] [D] [thread 29342] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:32:00.957196] [D] [thread 29342] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:32:00.957259] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957293] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957321] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957349] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957401] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957432] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957461] [D] [thread 29342] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:00.957496] [D] [thread 29342] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:32:00.957527] [D] [thread 29342] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:00.957558] [D] [thread 29342] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:32:00.957581] [D] [thread 29342] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:32:00.961293] [D] [thread 29346] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 3
[m
[36m[12:32:00.961379] [D] [thread 29346] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[12:32:00.961400] [I] [thread 29346] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:00.961420] [D] [thread 29346] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:32:00.961438] [D] [thread 29346] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[12:32:00.961447] [I] [thread 29346] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:32:00.961457] [D] [thread 29346] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:32:00.961468] [D] [thread 29346] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:32:00.961523] [D] [thread 29346] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:32:00.961624] [I] [thread 29346] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:32:00.961650] [D] [thread 29346] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:32:00.961665] [D] [thread 29346] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:32:00.961680] [D] [thread 29346] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 3[m
[32m[12:32:00.961691] [I] [thread 29346] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:00.961703] [D] [thread 29346] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:32:00.961716] [D] [thread 29346] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[12:32:00.961725] [I] [thread 29346] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:32:00.961735] [D] [thread 29346] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:32:00.961746] [D] [thread 29346] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:32:00.961810] [I] [thread 29346] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:32:00.961846] [D] [thread 29346] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:32:00.962148] [D] [thread 29346] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:32:00.962168] [D] [thread 29346] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:32:01.761160] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:02.762449] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:03.763775] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:04.765087] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:04.905604] [D] [thread 29344] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 42701
dataPort: 43193
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2485300416
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:32:04.905764] [D] [thread 29344] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 42701
dataPort: 43193
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2485300416
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[12:32:04.905849] [D] [thread 29344] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:32:04.906314] [D] [thread 29344] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:32:04.906349] [D] [thread 29344] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:32:04.906389] [D] [thread 29344] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[12:32:04.906475] [D] [thread 29344] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[12:32:04.906533] [I] [thread 29344] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:32:04.906656] [I] [thread 29344] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:32:04.906761] [D] [thread 29344] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[12:32:04.906885] [D] [thread 29344] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:32:04.907283] [D] [thread 29344] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:32:04.907338] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:04.907358] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[12:32:04.907387] [D] [thread 29344] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:32:04.907397] [D] [thread 29344] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:32:04.907412] [D] [thread 29344] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:32:04.908002] [D] [thread 29344] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[12:32:04.944265] [D] [thread 29346] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[12:32:04.944373] [I] [thread 29346] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:04.944411] [D] [thread 29346] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[12:32:04.944487] [D] [thread 29346] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[12:32:04.944667] [D] [thread 29346] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:32:04.944713] [D] [thread 29346] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[12:32:04.944783] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[12:32:04.944832] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:32:04.944855] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:32:04.944874] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:32:04.944894] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[12:32:04.944925] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[12:32:04.944947] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[12:32:04.944975] [D] [thread 29346] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[12:32:04.945002] [D] [thread 29346] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:04.945029] [D] [thread 29346] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[12:32:04.945071] [D] [thread 29346] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[12:32:04.945180] [D] [thread 29346] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[12:32:04.945217] [D] [thread 29346] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[12:32:04.945260] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[12:32:04.945286] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[12:32:04.945306] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[12:32:04.945327] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[12:32:04.945348] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[12:32:04.945390] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[12:32:04.945413] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[12:32:04.945434] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[12:32:04.945462] [D] [thread 29346] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[12:32:04.945490] [D] [thread 29346] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:04.945539] [D] [thread 29346] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[12:32:04.945591] [D] [thread 29346] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[12:32:04.945732] [D] [thread 29346] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[12:32:04.945776] [D] [thread 29346] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[12:32:04.945823] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945848] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945870] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945890] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945911] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945932] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945952] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945972] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[12:32:04.945999] [D] [thread 29346] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[12:32:04.946023] [D] [thread 29346] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:04.946064] [D] [thread 29346] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[12:32:04.946109] [D] [thread 29346] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[12:32:04.946235] [D] [thread 29346] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[12:32:04.946274] [D] [thread 29346] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[12:32:04.946319] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946345] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946367] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946410] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946433] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946454] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946475] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946496] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[12:32:04.946524] [D] [thread 29346] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[12:32:04.946551] [D] [thread 29346] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:04.946594] [D] [thread 29346] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[12:32:04.946665] [D] [thread 29346] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[12:32:04.946836] [D] [thread 29346] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[12:32:04.946883] [D] [thread 29346] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[12:32:04.946938] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.946986] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947009] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947030] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947051] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947072] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947113] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947138] [D] [thread 29346] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[12:32:04.947168] [D] [thread 29346] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[12:32:04.947196] [D] [thread 29346] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:32:04.947261] [D] [thread 29346] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[12:32:04.947286] [D] [thread 29346] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:32:04.950880] [D] [thread 29344] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 3
[m
[36m[12:32:04.950942] [D] [thread 29344] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[12:32:04.950966] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:04.950994] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[12:32:04.951032] [D] [thread 29344] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[12:32:04.951048] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:32:04.951065] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:32:04.951084] [D] [thread 29344] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:32:04.951151] [D] [thread 29344] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:32:04.951283] [I] [thread 29344] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:32:04.951317] [D] [thread 29344] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:32:04.951351] [D] [thread 29344] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:32:04.951377] [D] [thread 29344] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 3[m
[32m[12:32:04.951394] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:04.951414] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[12:32:04.951436] [D] [thread 29344] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[12:32:04.951451] [I] [thread 29344] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:32:04.951467] [D] [thread 29344] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:32:04.951485] [D] [thread 29344] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:32:04.951596] [I] [thread 29344] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:32:04.951636] [D] [thread 29344] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:32:04.952197] [D] [thread 29344] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:32:04.952239] [D] [thread 29344] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:32:05.389339] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:05.389960] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:32:05.390534] [I] [thread 29348] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:32:05.393701] [I] [thread 29348] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:32:06.391307] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:07.061299] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:07.061734] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:07.219266] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:07.219629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:07.221208] [D] [thread 29352] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[12:32:07.221307] [I] [thread 29352] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[12:32:07.221326] [I] [thread 29352] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[12:32:07.221362] [D] [thread 29352] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[12:32:07.221437] [D] [thread 29352] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[12:32:07.221485] [D] [thread 29352] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));[m
[36m[12:32:07.221508] [D] [thread 29352] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out",true));
}
}
[m
[36m[12:32:07.222222] [D] [thread 29353] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_12-32-07_1582914.cpp[m
[36m[12:32:07.222561] [D] [thread 29353] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[12:32:07.222624] [D] [thread 29353] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[12:32:07.222841] [D] [thread 29353] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -o/tmp/query_26-10-2023_12-32-07_1582914.so -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_26-10-2023_12-32-07_1582914.cpp'[m
[36m[12:32:08.220848] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:09.222084] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:32:10.051417] [I] [thread 29353] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2829.242803ms[m
[36m[12:32:10.051859] [D] [thread 29352] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[12:32:10.051913] [D] [thread 29352] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[12:32:10.052193] [I] [thread 29352] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.053396] [D] [thread 29352] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[12:32:10.053847] [D] [thread 29352] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[12:32:10.054242] [I] [thread 29352] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.054418] [D] [thread 29352] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[12:32:10.054607] [D] [thread 29352] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.054642] [D] [thread 29352] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:32:10.055116] [I] [thread 29352] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:32:10.055316] [D] [thread 29352] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[12:32:10.055464] [D] [thread 29352] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.055490] [D] [thread 29352] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.055701] [D] [thread 29352] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[12:32:10.055842] [I] [thread 29352] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[12:32:10.056007] [D] [thread 29352] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[12:32:10.056166] [D] [thread 29352] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.056201] [D] [thread 29352] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.057114] [D] [thread 29352] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.057332] [D] [thread 29352] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.057467] [D] [thread 29352] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.057652] [D] [thread 29352] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.057720] [D] [thread 29352] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.057751] [D] [thread 29352] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.057854] [D] [thread 29352] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:32:10.057903] [D] [thread 29352] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.057934] [D] [thread 29352] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.057959] [D] [thread 29352] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.058600] [D] [thread 29352] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.058661] [D] [thread 29352] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.058780] [D] [thread 29352] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.059836] [D] [thread 29352] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.060571] [D] [thread 29352] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[12:32:10.061090] [I] [thread 29352] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[12:32:10.061820] [I] [thread 29352] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[12:32:10.061989] [I] [thread 29352] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[12:32:10.062052] [I] [thread 29304] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[12:32:10.062179] [I] [thread 29304] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[12:32:10.062238] [I] [thread 29304] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[12:32:10.062524] [I] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[12:32:10.062679] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[12:32:10.062718] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.062787] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.062850] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.062908] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.062951] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.063808] [D] [thread 29304] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.064393] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.064466] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[12:32:10.064488] [D] [thread 29304] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[12:32:10.064709] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[12:32:10.064747] [I] [thread 29304] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:32:10.064946] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:32:10.065261] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:32:10.065601] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:32:10.065855] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.066121] [D] [thread 29304] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[12:32:10.066434] [D] [thread 29304] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.066654] [D] [thread 29304] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[12:32:10.066787] [I] [thread 29304] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.066951] [D] [thread 29304] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[12:32:10.066990] [I] [thread 29304] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:32:10.067114] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:32:10.067310] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:32:10.067649] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:32:10.068007] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.068327] [D] [thread 29304] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[12:32:10.068610] [I] [thread 29304] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.068692] [D] [thread 29304] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[12:32:10.068705] [I] [thread 29304] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:32:10.068806] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:32:10.068972] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:32:10.069202] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:32:10.069394] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.069610] [D] [thread 29304] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[12:32:10.069755] [I] [thread 29304] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[12:32:10.069872] [I] [thread 29304] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.070010] [D] [thread 29304] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[12:32:10.070133] [D] [thread 29304] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.070232] [D] [thread 29304] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.070340] [D] [thread 29304] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[12:32:10.070455] [D] [thread 29304] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.070553] [D] [thread 29304] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.070655] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.070716] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.070753] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.070810] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.070848] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.071573] [D] [thread 29304] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.072083] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[12:32:10.072178] [I] [thread 29304] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[12:32:10.072392] [I] [thread 29304] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[12:32:10.072480] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.072535] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.072578] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[12:32:10.073303] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.073410] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.073522] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.073551] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.073595] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.073860] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.074312] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.074383] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.074457] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.074473] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.074502] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.074661] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.074913] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.074954] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.075043] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.075061] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.075096] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.075256] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.075504] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.075542] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.075593] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.075607] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.075630] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.075761] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.076038] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.076086] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.076150] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.076165] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.076221] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.076400] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.076684] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.076735] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.076798] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.076814] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.076839] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.076991] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.077246] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.077285] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.077337] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.077353] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.077379] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.077544] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.077816] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.077856] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.077911] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.077926] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.077950] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.078087] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:32:10.078330] [I] [thread 29304] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:32:10.078368] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:32:10.078417] [D] [thread 29304] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:32:10.078431] [D] [thread 29304] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:32:10.078454] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:32:10.078583] [D] [thread 29304] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[12:32:10.079168] [D] [thread 29304] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[12:32:10.079261] [I] [thread 29304] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[12:32:10.079534] [D] [thread 29304] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.079830] [D] [thread 29304] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[12:32:10.080236] [D] [thread 29304] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.080308] [D] [thread 29304] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[12:32:10.080572] [D] [thread 29304] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.080929] [D] [thread 29304] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[12:32:10.081007] [D] [thread 29304] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[12:32:10.081056] [D] [thread 29304] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[12:32:10.081174] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:32:10.081197] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[12:32:10.081228] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:32:10.081239] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[12:32:10.081600] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:32:10.081621] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[12:32:10.081781] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:32:10.081798] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[12:32:10.081903] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:32:10.081927] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[12:32:10.081998] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:32:10.082011] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[12:32:10.082117] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:32:10.082144] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[12:32:10.082224] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:10.082238] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[12:32:10.082303] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:10.082317] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[12:32:10.082810] [I] [thread 29304] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:32:10.082866] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082878] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082887] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082896] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082906] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082915] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082924] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082933] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082950] [I] [thread 29304] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:10.082960] [I] [thread 29304] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:32:10.082971] [I] [thread 29304] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:32:10.082979] [I] [thread 29304] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:32:10.083109] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[12:32:10.083360] [D] [thread 29304] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[12:32:10.083735] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[12:32:10.083866] [D] [thread 29304] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[12:32:10.084446] [D] [thread 29304] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.084774] [D] [thread 29304] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.085009] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.085099] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.085167] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[12:32:10.085223] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.085260] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.086599] [D] [thread 29304] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[12:32:10.086904] [I] [thread 29304] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[12:32:10.087025] [I] [thread 29304] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.088341] [D] [thread 29304] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[12:32:10.088626] [I] [thread 29304] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[12:32:10.088741] [I] [thread 29304] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.088862] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.089631] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[12:32:10.089679] [D] [thread 29304] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[12:32:10.090004] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[12:32:10.090116] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[12:32:10.090135] [D] [thread 29304] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[12:32:10.090191] [I] [thread 29304] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[12:32:10.090232] [I] [thread 29304] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:32:10.090342] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:32:10.090505] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[12:32:10.090795] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[12:32:10.091046] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[12:32:10.091208] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[12:32:10.091369] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[12:32:10.091536] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[12:32:10.091682] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[12:32:10.091828] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[12:32:10.092012] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[12:32:10.092230] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[12:32:10.092422] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[12:32:10.092662] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[12:32:10.092851] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[12:32:10.093036] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[12:32:10.093218] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[12:32:10.093395] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[12:32:10.093575] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[12:32:10.093777] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[12:32:10.094427] [D] [thread 29304] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[12:32:10.094485] [D] [thread 29304] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[12:32:10.094544] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094585] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094607] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094627] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094647] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094666] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094687] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094706] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094725] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094744] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094764] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094797] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094810] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.094838] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094850] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.094881] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094894] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.094915] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094926] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.094943] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094954] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.094974] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.094987] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.095004] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.095014] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.095031] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.095041] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.096306] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[12:32:10.096339] [D] [thread 29304] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[12:32:10.096411] [D] [thread 29304] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[12:32:10.096430] [D] [thread 29304] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[12:32:10.096439] [D] [thread 29304] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[12:32:10.096448] [D] [thread 29304] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[12:32:10.096474] [I] [thread 29304] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[12:32:10.097046] [D] [thread 29304] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.097099] [D] [thread 29304] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[12:32:10.097115] [D] [thread 29304] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[12:32:10.097172] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097226] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097250] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097272] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097303] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097324] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097344] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097364] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097384] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097403] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097422] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097443] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097455] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097486] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097499] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097523] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097535] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097554] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097566] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097583] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097594] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097614] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097626] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097642] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097653] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097668] [D] [thread 29304] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:32:10.097679] [D] [thread 29304] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:32:10.097898] [D] [thread 29304] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[12:32:10.097944] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:32:10.097964] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[12:32:10.098041] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:32:10.098055] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[12:32:10.098089] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:32:10.098099] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[12:32:10.098119] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:32:10.098130] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[12:32:10.098150] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:32:10.098160] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[12:32:10.098177] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:32:10.098187] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[12:32:10.098204] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:32:10.098215] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[12:32:10.098234] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[12:32:10.098244] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[12:32:10.098264] [I] [thread 29304] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:32:10.098274] [D] [thread 29304] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[12:32:10.098345] [I] [thread 29304] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[12:32:10.098559] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.098723] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.098830] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.098912] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099083] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.099142] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099202] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099268] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099383] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.099437] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099492] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099555] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099656] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.099707] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099782] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099847] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.099989] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.100061] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100122] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100190] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100309] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.100389] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100451] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100514] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100619] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.100671] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100727] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100823] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.100935] [D] [thread 29304] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:32:10.100988] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101045] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101110] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[12:32:10.101159] [I] [thread 29304] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[12:32:10.101169] [D] [thread 29304] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[12:32:10.101564] [D] [thread 29304] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[12:32:10.101580] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.101644] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101659] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.101684] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[12:32:10.101787] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101873] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101908] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.101951] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.101961] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.101982] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[12:32:10.102031] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102086] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102131] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102141] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102160] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102201] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.102215] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102281] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102294] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102308] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102350] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.102366] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102408] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102419] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102440] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102479] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.102494] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102538] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102549] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102562] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102599] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.102613] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102655] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102667] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102679] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102824] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.102847] [D] [thread 29304] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:32:10.102910] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:32:10.102922] [D] [thread 29304] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:32:10.102939] [D] [thread 29304] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:32:10.102977] [W] [thread 29304] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:32:10.103066] [D] [thread 29304] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[12:32:10.103080] [D] [thread 29304] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[12:32:10.103087] [D] [thread 29304] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[12:32:10.103093] [D] [thread 29304] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[12:32:10.103117] [D] [thread 29304] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[12:32:10.103126] [D] [thread 29304] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[12:32:10.103150] [D] [thread 29304] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[12:32:10.103322] [D] [thread 29304] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[12:32:10.103389] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.103472] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.103509] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.103561] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[12:32:10.103576] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.103642] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[12:32:10.103657] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.103674] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.103717] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.103744] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.103793] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.103830] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.103846] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.103878] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[12:32:10.103892] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.104043] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[12:32:10.104096] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.104112] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.104175] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.104193] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.104233] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.104273] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.104300] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.104345] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[12:32:10.104360] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.104454] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[12:32:10.104480] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.104493] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.104557] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.104575] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.104609] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.104645] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.104660] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.104731] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[12:32:10.104747] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.104796] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[12:32:10.104811] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.104823] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:32:10.104887] [D] [thread 29304] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:32:10.104930] [D] [thread 29304] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:32:10.104989] [D] [thread 29304] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:32:10.105186] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[12:32:10.105211] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.105224] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:32:10.105277] [D] [thread 29304] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:32:10.105299] [D] [thread 29304] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:32:10.105309] [D] [thread 29304] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:32:10.105428] [D] [thread 29304] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:32:10.105478] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.105514] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.105532] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.105571] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[12:32:10.105586] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.105644] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[12:32:10.105661] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.105672] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.105710] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.105725] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.105757] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.105807] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.105823] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.105860] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[12:32:10.105884] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.105935] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[12:32:10.105951] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.105964] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.106018] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.106034] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.106069] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.106105] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.106120] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.106157] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[12:32:10.106171] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.106219] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[12:32:10.106234] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.106245] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[12:32:10.106297] [W] [thread 29304] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[12:32:10.106313] [W] [thread 29304] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[12:32:10.106343] [D] [thread 29304] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[12:32:10.106378] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[12:32:10.106399] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.106436] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[12:32:10.106450] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.106493] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[12:32:10.106507] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.106519] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:32:10.106576] [D] [thread 29304] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:32:10.106602] [D] [thread 29304] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:32:10.106614] [D] [thread 29304] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:32:10.106740] [D] [thread 29304] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[12:32:10.106760] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.106771] [D] [thread 29304] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:32:10.106810] [D] [thread 29304] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:32:10.106828] [D] [thread 29304] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:32:10.106837] [D] [thread 29304] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:32:10.106939] [D] [thread 29304] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:32:10.106953] [D] [thread 29304] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.106964] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.107015] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.107052] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.107281] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[12:32:10.107303] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.107333] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.107534] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[12:32:10.107722] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.107741] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.107749] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.107788] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.107802] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.107976] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:32:10.108075] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.108115] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[12:32:10.108127] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[12:32:10.108235] [D] [thread 29304] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 4[m
[36m[12:32:10.108424] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.108449] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.108476] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[12:32:10.108499] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.108559] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.108645] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.108679] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.108742] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.108755] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[12:32:10.108794] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[12:32:10.108806] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.108822] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.108855] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.108867] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.108905] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.108917] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.108991] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.109003] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.109033] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.109130] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[12:32:10.109323] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.109343] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.109358] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[12:32:10.109368] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[12:32:10.109514] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.109580] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.109597] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.109638] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:32:10.109655] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.109671] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[12:32:10.109691] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[12:32:10.109793] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[12:32:10.109906] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.109925] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.109941] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[12:32:10.109962] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.110018] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.110099] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.110122] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.110132] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.110146] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.110196] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.110215] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.110312] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[12:32:10.110326] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.110338] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.110438] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[12:32:10.110610] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.110628] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.110636] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.110659] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.110671] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.110763] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:32:10.110797] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.110812] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:32:10.110821] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:32:10.110878] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[12:32:10.110961] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.110979] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.110994] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:32:10.111014] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.111066] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.111133] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.111152] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.111203] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.111216] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:32:10.111245] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[12:32:10.111256] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.111268] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.111290] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.111301] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.111329] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.111340] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.111389] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.111399] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.111418] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.111484] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[12:32:10.111647] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.111665] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.111678] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[12:32:10.111687] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[12:32:10.111803] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.111851] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.111867] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.111900] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:32:10.111917] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.111976] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:32:10.111990] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:32:10.112048] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[12:32:10.112091] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.112108] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.112123] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:32:10.112143] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.112195] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.112267] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.112288] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.112308] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.112322] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.112376] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.112395] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.112493] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[12:32:10.112517] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.112529] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.112622] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[12:32:10.112790] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.112807] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.112815] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.112837] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.112848] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.112895] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:32:10.112920] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.112935] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:32:10.112944] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:32:10.112991] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[12:32:10.113037] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.113053] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.113067] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:32:10.113085] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.113133] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.113202] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.113222] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.113277] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.113289] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:32:10.113323] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[12:32:10.113334] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.113362] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.113390] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.113402] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.113500] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.113518] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.113591] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.113602] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.113624] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.113705] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[12:32:10.113907] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.113928] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.113941] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[12:32:10.113951] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[12:32:10.114086] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.114144] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.114163] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.114209] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:32:10.114231] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.114263] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:32:10.114274] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:32:10.114343] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[12:32:10.114394] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.114414] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.114431] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:32:10.114453] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.114517] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.114609] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.114636] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.114646] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.114661] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.114728] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.114753] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.114868] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[12:32:10.114885] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.114898] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.115004] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[12:32:10.115192] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.115211] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.115219] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.115244] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.115255] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.115310] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:32:10.115340] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.115356] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:32:10.115365] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:32:10.115420] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[12:32:10.115474] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.115492] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.115508] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:32:10.115527] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.115579] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.115648] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.115666] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.115717] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.115729] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:32:10.115758] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[12:32:10.115769] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.115781] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.115803] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.115815] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.115885] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.115903] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.115993] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.116011] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.116048] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.116130] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[12:32:10.116318] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.116341] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.116368] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[12:32:10.116379] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[12:32:10.116508] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.116558] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.116573] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.116613] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:32:10.116632] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.116646] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:32:10.116655] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:32:10.116715] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[12:32:10.116754] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.116771] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.116787] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:32:10.116808] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.116858] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.116939] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.116967] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.117062] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 2[m
[36m[12:32:10.117077] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.117089] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.117194] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[12:32:10.117381] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(23) as new root of the plan.[m
[36m[12:32:10.117401] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.117410] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.117433] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.117443] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.117494] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:32:10.117528] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.117543] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[12:32:10.117552] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[12:32:10.117603] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[12:32:10.117650] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.117667] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.117681] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[12:32:10.117699] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.117748] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.117817] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.117838] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.117860] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.117874] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.117883] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.117941] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.117961] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.118045] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[12:32:10.118059] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.118071] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.118157] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[12:32:10.118335] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.118354] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.118362] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.118383] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.118394] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.118441] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:32:10.118469] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.118483] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:32:10.118492] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:32:10.118541] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[12:32:10.118593] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.118610] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.118625] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:32:10.118643] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.118688] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.118752] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.118769] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.118820] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.118832] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:32:10.118860] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[12:32:10.118872] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.118883] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.118904] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.118916] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.118945] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.118955] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.119004] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.119015] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.119031] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.119134] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[12:32:10.119296] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.119316] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.119346] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[12:32:10.119356] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[12:32:10.119478] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.119528] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.119554] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.119594] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:32:10.119612] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.119626] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:32:10.119635] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:32:10.119700] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[12:32:10.119745] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.119762] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.119777] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:32:10.119797] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.119845] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.119926] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.119976] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.119990] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.120005] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.120077] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.120099] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.120193] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[12:32:10.120208] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.120220] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.120318] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[12:32:10.120491] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.120508] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.120517] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.120540] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.120551] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.120601] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:32:10.120628] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.120643] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:32:10.120652] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:32:10.120705] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[12:32:10.120756] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.120774] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.120789] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:32:10.120807] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.120855] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.120919] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.120935] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.120987] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.120999] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:32:10.121028] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[12:32:10.121039] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.121050] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.121071] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.121082] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.121109] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.121120] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.121169] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.121180] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.121199] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.121262] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[12:32:10.121416] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.121436] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.121449] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[12:32:10.121458] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[12:32:10.121572] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.121620] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.121636] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.121668] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:32:10.121685] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.121697] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:32:10.121706] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:32:10.121755] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[12:32:10.121792] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.121808] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.121823] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:32:10.121842] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.121884] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.121946] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.121966] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.121975] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.121987] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.122031] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.122048] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.122132] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[12:32:10.122146] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.122158] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.122266] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[12:32:10.122416] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.122433] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.122442] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.122463] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.122475] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.122522] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:32:10.122549] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.122563] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:32:10.122573] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:32:10.122620] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[12:32:10.122708] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.122729] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.122745] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:32:10.122762] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.122809] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.122874] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.122891] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.122943] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.122970] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:32:10.123004] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[12:32:10.123016] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.123027] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.123049] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.123068] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.123099] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.123111] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.123164] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.123175] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.123193] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.123258] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[12:32:10.123423] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.123442] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.123454] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[12:32:10.123463] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[12:32:10.123598] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.123646] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.123661] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.123695] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:32:10.123711] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.123726] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:32:10.123734] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:32:10.123788] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[12:32:10.123826] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.123842] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.123856] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:32:10.123875] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.123920] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.124013] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:32:10.124051] [W] [thread 29304] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:32:10.124063] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.124076] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.124132] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.124164] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.124266] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[12:32:10.124281] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.124292] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.124384] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[12:32:10.124549] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[12:32:10.124568] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.124588] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.124611] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.124623] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.124674] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[12:32:10.124708] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.124724] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[12:32:10.124733] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[12:32:10.124791] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[12:32:10.124846] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.124863] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.124878] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[12:32:10.124946] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.125000] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.125075] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:32:10.125094] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.125146] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.125158] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[12:32:10.125186] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[12:32:10.125198] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.125210] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.125234] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.125246] [D] [thread 29304] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:32:10.125275] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.125285] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.125335] [D] [thread 29304] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:32:10.125346] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.125364] [D] [thread 29304] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:32:10.125429] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[12:32:10.125600] [D] [thread 29304] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:32:10.125621] [D] [thread 29304] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:32:10.125634] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[12:32:10.125643] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[12:32:10.125759] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[12:32:10.125806] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.125820] [D] [thread 29304] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:32:10.125853] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[12:32:10.125870] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.125882] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[12:32:10.125892] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[12:32:10.125943] [D] [thread 29304] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[12:32:10.125982] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.125998] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.126013] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[12:32:10.126032] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.126075] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.126158] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.126185] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.126274] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 3[m
[36m[12:32:10.126336] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.126350] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.126448] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[12:32:10.126681] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[12:32:10.126702] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.126710] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.126734] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.126745] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.126799] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:32:10.126830] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.126846] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[12:32:10.126855] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[12:32:10.126909] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[12:32:10.126960] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.126978] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.126992] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[12:32:10.127013] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.127062] [D] [thread 29304] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:32:10.127131] [D] [thread 29304] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:32:10.127154] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.127235] [D] [thread 29304] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[12:32:10.127249] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:32:10.127260] [W] [thread 29304] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:32:10.127340] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[12:32:10.127496] [D] [thread 29304] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[12:32:10.127513] [D] [thread 29304] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:10.127521] [D] [thread 29304] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:10.127542] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.127552] [D] [thread 29304] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:32:10.127596] [D] [thread 29304] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:32:10.127621] [D] [thread 29304] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:32:10.127635] [W] [thread 29304] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[12:32:10.127658] [D] [thread 29304] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[12:32:10.127711] [D] [thread 29304] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[12:32:10.127761] [D] [thread 29304] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:32:10.127788] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:32:10.127804] [I] [thread 29304] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[12:32:10.127822] [D] [thread 29304] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:32:10.127844] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.127860] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.127868] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.127877] [D] [thread 29304] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:32:10.127894] [D] [thread 29304] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[12:32:10.127970] [I] [thread 29304] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[12:32:10.128005] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.128073] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[12:32:10.128089] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[12:32:10.128116] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.128249] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.128271] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.128292] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[12:32:10.128340] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.128409] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.128425] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.128431] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.128549] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.128644] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.128658] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[12:32:10.128681] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.128696] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.128725] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[12:32:10.128737] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[12:32:10.128885] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[12:32:10.129074] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[12:32:10.129153] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.129199] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.129211] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.129228] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.129241] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.129470] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[12:32:10.129527] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:32:10.129543] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[12:32:10.129700] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:32:10.129719] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[12:32:10.129731] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[12:32:10.129746] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.129774] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:32:10.129805] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.129852] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[12:32:10.129865] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[12:32:10.129889] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.129994] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.130037] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.130070] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.130107] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.130168] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.130182] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.130189] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.130251] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.130318] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.130330] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:32:10.130346] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.130361] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.130387] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[12:32:10.130399] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[32m[12:32:10.130466] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[12:32:10.130612] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[12:32:10.130679] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.130722] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.130734] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.130749] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.130760] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.130863] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[12:32:10.130901] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:32:10.130914] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[12:32:10.131047] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:32:10.131064] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:32:10.131075] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[12:32:10.131085] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.131130] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:32:10.131158] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.131201] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[12:32:10.131214] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[12:32:10.131236] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.131333] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.131377] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.131429] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[12:32:10.131467] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.131528] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.131543] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.131550] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.131610] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.131678] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.131690] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:32:10.131706] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.131720] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.131748] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[12:32:10.131760] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[32m[12:32:10.131825] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[12:32:10.132020] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[12:32:10.132097] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.132143] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.132155] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.132170] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.132183] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.132329] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[12:32:10.132375] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:32:10.132391] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[12:32:10.132538] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:32:10.132556] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:32:10.132567] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[12:32:10.132578] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.132610] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:32:10.132639] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.132681] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[12:32:10.132694] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[12:32:10.132716] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.132816] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.132863] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.132902] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[12:32:10.132939] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.133000] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.133014] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.133030] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.133099] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.133166] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.133179] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:32:10.133194] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.133210] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.133238] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[12:32:10.133251] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[12:32:10.133320] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[12:32:10.133470] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[12:32:10.133540] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.133585] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.133596] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.133612] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.133624] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.133725] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[12:32:10.133764] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:32:10.133778] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[12:32:10.133910] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:32:10.133927] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:32:10.133938] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[12:32:10.133948] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.133996] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:32:10.134035] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.134204] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.134228] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.134249] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[12:32:10.134286] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.134342] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.134356] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.134363] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.134426] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.134503] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.134516] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.134533] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.134558] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.134587] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:32:10.134600] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[12:32:10.134669] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[12:32:10.134822] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[12:32:10.134894] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.134941] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.134964] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:32:10.134979] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.134992] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.135132] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[12:32:10.135221] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[12:32:10.135237] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[12:32:10.135388] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:32:10.135406] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:32:10.135417] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[12:32:10.135428] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.135455] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:32:10.135484] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.135526] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[12:32:10.135539] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[12:32:10.135563] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.135666] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.135685] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.135705] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[12:32:10.135735] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.135796] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.135810] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.135817] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.135879] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.135987] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.136004] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:32:10.136021] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.136045] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.136075] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[12:32:10.136089] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[32m[12:32:10.136160] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[12:32:10.136320] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[12:32:10.136418] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.136464] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.136476] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.136491] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.136503] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.136602] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[12:32:10.136642] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:32:10.136655] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[12:32:10.136797] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:32:10.136815] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:32:10.136826] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[12:32:10.136836] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.136863] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:32:10.136892] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.136939] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[12:32:10.136953] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[12:32:10.136976] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.137095] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.137149] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.137184] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.137224] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.137286] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.137302] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.137308] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.137373] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.137442] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.137455] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:32:10.137484] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.137500] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.137528] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[12:32:10.137540] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[12:32:10.137639] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[12:32:10.137804] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[12:32:10.137877] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.137923] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.137934] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.137949] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.137962] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.138064] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[12:32:10.138103] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:32:10.138115] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[12:32:10.138246] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:32:10.138264] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:32:10.138274] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[12:32:10.138285] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.138325] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:32:10.138356] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.138402] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[12:32:10.138416] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[12:32:10.138440] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.138544] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.138591] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.138628] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[12:32:10.138665] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.138724] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.138738] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.138745] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.138803] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.138868] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.138881] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:32:10.138897] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.138912] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.138938] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[12:32:10.138950] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[12:32:10.139014] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[12:32:10.139157] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[12:32:10.139225] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.139269] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.139280] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.139294] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.139306] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.139404] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[12:32:10.139442] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:32:10.139455] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[12:32:10.139590] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:32:10.139608] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:32:10.139618] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[12:32:10.139629] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.139659] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:32:10.139685] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.139727] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[12:32:10.139741] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[12:32:10.139763] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.139857] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.139904] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.140003] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[12:32:10.140049] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.140111] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.140125] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.140132] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.140195] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.140265] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.140278] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[12:32:10.140295] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.140310] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.140338] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[12:32:10.140351] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[12:32:10.140416] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[12:32:10.140568] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[12:32:10.140635] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.140680] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.140692] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.140707] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.140719] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.140817] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[12:32:10.140855] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:32:10.140868] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[12:32:10.141000] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[12:32:10.141017] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[12:32:10.141028] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[12:32:10.141038] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.141069] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:32:10.141104] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.141246] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.141285] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.141316] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.141349] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.141399] [D] [thread 29304] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:32:10.141413] [D] [thread 29304] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:32:10.141420] [D] [thread 29304] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:32:10.141478] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.141558] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.141573] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.141588] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.141612] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.141639] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:32:10.141651] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[12:32:10.141720] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[12:32:10.141874] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[12:32:10.141942] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.141985] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.141997] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:32:10.142012] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.142024] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:32:10.142121] [I] [thread 29304] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[12:32:10.142158] [D] [thread 29304] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[12:32:10.142171] [D] [thread 29304] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[12:32:10.142301] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:32:10.142319] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:32:10.142329] [D] [thread 29304] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[12:32:10.142340] [D] [thread 29304] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:32:10.142370] [D] [thread 29304] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:32:10.142420] [D] [thread 29304] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:32:10.142459] [D] [thread 29304] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[12:32:10.142470] [D] [thread 29304] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:32:10.142479] [D] [thread 29304] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:32:10.142496] [D] [thread 29304] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[12:32:10.142516] [D] [thread 29304] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:32:10.142581] [D] [thread 29304] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[12:32:10.142605] [D] [thread 29304] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:32:10.142630] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.142686] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.142902] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.142949] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.142990] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.143033] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.143058] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.143628] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.143678] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.143695] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.143831] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.143867] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.143893] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.143927] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.143978] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.144495] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.144539] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.144554] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.144680] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.144711] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.144736] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.144768] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.144789] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.145286] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.145327] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.145342] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.145464] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.145499] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.145524] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.145557] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.145576] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.146072] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.146114] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.146140] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.146296] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.146340] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.146375] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[12:32:10.146406] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.146426] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.146991] [D] [thread 29304] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[12:32:10.147309] [I] [thread 29304] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[12:32:10.147414] [I] [thread 29304] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.147531] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.147582] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.147600] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.147770] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.147816] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.147851] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.147895] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.147921] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.148577] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.148647] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.148668] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.148853] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.148899] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.148935] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.148980] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.149009] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.149598] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.149655] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.149673] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.149822] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.149859] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.149889] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.149926] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.149947] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.150453] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.150495] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.150509] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.150629] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.150661] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.150687] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:32:10.150719] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.150738] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.151218] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.151257] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.151327] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.151497] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.151550] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.151590] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[12:32:10.151624] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.151645] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.152284] [D] [thread 29304] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[12:32:10.152578] [I] [thread 29304] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[12:32:10.152678] [I] [thread 29304] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.152823] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.152874] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.152891] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.153051] [D] [thread 29304] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:32:10.153095] [D] [thread 29304] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:32:10.153132] [D] [thread 29304] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[12:32:10.153167] [D] [thread 29304] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:32:10.153186] [D] [thread 29304] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:32:10.153318] [D] [thread 29304] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:32:10.153367] [D] [thread 29304] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[12:32:10.155058] [D] [thread 29304] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.30, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:11)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.10:42327 1::37::0::0})
|    SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:39083 1::52::0::0})
|--ExecutionNode(id:2, ip:192.168.2.10, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.30:42455)})
|  |    CENTRALWINDOW(23)
|  |      SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:32995 1::25::0::0})
|  |      SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:40149 1::28::0::0})
|  |      SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:35681 1::31::0::0})
|  |      SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:46389 1::34::0::0})
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.10:42327)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.10:42327)})
|  |  |    WATERMARKASSIGNER(10)
|  |  |      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:42327)})
|  |  |    WATERMARKASSIGNER(12)
|  |  |      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.10:42327)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:42455)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:33959 1::40::0::0})
|  |      SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:45453 1::43::0::0})
|  |      SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:39597 1::46::0::0})
|  |      SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:43193 1::49::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:39083)})
|  |  |    WATERMARKASSIGNER(16)
|  |  |      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:39083)})
|  |  |    WATERMARKASSIGNER(18)
|  |  |      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:39083)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  |  SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:39083)})
|  |  |    WATERMARKASSIGNER(22)
|  |  |      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.155192] [D] [thread 29304] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[12:32:10.155223] [D] [thread 29304] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:32:10.155500] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.155523] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.155738] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.155756] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.155817] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.155830] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.155869] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.155880] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.155915] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.155927] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.155991] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156007] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156045] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156057] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156093] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156104] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156155] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156169] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156206] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156217] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156253] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156264] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156427] [D] [thread 29304] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[12:32:10.156471] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[12:32:10.156481] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.156492] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.156705] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:34215[m
[36m[12:32:10.156747] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:34215 queryId=1 querySubPlanId = 1[m
[36m[12:32:10.157021] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(27: {NetworkSinkDescriptor(partition=1::25::0::0;nodeLocation=tcp://192.168.2.10:42327)})
  WATERMARKASSIGNER(8)
    SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.157058] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.157315] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.161063] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.162221] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.162740] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.163194] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.164060] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.165123] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.165579] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.166065] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.166406] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.166839] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.167391] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.167677] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.168170] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.168794] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.169255] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.169574] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.170011] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.183331] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[12:32:10.183367] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.183385] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.183521] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:35947[m
[36m[12:32:10.183564] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:35947 queryId=1 querySubPlanId = 2[m
[36m[12:32:10.183769] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(30: {NetworkSinkDescriptor(partition=1::28::0::0;nodeLocation=tcp://192.168.2.10:42327)})
  WATERMARKASSIGNER(10)
    SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.183804] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.183999] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.184389] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.184867] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.185191] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.185616] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.186153] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.186239] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.186547] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.187039] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.187351] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.187776] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.188310] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.188557] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.189015] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.189468] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.189915] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.190242] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.190672] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.200787] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[12:32:10.200822] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.200839] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.200954] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:42673[m
[36m[12:32:10.200983] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:42673 queryId=1 querySubPlanId = 3[m
[36m[12:32:10.201171] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:42327)})
  WATERMARKASSIGNER(12)
    SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.201205] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.201342] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.201692] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.202145] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.202460] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.202868] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.203353] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.203425] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.203689] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.204170] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.204476] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.204891] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.205465] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.205736] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.206265] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.206829] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.207329] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.207660] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.208165] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.218691] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[12:32:10.218727] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.218745] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.218874] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:33423[m
[36m[12:32:10.218905] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:33423 queryId=1 querySubPlanId = 4[m
[36m[12:32:10.219100] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.10:42327)})
  WATERMARKASSIGNER(14)
    SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.219136] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.219289] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.219682] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.220208] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.220571] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.221014] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.221654] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.221747] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.222035] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.222493] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.222817] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.223252] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.223316] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:10.223743] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.224046] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.224539] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.225045] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.225496] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.225804] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.226231] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.235680] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[12:32:10.235765] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.235796] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.235915] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.10:42705[m
[36m[12:32:10.235988] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:42705 queryId=1 querySubPlanId = 5[m
[36m[12:32:10.236277] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.30:42455)})
  CENTRALWINDOW(23)
    SOURCE(25,,NetworkSourceDescriptor{tcp://192.168.2.32:32995 1::25::0::0})
    SOURCE(28,,NetworkSourceDescriptor{tcp://192.168.2.33:40149 1::28::0::0})
    SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.34:35681 1::31::0::0})
    SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.35:46389 1::34::0::0})
[m
[36m[12:32:10.236332] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.236499] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.236754] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.236930] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.237092] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.237228] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.237633] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[12:32:10.237767] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.238023] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[12:32:10.238130] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.238168] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[12:32:10.238230] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.238779] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.239263] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.239481] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.239618] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.240068] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:32995 1::25::0::0}[m
[36m[12:32:10.240351] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.240834] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.241462] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.241937] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.242275] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.242726] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.243274] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:40149 1::28::0::0}[m
[36m[12:32:10.243518] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.244034] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.244554] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.245014] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.245330] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.245785] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.246309] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:35681 1::31::0::0}[m
[36m[12:32:10.246551] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.247014] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.247515] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.248007] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.248341] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.248791] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.249329] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:46389 1::34::0::0}[m
[36m[12:32:10.249569] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.250033] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.250532] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.250997] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.251311] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.251745] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.265470] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[12:32:10.265556] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.265618] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.265744] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:40825[m
[36m[12:32:10.265774] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:40825 queryId=1 querySubPlanId = 6[m
[36m[12:32:10.265975] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.31:39083)})
  WATERMARKASSIGNER(16)
    SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.266012] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.266168] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.266554] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.267046] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.267398] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.267843] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.268440] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.268556] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.268846] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.269317] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.269649] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.270090] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.270554] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.270811] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.271279] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.271808] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.272317] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.272668] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.273149] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.282458] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[12:32:10.282542] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.282564] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.282684] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:34799[m
[36m[12:32:10.282713] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:34799 queryId=1 querySubPlanId = 7[m
[36m[12:32:10.282912] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:39083)})
  WATERMARKASSIGNER(18)
    SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.282948] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.283099] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.283475] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.284042] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.284397] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.284844] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.285401] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.285511] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.285800] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.286268] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.286591] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.287033] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.287514] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.287776] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.288290] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.288796] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.289267] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.289600] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.290047] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.299245] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[12:32:10.299330] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.299351] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.299469] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:38215[m
[36m[12:32:10.299498] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:38215 queryId=1 querySubPlanId = 8[m
[36m[12:32:10.299696] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.31:39083)})
  WATERMARKASSIGNER(20)
    SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.299731] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.299896] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.300317] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.300842] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.301201] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.301647] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.302222] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.302339] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.302632] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.303108] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.303445] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.303888] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.304413] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.304676] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.305153] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.305644] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.306107] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.306439] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.306891] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.316242] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[12:32:10.316320] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.316377] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.316504] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:42701[m
[36m[12:32:10.316553] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:42701 queryId=1 querySubPlanId = 9[m
[36m[12:32:10.316757] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:39083)})
  WATERMARKASSIGNER(22)
    SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[12:32:10.316794] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.316947] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.317320] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.317818] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.318166] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.318606] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.319162] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[12:32:10.319272] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.319557] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.320076] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.320417] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.320860] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.321354] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[12:32:10.321614] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.322084] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.322603] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.323071] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.323396] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.323840] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.333144] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[12:32:10.333267] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.333290] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.333415] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:34411[m
[36m[12:32:10.333444] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:34411 queryId=1 querySubPlanId = 10[m
[36m[12:32:10.333723] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:42455)})
  CENTRALWINDOW(24)
    SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.36:33959 1::40::0::0})
    SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.37:45453 1::43::0::0})
    SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.38:39597 1::46::0::0})
    SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.39:43193 1::49::0::0})
[m
[36m[12:32:10.333763] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.333921] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.334165] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.334356] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.334521] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.334661] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.335057] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[12:32:10.335192] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.335340] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[12:32:10.335435] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.335469] [D] [thread 29304] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[12:32:10.335529] [D] [thread 29304] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:32:10.335935] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.336449] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.336677] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.336819] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.337258] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:33959 1::40::0::0}[m
[36m[12:32:10.337502] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.337976] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.338547] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.339022] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.339354] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.339804] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.340401] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:45453 1::43::0::0}[m
[36m[12:32:10.340654] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.341128] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.341648] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.342117] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.342448] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.342896] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.343436] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:39597 1::46::0::0}[m
[36m[12:32:10.343681] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.344204] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.344735] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.345192] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.345520] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.345956] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.346504] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:43193 1::49::0::0}[m
[36m[12:32:10.346751] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.347225] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.347743] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.348261] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.348593] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[12:32:10.349040] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.362569] [D] [thread 29304] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[12:32:10.362655] [D] [thread 29304] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:32:10.362678] [D] [thread 29304] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:32:10.362800] [D] [thread 29304] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:41931[m
[36m[12:32:10.362829] [D] [thread 29304] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:41931 queryId=1 querySubPlanId = 11[m
[36m[12:32:10.363040] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.10:42327 1::37::0::0})
  SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:39083 1::52::0::0})
[m
[36m[12:32:10.363073] [D] [thread 29304] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:32:10.363214] [D] [thread 29304] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:32:10.363504] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.363672] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.363818] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.363978] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.364356] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:42327 1::37::0::0}[m
[36m[12:32:10.364478] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.364628] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.364894] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.365034] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.365148] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.365284] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.365644] [D] [thread 29304] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:39083 1::52::0::0}[m
[36m[12:32:10.365753] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.365898] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.366141] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.366294] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.366454] [D] [thread 29304] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:10.366595] [D] [thread 29304] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:32:10.373224] [D] [thread 29304] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[12:32:10.916594] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:10.917110] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:11.918433] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:12.036597] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:12.037121] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:13.038354] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:13.168419] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:13.168963] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:13.169912] [D] [thread 29366] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:13.170129] [I] [thread 29366] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:13.170154] [I] [thread 29366] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:32:13.170212] [E] [thread 29366] [NodeEngine.cpp:479] [getQueryStatistics] AbstractQueryManager::getQueryStatistics: query does not exists 1[m
[36m[12:32:13.372596] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:13.373088] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:14.374399] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:15.227849] [D] [thread 29316] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:32:15.228044] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.228838] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:32:15.229037] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[12:32:15.229106] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.229430] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:32:15.229476] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.229766] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:32:15.230996] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[12:32:15.231055] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.231391] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:32:15.231420] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.231719] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:32:15.233483] [D] [thread 29316] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:32:15.233793] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.234329] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:32:15.234493] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[12:32:15.234581] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.235083] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:32:15.235144] [D] [thread 29316] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:32:15.235580] [D] [thread 29316] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:32:15.237000] [D] [thread 29316] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(56: {FileSinkDescriptor()})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.10:42327 1::37::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.31:39083 1::52::0::0})
[m
[32m[12:32:15.237081] [I] [thread 29316] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 11 [m
[32m[12:32:15.237207] [I] [thread 29316] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[12:32:15.237768] [D] [thread 29316] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 11[m
[36m[12:32:15.237836] [D] [thread 29316] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 1. LogicalQueryPlan[m
[36m[12:32:15.237877] [D] [thread 29316] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 11 for context QueryCompilation-1-11-2023-10-26 12:32:15 and scope 1. LogicalQueryPlan[m
[32m[12:32:15.239384] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[12:32:15.239621] [I] [thread 29316] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[12:32:15.239659] [I] [thread 29316] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[12:32:15.239693] [I] [thread 29316] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:32:15.239718] [I] [thread 29316] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:15.239726] [I] [thread 29316] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:32:15.240048] [I] [thread 29316] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:32:15.240572] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[12:32:15.240822] [D] [thread 29316] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[12:32:15.240867] [I] [thread 29316] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:32:15.240877] [I] [thread 29316] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[12:32:15.241123] [D] [thread 29316] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:32:15.241196] [D] [thread 29316] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[12:32:15.241317] [D] [thread 29316] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[12:32:15.241362] [D] [thread 29316] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:32:15.241597] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[12:32:15.241824] [D] [thread 29316] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:32:15.241867] [D] [thread 29316] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:32:15.241916] [I] [thread 29316] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:32:15.241924] [I] [thread 29316] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:32:15.241938] [I] [thread 29316] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:32:15.242098] [D] [thread 29316] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:32:15.242146] [D] [thread 29316] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:32:15.242262] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[12:32:15.242430] [D] [thread 29316] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:32:15.242525] [D] [thread 29316] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:32:15.242600] [I] [thread 29316] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:32:15.242611] [I] [thread 29316] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:32:15.242632] [I] [thread 29316] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:32:15.242775] [D] [thread 29316] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:32:15.242807] [D] [thread 29316] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[12:32:15.242994] [D] [thread 29316] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 2. PhysicalQueryPlan[m
[36m[12:32:15.243083] [D] [thread 29316] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 11 for context QueryCompilation-1-11-2023-10-26 12:32:15 and scope 2. PhysicalQueryPlan[m
[36m[12:32:15.243974] [D] [thread 29316] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 11[m
[32m[12:32:15.244672] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[12:32:15.245156] [D] [thread 29316] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[12:32:15.245213] [D] [thread 29316] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:15.245225] [D] [thread 29316] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:32:15.246201] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[12:32:15.246628] [D] [thread 29316] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:32:15.246790] [D] [thread 29316] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:15.246803] [D] [thread 29316] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:32:15.247364] [I] [thread 29316] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[12:32:15.247745] [D] [thread 29316] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:32:15.247801] [D] [thread 29316] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:32:15.247814] [D] [thread 29316] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:32:15.248220] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 3. AfterPipelinedQueryPlan[m
[36m[12:32:15.248391] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[36m[12:32:15.249897] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 4. AfterAddScanAndEmitPhase[m
[36m[12:32:15.250018] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[36m[12:32:15.251069] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 5. GeneratableOperators[m
[36m[12:32:15.251163] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[36m[12:32:15.252181] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 6. BufferOptimizationPhase[m
[36m[12:32:15.252272] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[36m[12:32:15.253230] [D] [thread 29316] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[12:32:15.253369] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 7. PredicationOptimizationPhase[m
[36m[12:32:15.253400] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[36m[12:32:15.254375] [D] [thread 29316] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 11[m
[36m[12:32:15.254467] [D] [thread 29316] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-11-2023-10-26 12:32:15 - 8. ExecutableOperatorPlan[m
[36m[12:32:15.254492] [D] [thread 29316] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 11 for scope QueryCompilation-1-11-2023-10-26 12:32:15[m
[32m[12:32:15.255599] [I] [thread 29316] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 17.2031 ms
DefaultQueryCompiler_LogicalQueryPlan:	1.31225 ms
DefaultQueryCompiler_PhysicalQueryPlan:	4.66203 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	5.87124 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	1.13742 ms
DefaultQueryCompiler_GeneratableOperators:	1.06516 ms
DefaultQueryCompiler_BufferOptimizationPhase:	1.03601 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	1.09929 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	1.01301 ms[m
[36m[12:32:15.256083] [D] [thread 29316] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[12:32:15.256204] [I] [thread 29316] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[12:32:15.256746] [D] [thread 29316] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoPlacementWithMonitoringSourceThreeLevel.out[m
[32m[12:32:15.257553] [I] [thread 29316] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:32:15.258353] [D] [thread 29316] [DataSource.cpp:75] [DataSource] DataSource  37 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[12:32:15.259505] [I] [thread 29316] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:32:15.260088] [D] [thread 29316] [DataSource.cpp:75] [DataSource] DataSource  52 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[12:32:15.261556] [D] [thread 29316] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 11[m
[36m[12:32:15.261753] [D] [thread 29316] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  11  as a singleton[m
[36m[12:32:15.261777] [D] [thread 29316] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=11[m
[36m[12:32:15.261799] [D] [thread 29316] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 2[m
[36m[12:32:15.261832] [D] [thread 29316] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  37  not found. Creating new element with with qep [m
[36m[12:32:15.262245] [D] [thread 29316] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  52  not found. Creating new element with with qep [m
[36m[12:32:15.262430] [D] [thread 29316] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 11  pair queryId= 1  subplanId= 11[m
2023-10-26 12:32:15.262 setup: queryId=1, querySubPlanId=11; 
[36m[12:32:15.262979] [D] [thread 29316] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=11[m
2023-10-26 12:32:15.263 start: queryId=1, querySubPlanId=11; 
[36m[12:32:15.263154] [D] [thread 29316] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=11[m
[36m[12:32:15.263553] [D] [thread 29316] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::37::0::0 from 192.168.2.10[m
[36m[12:32:15.264013] [D] [thread 29316] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::37::0::0=1[m
[36m[12:32:15.264066] [D] [thread 29316] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5000f730  started successfully[m
[36m[12:32:15.264126] [D] [thread 29316] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::52::0::0 from 192.168.2.31[m
[36m[12:32:15.264264] [D] [thread 29316] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::52::0::0=1[m
[36m[12:32:15.264299] [D] [thread 29316] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5000faf0  started successfully[m
[36m[12:32:15.264425] [D] [thread 29316] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[12:32:15.264676] [D] [thread 29316] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[12:32:15.265127] [D] [thread 29316] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[12:32:15.266110] [D] [thread 29314] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::37::0::0[m
[36m[12:32:15.266390] [D] [thread 29316] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::37::0::0[m
[36m[12:32:15.266834] [D] [thread 29316] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:37 PartitionId: 0 SubpartitionID: 0[m
[36m[12:32:15.266920] [D] [thread 29316] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5000f730  started successfully[m
[36m[12:32:15.266976] [D] [thread 29316] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[12:32:15.267059] [D] [thread 29316] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[12:32:15.267291] [D] [thread 29316] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 11 blocking=true type Initialize[m
[36m[12:32:15.267842] [D] [thread 29314] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[12:32:15.268010] [D] [thread 29316] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[12:32:15.268173] [D] [thread 29316] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[12:32:15.268196] [D] [thread 29316] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5000faf0  started successfully[m
[36m[12:32:15.268335] [D] [thread 29316] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[12:32:15.268713] [D] [thread 29316] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  11  succeeded[m
[36m[12:32:15.268938] [D] [thread 29316] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[12:32:15.375650] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:15.515358] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:15.516083] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:15.516834] [D] [thread 29376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:15.516927] [I] [thread 29376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:15.516945] [I] [thread 29376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:15.517165] [I] [thread 29376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:15.517216] [I] [thread 29376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:15.710960] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:15.711433] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:16.712728] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:17.713824] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:17.816368] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:17.816681] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:17.817717] [D] [thread 29382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:17.817811] [I] [thread 29382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:17.817828] [I] [thread 29382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:17.817945] [I] [thread 29382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:17.817960] [I] [thread 29382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:18.028817] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:18.029125] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:19.030377] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:20.031762] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:20.153899] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:20.154215] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:20.155369] [D] [thread 29388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:20.155474] [I] [thread 29388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:20.155494] [I] [thread 29388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:20.155621] [I] [thread 29388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:20.155640] [I] [thread 29388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:20.359757] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:20.360099] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:21.361313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:22.362557] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:22.501139] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:22.501634] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:22.502433] [D] [thread 29396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:22.502526] [I] [thread 29396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:22.502544] [I] [thread 29396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:22.502662] [I] [thread 29396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:22.502675] [I] [thread 29396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:22.666376] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:22.666881] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:23.668144] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:24.669399] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:24.715636] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:24.716273] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:24.717207] [D] [thread 29401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:24.717320] [I] [thread 29401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:24.717339] [I] [thread 29401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:24.717481] [I] [thread 29401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:24.717497] [I] [thread 29401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:24.911460] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:24.911799] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:25.913079] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:26.914302] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:27.030445] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:27.031007] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:27.032055] [D] [thread 29406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:27.032154] [I] [thread 29406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:27.032173] [I] [thread 29406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:27.032300] [I] [thread 29406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:27.032313] [I] [thread 29406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:27.227779] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:27.228315] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:28.229643] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:29.230876] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:29.276860] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:29.277426] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:29.278163] [D] [thread 29411] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:29.278297] [I] [thread 29411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:29.278321] [I] [thread 29411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:29.278457] [I] [thread 29411] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:29.278477] [I] [thread 29411] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:29.442704] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:29.443252] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:30.444080] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:31.445365] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:31.504522] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:31.504859] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:31.505874] [D] [thread 29416] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:31.505970] [I] [thread 29416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:31.505988] [I] [thread 29416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:31.506117] [I] [thread 29416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:31.506135] [I] [thread 29416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:31.699244] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:31.699550] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:32.700762] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:33.702076] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:33.808111] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:33.808457] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:33.810007] [D] [thread 29421] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:33.810129] [I] [thread 29421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:33.810149] [I] [thread 29421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:33.810271] [I] [thread 29421] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:33.810286] [I] [thread 29421] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:33.971706] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:33.972182] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:34.973486] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:35.974794] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:36.112929] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:36.113327] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:36.114818] [D] [thread 29427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:36.114911] [I] [thread 29427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:36.114930] [I] [thread 29427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:36.115046] [I] [thread 29427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:36.115060] [I] [thread 29427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:36.327715] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:36.328090] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:37.329270] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:38.330525] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:38.468066] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:38.468401] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:38.469390] [D] [thread 29432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:38.469487] [I] [thread 29432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:38.469504] [I] [thread 29432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:38.469624] [I] [thread 29432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:38.469637] [I] [thread 29432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:38.632596] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:38.632936] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:39.634184] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:40.635444] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:40.645265] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:40.645569] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:40.646583] [D] [thread 29438] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:40.646675] [I] [thread 29438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:40.646694] [I] [thread 29438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:40.646811] [I] [thread 29438] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:40.646826] [I] [thread 29438] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:40.840020] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:40.840338] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:41.841575] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:42.842891] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:42.988984] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:42.989306] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:42.990549] [D] [thread 29444] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:42.990644] [I] [thread 29444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:42.990663] [I] [thread 29444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:42.990782] [I] [thread 29444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:42.990798] [I] [thread 29444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:43.314693] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:43.315004] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:44.316240] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:45.317598] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:45.512416] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:45.512736] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:45.513713] [D] [thread 29451] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:45.513803] [I] [thread 29451] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:45.513822] [I] [thread 29451] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:45.513941] [I] [thread 29451] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:45.513954] [I] [thread 29451] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:45.718711] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:45.719042] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:46.720194] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:47.721456] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:47.931286] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:47.931794] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:47.933182] [D] [thread 29457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:47.933271] [I] [thread 29457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:47.933286] [I] [thread 29457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:47.933394] [I] [thread 29457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:47.933408] [I] [thread 29457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:48.135990] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:48.136482] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:49.137650] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:50.138924] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:50.274946] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:50.275270] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:50.276482] [D] [thread 29462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:50.276600] [I] [thread 29462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:50.276675] [I] [thread 29462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:50.276820] [I] [thread 29462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:50.276857] [I] [thread 29462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:50.484664] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:50.485014] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:51.486173] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:52.487591] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:52.517639] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:52.518177] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:52.518957] [D] [thread 29471] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:52.519049] [I] [thread 29471] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:52.519068] [I] [thread 29471] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:52.519187] [I] [thread 29471] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:52.519201] [I] [thread 29471] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:52.721002] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:52.721508] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:53.722691] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:54.712720] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:54.713227] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:54.714050] [D] [thread 29480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:54.714136] [I] [thread 29480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:54.714155] [I] [thread 29480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:54.714273] [I] [thread 29480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:54.714286] [I] [thread 29480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:54.909765] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:54.910075] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:55.911307] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:56.912558] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:56.927936] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:56.928276] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:56.929312] [D] [thread 29487] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:56.929405] [I] [thread 29487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:56.929423] [I] [thread 29487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:56.929541] [I] [thread 29487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:56.929594] [I] [thread 29487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:57.184288] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:57.184640] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:58.185877] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:59.187184] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:59.288457] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:59.288887] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:59.289873] [D] [thread 29494] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:32:59.289966] [I] [thread 29494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:59.289985] [I] [thread 29494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:32:59.290104] [I] [thread 29494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:32:59.290118] [I] [thread 29494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:32:59.486109] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:32:59.486603] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:00.487875] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:01.463818] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:01.464396] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:01.465187] [D] [thread 29501] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:01.465274] [I] [thread 29501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:01.465293] [I] [thread 29501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:01.465411] [I] [thread 29501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:01.465426] [I] [thread 29501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:01.655657] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:01.656270] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:02.657500] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:03.658748] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:03.796462] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:03.797018] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:03.797809] [D] [thread 29509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:03.797898] [I] [thread 29509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:03.797915] [I] [thread 29509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:03.798034] [I] [thread 29509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:03.798048] [I] [thread 29509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:04.003699] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:04.004076] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:05.005312] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:05.973207] [D] [thread 29313] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:42455): ClientAnnouncement received for channel 0:1::52::0::0[m
[32m[12:33:05.973424] [I] [thread 29313] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::52::0::0(threadId=0) Data[m
[36m[12:33:05.973571] [D] [thread 29313] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::52::0::0(threadId=0) REGISTERED[m
[36m[12:33:06.006579] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:06.198358] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:06.198800] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:06.199712] [D] [thread 29515] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:06.199802] [I] [thread 29515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:06.199821] [I] [thread 29515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:06.199967] [I] [thread 29515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:06.199989] [I] [thread 29515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:06.406421] [D] [thread 29313] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:42455): ClientAnnouncement received for channel 0:1::37::0::0[m
[32m[12:33:06.406526] [I] [thread 29313] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::37::0::0(threadId=0) Data[m
[36m[12:33:06.406595] [D] [thread 29313] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::37::0::0(threadId=0) REGISTERED[m
[36m[12:33:06.408814] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:06.409273] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:07.410626] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:08.411916] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:08.446902] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:08.447447] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:08.448243] [D] [thread 29520] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:08.448333] [I] [thread 29520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:08.448352] [I] [thread 29520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:08.448470] [I] [thread 29520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:08.448483] [I] [thread 29520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:08.616010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:08.616480] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:09.617767] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:10.619081] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:10.757706] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:10.758229] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:10.759010] [D] [thread 29526] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:10.759100] [I] [thread 29526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:10.759118] [I] [thread 29526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:10.759238] [I] [thread 29526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:10.759254] [I] [thread 29526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:10.975512] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:10.976085] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:11.977348] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:12.978602] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:13.034958] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:13.035499] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:13.036302] [D] [thread 29532] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:13.036387] [I] [thread 29532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:13.036404] [I] [thread 29532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:13.036522] [I] [thread 29532] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:13.036536] [I] [thread 29532] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:13.199897] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:13.200435] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:14.201793] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:15.203064] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:15.263210] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:15.263663] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:15.264776] [D] [thread 29538] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:15.264888] [I] [thread 29538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:15.264908] [I] [thread 29538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:15.265030] [I] [thread 29538] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:15.265053] [I] [thread 29538] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:15.459662] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:15.460232] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:16.461449] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:17.462723] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:17.599679] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:17.600063] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:17.601599] [D] [thread 29543] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:17.601691] [I] [thread 29543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:17.601710] [I] [thread 29543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:17.601828] [I] [thread 29543] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:17.601842] [I] [thread 29543] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:17.764570] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:17.764882] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:18.766092] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:19.767419] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:19.830824] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:19.831144] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:19.832665] [D] [thread 29550] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:19.832762] [I] [thread 29550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:19.832782] [I] [thread 29550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:19.832902] [I] [thread 29550] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:19.832915] [I] [thread 29550] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:20.019915] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:20.020282] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:21.020796] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:22.022088] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:22.161590] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:22.162094] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:22.162906] [D] [thread 29555] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:22.162995] [I] [thread 29555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:22.163014] [I] [thread 29555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:22.163132] [I] [thread 29555] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:22.163145] [I] [thread 29555] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:22.327722] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:22.328184] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:23.329467] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:24.328919] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:24.329421] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:24.330205] [D] [thread 29560] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:24.330295] [I] [thread 29560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:24.330313] [I] [thread 29560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:24.330432] [I] [thread 29560] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:24.330445] [I] [thread 29560] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:24.535527] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:24.536064] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:25.537379] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:26.538636] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:26.670434] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:26.670939] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:26.671762] [D] [thread 29566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:26.671853] [I] [thread 29566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:26.671873] [I] [thread 29566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:26.672033] [I] [thread 29566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:26.672052] [I] [thread 29566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:26.823013] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:26.823354] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:27.824547] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:28.825833] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:28.963579] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:28.963937] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:28.965160] [D] [thread 29573] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:28.965253] [I] [thread 29573] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:28.965272] [I] [thread 29573] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:28.965388] [I] [thread 29573] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:28.965404] [I] [thread 29573] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:29.119869] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:29.120236] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:30.121399] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:31.122693] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:31.258925] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:31.259429] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:31.260545] [D] [thread 29578] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:31.260659] [I] [thread 29578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:31.260679] [I] [thread 29578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:31.260805] [I] [thread 29578] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:31.260823] [I] [thread 29578] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:31.476871] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:31.477217] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:32.478393] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:33.479633] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:33.540880] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:33.541221] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:33.542253] [D] [thread 29585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:33.542371] [I] [thread 29585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:33.542391] [I] [thread 29585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:33.542515] [I] [thread 29585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:33.542534] [I] [thread 29585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:33.725836] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:33.726165] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:34.727338] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:35.728616] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:35.872046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:35.872373] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:35.873399] [D] [thread 29590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:35.873498] [I] [thread 29590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:35.873518] [I] [thread 29590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:35.873637] [I] [thread 29590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:35.873651] [I] [thread 29590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:36.135736] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:36.136105] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:37.137268] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:38.138673] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:38.276533] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:38.276873] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:38.278141] [D] [thread 29597] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:38.278259] [I] [thread 29597] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:38.278279] [I] [thread 29597] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:38.278408] [I] [thread 29597] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:38.278439] [I] [thread 29597] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:38.422844] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:38.423188] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:39.424350] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:40.425649] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:40.471549] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:40.471894] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:40.472901] [D] [thread 29604] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:40.472994] [I] [thread 29604] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:40.473012] [I] [thread 29604] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:40.473127] [I] [thread 29604] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:40.473141] [I] [thread 29604] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:40.668305] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:40.668734] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:41.669992] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:42.671302] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:42.699567] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:42.700105] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:42.700888] [D] [thread 29610] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:42.700980] [I] [thread 29610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:42.700999] [I] [thread 29610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:42.701115] [I] [thread 29610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:42.701129] [I] [thread 29610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:42.919352] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:42.919903] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:43.921298] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:44.922542] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:44.925900] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:44.926436] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:44.927237] [D] [thread 29615] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:44.927327] [I] [thread 29615] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:44.927345] [I] [thread 29615] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:44.927463] [I] [thread 29615] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:44.927477] [I] [thread 29615] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:45.123765] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:45.124313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:46.124811] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:47.126063] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:47.263511] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:47.263834] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:47.264974] [D] [thread 29620] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:47.265070] [I] [thread 29620] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:47.265087] [I] [thread 29620] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:47.265203] [I] [thread 29620] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:47.265226] [I] [thread 29620] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:47.419296] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:47.419650] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:48.420859] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:49.422119] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:49.465143] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:49.465461] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:49.466458] [D] [thread 29625] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:49.466553] [I] [thread 29625] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:49.466572] [I] [thread 29625] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:49.466691] [I] [thread 29625] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:49.466705] [I] [thread 29625] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:49.658691] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:49.659038] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:50.660253] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:51.661534] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:51.776404] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:51.776725] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:51.777906] [D] [thread 29631] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:51.778002] [I] [thread 29631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:51.778021] [I] [thread 29631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:51.778149] [I] [thread 29631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:51.778167] [I] [thread 29631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:51.992312] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:51.992657] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:52.993932] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:53.995222] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:54.030049] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:54.030423] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:54.031353] [D] [thread 29636] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:54.031444] [I] [thread 29636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:54.031462] [I] [thread 29636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:54.031578] [I] [thread 29636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:54.031591] [I] [thread 29636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:54.231153] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:54.231486] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:55.232697] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:56.234014] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:56.744427] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:56.744752] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:56.746319] [D] [thread 29641] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:56.746413] [I] [thread 29641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:56.746432] [I] [thread 29641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:56.746550] [I] [thread 29641] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:56.746564] [I] [thread 29641] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:57.081234] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:57.081705] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:58.082996] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:59.084356] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:59.195325] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:59.195841] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:59.196724] [D] [thread 29647] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:33:59.196818] [I] [thread 29647] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:59.196834] [I] [thread 29647] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:33:59.196951] [I] [thread 29647] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:33:59.196965] [I] [thread 29647] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:33:59.463753] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:33:59.464137] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:00.465400] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:01.466752] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:01.610173] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:01.610539] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:01.612114] [D] [thread 29652] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:01.612208] [I] [thread 29652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:01.612225] [I] [thread 29652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:01.612343] [I] [thread 29652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:01.612357] [I] [thread 29652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:01.881793] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:01.882170] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:02.883322] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:03.884599] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:03.911347] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:03.911652] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:03.912724] [D] [thread 29659] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:03.912821] [I] [thread 29659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:03.912840] [I] [thread 29659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:03.912961] [I] [thread 29659] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:03.912985] [I] [thread 29659] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:04.130680] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:04.131016] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:05.132226] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:06.133472] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:06.142536] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:06.142864] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:06.143881] [D] [thread 29666] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:06.144008] [I] [thread 29666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:06.144028] [I] [thread 29666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:06.144147] [I] [thread 29666] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:06.144161] [I] [thread 29666] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:06.405120] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:06.405647] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:07.406937] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:08.408254] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:08.442117] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:08.442549] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:08.443585] [D] [thread 29672] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:08.443680] [I] [thread 29672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:08.443698] [I] [thread 29672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:08.443815] [I] [thread 29672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:08.443829] [I] [thread 29672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:08.638354] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:08.638830] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:09.640122] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:10.634923] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:10.635495] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:10.636319] [D] [thread 29678] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:10.636411] [I] [thread 29678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:10.636428] [I] [thread 29678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:10.636548] [I] [thread 29678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:10.636561] [I] [thread 29678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:10.839194] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:10.839507] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:11.840728] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:12.842010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:12.900516] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:12.900819] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:12.901887] [D] [thread 29684] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:12.901983] [I] [thread 29684] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:12.902001] [I] [thread 29684] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:12.902120] [I] [thread 29684] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:12.902134] [I] [thread 29684] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:13.045332] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:13.045810] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:14.047112] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:15.048224] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:15.067494] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:15.068040] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:15.068856] [D] [thread 29691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:15.068946] [I] [thread 29691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:15.068966] [I] [thread 29691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:15.069082] [I] [thread 29691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:15.069095] [I] [thread 29691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:15.279226] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:15.279798] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:16.281065] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:17.282317] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:17.294853] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:17.295375] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:17.296288] [D] [thread 29699] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:17.296379] [I] [thread 29699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:17.296395] [I] [thread 29699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:17.296514] [I] [thread 29699] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:17.296528] [I] [thread 29699] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:17.492510] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:17.492833] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:18.494071] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:19.495427] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:19.635933] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:19.636274] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:19.637257] [D] [thread 29706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:19.637347] [I] [thread 29706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:19.637366] [I] [thread 29706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:19.637485] [I] [thread 29706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:19.637499] [I] [thread 29706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:19.792186] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:19.792481] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:20.793709] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:21.795076] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:21.909245] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:21.909551] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:21.910550] [D] [thread 29712] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:21.910642] [I] [thread 29712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:21.910661] [I] [thread 29712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:21.910780] [I] [thread 29712] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:21.910793] [I] [thread 29712] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:22.116646] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:22.116941] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:23.118154] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:24.119426] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:24.256817] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:24.257145] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:24.258707] [D] [thread 29718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:24.258801] [I] [thread 29718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:24.258820] [I] [thread 29718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:24.258937] [I] [thread 29718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:24.258950] [I] [thread 29718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:24.467261] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:24.467610] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:25.468868] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:26.470222] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:26.615844] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:26.616216] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:26.617397] [D] [thread 29725] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:26.617489] [I] [thread 29725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:26.617508] [I] [thread 29725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:26.617624] [I] [thread 29725] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:26.617640] [I] [thread 29725] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:26.817627] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:26.817974] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:27.819384] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:28.820662] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:28.851713] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:28.852063] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:28.853041] [D] [thread 29731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:28.853134] [I] [thread 29731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:28.853153] [I] [thread 29731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:28.853270] [I] [thread 29731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:28.853284] [I] [thread 29731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:29.032907] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:29.033263] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:30.034501] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:31.035852] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:31.156903] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:31.157249] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:31.158210] [D] [thread 29736] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:31.158300] [I] [thread 29736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:31.158319] [I] [thread 29736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:31.158435] [I] [thread 29736] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:31.158451] [I] [thread 29736] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:31.322502] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:31.322854] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:32.324126] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:33.325349] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:33.383571] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:33.383893] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:33.384973] [D] [thread 29741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:33.385069] [I] [thread 29741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:33.385163] [I] [thread 29741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:33.385315] [I] [thread 29741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:33.385333] [I] [thread 29741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:33.568105] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:33.568445] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:34.569606] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:35.570885] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:35.677970] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:35.678453] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:35.679499] [D] [thread 29746] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:35.679595] [I] [thread 29746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:35.679646] [I] [thread 29746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:35.679767] [I] [thread 29746] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:35.679781] [I] [thread 29746] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:35.895433] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:35.895911] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:36.897225] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:37.898471] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:38.196629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:38.197144] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:38.197986] [D] [thread 29751] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:38.198115] [I] [thread 29751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:38.198134] [I] [thread 29751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:38.198273] [I] [thread 29751] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:38.198290] [I] [thread 29751] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:38.400650] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:38.401036] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:38.435431] [D] [thread 29304] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[12:34:38.435595] [D] [thread 29304] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[12:34:38.436806] [D] [thread 29304] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[12:34:38.437073] [D] [thread 29304] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[12:34:38.437119] [D] [thread 29304] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[12:34:38.437333] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[12:34:38.437402] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:34215 queryId=1[m
[36m[12:34:38.444075] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[12:34:38.444151] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:35947 queryId=1[m
[36m[12:34:38.448432] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[12:34:38.448515] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:42673 queryId=1[m
[36m[12:34:38.452796] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[12:34:38.452880] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:33423 queryId=1[m
[36m[12:34:38.457236] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.10[m
[36m[12:34:38.457321] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.10:42705 queryId=1[m
[36m[12:34:38.461566] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[12:34:38.461651] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:40825 queryId=1[m
[36m[12:34:38.465892] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[12:34:38.465978] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:34799 queryId=1[m
[36m[12:34:38.470231] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[12:34:38.470317] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:38215 queryId=1[m
[36m[12:34:38.474531] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[12:34:38.474656] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:42701 queryId=1[m
[36m[12:34:38.478883] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[12:34:38.478969] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:34411 queryId=1[m
[36m[12:34:38.483204] [D] [thread 29304] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.30[m
[36m[12:34:38.483290] [D] [thread 29304] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:41931 queryId=1[m
[36m[12:34:38.487698] [D] [thread 29304] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[12:34:38.609001] [D] [thread 29374] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[12:34:38.609104] [D] [thread 29374] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[12:34:38.609313] [D] [thread 29374] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  11   1[m
[36m[12:34:38.609416] [D] [thread 29374] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698323678609[m
[36m[12:34:38.609438] [D] [thread 29374] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  11  succeeded[m
[36m[12:34:38.609462] [D] [thread 29374] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[12:34:38.637073] [D] [thread 29304] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[12:34:38.637185] [D] [thread 29304] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[12:34:38.638025] [I] [thread 29304] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[12:34:38.638218] [D] [thread 29304] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[12:34:39.402283] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:40.403531] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:40.663444] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:40.664027] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:40.664855] [D] [thread 29756] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:40.664945] [I] [thread 29756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:40.664962] [I] [thread 29756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:40.665077] [I] [thread 29756] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:40.665091] [I] [thread 29756] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:40.863613] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:40.864196] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:41.865502] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:42.866738] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:42.941565] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:42.942110] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:42.942908] [D] [thread 29761] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:42.942979] [I] [thread 29761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:42.942995] [I] [thread 29761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:42.943102] [I] [thread 29761] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:42.943114] [I] [thread 29761] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:43.134446] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:43.134917] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:44.136202] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:45.125051] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:45.126033] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:45.126790] [D] [thread 29766] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:45.126897] [I] [thread 29766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:45.126916] [I] [thread 29766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:45.127040] [I] [thread 29766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:45.127054] [I] [thread 29766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:45.333104] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:45.333583] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:46.334916] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:47.336133] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:47.397629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:47.397950] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:47.399755] [D] [thread 29771] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:47.399873] [I] [thread 29771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:47.399894] [I] [thread 29771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:47.400055] [I] [thread 29771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:47.400081] [I] [thread 29771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:47.567510] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:47.567820] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:48.568105] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:49.569393] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:49.621386] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:49.621900] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:49.622812] [D] [thread 29776] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:49.622907] [I] [thread 29776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:49.622926] [I] [thread 29776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:49.623043] [I] [thread 29776] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:49.623056] [I] [thread 29776] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:49.804671] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:49.805004] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:50.806183] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:51.807408] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:51.808519] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:51.808835] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:51.809839] [D] [thread 29781] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:51.809929] [I] [thread 29781] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:51.809947] [I] [thread 29781] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:51.810063] [I] [thread 29781] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:51.810078] [I] [thread 29781] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:52.011310] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:52.011624] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:53.012136] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:54.013438] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:54.031900] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:54.032238] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:54.033244] [D] [thread 29787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:54.033335] [I] [thread 29787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:54.033354] [I] [thread 29787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:54.033471] [I] [thread 29787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:54.033485] [I] [thread 29787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:54.200959] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:54.201324] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:55.202536] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:56.204016] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:56.227804] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:56.228154] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:56.229195] [D] [thread 29794] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:56.229288] [I] [thread 29794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:56.229306] [I] [thread 29794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:56.229425] [I] [thread 29794] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:56.229438] [I] [thread 29794] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:56.434148] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:56.434460] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:57.435669] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:58.436970] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:58.465547] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:58.465870] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:58.467464] [D] [thread 29802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:34:58.467560] [I] [thread 29802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:58.467578] [I] [thread 29802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:34:58.467698] [I] [thread 29802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:34:58.467712] [I] [thread 29802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:34:58.675398] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:58.675752] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:34:59.676932] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:00.678202] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:00.723869] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:00.724259] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:00.725266] [D] [thread 29808] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:00.725359] [I] [thread 29808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:00.725378] [I] [thread 29808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:00.725494] [I] [thread 29808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:00.725508] [I] [thread 29808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:00.880603] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:00.880958] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:01.882178] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:02.883507] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:02.917727] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:02.918093] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:02.919099] [D] [thread 29815] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:02.919196] [I] [thread 29815] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:02.919213] [I] [thread 29815] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:02.919331] [I] [thread 29815] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:02.919345] [I] [thread 29815] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:03.104206] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:03.104542] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:04.105802] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:05.107046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:05.120569] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:05.120881] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:05.121870] [D] [thread 29821] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:05.121961] [I] [thread 29821] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:05.121980] [I] [thread 29821] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:05.122101] [I] [thread 29821] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:05.122116] [I] [thread 29821] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:05.283931] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:05.284314] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:06.285525] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:07.286756] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:07.306477] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:07.306802] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:07.307890] [D] [thread 29827] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:07.308015] [I] [thread 29827] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:07.308035] [I] [thread 29827] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:07.308154] [I] [thread 29827] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:07.308168] [I] [thread 29827] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:07.511674] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:07.512030] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:08.513231] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:09.497156] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:09.497500] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:09.499119] [D] [thread 29832] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:09.499233] [I] [thread 29832] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:09.499254] [I] [thread 29832] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:09.499386] [I] [thread 29832] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:09.499403] [I] [thread 29832] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:09.654904] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:09.655353] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:10.656557] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:11.657864] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:11.687489] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:11.688006] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:11.688921] [D] [thread 29837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:11.689010] [I] [thread 29837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:11.689029] [I] [thread 29837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:11.689147] [I] [thread 29837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:11.689162] [I] [thread 29837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:11.897175] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:11.897488] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:12.898722] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:13.900101] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:13.923497] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:13.923843] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:13.924929] [D] [thread 29842] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:13.925028] [I] [thread 29842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:13.925045] [I] [thread 29842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:13.925162] [I] [thread 29842] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:13.925180] [I] [thread 29842] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:14.136364] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:14.136724] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:15.137941] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:16.139220] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:16.276563] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:16.276920] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:16.278415] [D] [thread 29847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:16.278508] [I] [thread 29847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:16.278526] [I] [thread 29847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:16.278642] [I] [thread 29847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:16.278655] [I] [thread 29847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:16.488802] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:16.489296] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:17.490590] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:18.492078] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:18.539280] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:18.539770] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:18.540756] [D] [thread 29852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:18.540852] [I] [thread 29852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:18.540871] [I] [thread 29852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:18.540989] [I] [thread 29852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:18.541003] [I] [thread 29852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:18.702739] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:18.703269] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:19.704501] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:20.705819] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:20.728838] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:20.729343] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:20.730147] [D] [thread 29857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:20.730233] [I] [thread 29857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:20.730251] [I] [thread 29857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:20.730369] [I] [thread 29857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:20.730384] [I] [thread 29857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:20.927887] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:20.928471] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:21.929778] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:22.931091] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:22.976058] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:22.976502] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:22.977370] [D] [thread 29862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:22.977461] [I] [thread 29862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:22.977480] [I] [thread 29862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:22.977597] [I] [thread 29862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:22.977613] [I] [thread 29862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:23.141346] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:23.141815] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:24.143085] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:25.144366] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:25.198629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:25.199175] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:25.199987] [D] [thread 29867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:25.200073] [I] [thread 29867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:25.200090] [I] [thread 29867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:25.200205] [I] [thread 29867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:25.200219] [I] [thread 29867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:25.391582] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:25.392090] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:26.393366] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:27.394645] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:27.536485] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:27.537005] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:27.537801] [D] [thread 29873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:27.537924] [I] [thread 29873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:27.537943] [I] [thread 29873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:27.538062] [I] [thread 29873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:27.538076] [I] [thread 29873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:27.687558] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:27.687881] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:28.689175] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:29.690487] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:29.826820] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:29.827144] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:29.828213] [D] [thread 29878] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:29.828305] [I] [thread 29878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:29.828323] [I] [thread 29878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:29.828439] [I] [thread 29878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:29.828452] [I] [thread 29878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:30.022778] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:30.023096] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:31.024334] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:32.025646] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:32.164492] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:32.164810] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:32.165976] [D] [thread 29883] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:32.166102] [I] [thread 29883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:32.166122] [I] [thread 29883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:32.166240] [I] [thread 29883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:32.166254] [I] [thread 29883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:32.424695] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:32.425021] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:33.426241] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:34.408749] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:34.409085] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:34.410077] [D] [thread 29890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:34.410206] [I] [thread 29890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:34.410225] [I] [thread 29890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:34.410344] [I] [thread 29890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:34.410358] [I] [thread 29890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:34.623702] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:34.624280] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:35.625585] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:36.626909] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:36.768015] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:36.768520] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:36.769394] [D] [thread 29895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:36.769486] [I] [thread 29895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:36.769502] [I] [thread 29895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:36.769621] [I] [thread 29895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:36.769634] [I] [thread 29895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:36.919313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:36.919643] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:37.920917] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:38.922197] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:38.945305] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:38.945623] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:38.946611] [D] [thread 29901] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:38.946700] [I] [thread 29901] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:38.946718] [I] [thread 29901] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:38.946834] [I] [thread 29901] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:38.946849] [I] [thread 29901] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:39.138462] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:39.138781] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:40.140057] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:41.130300] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:41.130620] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:41.131783] [D] [thread 29906] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:41.131856] [I] [thread 29906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:41.131871] [I] [thread 29906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:41.132019] [I] [thread 29906] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:41.132033] [I] [thread 29906] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:41.323252] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:41.323568] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:42.324798] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:43.326010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:43.374735] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:43.375047] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:43.376549] [D] [thread 29914] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:43.376700] [I] [thread 29914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:43.376720] [I] [thread 29914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:43.376851] [I] [thread 29914] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:43.376869] [I] [thread 29914] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:43.544048] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:43.544375] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:44.545540] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:45.546829] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:45.662200] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:45.662517] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:45.663768] [D] [thread 29921] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:45.663885] [I] [thread 29921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:45.663906] [I] [thread 29921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:45.664071] [I] [thread 29921] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:45.664146] [I] [thread 29921] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:45.915655] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:45.916049] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:46.917227] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:47.918463] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:47.934719] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:47.935062] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:47.936064] [D] [thread 29926] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:47.936153] [I] [thread 29926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:47.936170] [I] [thread 29926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:47.936286] [I] [thread 29926] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:47.936301] [I] [thread 29926] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:48.139397] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:48.139871] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:49.141248] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:50.142600] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:50.285645] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:50.286162] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:50.286994] [D] [thread 29931] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:50.287100] [I] [thread 29931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:50.287119] [I] [thread 29931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:50.287246] [I] [thread 29931] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:50.287265] [I] [thread 29931] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:50.489537] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:50.490049] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:51.491351] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:52.492620] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:52.535986] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:52.536418] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:52.537414] [D] [thread 29936] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:52.537508] [I] [thread 29936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:52.537525] [I] [thread 29936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:52.537645] [I] [thread 29936] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:52.537659] [I] [thread 29936] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:52.715664] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:52.716357] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:53.717610] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:54.718889] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:54.753442] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:54.753761] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:54.754749] [D] [thread 29941] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:54.754844] [I] [thread 29941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:54.754863] [I] [thread 29941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:54.754982] [I] [thread 29941] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:54.754996] [I] [thread 29941] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:54.941100] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:54.941406] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:55.942639] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:56.944010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:57.074112] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:57.074434] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:57.076033] [D] [thread 29947] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:57.076123] [I] [thread 29947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:57.076142] [I] [thread 29947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:57.076259] [I] [thread 29947] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:57.076274] [I] [thread 29947] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:57.288087] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:57.288409] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:58.289660] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:59.290967] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:59.430492] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:59.430795] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:59.431802] [D] [thread 29953] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:35:59.431894] [I] [thread 29953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:59.431913] [I] [thread 29953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:35:59.432068] [I] [thread 29953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:35:59.432085] [I] [thread 29953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:35:59.592461] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:35:59.592781] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:00.594020] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:01.595330] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:01.736605] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:01.736910] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:01.738056] [D] [thread 29958] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:01.738151] [I] [thread 29958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:01.738169] [I] [thread 29958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:01.738289] [I] [thread 29958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:01.738303] [I] [thread 29958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:01.943935] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:01.944313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:02.945510] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:03.946854] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:04.081931] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:04.082271] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:04.083322] [D] [thread 29963] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:04.083416] [I] [thread 29963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:04.083435] [I] [thread 29963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:04.083553] [I] [thread 29963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:04.083567] [I] [thread 29963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:04.235879] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:04.236262] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:05.237475] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:06.238723] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:06.252340] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:06.252672] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:06.253679] [D] [thread 29968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:06.253775] [I] [thread 29968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:06.253792] [I] [thread 29968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:06.253912] [I] [thread 29968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:06.253927] [I] [thread 29968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:06.463773] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:06.464141] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:07.465320] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:08.466596] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:08.511565] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:08.511894] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:08.512964] [D] [thread 29973] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:08.513058] [I] [thread 29973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:08.513075] [I] [thread 29973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:08.513195] [I] [thread 29973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:08.513221] [I] [thread 29973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:08.684294] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:08.684619] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:09.685854] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:10.687164] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:10.827858] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:10.828211] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:10.829234] [D] [thread 29978] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:10.829327] [I] [thread 29978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:10.829346] [I] [thread 29978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:10.829466] [I] [thread 29978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:10.829481] [I] [thread 29978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:11.035485] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:11.035824] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:12.037055] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:13.038342] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:13.175010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:13.175338] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:13.176456] [D] [thread 29984] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:13.176550] [I] [thread 29984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:13.176569] [I] [thread 29984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:13.176686] [I] [thread 29984] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:13.176701] [I] [thread 29984] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:13.380431] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:13.380771] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:14.382118] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:15.381650] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:15.381958] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:15.383024] [D] [thread 29989] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:15.383119] [I] [thread 29989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:15.383137] [I] [thread 29989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:15.383255] [I] [thread 29989] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:15.383281] [I] [thread 29989] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:15.591784] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:15.592157] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:16.593390] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:17.594697] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:17.650435] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:17.650754] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:17.651748] [D] [thread 29994] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:17.651844] [I] [thread 29994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:17.651861] [I] [thread 29994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:17.652013] [I] [thread 29994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:17.652032] [I] [thread 29994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:17.815849] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:17.816219] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:18.817467] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:19.818742] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:19.877249] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:19.877762] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:19.878607] [D] [thread 29999] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:19.878701] [I] [thread 29999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:19.878718] [I] [thread 29999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:19.878836] [I] [thread 29999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:19.878850] [I] [thread 29999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:20.062427] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:20.062886] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:21.064244] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:22.065567] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:22.108502] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:22.109023] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:22.109797] [D] [thread 30004] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:22.109884] [I] [thread 30004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:22.109901] [I] [thread 30004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:22.110018] [I] [thread 30004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:22.110030] [I] [thread 30004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:22.295203] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:22.295694] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:23.297007] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:24.298271] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:24.359853] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:24.360477] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:24.361301] [D] [thread 30010] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:24.361396] [I] [thread 30010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:24.361415] [I] [thread 30010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:24.361535] [I] [thread 30010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:24.361549] [I] [thread 30010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:24.554867] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:24.555366] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:25.556625] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:26.557870] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:26.660091] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:26.660408] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:26.661980] [D] [thread 30015] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:26.662073] [I] [thread 30015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:26.662092] [I] [thread 30015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:26.662211] [I] [thread 30015] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:26.662225] [I] [thread 30015] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:26.863430] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:26.863747] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:27.864966] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:28.866209] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:28.882840] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:28.883148] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:28.884294] [D] [thread 30020] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:28.884411] [I] [thread 30020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:28.884433] [I] [thread 30020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:28.884557] [I] [thread 30020] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:28.884575] [I] [thread 30020] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:29.084212] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:29.084537] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:30.085709] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:31.086832] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:31.141989] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:31.142302] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:31.143349] [D] [thread 30025] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:31.143456] [I] [thread 30025] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:31.143476] [I] [thread 30025] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:31.143587] [I] [thread 30025] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:31.143603] [I] [thread 30025] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:31.301818] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:31.302125] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:32.303267] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:33.304485] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:33.361009] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:33.361323] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:33.362339] [D] [thread 30030] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:33.362435] [I] [thread 30030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:33.362453] [I] [thread 30030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:33.362570] [I] [thread 30030] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:33.362595] [I] [thread 30030] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:33.550004] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:33.550324] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:34.551571] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:35.552890] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:35.667803] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:35.668162] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:35.669173] [D] [thread 30035] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:35.669268] [I] [thread 30035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:35.669287] [I] [thread 30035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:35.669404] [I] [thread 30035] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:35.669417] [I] [thread 30035] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:35.930960] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:35.931294] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:36.932527] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:37.933808] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:37.975906] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:37.976252] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:37.977259] [D] [thread 30040] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:37.977351] [I] [thread 30040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:37.977369] [I] [thread 30040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:37.977484] [I] [thread 30040] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:37.977543] [I] [thread 30040] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:38.160640] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:38.161071] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:39.162353] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:40.163631] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:40.206996] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:40.207541] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:40.208350] [D] [thread 30045] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:40.208442] [I] [thread 30045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:40.208458] [I] [thread 30045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:40.208577] [I] [thread 30045] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:40.208590] [I] [thread 30045] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:40.395163] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:40.395680] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:41.396165] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:42.397427] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:42.435750] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:42.436386] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:42.437165] [D] [thread 30051] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:42.437255] [I] [thread 30051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:42.437272] [I] [thread 30051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:42.437389] [I] [thread 30051] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:42.437402] [I] [thread 30051] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:42.616928] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:42.617237] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:43.618463] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:44.619774] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:44.674163] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:44.674491] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:44.676034] [D] [thread 30058] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:44.676124] [I] [thread 30058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:44.676143] [I] [thread 30058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:44.676260] [I] [thread 30058] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:44.676273] [I] [thread 30058] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:44.839848] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:44.840334] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:45.841615] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:46.842947] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:46.872493] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:46.872828] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:46.873796] [D] [thread 30065] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:46.873889] [I] [thread 30065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:46.873907] [I] [thread 30065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:46.874026] [I] [thread 30065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:46.874040] [I] [thread 30065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:47.070245] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:47.070562] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:48.071801] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:49.073117] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:49.206636] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:49.206948] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:49.208074] [D] [thread 30071] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:49.208166] [I] [thread 30071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:49.208185] [I] [thread 30071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:49.208304] [I] [thread 30071] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:49.208360] [I] [thread 30071] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:49.432770] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:49.433083] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:50.434262] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:51.435620] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:51.597468] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:51.597814] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:51.598824] [D] [thread 30076] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:51.598918] [I] [thread 30076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:51.598935] [I] [thread 30076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:51.599052] [I] [thread 30076] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:51.599116] [I] [thread 30076] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:51.848086] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:51.848628] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:52.849834] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:53.851082] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:53.992523] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:53.993047] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:53.993840] [D] [thread 30082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:53.993928] [I] [thread 30082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:53.993947] [I] [thread 30082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:53.994063] [I] [thread 30082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:53.994076] [I] [thread 30082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:54.149580] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:54.150149] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:55.151404] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:56.152684] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:56.296546] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:56.296854] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:56.297898] [D] [thread 30088] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:56.297994] [I] [thread 30088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:56.298011] [I] [thread 30088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:56.298142] [I] [thread 30088] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:56.298159] [I] [thread 30088] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:56.518540] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:56.519028] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:57.520283] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:58.521587] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:58.835796] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:58.836354] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:58.837200] [D] [thread 30097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:36:58.837294] [I] [thread 30097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:58.837310] [I] [thread 30097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:36:58.837427] [I] [thread 30097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:36:58.837441] [I] [thread 30097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:36:59.089087] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:36:59.089485] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:00.090726] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:01.092085] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:01.302941] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:01.303247] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:01.304301] [D] [thread 30103] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:01.304392] [I] [thread 30103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:01.304412] [I] [thread 30103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:01.304531] [I] [thread 30103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:01.304546] [I] [thread 30103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:01.522840] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:01.523160] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:02.524494] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:03.525794] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:03.712611] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:03.713076] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:03.713910] [D] [thread 30110] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:03.713997] [I] [thread 30110] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:03.714016] [I] [thread 30110] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:03.714136] [I] [thread 30110] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:03.714150] [I] [thread 30110] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:03.941184] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:03.941694] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:04.942882] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:05.944211] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:06.211762] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:06.212853] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:06.213487] [D] [thread 30116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:06.213585] [I] [thread 30116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:06.213604] [I] [thread 30116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:06.213729] [I] [thread 30116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:06.213745] [I] [thread 30116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:06.449290] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:06.449614] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:07.450828] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:08.452071] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:08.651313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:08.651654] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:08.652613] [D] [thread 30123] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:08.652709] [I] [thread 30123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:08.652728] [I] [thread 30123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:08.652847] [I] [thread 30123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:08.652861] [I] [thread 30123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:08.867511] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:08.867853] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:09.869089] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:10.870355] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:11.101126] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:11.101645] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:11.102436] [D] [thread 30129] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:11.102527] [I] [thread 30129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:11.102545] [I] [thread 30129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:11.102663] [I] [thread 30129] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:11.102677] [I] [thread 30129] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:11.323248] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:11.323792] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:12.325046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:13.326358] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:13.730547] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:13.731046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:13.731863] [D] [thread 30135] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:13.731981] [I] [thread 30135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:13.732002] [I] [thread 30135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:13.732120] [I] [thread 30135] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:13.732134] [I] [thread 30135] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:13.984362] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:13.984886] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:14.986110] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:15.987432] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:16.175352] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:16.175852] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:16.176691] [D] [thread 30141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:16.176780] [I] [thread 30141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:16.176798] [I] [thread 30141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:16.176914] [I] [thread 30141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:16.176929] [I] [thread 30141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:16.461972] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:16.462559] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:17.463844] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:18.465200] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:19.466485] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:20.467792] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:20.607936] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:20.608433] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:20.609343] [D] [thread 30148] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:20.609434] [I] [thread 30148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:20.609453] [I] [thread 30148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:20.609569] [I] [thread 30148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:20.609582] [I] [thread 30148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:20.952571] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:20.953094] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:21.954392] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:22.955728] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:23.191386] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:23.191704] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:23.193333] [D] [thread 30154] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:23.193427] [I] [thread 30154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:23.193446] [I] [thread 30154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:23.193565] [I] [thread 30154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:23.193579] [I] [thread 30154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:23.434047] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:23.434380] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:24.435641] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:25.436953] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:25.786666] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:25.786987] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:25.788055] [D] [thread 30160] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:25.788145] [I] [thread 30160] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:25.788164] [I] [thread 30160] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:25.788282] [I] [thread 30160] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:25.788295] [I] [thread 30160] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:26.007694] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:26.008063] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:27.009316] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:28.010685] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:28.209362] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:28.209723] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:28.211241] [D] [thread 30168] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:28.211356] [I] [thread 30168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:28.211376] [I] [thread 30168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:28.211502] [I] [thread 30168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:28.211521] [I] [thread 30168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:28.443767] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:28.444285] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:29.445494] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:30.446872] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:30.682337] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:30.682825] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:30.683762] [D] [thread 30176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:30.683857] [I] [thread 30176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:30.683876] [I] [thread 30176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:30.684030] [I] [thread 30176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:30.684050] [I] [thread 30176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:30.900415] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:30.900888] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:31.902137] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:32.903374] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:33.107661] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:33.108235] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:33.109040] [D] [thread 30184] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:33.109131] [I] [thread 30184] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:33.109148] [I] [thread 30184] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:33.109267] [I] [thread 30184] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:33.109281] [I] [thread 30184] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:33.325030] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:33.325345] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:34.326609] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:35.327886] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:35.562204] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:35.562689] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:35.563512] [D] [thread 30191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:35.563601] [I] [thread 30191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:35.563620] [I] [thread 30191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:35.563741] [I] [thread 30191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:35.563754] [I] [thread 30191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:35.791128] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:35.791572] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:36.792925] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:37.794224] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:38.066135] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:38.066469] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:38.068063] [D] [thread 30198] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:38.068151] [I] [thread 30198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:38.068167] [I] [thread 30198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:38.068284] [I] [thread 30198] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:38.068297] [I] [thread 30198] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:38.296536] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:38.296867] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:39.298126] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:40.299480] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:40.539496] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:40.539805] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:40.540876] [D] [thread 30205] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:40.540970] [I] [thread 30205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:40.540988] [I] [thread 30205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:40.541106] [I] [thread 30205] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:40.541120] [I] [thread 30205] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:40.761520] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:40.761841] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:41.763055] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:42.764359] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:42.975808] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:42.976186] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:42.977375] [D] [thread 30211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:42.977470] [I] [thread 30211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:42.977488] [I] [thread 30211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:42.977606] [I] [thread 30211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:42.977621] [I] [thread 30211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:43.205973] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:43.206329] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:44.207611] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:45.208864] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:45.474370] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:45.474693] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:45.475874] [D] [thread 30217] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:45.476000] [I] [thread 30217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:45.476020] [I] [thread 30217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:45.476141] [I] [thread 30217] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:45.476155] [I] [thread 30217] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:45.693293] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:45.693617] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:46.694830] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:47.323305] [E] [thread 30215] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalError: signal [11] error [Success] callstack Stack trace (most recent call last) in thread 371182:
#24   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#23   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9e0b549b, in 
#22   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff9e477623, in start_thread
#21   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff9e249f9b, in 
#20   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6e987, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#19   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6ead7, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#18   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6eb03, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#17   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6eb2b, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#16   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6eb77, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#15   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6f5bb, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#14   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d6d58f, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
#13   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d4e95f, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
#12   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7d732ab, in NES::Runtime::Task::operator()(NES::Runtime::WorkerContext&)
#11   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7cfc257, in NES::Runtime::Execution::ExecutablePipeline::execute(NES::Runtime::TupleBuffer&, NES::Runtime::WorkerContext&)
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa799b117, in NES::LazyCompiledExecutablePipelineStage::execute(NES::Runtime::TupleBuffer&, NES::Runtime::Execution::PipelineExecutionContext&, NES::Runtime::WorkerContext&)
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa7999973, in NES::CompiledExecutablePipelineStage::execute(NES::Runtime::TupleBuffer&, NES::Runtime::Execution::PipelineExecutionContext&, NES::Runtime::WorkerContext&)
#8    Object "/tmp/query_26-10-2023_12-32-15_7748381.so (deleted)", at 0xffff9c0bf87b, in 
#7    Object "/tmp/query_26-10-2023_12-32-15_7748381.so (deleted)", at 0xffff9c0d124f, in 
#6    Object "/tmp/query_26-10-2023_12-32-15_7748381.so (deleted)", at 0xffff9c0d140b, in 
#5    Object "/tmp/query_26-10-2023_12-32-15_7748381.so (deleted)", at 0xffff9c0d481c, in 
#4    Object "[vdso: 371168]", at 0xffffab5c4597, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa00b144f, in NES::Runtime::detail::nesErrorHandler(int)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9e718b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa00b2ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa00b3c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[12:37:47.696165] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:47.930842] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:47.931177] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:47.932189] [D] [thread 30222] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:47.932269] [I] [thread 30222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:47.932285] [I] [thread 30222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:47.932395] [I] [thread 30222] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:47.932407] [I] [thread 30222] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:37:47.997803] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:47.998801] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:47.998965] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[12:37:47.998992] [I] [thread 29321] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:37:47.999016] [I] [thread 29321] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:37:47.999025] [I] [thread 29321] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:37:47.999043] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:47.999054] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:47.999065] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:47.999075] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:37:47.999119] [D] [thread 29321] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[12:37:48.156659] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:48.157008] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:49.158191] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:49.161881] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:49.162879] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:49.163026] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:49.163056] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[12:37:49.547273] [E] [thread 30196] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalError: signal [11] error [Success] callstack Stack trace (most recent call last) in thread 122353:
#23   Object "/usr/lib/aarch64-linux-gnu/ld-2.31.so", at 0xffffffffffffffff, in 
#22   Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff91d6222b, in 
#21   Object "/usr/lib/aarch64-linux-gnu/libpthread-2.31.so", at 0xffff9212351b, in start_thread
#20   Object "/usr/lib/aarch64-linux-gnu/libstdc++.so.6.0.28", at 0xffff91ef6f9b, in 
#19   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1b987, in std::thread::_State_impl<std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> > >::_M_run()
#18   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1bad7, in std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::operator()()
#17   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1bb03, in void std::thread::_Invoker<std::tuple<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0> >::_M_invoke<0ul>(std::_Index_tuple<0ul>)
#16   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1bb2b, in std::__invoke_result<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>::type std::__invoke<NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#15   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1bb77, in void std::__invoke_impl<void, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0>(std::__invoke_other, NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0&&)
#14   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1c5bb, in NES::Runtime::ThreadPool::start(std::vector<unsigned long, std::allocator<unsigned long> >)::$_0::operator()() const
#13   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba1a58f, in NES::Runtime::ThreadPool::runningRoutine(NES::Runtime::WorkerContext&&)
#12   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9b9fb95f, in NES::Runtime::DynamicQueryManager::processNextTask(bool, NES::Runtime::WorkerContext&)
#11   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9ba202ab, in NES::Runtime::Task::operator()(NES::Runtime::WorkerContext&)
#10   Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9b9a9257, in NES::Runtime::Execution::ExecutablePipeline::execute(NES::Runtime::TupleBuffer&, NES::Runtime::WorkerContext&)
#9    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9b648117, in NES::LazyCompiledExecutablePipelineStage::execute(NES::Runtime::TupleBuffer&, NES::Runtime::Execution::PipelineExecutionContext&, NES::Runtime::WorkerContext&)
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9b646973, in NES::CompiledExecutablePipelineStage::execute(NES::Runtime::TupleBuffer&, NES::Runtime::Execution::PipelineExecutionContext&, NES::Runtime::WorkerContext&)
#7    Object "/tmp/query_26-10-2023_12-32-15_8089936.so (deleted)", at 0xffff9009d87b, in 
#6    Object "/tmp/query_26-10-2023_12-32-15_8089936.so (deleted)", at 0xffff900af24f, in 
#5    Object "/tmp/query_26-10-2023_12-32-15_8089936.so (deleted)", at 0xffff900af3f8, in 
#4    Object "[vdso: 122339]", at 0xffff9f271597, in 
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff93d5e44f, in NES::Runtime::detail::nesErrorHandler(int)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff923c5b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff93d5fca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff93d60c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[12:37:50.159499] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:50.309052] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:50.309958] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:50.310105] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[32m[12:37:50.310131] [I] [thread 29321] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:37:50.310152] [I] [thread 29321] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:37:50.310160] [I] [thread 29321] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:37:50.310176] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:50.310186] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:50.310195] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:37:50.310203] [I] [thread 29321] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[12:37:50.310233] [D] [thread 29321] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[12:37:50.315199] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:50.316225] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:50.316371] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:50.316399] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:50.368539] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:50.369011] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:50.370051] [D] [thread 30229] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:50.370161] [I] [thread 30229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:50.370182] [I] [thread 30229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:50.370311] [I] [thread 30229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:50.370343] [I] [thread 30229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:50.567510] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:50.568008] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:51.469223] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:51.470141] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:51.470288] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:51.470316] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:51.475176] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:51.476125] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:51.476266] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:51.476295] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:51.569285] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:52.570579] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:52.628587] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:52.629503] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:52.629650] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:52.629677] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:52.634573] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:52.635478] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:52.635627] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:52.635656] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:52.755628] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:52.756224] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:52.757320] [D] [thread 30236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:52.757427] [I] [thread 30236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:52.757448] [I] [thread 30236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:52.757588] [I] [thread 30236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:52.757603] [I] [thread 30236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:52.993445] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:52.993963] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:53.787365] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:53.788345] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:53.788486] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:53.788514] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:53.793369] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:53.794273] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:53.794420] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:53.794451] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:53.995235] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:54.939773] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:54.940762] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:54.940925] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:54.940957] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:54.945938] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:54.946838] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:54.946983] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:54.947012] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:54.996475] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:55.190922] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:55.191480] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:55.192272] [D] [thread 30242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:55.192362] [I] [thread 30242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:55.192379] [I] [thread 30242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:55.192499] [I] [thread 30242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:55.192513] [I] [thread 30242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:55.414773] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:55.415313] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:56.097401] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:56.098311] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:56.098459] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:56.098486] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:56.103372] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:56.104326] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:56.104467] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:56.104497] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:56.416627] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:57.260773] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:57.261695] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:57.261843] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:57.261872] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:57.266772] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:57.267756] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:57.267899] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:57.267928] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:57.417904] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:57.671379] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:57.671890] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:57.672784] [D] [thread 30247] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:37:57.672879] [I] [thread 30247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:57.672897] [I] [thread 30247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:37:57.673015] [I] [thread 30247] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:37:57.673029] [I] [thread 30247] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:37:57.884082] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:37:57.884553] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:58.420395] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:58.421358] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:58.421507] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:58.421537] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:58.426568] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:58.427467] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:58.427609] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:58.427639] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:58.885811] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:37:59.579789] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:59.580759] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:37:59.580904] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:59.580933] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:37:59.585792] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:37:59.586703] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:37:59.586851] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:37:59.586877] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:37:59.887113] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:00.044374] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:00.044951] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:00.045712] [D] [thread 30252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:00.045802] [I] [thread 30252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:00.045819] [I] [thread 30252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:00.045937] [I] [thread 30252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:00.045950] [I] [thread 30252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:00.254871] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:00.255201] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:00.745008] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:00.745956] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:00.746101] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:00.746128] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:00.751128] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:00.752155] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:00.752293] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:00.752323] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:01.256455] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:01.906355] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:01.907372] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:01.907515] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:01.907542] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:01.912785] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:01.913797] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:01.913945] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:01.913975] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:02.257748] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:02.447759] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:02.448307] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:02.449089] [D] [thread 30258] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:02.449177] [I] [thread 30258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:02.449192] [I] [thread 30258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:02.449309] [I] [thread 30258] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:02.449322] [I] [thread 30258] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:02.667330] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:02.667797] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:03.074560] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:03.075501] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:03.075647] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:03.075676] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:03.080731] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:03.081725] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:03.081869] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:03.081898] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:03.669098] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:04.241371] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:04.242387] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:04.242532] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:04.242559] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:04.247602] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:04.248629] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:04.248775] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:04.248804] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:04.670424] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:04.833179] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:04.833691] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:04.834498] [D] [thread 30263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:04.834592] [I] [thread 30263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:04.834608] [I] [thread 30263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:04.834725] [I] [thread 30263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:04.834739] [I] [thread 30263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:05.057201] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:05.057685] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:05.404991] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:05.405992] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:05.406142] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:05.406171] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:05.411210] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:05.412233] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:05.412375] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:05.412403] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:06.059090] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:06.576732] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:06.577726] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:06.577869] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:06.577898] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:06.582932] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:06.583906] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:06.584086] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:06.584116] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:07.060519] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:07.233504] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:07.233985] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:07.234835] [D] [thread 30268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:07.234924] [I] [thread 30268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:07.234943] [I] [thread 30268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:07.235060] [I] [thread 30268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:07.235074] [I] [thread 30268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:07.442280] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:07.442726] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:07.741082] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:07.741993] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:07.742139] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:07.742166] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:07.747000] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:07.747910] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:07.748089] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:07.748119] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:08.444046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:08.904152] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:08.905128] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:08.905281] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:08.905309] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:08.910363] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:08.911370] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:08.911531] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:08.911564] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:09.445337] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:09.667441] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:09.667926] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:09.668829] [D] [thread 30274] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:09.668918] [I] [thread 30274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:09.668937] [I] [thread 30274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:09.669056] [I] [thread 30274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:09.669070] [I] [thread 30274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:09.879424] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:09.879934] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:10.063527] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:10.064516] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:10.064658] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:10.064687] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:10.069525] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:10.070437] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:10.070583] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:10.070613] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:10.881177] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:11.220693] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:11.221612] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:11.221756] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:11.221784] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:11.226626] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:11.227530] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:11.227675] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:11.227705] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:11.882395] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:12.379599] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:12.380577] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:12.380724] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:12.380754] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:12.385613] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:12.386516] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:12.386661] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:12.386690] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:12.883668] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:13.540062] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:13.540983] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:13.541134] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:13.541163] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:13.545991] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:13.546888] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:13.547031] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:13.547060] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:13.885019] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:14.707876] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:14.708851] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:14.708997] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:14.709024] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:14.713852] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:14.714756] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:14.714899] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:14.714926] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:14.886306] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:15.868245] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:15.869178] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:15.869327] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:15.869357] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:15.874202] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:15.875109] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:15.875251] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:15.875280] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:15.887507] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:16.888803] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:17.027935] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:17.028983] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:17.029128] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:17.029157] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:17.034210] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:17.035202] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:17.035347] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:17.035374] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:17.890098] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:18.187016] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:18.188101] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:18.188239] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:18.188269] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:18.193336] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:18.194329] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:18.194477] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:18.194508] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:18.891403] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:19.346570] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:19.347577] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:19.347725] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:19.347752] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:19.353035] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:19.354056] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:19.354208] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:19.354240] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:19.892690] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:20.275632] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:20.275987] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:20.276990] [D] [thread 30286] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:20.277079] [I] [thread 30286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:20.277096] [I] [thread 30286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:20.277214] [I] [thread 30286] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:20.277227] [I] [thread 30286] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:20.509051] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:20.510054] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:20.510201] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:20.510229] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:20.515423] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:20.516427] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:20.516572] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:20.516603] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:20.548116] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:20.548565] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:21.549856] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:21.673587] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:21.674584] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:21.674731] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:21.674760] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:21.679781] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:21.680821] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:21.680966] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:21.680993] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:22.551144] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:22.800785] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:22.801310] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:22.802141] [D] [thread 30294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:22.802233] [I] [thread 30294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:22.802250] [I] [thread 30294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:22.802366] [I] [thread 30294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:22.802381] [I] [thread 30294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:22.833108] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:22.834114] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:22.834363] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:22.834424] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:22.839767] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:22.840817] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:22.840968] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:22.840999] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:22.959612] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:22.959987] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:23.961231] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:23.993733] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:23.994739] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:23.994885] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:23.994914] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:23.999911] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:24.000891] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:24.001035] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:24.001064] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:24.962541] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:25.156515] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:25.157646] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:25.157859] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:25.157911] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:25.164433] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:25.165601] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:25.165766] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:25.165796] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:25.169108] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:25.169405] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:25.170545] [D] [thread 30299] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:25.170664] [I] [thread 30299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:25.170684] [I] [thread 30299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:25.170809] [I] [thread 30299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:25.170891] [I] [thread 30299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:25.397444] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:25.397989] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:26.320854] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:26.321853] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:26.322002] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:26.322031] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:26.327073] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:26.328113] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:26.328255] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:26.328284] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:26.399264] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:27.400103] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:27.475316] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:27.476355] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:27.476499] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:27.476528] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:27.481510] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:27.482507] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:27.482757] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:27.482819] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:27.582967] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:27.583285] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:27.584436] [D] [thread 30305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:27.584545] [I] [thread 30305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:27.584567] [I] [thread 30305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:27.584692] [I] [thread 30305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:27.584711] [I] [thread 30305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:27.810259] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:27.810569] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:28.635814] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:28.636932] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:28.637092] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:28.637125] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:28.642402] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:28.643394] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:28.643543] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:28.643572] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:28.811752] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:29.797659] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:29.798658] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:29.798807] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:29.798835] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:29.803907] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:29.804981] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:29.805128] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:29.805156] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:29.812967] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:30.006314] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:30.006648] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:30.007621] [D] [thread 30310] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:30.007714] [I] [thread 30310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:30.007732] [I] [thread 30310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:30.007848] [I] [thread 30310] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:30.007861] [I] [thread 30310] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:30.282626] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:30.282937] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:30.958082] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:30.959089] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:30.959234] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:30.959263] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:30.964322] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:30.965311] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:30.965456] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:30.965486] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:31.284166] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:32.124083] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:32.125091] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:32.125240] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:32.125270] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:32.130287] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:32.131262] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:32.131406] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:32.131433] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:32.285432] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:32.502444] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:32.502768] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:32.503736] [D] [thread 30315] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:32.503827] [I] [thread 30315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:32.503846] [I] [thread 30315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:32.503997] [I] [thread 30315] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:32.504016] [I] [thread 30315] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:32.723179] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:32.723509] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:33.286937] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:33.287871] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:33.288047] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:33.288077] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:33.293086] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:33.294074] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:33.294219] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:33.294248] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:33.724836] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:34.449648] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:34.450835] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:34.450983] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:34.451012] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:34.456105] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:34.457096] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:34.457242] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:34.457271] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:34.726157] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:34.901202] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:34.901544] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:34.902542] [D] [thread 30320] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:34.902634] [I] [thread 30320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:34.902653] [I] [thread 30320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:34.902770] [I] [thread 30320] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:34.902784] [I] [thread 30320] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:35.128400] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:35.128744] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:35.614556] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:35.615557] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:35.615701] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:35.615729] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:35.620822] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:35.621808] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:35.621953] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:35.621983] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:36.129981] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:36.778641] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:36.779648] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:36.779794] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:36.779821] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:36.784959] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:36.785947] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:36.786202] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:36.786267] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:37.131264] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:37.383754] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:37.384094] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:37.385095] [D] [thread 30326] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:37.385192] [I] [thread 30326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:37.385210] [I] [thread 30326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:37.385329] [I] [thread 30326] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:37.385343] [I] [thread 30326] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:37.616629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:37.616942] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:37.936744] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:37.937665] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:37.937814] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:37.937841] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:37.942690] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:37.943604] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:37.943750] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:37.943779] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:38.618173] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:39.096472] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:39.097396] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:39.097538] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:39.097565] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:39.102399] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:39.103318] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:39.103460] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:39.103487] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:39.619528] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:39.797246] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:39.797751] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:39.798584] [D] [thread 30332] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:39.798671] [I] [thread 30332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:39.798688] [I] [thread 30332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:39.798808] [I] [thread 30332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:39.798823] [I] [thread 30332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:40.031018] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:40.031510] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:40.261445] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:40.262455] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:40.262600] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:40.262629] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:40.267653] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:40.268677] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:40.268827] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:40.268857] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:41.032810] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:41.420523] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:41.421521] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:41.421664] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:41.421692] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:41.426735] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:41.427730] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:41.427874] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:41.427904] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:42.034166] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:42.195347] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:42.195872] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:42.196711] [D] [thread 30338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:42.196799] [I] [thread 30338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:42.196817] [I] [thread 30338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:42.196935] [I] [thread 30338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:42.196948] [I] [thread 30338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:42.471355] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:42.471841] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:42.582556] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:42.583572] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:42.583717] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:42.583745] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:42.588996] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:42.590011] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:42.590159] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:42.590186] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:43.472830] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:43.744627] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:43.745634] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:43.745783] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:43.745812] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:43.750848] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:43.751831] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:43.752021] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:43.752054] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:44.474097] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:44.906966] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:44.908144] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:44.908306] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:44.908337] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:44.914475] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:44.915682] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:44.915856] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:44.915896] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:44.928622] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:44.928950] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:44.929974] [D] [thread 30344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:44.930088] [I] [thread 30344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:44.930108] [I] [thread 30344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:44.930230] [I] [thread 30344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:44.930250] [I] [thread 30344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:45.236749] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:45.237066] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:46.071141] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:46.072200] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:46.072340] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:46.072368] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:46.077413] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:46.078399] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:46.078544] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:46.078572] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:46.238312] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:47.233799] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:47.235259] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:47.235400] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:47.235430] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[36m[12:38:47.239568] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:47.241780] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[36m[12:38:47.242266] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:47.242577] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[33m[1m[12:38:47.243418] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:47.243566] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:47.243597] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:47.243895] [D] [thread 30349] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:47.244008] [I] [thread 30349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:47.244031] [I] [thread 30349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:47.244155] [I] [thread 30349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:47.244173] [I] [thread 30349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:47.455401] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:47.455713] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:48.401085] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:48.402083] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:48.402227] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:48.402254] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:48.407405] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:48.408459] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:48.408606] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:48.408636] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:48.456875] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:49.458264] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:49.564294] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:49.565424] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:49.565595] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:49.565630] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:49.571979] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:49.573142] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:49.573318] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:49.573353] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:49.591467] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:49.591838] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:49.594285] [D] [thread 30356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:49.594399] [I] [thread 30356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:49.594420] [I] [thread 30356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:49.594550] [I] [thread 30356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:49.594566] [I] [thread 30356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:38:49.746698] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:49.747021] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:50.728567] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:50.729515] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:50.729662] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:50.729688] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:50.734730] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:50.735729] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:50.735878] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:50.735907] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:50.748171] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:51.749412] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:51.761924] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:51.762250] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:51.763842] [D] [thread 30361] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:51.763935] [I] [thread 30361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:51.763987] [I] [thread 30361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:51.764109] [I] [thread 30361] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:51.764123] [I] [thread 30361] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:51.889795] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:51.890792] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:51.891043] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:51.891106] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:51.896442] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:51.897459] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:51.897611] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:51.897640] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:51.991078] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:51.991421] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:52.992640] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:53.055460] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:53.056433] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:53.056576] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:53.056604] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:53.061461] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:53.062371] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:53.062518] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:53.062547] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:53.993958] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:54.137121] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:54.137445] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:54.138621] [D] [thread 30367] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:54.138713] [I] [thread 30367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:54.138732] [I] [thread 30367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:54.138851] [I] [thread 30367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:54.138864] [I] [thread 30367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:54.215180] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:54.216160] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:54.216297] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:54.216326] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:54.221299] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:54.222241] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:54.222395] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:54.222426] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:54.320021] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:54.320340] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:55.321571] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:55.374021] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:55.374948] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:55.375093] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:55.375122] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:55.380067] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:55.381076] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:55.381221] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:55.381251] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:56.322867] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:56.372065] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:56.372402] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:56.373791] [D] [thread 30373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:56.373885] [I] [thread 30373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:56.373904] [I] [thread 30373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:56.374024] [I] [thread 30373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:56.374039] [I] [thread 30373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:56.546341] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:56.547441] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:56.547621] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:56.547656] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:56.553744] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:56.554898] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:56.555078] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:56.555119] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:56.565141] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:56.565443] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:57.566649] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:57.705038] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:57.705961] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:57.706106] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:57.706132] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:38:57.710965] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:57.711870] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:57.712051] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:57.712082] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:58.568033] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:58.708075] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:58.708417] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:58.709485] [D] [thread 30381] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:38:58.709580] [I] [thread 30381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:58.709598] [I] [thread 30381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:38:58.709717] [I] [thread 30381] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:38:58.709731] [I] [thread 30381] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:38:58.862222] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:58.863292] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:38:58.863458] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:58.863489] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[36m[12:38:58.867115] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:38:58.867464] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:38:58.869188] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:38:58.870270] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:38:58.870425] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:38:58.870456] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:38:59.868681] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:00.020410] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:00.021327] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:00.021475] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:00.021504] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:00.026324] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:00.027223] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:00.027370] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:00.027398] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:00.869988] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:00.971799] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:00.972165] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:00.973363] [D] [thread 30386] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:00.973457] [I] [thread 30386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:00.973475] [I] [thread 30386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:00.973593] [I] [thread 30386] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:00.973607] [I] [thread 30386] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:39:01.177956] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:01.179069] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:01.179229] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:01.179263] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[36m[12:39:01.181936] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:01.182312] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:01.186333] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:01.187699] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:01.187856] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:01.187886] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:02.183606] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:02.337628] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:02.338629] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:02.338772] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:02.338800] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:02.343829] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:02.344855] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:02.345002] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:02.345031] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:03.184110] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:03.203914] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:03.204430] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:03.205324] [D] [thread 30391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:03.205415] [I] [thread 30391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:03.205434] [I] [thread 30391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:03.205552] [I] [thread 30391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:03.205567] [I] [thread 30391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:03.410046] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:03.410408] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:03.500767] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:03.501691] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:03.501838] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:03.501865] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:03.506725] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:03.507630] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:03.507773] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:03.507801] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:04.411648] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:04.660773] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:04.661703] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:04.661854] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:04.661884] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:04.666797] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:04.667706] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:04.667854] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:04.667882] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:05.412946] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:05.444005] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:05.444351] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:05.445496] [D] [thread 30396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:05.445591] [I] [thread 30396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:05.445610] [I] [thread 30396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:05.445728] [I] [thread 30396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:05.445741] [I] [thread 30396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:05.651701] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:05.652065] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:05.820722] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:05.821645] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:05.821790] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:05.821820] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:05.826695] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:05.827595] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:05.827742] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:05.827770] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:06.653282] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:06.981667] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:06.982576] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:06.982719] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:06.982746] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:06.987603] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:06.988559] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:06.988704] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:06.988734] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:07.654566] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:07.682109] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:07.682435] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:07.683476] [D] [thread 30401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:07.683570] [I] [thread 30401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:07.683588] [I] [thread 30401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:07.683705] [I] [thread 30401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:07.683730] [I] [thread 30401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:07.889165] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:07.889515] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:08.142654] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:08.143577] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:08.143722] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:08.143751] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:08.148690] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:08.149611] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:08.149754] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:08.149784] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:08.890740] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:09.301241] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:09.302241] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:09.302385] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:09.302411] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:09.307250] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:09.308199] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:09.308339] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:09.308368] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:09.892042] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:10.003588] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:10.003993] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:10.004973] [D] [thread 30406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:10.005072] [I] [thread 30406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:10.005092] [I] [thread 30406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:10.005211] [I] [thread 30406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:10.005224] [I] [thread 30406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:10.216729] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:10.217220] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:10.454866] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:10.455783] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:10.455928] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:10.455990] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:10.460854] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:10.461768] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:10.461909] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:10.461937] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:11.218521] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:11.616113] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:11.617121] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:11.617266] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:11.617296] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:11.622272] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:11.623246] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:11.623385] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:11.623411] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:12.219848] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:12.227260] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:12.227834] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:12.228615] [D] [thread 30412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:12.228707] [I] [thread 30412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:12.228726] [I] [thread 30412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:12.228843] [I] [thread 30412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:12.228857] [I] [thread 30412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:12.444892] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:12.445219] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:12.773243] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:12.774314] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:12.774462] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:12.774491] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:12.779523] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:12.780554] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:12.780697] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:12.780726] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:13.446439] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:13.937107] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:13.938109] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:13.938254] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:13.938280] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:13.943316] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:13.944346] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:13.944488] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:13.944518] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:14.447618] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:14.510833] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:14.511158] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:14.512792] [D] [thread 30417] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:14.512889] [I] [thread 30417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:14.512908] [I] [thread 30417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:14.513028] [I] [thread 30417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:14.513044] [I] [thread 30417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:14.679555] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:14.679891] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:15.100030] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:15.101026] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:15.101173] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:15.101203] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:15.106934] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:15.108021] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:15.108163] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:15.108191] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:15.681118] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:16.263066] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:16.264031] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:16.264171] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:16.264198] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:16.269009] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:16.269916] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:16.270062] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:16.270090] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:16.682427] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:16.736617] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:16.736954] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:16.737942] [D] [thread 30422] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:16.738037] [I] [thread 30422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:16.738056] [I] [thread 30422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:16.738172] [I] [thread 30422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:16.738186] [I] [thread 30422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:16.931710] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:16.932063] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:17.424925] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:17.425838] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:17.425983] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:17.426010] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:17.430830] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:17.431728] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:17.431869] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:17.431898] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:17.933284] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:18.587327] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:18.588308] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:18.588445] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:18.588474] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:18.593314] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:18.594222] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:18.594368] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:18.594397] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:18.934572] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:19.031754] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:19.032157] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:19.033320] [D] [thread 30427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:19.033417] [I] [thread 30427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:19.033435] [I] [thread 30427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:19.033555] [I] [thread 30427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:19.033569] [I] [thread 30427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:19.306949] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:19.307264] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:19.748895] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:19.749802] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:19.749945] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:19.749975] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:19.754836] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:19.755739] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:19.755885] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:19.755911] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:20.308482] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:20.912081] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:20.913010] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:20.913153] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:20.913182] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:20.918048] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:20.918974] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:20.919116] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:20.919146] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:21.309796] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:21.364397] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:21.364711] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:21.365697] [D] [thread 30432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:21.365790] [I] [thread 30432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:21.365809] [I] [thread 30432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:21.365926] [I] [thread 30432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:21.365939] [I] [thread 30432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:21.554476] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:21.554794] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:22.073092] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:22.074009] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:22.074156] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:22.074185] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:22.079006] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:22.080025] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:22.080169] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:22.080199] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:22.556058] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:23.231617] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:23.232594] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:23.232740] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:23.232769] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:23.237596] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:23.238499] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:23.238645] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:23.238674] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:23.557342] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:23.592220] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:23.592523] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:23.593522] [D] [thread 30437] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:23.593615] [I] [thread 30437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:23.593634] [I] [thread 30437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:23.593752] [I] [thread 30437] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:23.593768] [I] [thread 30437] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:23.789664] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:23.790024] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:24.388628] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:24.389541] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:24.389687] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:24.389714] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:24.394580] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:24.395491] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:24.395638] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:24.395667] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:24.791363] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:25.543061] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:25.544151] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:25.544296] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:25.544325] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:25.550156] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:25.551173] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:25.551325] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:25.551356] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:25.792104] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:25.808872] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:25.809177] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:25.810184] [D] [thread 30444] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:25.810308] [I] [thread 30444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:25.810328] [I] [thread 30444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:25.810448] [I] [thread 30444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:25.810462] [I] [thread 30444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:25.979986] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:25.980294] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:26.708606] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:26.709623] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:26.709771] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:26.709800] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:26.714846] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:26.715822] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:26.716006] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:26.716036] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:26.981501] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:27.869795] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:27.870726] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:27.870869] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:27.870896] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:27.875900] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:27.876889] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:27.877040] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:27.877067] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:27.982855] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:28.037751] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:28.038100] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:28.039629] [D] [thread 30452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:28.039721] [I] [thread 30452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:28.039740] [I] [thread 30452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:28.039858] [I] [thread 30452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:28.039871] [I] [thread 30452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:28.228411] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:28.228851] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:29.035443] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:29.036409] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:29.036549] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:29.036577] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:29.041385] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:29.042296] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:29.042441] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:29.042469] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:29.230104] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:30.192774] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:30.193692] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:30.193839] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:30.193868] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:30.198676] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:30.199587] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:30.199731] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:30.199759] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:30.231329] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:30.239864] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:30.240199] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:30.241287] [D] [thread 30457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:30.241411] [I] [thread 30457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:30.241431] [I] [thread 30457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:30.241555] [I] [thread 30457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:30.241575] [I] [thread 30457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:30.407738] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:30.408090] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:31.352868] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:31.353787] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:31.353932] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:31.353960] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:31.358835] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:31.359830] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:31.360005] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:31.360038] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:31.409257] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:32.410574] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:32.513484] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:32.514395] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:32.514537] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:32.514566] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:32.520014] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:32.521162] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:32.521346] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:32.521381] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:32.544573] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:32.544896] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:32.545927] [D] [thread 30463] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:32.546067] [I] [thread 30463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:32.546089] [I] [thread 30463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:32.546227] [I] [thread 30463] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:32.546245] [I] [thread 30463] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:32.759614] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:32.759991] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:33.680721] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:33.681726] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:33.681871] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:33.681898] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:33.686917] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:33.687887] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:33.688067] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:33.688097] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:33.761174] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:34.762523] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:34.771410] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:34.771748] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:34.772734] [D] [thread 30469] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:34.772825] [I] [thread 30469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:34.772844] [I] [thread 30469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:34.772961] [I] [thread 30469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:34.772975] [I] [thread 30469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:39:34.843785] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:34.844836] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:34.844984] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:34.845014] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:34.850092] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:34.851074] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:34.851219] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:34.851245] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:34.967657] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:34.968025] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:35.969249] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:36.005018] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:36.006104] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:36.006247] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:36.006276] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:36.011267] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:36.012222] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:36.012358] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:36.012387] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:36.970500] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:36.984629] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:36.984956] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:36.985963] [D] [thread 30474] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:36.986089] [I] [thread 30474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:36.986107] [I] [thread 30474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:36.986229] [I] [thread 30474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:36.986242] [I] [thread 30474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:39:37.170481] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:37.171472] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:37.171616] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:37.171647] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:37.177193] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:37.178250] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:37.178401] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:37.178431] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:37.248719] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:37.249057] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:38.250271] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:38.335090] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:38.336041] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:38.336180] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:38.336207] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:38.341029] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:38.341931] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:38.342076] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:38.342103] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:39.251533] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:39.311345] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:39.311684] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:39.312712] [D] [thread 30479] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:39.312809] [I] [thread 30479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:39.312827] [I] [thread 30479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:39.312946] [I] [thread 30479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:39.313025] [I] [thread 30479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:39.486019] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:39.486384] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:39.493686] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:39.494634] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:39.494778] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:39.494808] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:39.500008] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:39.501050] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:39.501198] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:39.501227] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:40.487613] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:40.657536] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:40.658621] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:40.658785] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:40.658819] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:40.664109] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:40.665112] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:40.665364] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:40.665427] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:41.488843] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:41.492100] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:41.492424] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:41.493483] [D] [thread 30484] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:41.493580] [I] [thread 30484] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:41.493597] [I] [thread 30484] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:41.493718] [I] [thread 30484] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:41.493732] [I] [thread 30484] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:41.707191] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:41.707537] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:41.813404] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:41.814349] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:41.814492] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:41.814522] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:41.819545] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:41.820576] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:41.820721] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:41.820751] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:42.708751] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:42.977558] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:42.978624] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:42.978773] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:42.978801] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:42.983853] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:42.984880] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:42.985029] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:42.985055] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:43.710080] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:43.735307] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:43.735632] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:43.736690] [D] [thread 30489] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:43.736784] [I] [thread 30489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:43.736803] [I] [thread 30489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:43.736921] [I] [thread 30489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:43.736936] [I] [thread 30489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:43.948723] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:43.949113] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:44.139915] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:44.141035] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:44.141183] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:44.141213] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:44.146316] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:44.147306] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:44.147454] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:44.147484] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:44.950329] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:45.296876] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:45.297874] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:45.298021] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:45.298049] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:45.303159] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:45.304121] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:45.304260] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:45.304290] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:45.951637] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:45.994677] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:45.995025] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:45.996011] [D] [thread 30494] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:45.996099] [I] [thread 30494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:45.996118] [I] [thread 30494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:45.996237] [I] [thread 30494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:45.996251] [I] [thread 30494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:46.166506] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:46.166818] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:46.456674] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:46.457686] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:46.457831] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:46.457857] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:46.462871] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:46.463843] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:46.464024] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:46.464053] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:47.168072] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:47.615556] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:47.616617] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:47.616764] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:47.616793] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:47.622052] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:47.623057] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:47.623205] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:47.623235] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:48.164440] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:48.164878] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:48.165739] [D] [thread 30499] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:48.165810] [I] [thread 30499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:48.165826] [I] [thread 30499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:48.165935] [I] [thread 30499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:48.165946] [I] [thread 30499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:48.384902] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:48.385395] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:48.776962] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:48.777873] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:48.778018] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:48.778048] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:48.783361] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:48.784355] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:48.784501] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:48.784532] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:49.386681] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:49.937674] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:49.938592] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:49.938736] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:49.938765] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:49.943611] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:49.944569] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:49.944716] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:49.944745] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:50.388160] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:50.407749] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:50.408328] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:50.409132] [D] [thread 30504] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:50.409220] [I] [thread 30504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:50.409239] [I] [thread 30504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:50.409368] [I] [thread 30504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:50.409384] [I] [thread 30504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:50.619890] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:50.620476] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:51.100760] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:51.101686] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:51.101833] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:51.101860] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:51.106744] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:51.107649] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:51.107793] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:51.107822] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:51.621745] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:52.261305] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:52.262223] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:52.262367] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:52.262397] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:52.267233] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:52.268179] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:52.268318] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:52.268348] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:52.623030] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:52.684539] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:52.684857] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:52.686404] [D] [thread 30509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:52.686495] [I] [thread 30509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:52.686514] [I] [thread 30509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:52.686632] [I] [thread 30509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:52.686646] [I] [thread 30509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:52.852401] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:52.852716] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:53.418680] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:53.419635] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:53.419784] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:53.419811] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:53.424975] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:53.425911] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:53.426061] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:53.426088] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:53.853964] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:54.578617] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:54.579627] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:54.579774] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:54.579804] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:54.585089] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:54.586117] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:54.586267] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:54.586298] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:54.855263] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:54.964843] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:54.965156] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:54.966209] [D] [thread 30514] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:54.966303] [I] [thread 30514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:54.966319] [I] [thread 30514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:54.966436] [I] [thread 30514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:54.966462] [I] [thread 30514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:55.197493] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:55.197803] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:55.738173] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:55.739184] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:55.739320] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:55.739347] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:55.744439] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:55.745376] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:55.745525] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:55.745553] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:56.199030] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:56.899529] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:56.900582] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:56.900726] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:56.900755] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:56.905850] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:56.906870] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:56.907026] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:56.907057] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:57.200121] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:57.208415] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:57.208758] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:57.209770] [D] [thread 30519] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:57.209863] [I] [thread 30519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:57.209880] [I] [thread 30519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:57.210000] [I] [thread 30519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:57.210014] [I] [thread 30519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:57.448402] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:57.448738] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:58.061370] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:58.062370] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:58.062515] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:58.062544] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:58.067601] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:58.068643] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:58.068790] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:58.068819] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:58.449968] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:39:59.217041] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:59.217967] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:39:59.218112] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:59.218138] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:39:59.222999] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:39:59.223900] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:39:59.224081] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:39:59.224109] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:39:59.451259] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:59.459450] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:59.459893] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:59.460783] [D] [thread 30524] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:39:59.460873] [I] [thread 30524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:59.460892] [I] [thread 30524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:39:59.461010] [I] [thread 30524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:39:59.461023] [I] [thread 30524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:39:59.676874] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:39:59.677418] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:00.375547] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:00.376517] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:00.376658] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:00.376687] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:00.381576] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:00.382482] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:00.382626] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:00.382656] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:00.678670] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:01.536351] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:01.537368] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:01.537513] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:01.537543] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:01.542592] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:01.543575] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:01.543721] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:01.543750] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:01.679972] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:01.696282] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:01.696773] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:01.697589] [D] [thread 30530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:01.697682] [I] [thread 30530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:01.697702] [I] [thread 30530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:01.697837] [I] [thread 30530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:01.697852] [I] [thread 30530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:01.900573] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:01.901047] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:02.702939] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:02.703991] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:02.704133] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:02.704162] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:02.709281] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:02.710275] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:02.710420] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:02.710448] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:02.902354] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:03.868865] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:03.869905] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:03.870044] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:03.870071] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:03.875103] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:03.876141] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:03.876364] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:03.876398] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:03.903065] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:03.903401] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:03.904517] [D] [thread 30535] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:03.904615] [I] [thread 30535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:03.904635] [I] [thread 30535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:03.904757] [I] [thread 30535] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:03.904773] [I] [thread 30535] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:04.033714] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:04.034057] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:05.032523] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:05.033455] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:05.033596] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:05.033624] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[36m[12:40:05.035325] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:05.039019] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:05.040028] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:05.040167] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:05.040196] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:06.036564] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:06.181409] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:06.181739] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:06.182766] [D] [thread 30541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:06.182884] [I] [thread 30541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:06.182905] [I] [thread 30541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:06.183034] [I] [thread 30541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:06.183052] [I] [thread 30541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:06.188192] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:06.189200] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:06.189344] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:06.189372] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:06.194430] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:06.195506] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:06.195645] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:06.195676] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:06.330281] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:06.330594] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:07.331892] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:07.347271] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:07.348314] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:07.348455] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:07.348482] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:07.353506] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:07.354437] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:07.354583] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:07.354613] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:08.333236] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:08.337193] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:08.337548] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:08.339171] [D] [thread 30546] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:08.339263] [I] [thread 30546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:08.339282] [I] [thread 30546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:08.339399] [I] [thread 30546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:08.339415] [I] [thread 30546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:08.512778] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:08.513786] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:08.513931] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:08.513961] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:08.519027] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:08.520053] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:08.520192] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:08.520221] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:08.618529] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:08.618832] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:09.620083] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:09.681493] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:09.682495] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:09.682640] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:09.682669] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:09.687722] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:09.688766] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:09.688911] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:09.688941] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:10.621499] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:10.760459] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:10.760795] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:10.761810] [D] [thread 30551] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:10.761943] [I] [thread 30551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:10.761962] [I] [thread 30551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:10.762078] [I] [thread 30551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:10.762093] [I] [thread 30551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:10.845891] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:10.846894] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:10.847039] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:10.847067] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:10.852114] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:10.853106] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:10.853255] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:10.853282] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:10.972995] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:10.973375] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:11.974603] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:12.008749] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:12.009655] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:12.009801] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:12.009828] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:12.014762] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:12.015659] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:12.015803] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:12.015832] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:12.975896] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:13.010549] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:13.010868] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:13.012166] [D] [thread 30556] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:13.012260] [I] [thread 30556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:13.012277] [I] [thread 30556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:13.012395] [I] [thread 30556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:13.012444] [I] [thread 30556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:13.171760] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:13.172975] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:13.173153] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:13.173188] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:13.179282] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:13.180534] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:13.180711] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:13.180761] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:13.190445] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:13.190752] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:14.192038] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:14.340942] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:14.342148] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:14.342366] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:14.342428] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:14.348740] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:14.349939] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:14.350104] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:14.350137] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:15.193289] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:15.335130] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:15.335459] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:15.336506] [D] [thread 30561] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:15.336604] [I] [thread 30561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:15.336622] [I] [thread 30561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:15.336752] [I] [thread 30561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:15.336769] [I] [thread 30561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:15.504153] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:15.505086] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:15.505234] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:15.505263] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:15.510108] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:15.511126] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:15.511284] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:15.511315] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:15.556552] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:15.556898] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:16.558151] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:16.664638] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:16.665562] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:16.665708] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:16.665737] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:16.670602] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:16.671507] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:16.671652] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:16.671682] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:17.559591] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:17.675917] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:17.676297] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:17.677313] [D] [thread 30566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:17.677405] [I] [thread 30566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:17.677421] [I] [thread 30566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:17.677538] [I] [thread 30566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:17.677551] [I] [thread 30566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:17.823859] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:17.825113] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:17.825294] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:17.825326] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:17.830935] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[36m[12:40:17.831877] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[33m[1m[12:40:17.832038] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:17.832161] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:17.832191] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:17.832228] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:18.833455] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:18.989340] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:18.990253] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:18.990397] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:18.990425] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:18.995494] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:18.996532] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:18.996701] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:18.996733] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:19.834770] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:19.974568] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:19.974878] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:19.975932] [D] [thread 30571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:19.976055] [I] [thread 30571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:19.976073] [I] [thread 30571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:19.976192] [I] [thread 30571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:19.976217] [I] [thread 30571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[12:40:20.149410] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:20.150456] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:20.150686] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:20.150734] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:20.156922] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:20.158032] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:20.158211] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:20.158248] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:20.175687] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:20.176050] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:21.177271] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:21.320700] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:21.321811] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:21.321990] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:21.322021] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:21.327214] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:21.328247] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:21.328388] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:21.328417] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:22.178519] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:22.215270] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:22.215618] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:22.216652] [D] [thread 30576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:22.216780] [I] [thread 30576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:22.216799] [I] [thread 30576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:22.216918] [I] [thread 30576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:22.216933] [I] [thread 30576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:22.400527] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:22.400848] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:22.485898] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:22.486821] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:22.486963] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:22.486990] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:22.491977] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:22.492927] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:22.493076] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:22.493105] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:23.402101] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:23.649108] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:23.650111] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:23.650258] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:23.650286] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:23.655324] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:23.656357] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:23.656499] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:23.656529] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:24.403372] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:24.407901] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:24.408413] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:24.409241] [D] [thread 30581] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:24.409328] [I] [thread 30581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:24.409347] [I] [thread 30581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:24.409463] [I] [thread 30581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:24.409477] [I] [thread 30581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:24.620141] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:24.620599] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:24.815519] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:24.816512] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:24.816655] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:24.816684] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:24.821679] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:24.822675] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:24.822819] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:24.822847] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:25.622001] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:25.977591] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:25.978602] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:25.978746] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:25.978773] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:25.983837] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:25.984899] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:25.985044] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:25.985070] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:26.623291] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:26.687282] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:26.687785] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:26.688655] [D] [thread 30586] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:26.688745] [I] [thread 30586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:26.688764] [I] [thread 30586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:26.688883] [I] [thread 30586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:26.688899] [I] [thread 30586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:26.876117] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:26.876585] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:27.134668] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:27.135615] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:27.135761] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:27.135790] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:27.141004] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:27.142090] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:27.142243] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:27.142279] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:27.877876] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:28.294223] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:28.295145] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:28.295292] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:28.295321] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:28.300207] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:28.301130] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:28.301275] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:28.301302] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:28.879329] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:28.899487] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:28.900082] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:28.900876] [D] [thread 30592] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:28.900966] [I] [thread 30592] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:28.900983] [I] [thread 30592] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:28.901101] [I] [thread 30592] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:28.901115] [I] [thread 30592] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:29.104750] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:29.105221] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:29.465498] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:29.466417] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:29.466561] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:29.466590] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:29.471411] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:29.472360] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:29.472500] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:29.472529] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:30.105784] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:30.628873] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:30.629880] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:30.630026] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:30.630055] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:30.635092] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:30.636188] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:30.636330] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:30.636360] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:31.107062] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.205721] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.206095] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.207251] [D] [thread 30598] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:40:31.207344] [I] [thread 30598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:31.207362] [I] [thread 30598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:40:31.207482] [I] [thread 30598] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:40:31.207496] [I] [thread 30598] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:40:31.407250] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.407594] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.616825] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:40:31.617166] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:40:31.618107] [I] [thread 30602] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[12:40:31.618195] [D] [thread 30602] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[12:40:31.618334] [I] [thread 30602] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[12:40:31.618352] [I] [thread 30602] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[12:40:31.618390] [I] [thread 29304] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[12:40:31.618441] [I] [thread 29304] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[12:40:31.618462] [I] [thread 29304] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[12:40:31.618510] [I] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[12:40:31.618525] [D] [thread 29304] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[12:40:31.618572] [D] [thread 29304] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[12:40:31.618732] [D] [thread 29304] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[12:40:31.619200] [D] [thread 29304] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[12:40:31.619257] [D] [thread 29304] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[12:40:31.619341] [D] [thread 29304] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[12:40:31.619358] [D] [thread 29304] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[12:40:31.619367] [D] [thread 29304] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[12:40:31.619397] [D] [thread 29304] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[12:40:31.619417] [D] [thread 29304] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:40:31.619446] [D] [thread 29304] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[12:40:31.619459] [D] [thread 29304] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[12:40:31.619613] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:34215[m
[36m[12:40:31.619643] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:34215 queryId=1[m
[36m[12:40:31.624998] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:35947[m
[36m[12:40:31.625074] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:35947 queryId=1[m
[36m[12:40:31.629548] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:42673[m
[36m[12:40:31.629635] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:42673 queryId=1[m
[36m[12:40:31.634097] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:33423[m
[36m[12:40:31.634292] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:33423 queryId=1[m
[36m[12:40:31.638685] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.10:42705[m
[36m[12:40:31.638769] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.10:42705 queryId=1[m
[36m[12:40:31.643075] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:40825[m
[36m[12:40:31.643159] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:40825 queryId=1[m
[36m[12:40:31.647371] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:34799[m
[36m[12:40:31.647496] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:34799 queryId=1[m
[36m[12:40:31.651702] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:38215[m
[36m[12:40:31.651786] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:38215 queryId=1[m
[36m[12:40:31.656059] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:42701[m
[36m[12:40:31.656137] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:42701 queryId=1[m
[36m[12:40:31.660484] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:34411[m
[36m[12:40:31.660562] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:34411 queryId=1[m
[36m[12:40:31.665010] [D] [thread 29304] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.30:41931[m
[36m[12:40:31.665094] [D] [thread 29304] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:41931 queryId=1[m
[36m[12:40:31.669766] [D] [thread 29304] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[31m[1m[12:40:31.787163] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:31.788078] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:31.788210] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:31.788236] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:31.792684] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:31.793535] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:31.793676] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:31.793705] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:32.618382] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:32.939468] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:32.940511] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:32.940656] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:32.940685] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:32.945730] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:32.946694] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:32.946840] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:32.946871] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:33.619668] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[12:40:34.500374] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:34.501767] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:42705 went dead so we remove it[m
[32m[12:40:34.501993] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:34.502050] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[12:40:34.509501] [E] [thread 29321] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[12:40:34.510444] [W] [thread 29321] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:34411 went dead so we remove it[m
[32m[12:40:34.510602] [I] [thread 29321] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[12:40:34.510635] [W] [thread 29321] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[36m[12:40:34.621010] [D] [thread 29320] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
