
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.210-SNAPSHOT
[32m[17:35:38.614105] [I] [thread 35112] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.30
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 1
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 4096
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: DEFAULT_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [DEFAULT|THREAD_LOCAL]. 
Value: DEFAULT
Default Value: DEFAULT

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[17:35:38.614303] [I] [thread 35112] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[17:35:38.614516] [D] [thread 35112] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.30 restPort=8081 rpcIp=192.168.2.30 rpcPort=4000[m
[36m[17:35:38.615500] [D] [thread 35112] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[17:35:38.615829] [I] [thread 35112] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[17:35:38.616561] [D] [thread 35112] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[17:35:38.616629] [D] [thread 35112] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[17:35:38.617230] [D] [thread 35112] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[17:35:38.617307] [D] [thread 35112] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[17:35:38.617409] [D] [thread 35112] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[17:35:38.617712] [D] [thread 35112] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[17:35:38.617870] [D] [thread 35112] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[17:35:38.665793] [D] [thread 35112] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[17:35:38.665892] [D] [thread 35112] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:35:38.666343] [D] [thread 35112] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:35:38.666733] [D] [thread 35112] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[17:35:38.667069] [D] [thread 35112] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[17:35:38.667367] [D] [thread 35112] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[17:35:38.667557] [D] [thread 35112] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[17:35:38.667974] [D] [thread 35112] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[17:35:38.669132] [D] [thread 35112] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[17:35:38.669205] [D] [thread 35112] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[17:35:38.669487] [D] [thread 35112] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[17:35:38.669788] [D] [thread 35112] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[17:35:38.670085] [D] [thread 35112] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[17:35:38.671023] [D] [thread 35112] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[17:35:38.671524] [D] [thread 35112] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= true[m
[36m[17:35:38.671723] [D] [thread 35112] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[17:35:38.671999] [D] [thread 35112] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= true , storage= NewestEntry [m
[32m[17:35:38.672744] [I] [thread 35112] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedCpuMetrics[m
[32m[17:35:38.673299] [I] [thread 35112] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source DiskMetric[m
[32m[17:35:38.673788] [I] [thread 35112] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source MemoryMetric[m
[32m[17:35:38.674600] [I] [thread 35112] [MonitoringManager.cpp:189] [registerLogicalMonitoringStreams] MonitoringManager: Creating logical source WrappedNetworkMetrics[m
[32m[17:35:38.674728] [I] [thread 35112] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[17:35:38.674745] [D] [thread 35112] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[17:35:38.675072] [D] [thread 35112] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[17:35:38.675094] [I] [thread 35120] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[17:35:38.675133] [D] [thread 35120] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[17:35:38.675457] [D] [thread 35121] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[17:35:38.681760] [D] [thread 35112] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[17:35:38.681740] [D] [thread 35121] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.30:4000[m
[36m[17:35:38.681809] [D] [thread 35112] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[17:35:38.682217] [D] [thread 35112] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedCpuMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[36m[17:35:38.682271] [D] [thread 35112] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedCpuMetrics already exist.[m
[36m[17:35:38.682302] [D] [thread 35112] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedCpuMetrics[m
[36m[17:35:38.682445] [D] [thread 35112] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= DiskMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[36m[17:35:38.682479] [D] [thread 35112] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source DiskMetric already exist.[m
[36m[17:35:38.682492] [D] [thread 35112] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source DiskMetric[m
[36m[17:35:38.682655] [D] [thread 35112] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= MemoryMetric schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[36m[17:35:38.682677] [D] [thread 35112] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source MemoryMetric already exist.[m
[36m[17:35:38.682692] [D] [thread 35112] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source MemoryMetric[m
[36m[17:35:38.682893] [D] [thread 35112] [SourceCatalogService.cpp:100] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source= WrappedNetworkMetrics schema= node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[17:35:38.682912] [D] [thread 35112] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source WrappedNetworkMetrics already exist.[m
[36m[17:35:38.682927] [D] [thread 35112] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source WrappedNetworkMetrics[m
[36m[17:35:38.682968] [D] [thread 35112] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[17:35:38.682979] [D] [thread 35112] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[17:35:38.683622] [D] [thread 35112] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[17:35:38.683784] [D] [thread 35112] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.30 coordinatorPort=4000 localWorkerIp=192.168.2.30 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=DEFAULT[m
[36m[17:35:38.683800] [D] [thread 35112] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[17:35:38.683830] [D] [thread 35112] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=true[m
[36m[17:35:38.684135] [D] [thread 35112] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[17:35:38.684202] [D] [thread 35112] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[17:35:38.684295] [I] [thread 35112] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:35:38.684926] [I] [thread 35112] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[17:35:38.685011] [I] [thread 35112] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:35:38.685312] [I] [thread 35112] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[17:35:38.685370] [I] [thread 35112] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:35:38.685936] [I] [thread 35112] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[17:35:38.685999] [I] [thread 35112] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:35:38.686753] [I] [thread 35112] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[17:35:38.687158] [D] [thread 35112] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[17:35:38.687437] [D] [thread 35112] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=true[m
[32m[17:35:38.687698] [I] [thread 35112] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config DiskMetric _ph with wait time 1000[m
[32m[17:35:38.688019] [I] [thread 35112] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config MemoryMetric _ph with wait time 1000[m
[32m[17:35:38.688122] [I] [thread 35112] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedCpuMetrics _ph with wait time 1000[m
[32m[17:35:38.688182] [I] [thread 35112] [MonitoringAgent.cpp:111] [addMonitoringStreams] MonitoringAgent: Adding physical source to config WrappedNetworkMetrics _ph with wait time 1000[m
[36m[17:35:38.699786] [D] [thread 35112] [BufferManager.cpp:107] [initialize] NES memory allocation requires 4194304 out of 3975450624 available bytes[m
[36m[17:35:38.708970] [D] [thread 35112] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=4096 numOfBuffers=1024[m
[36m[17:35:38.752333] [D] [thread 35112] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[36m[17:35:38.753309] [D] [thread 35112] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[17:35:38.753569] [I] [thread 35112] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[17:35:38.753704] [D] [thread 35112] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[17:35:38.753768] [D] [thread 35112] [DefaultPhaseFactory.cpp:66] [createLowerPhysicalToGeneratableOperatorsPhase] Create default lower pipeline plan phase[m
[36m[17:35:38.753959] [D] [thread 35112] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[17:35:38.754051] [D] [thread 35112] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[17:35:38.754105] [D] [thread 35112] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[17:35:38.754132] [D] [thread 35112] [DefaultPhaseFactory.cpp:91] [createBufferOptimizationPhase] Create buffer optimization phase[m
[36m[17:35:38.754207] [D] [thread 35112] [DefaultPhaseFactory.cpp:95] [createPredicationOptimizationPhase] Create predication optimization phase[m
[36m[17:35:38.754287] [D] [thread 35112] [DefaultPhaseFactory.cpp:72] [createCodeGenerationPhase] Create default code generation phase[m
[36m[17:35:38.754750] [D] [thread 35112] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[17:35:38.754867] [D] [thread 35112] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[17:35:38.755150] [D] [thread 35112] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[17:35:38.755352] [D] [thread 35112] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.30:0) Creating ZmqServer()[m
[33m[1m[17:35:38.755390] [W] [thread 35112] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.30:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[17:35:38.755444] [D] [thread 35112] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.30:0): Starting server..[m
[36m[17:35:38.757634] [D] [thread 35126] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.30:0):  Trying to bind on tcp://192.168.2.30:0[m
[36m[17:35:38.759135] [D] [thread 35126] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.30:0):  Created socket on 192.168.2.30: 0[m
[36m[17:35:38.759290] [D] [thread 35126] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.30: 37557[m
[36m[17:35:38.760392] [D] [thread 35129] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.30: 37557[m
[32m[17:35:38.760529] [I] [thread 35112] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.30:37557[m
[36m[17:35:38.760630] [D] [thread 35112] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1698310723  with numThreads= 1[m
[36m[17:35:38.760881] [D] [thread 35112] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[17:35:38.761275] [D] [thread 35112] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[17:35:38.761319] [D] [thread 35112] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[17:35:38.761351] [D] [thread 35130] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[17:35:38.761459] [D] [thread 35112] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[17:35:38.761489] [D] [thread 35112] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.30:0: 0[m
[36m[17:35:38.761587] [D] [thread 35130] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[17:35:38.761906] [D] [thread 35131] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[17:35:38.762349] [D] [thread 35131] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[17:35:38.765352] [D] [thread 35131] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.30:0: 34457[m
[36m[17:35:38.765384] [D] [thread 35112] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.30:34457: 34457[m
[36m[17:35:38.765420] [D] [thread 35112] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[17:35:38.765457] [D] [thread 35112] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.30:4000[m
[36m[17:35:38.765567] [D] [thread 35112] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.30:4000[m
[36m[17:35:38.767692] [D] [thread 35131] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[17:35:38.768188] [D] [thread 35112] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[32m[17:35:38.769187] [I] [thread 35112] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[36m[17:35:38.769255] [D] [thread 35112] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[17:35:38.772686] [D] [thread 35112] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.30"
grpcPort: 34457
dataPort: 37557
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 40686104
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:38.785761] [D] [thread 35122] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 34457
dataPort: 37557
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 40686104
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:38.786106] [D] [thread 35122] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 34457
dataPort: 37557
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975450624
  cpuCoreNum: 4
  totalCPUJiffies: 40686104
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:38.786250] [D] [thread 35122] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[17:35:38.786283] [W] [thread 35122] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[17:35:38.786295] [D] [thread 35122] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:38.786309] [D] [thread 35122] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:38.786352] [D] [thread 35122] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[17:35:38.786543] [D] [thread 35122] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[17:35:38.786639] [I] [thread 35122] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[17:35:38.786765] [D] [thread 35122] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:38.787211] [D] [thread 35122] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:38.787325] [I] [thread 35122] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:35:38.787364] [D] [thread 35122] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:35:38.787409] [D] [thread 35122] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:38.787421] [D] [thread 35122] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:38.787458] [D] [thread 35122] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:38.788824] [D] [thread 35122] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[17:35:38.790572] [D] [thread 35112] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[17:35:38.790656] [D] [thread 35112] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[17:35:38.790756] [D] [thread 35112] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[17:35:38.790771] [D] [thread 35112] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[17:35:38.820679] [D] [thread 35112] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[17:35:38.820804] [D] [thread 35112] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[17:35:38.820819] [D] [thread 35112] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[17:35:38.821327] [D] [thread 35112] [NesWorker.cpp:377] [connect] NesWorker: start with register source[m
[36m[17:35:38.821381] [D] [thread 35112] [NesWorker.cpp:458] [waitForConnect] NesWorker::waitForConnect()[m
[36m[17:35:38.821401] [D] [thread 35112] [NesWorker.cpp:462] [waitForConnect] waitForConnect: check connect[m
[36m[17:35:38.821408] [D] [thread 35112] [NesWorker.cpp:467] [waitForConnect] waitForConnect: connected[m
[36m[17:35:38.821443] [D] [thread 35112] [CoordinatorRPCClient.cpp:168] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources: got 4 physical sources to register for worker with id 1[m
[36m[17:35:38.821709] [D] [thread 35112] [CoordinatorRPCClient.cpp:180] [registerPhysicalSources] CoordinatorRPCClient::registerPhysicalSources request=workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[36m[17:35:38.823884] [D] [thread 35122] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 1
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:35:38.824020] [I] [thread 35122] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:35:38.824045] [D] [thread 35122] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:35:38.824132] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:35:38.824351] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:35:38.824453] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:35:38.824649] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:35:38.824694] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:38.824762] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[17:35:38.824806] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:35:38.824954] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:35:38.825005] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:35:38.825056] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:35:38.825072] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:38.825096] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[17:35:38.825122] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:35:38.825198] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:35:38.825219] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:35:38.825246] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:35:38.825259] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:38.825277] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[17:35:38.825300] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 1 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:35:38.825360] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:35:38.825379] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:35:38.825401] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:35:38.825413] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:38.825429] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=1 successful added[m
[36m[17:35:38.825439] [D] [thread 35122] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:35:38.826717] [D] [thread 35112] [CoordinatorRPCClient.cpp:129] [onSuccess] CoordinatorRPCClient::: status ok return success=true[m
[36m[17:35:38.826840] [D] [thread 35112] [NesWorker.cpp:419] [registerPhysicalSources] NesWorker::registerPhysicalSources success=true[m
[36m[17:35:38.826855] [D] [thread 35112] [NesWorker.cpp:379] [connect] registered= true[m
[36m[17:35:38.826900] [D] [thread 35112] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[17:35:38.827021] [D] [thread 35112] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[17:35:38.827556] [D] [thread 35112] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[17:35:38.827652] [I] [thread 35135] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.30:8081[m
[32m[17:35:38.844385] [I] [thread 35135] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[17:35:38.844541] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:38.854187] [D] [thread 35112] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[17:35:38.854339] [D] [thread 35112] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[17:35:38.854352] [D] [thread 35112] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[17:35:38.854722] [D] [thread 35112] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[17:35:39.845731] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:40.846987] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:41.848307] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:42.486601] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:42.487826] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:42.489944] [D] [thread 35139] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[17:35:42.493027] [D] [thread 35139] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[17:35:42.493146] [D] [thread 35139] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));[m
[36m[17:35:42.493265] [D] [thread 35139] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT16))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT32))->addField(createField("y",BasicType::INT32))->addField(createField("z",BasicType::INT32))->addField(createField("absolute_v",BasicType::UINT32))->addField(createField("absolute_a",BasicType::UINT32))->addField(createField("vx",BasicType::INT32))->addField(createField("vy",BasicType::INT32))->addField(createField("vz",BasicType::INT32))->addField(createField("ax",BasicType::INT32))->addField(createField("ay",BasicType::INT32))->addField(createField("az",BasicType::INT32));;}
}
[m
[36m[17:35:42.495560] [D] [thread 35140] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_17-35-42_5192012.cpp[m
[36m[17:35:42.496414] [D] [thread 35140] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[17:35:42.497251] [D] [thread 35140] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_26-10-2023_17-35-42_5192012.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_26-10-2023_17-35-42_5192012.cpp'[m
[36m[17:35:43.489077] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:44.187291] [I] [thread 35140] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1691.867506ms[m
[36m[17:35:44.188988] [D] [thread 35139] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[17:35:44.189083] [D] [thread 35139] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[17:35:44.189122] [D] [thread 35139] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[17:35:44.189172] [D] [thread 35139] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[17:35:44.490362] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:44.564831] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:44.565303] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:44.566186] [I] [thread 35145] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:44.567533] [I] [thread 35145] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:44.968813] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:44.969292] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:44.970160] [I] [thread 35146] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:44.970835] [I] [thread 35146] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:45.141626] [D] [thread 35133] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.10"
grpcPort: 37133
dataPort: 33527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:35:45.141836] [D] [thread 35133] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.10"
grpcPort: 37133
dataPort: 33527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:35:45.141886] [D] [thread 35133] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:35:45.142035] [D] [thread 35133] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:45.142051] [D] [thread 35133] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:45.142081] [D] [thread 35133] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[17:35:45.142166] [D] [thread 35133] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:35:45.142215] [I] [thread 35133] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:35:45.142320] [I] [thread 35133] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:45.142448] [D] [thread 35133] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[17:35:45.149165] [D] [thread 35133] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:45.149546] [D] [thread 35133] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:45.149620] [I] [thread 35133] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:35:45.149645] [D] [thread 35133] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:35:45.149677] [D] [thread 35133] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:45.149687] [D] [thread 35133] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:45.149703] [D] [thread 35133] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:45.150191] [D] [thread 35133] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[17:35:45.970561] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:46.971871] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:47.973228] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:48.085118] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:48.085564] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:48.086499] [I] [thread 35147] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:48.087555] [I] [thread 35147] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:48.227872] [D] [thread 35133] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 35535
dataPort: 40951
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:35:48.228186] [D] [thread 35133] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 35535
dataPort: 40951
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:35:48.228264] [D] [thread 35133] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:35:48.228557] [D] [thread 35133] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:48.228589] [D] [thread 35133] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:48.228651] [D] [thread 35133] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[17:35:48.228833] [D] [thread 35133] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:35:48.228926] [I] [thread 35133] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:35:48.229069] [I] [thread 35133] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:48.229174] [D] [thread 35133] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[17:35:48.229292] [D] [thread 35133] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:48.229558] [D] [thread 35133] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:48.229622] [I] [thread 35133] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:35:48.229653] [D] [thread 35133] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:35:48.229697] [D] [thread 35133] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:48.229720] [D] [thread 35133] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:48.229747] [D] [thread 35133] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:48.230330] [D] [thread 35133] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[17:35:49.086829] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:50.088132] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:51.089417] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:52.090719] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:52.909658] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:52.910161] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:52.910999] [I] [thread 35148] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:52.912278] [I] [thread 35148] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:53.911424] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:54.912731] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:55.503112] [D] [thread 35122] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 43905
dataPort: 42999
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492739964
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:55.503384] [D] [thread 35122] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 43905
dataPort: 42999
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492739964
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:55.503490] [D] [thread 35122] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:35:55.503867] [D] [thread 35122] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:55.503903] [D] [thread 35122] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:55.504139] [D] [thread 35122] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[17:35:55.504532] [D] [thread 35122] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:35:55.504793] [I] [thread 35122] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:35:55.505014] [I] [thread 35122] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.505196] [D] [thread 35122] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[17:35:55.505420] [D] [thread 35122] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:55.505936] [D] [thread 35122] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:55.506194] [I] [thread 35122] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:35:55.506234] [D] [thread 35122] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:35:55.506283] [D] [thread 35122] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:55.506307] [D] [thread 35122] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:55.506366] [D] [thread 35122] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:55.507350] [D] [thread 35122] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[17:35:55.543500] [D] [thread 35122] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 4
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream3"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:35:55.543636] [I] [thread 35122] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:35:55.543671] [D] [thread 35122] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:35:55.543751] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= test_stream3 logical source= debs[m
[36m[17:35:55.543986] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:35:55.544044] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream3[m
[36m[17:35:55.544131] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream3 does not exist, try to add[m
[36m[17:35:55.544201] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.544251] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[17:35:55.544334] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:35:55.544703] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:35:55.544829] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:35:55.545071] [D] [thread 35122] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:35:55.545250] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:35:55.545319] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.545506] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[17:35:55.545742] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:35:55.546138] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:35:55.546333] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:35:55.546463] [D] [thread 35122] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:35:55.546514] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:35:55.546544] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.546595] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[17:35:55.546715] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:35:55.546987] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:35:55.547112] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:35:55.547245] [D] [thread 35122] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:55.547314] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:35:55.547417] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.547534] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[17:35:55.547661] [D] [thread 35122] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 4 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:35:55.548130] [D] [thread 35122] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:35:55.548183] [D] [thread 35122] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:35:55.548256] [D] [thread 35122] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:55.548344] [D] [thread 35122] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:35:55.548452] [D] [thread 35122] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.548524] [D] [thread 35122] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=4 successful added[m
[36m[17:35:55.548594] [D] [thread 35122] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:35:55.555258] [D] [thread 35149] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 4
oldParent: 1
newParent: 2
[m
[36m[17:35:55.555353] [D] [thread 35149] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 4  parentId= 1[m
[32m[17:35:55.555372] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:35:55.555392] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:35:55.555409] [D] [thread 35149] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  4  exists[m
[32m[17:35:55.555419] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:35:55.555428] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:35:55.555439] [D] [thread 35149] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:35:55.555498] [D] [thread 35149] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:35:55.555599] [I] [thread 35149] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.555638] [D] [thread 35149] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:35:55.555653] [D] [thread 35149] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:35:55.555673] [D] [thread 35149] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 4  parentId= 2[m
[32m[17:35:55.555684] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:35:55.555696] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:35:55.555708] [D] [thread 35149] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 4 exists[m
[32m[17:35:55.555717] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:35:55.555726] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:35:55.555745] [D] [thread 35149] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[17:35:55.555811] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.555848] [D] [thread 35149] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:35:55.556070] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:35:55.556094] [D] [thread 35149] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:35:55.770486] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:55.770948] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:55.771647] [I] [thread 35150] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:55.773112] [I] [thread 35150] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:55.917701] [D] [thread 35133] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 45855
dataPort: 41005
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492286282
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:55.917981] [D] [thread 35133] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 45855
dataPort: 41005
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492286282
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:55.918092] [D] [thread 35133] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:35:55.918474] [D] [thread 35133] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:55.918520] [D] [thread 35133] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:55.918583] [D] [thread 35133] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[17:35:55.918742] [D] [thread 35133] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:35:55.918827] [I] [thread 35133] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:35:55.918968] [I] [thread 35133] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.919049] [D] [thread 35133] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[17:35:55.919151] [D] [thread 35133] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:55.919478] [D] [thread 35133] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:55.919539] [I] [thread 35133] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:35:55.919569] [D] [thread 35133] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:35:55.919611] [D] [thread 35133] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:55.919635] [D] [thread 35133] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:55.919662] [D] [thread 35133] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:55.920338] [D] [thread 35133] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[17:35:55.956847] [D] [thread 35133] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:35:55.956962] [I] [thread 35133] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:35:55.957003] [D] [thread 35133] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:35:55.957083] [D] [thread 35133] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[17:35:55.957272] [D] [thread 35133] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:35:55.957318] [D] [thread 35133] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[17:35:55.957388] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:35:55.957425] [D] [thread 35133] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[17:35:55.957452] [D] [thread 35133] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.957499] [D] [thread 35133] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:35:55.957545] [D] [thread 35133] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:35:55.957644] [D] [thread 35133] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:35:55.957681] [D] [thread 35133] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:35:55.957722] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:35:55.957776] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:35:55.957808] [D] [thread 35133] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:35:55.957834] [D] [thread 35133] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.957877] [D] [thread 35133] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:35:55.957929] [D] [thread 35133] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:35:55.958067] [D] [thread 35133] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:35:55.958109] [D] [thread 35133] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:35:55.958156] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:35:55.958184] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:35:55.958211] [D] [thread 35133] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:35:55.958235] [D] [thread 35133] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.958273] [D] [thread 35133] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:35:55.958317] [D] [thread 35133] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:35:55.958430] [D] [thread 35133] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:35:55.958467] [D] [thread 35133] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:35:55.958511] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:55.958538] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:55.958566] [D] [thread 35133] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:35:55.958591] [D] [thread 35133] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.958629] [D] [thread 35133] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:35:55.958674] [D] [thread 35133] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:35:55.958821] [D] [thread 35133] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:35:55.958869] [D] [thread 35133] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:35:55.958915] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:55.958944] [D] [thread 35133] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:55.958971] [D] [thread 35133] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:35:55.958995] [D] [thread 35133] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:55.959035] [D] [thread 35133] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:35:55.959057] [D] [thread 35133] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:35:55.963428] [D] [thread 35151] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[17:35:55.963539] [D] [thread 35151] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[17:35:55.963573] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:35:55.963602] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:35:55.963630] [D] [thread 35151] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[17:35:55.963647] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:35:55.963663] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:35:55.963683] [D] [thread 35151] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:35:55.963758] [D] [thread 35151] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:35:55.963906] [I] [thread 35151] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.963986] [D] [thread 35151] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:35:55.964016] [D] [thread 35151] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:35:55.964041] [D] [thread 35151] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[17:35:55.964060] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:35:55.964080] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:35:55.964102] [D] [thread 35151] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[17:35:55.964119] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:35:55.964135] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:35:55.964154] [D] [thread 35151] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[17:35:55.964277] [I] [thread 35151] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[36m[17:35:55.964333] [D] [thread 35151] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:35:55.964651] [D] [thread 35151] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:35:55.964683] [D] [thread 35151] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:35:56.772214] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:57.773470] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:58.774732] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:59.658119] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:35:59.658575] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:35:59.659586] [I] [thread 35152] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:35:59.661238] [I] [thread 35152] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:35:59.805541] [D] [thread 35151] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 43721
dataPort: 40101
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492014269
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:59.805767] [D] [thread 35151] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 43721
dataPort: 40101
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492014269
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:35:59.805833] [D] [thread 35151] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:35:59.806297] [D] [thread 35151] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:35:59.806355] [D] [thread 35151] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:35:59.806409] [D] [thread 35151] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[17:35:59.806615] [D] [thread 35151] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:35:59.806692] [I] [thread 35151] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:35:59.806919] [I] [thread 35151] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:59.807082] [D] [thread 35151] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[17:35:59.807289] [D] [thread 35151] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:35:59.807774] [D] [thread 35151] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:35:59.807855] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:35:59.807888] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:35:59.807928] [D] [thread 35151] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:35:59.807996] [D] [thread 35151] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:35:59.808024] [D] [thread 35151] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:35:59.808905] [D] [thread 35151] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[17:35:59.845455] [D] [thread 35151] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:35:59.845604] [I] [thread 35151] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:35:59.845646] [D] [thread 35151] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:35:59.845736] [D] [thread 35151] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[17:35:59.845944] [D] [thread 35151] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:35:59.845997] [D] [thread 35151] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[17:35:59.846074] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:35:59.846314] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:35:59.846449] [D] [thread 35151] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[17:35:59.846499] [D] [thread 35151] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:59.846631] [D] [thread 35151] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:35:59.846711] [D] [thread 35151] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:35:59.847070] [D] [thread 35151] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:35:59.847216] [D] [thread 35151] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:35:59.847449] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:35:59.847528] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:35:59.847619] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:35:59.847753] [D] [thread 35151] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:35:59.847877] [D] [thread 35151] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:59.848084] [D] [thread 35151] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:35:59.848238] [D] [thread 35151] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:35:59.848672] [D] [thread 35151] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:35:59.848827] [D] [thread 35151] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:35:59.848989] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:35:59.849114] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:35:59.849174] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:35:59.849277] [D] [thread 35151] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:35:59.849314] [D] [thread 35151] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:59.849424] [D] [thread 35151] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:35:59.849562] [D] [thread 35151] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:35:59.849842] [D] [thread 35151] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:35:59.849936] [D] [thread 35151] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:35:59.850066] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:59.850189] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:59.850313] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:35:59.850434] [D] [thread 35151] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:35:59.850476] [D] [thread 35151] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:59.850510] [D] [thread 35151] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:35:59.850629] [D] [thread 35151] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:35:59.850924] [D] [thread 35151] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:35:59.851065] [D] [thread 35151] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:35:59.851210] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:59.851442] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:59.851490] [D] [thread 35151] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:35:59.851526] [D] [thread 35151] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:35:59.851622] [D] [thread 35151] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:35:59.851668] [D] [thread 35151] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:35:59.851694] [D] [thread 35151] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:35:59.856105] [D] [thread 35149] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 3
[m
[36m[17:35:59.856177] [D] [thread 35149] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[17:35:59.856194] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:35:59.856212] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:35:59.856228] [D] [thread 35149] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[17:35:59.856236] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:35:59.856244] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:35:59.856253] [D] [thread 35149] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:35:59.856301] [D] [thread 35149] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:35:59.856389] [I] [thread 35149] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:35:59.856412] [D] [thread 35149] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:35:59.856425] [D] [thread 35149] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:35:59.856438] [D] [thread 35149] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 3[m
[32m[17:35:59.856447] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:35:59.856456] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:35:59.856467] [D] [thread 35149] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[17:35:59.856474] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:35:59.856483] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:35:59.856492] [D] [thread 35149] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[17:35:59.856541] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[17:35:59.856586] [D] [thread 35149] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:35:59.856779] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:35:59.856794] [D] [thread 35149] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:00.659855] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:01.661223] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:02.662488] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:03.457825] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:03.458301] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:03.459137] [I] [thread 35154] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:03.461180] [I] [thread 35154] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:03.603898] [D] [thread 35153] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 34879
dataPort: 38259
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2491894872
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:03.604235] [D] [thread 35153] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 34879
dataPort: 38259
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2491894872
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:03.604320] [D] [thread 35153] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:36:03.605101] [D] [thread 35153] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:36:03.605175] [D] [thread 35153] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:36:03.605244] [D] [thread 35153] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[17:36:03.605410] [D] [thread 35153] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:36:03.605531] [I] [thread 35153] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:36:03.605754] [I] [thread 35153] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:03.605916] [D] [thread 35153] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[17:36:03.606155] [D] [thread 35153] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:36:03.606902] [D] [thread 35153] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:36:03.607012] [I] [thread 35153] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:03.607055] [D] [thread 35153] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:36:03.607103] [D] [thread 35153] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:36:03.607127] [D] [thread 35153] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:36:03.607170] [D] [thread 35153] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:36:03.608086] [D] [thread 35153] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[17:36:03.644176] [D] [thread 35149] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:36:03.644282] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:03.644319] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:36:03.644393] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[17:36:03.644570] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:36:03.644610] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[17:36:03.644676] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:36:03.644703] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:36:03.644723] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:36:03.644750] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[17:36:03.644775] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:03.644802] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:36:03.644839] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:36:03.644951] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:36:03.644985] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:36:03.645025] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:36:03.645050] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:36:03.645070] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:36:03.645110] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[17:36:03.645138] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:36:03.645159] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:03.645199] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:36:03.645241] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:36:03.645337] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:36:03.645370] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:36:03.645406] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:36:03.645430] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:36:03.645451] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:36:03.645471] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[17:36:03.645494] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:36:03.645529] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:03.645561] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:36:03.645597] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:36:03.645692] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:36:03.645724] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:36:03.645758] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:03.645783] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:03.645804] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:03.645824] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:03.645847] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:36:03.645868] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:03.645898] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:36:03.645936] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:36:03.646035] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:36:03.646070] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:36:03.646109] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:03.646133] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:03.646155] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:03.646176] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:03.646200] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:36:03.646222] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:03.646256] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:36:03.646275] [D] [thread 35149] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:36:03.650961] [D] [thread 35149] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[17:36:03.651058] [D] [thread 35149] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[17:36:03.651085] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:03.651111] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:36:03.651136] [D] [thread 35149] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[17:36:03.651151] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:03.651166] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:36:03.651184] [D] [thread 35149] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:36:03.651250] [D] [thread 35149] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:36:03.651404] [I] [thread 35149] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:03.651439] [D] [thread 35149] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:36:03.651461] [D] [thread 35149] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:36:03.651482] [D] [thread 35149] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[17:36:03.651498] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:03.651515] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:36:03.651534] [D] [thread 35149] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[17:36:03.651548] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:36:03.651564] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:36:03.651582] [D] [thread 35149] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[17:36:03.651703] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[17:36:03.651755] [D] [thread 35149] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:36:03.652196] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:36:03.652234] [D] [thread 35149] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:04.459547] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:05.460960] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:06.462402] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:06.713937] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:06.714436] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:06.715323] [I] [thread 35156] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:06.717626] [I] [thread 35156] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:06.868181] [D] [thread 35149] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.36"
grpcPort: 42379
dataPort: 36431
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492510998
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:06.868514] [D] [thread 35149] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.36"
grpcPort: 42379
dataPort: 36431
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492510998
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:06.868609] [D] [thread 35149] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:36:06.868929] [D] [thread 35149] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:36:06.868981] [D] [thread 35149] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:36:06.869042] [D] [thread 35149] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[17:36:06.869166] [D] [thread 35149] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:36:06.869220] [I] [thread 35149] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:36:06.869303] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:06.869358] [D] [thread 35149] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[17:36:06.903403] [D] [thread 35149] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:36:06.903878] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:36:06.903977] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:06.904005] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:36:06.904042] [D] [thread 35149] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:36:06.904053] [D] [thread 35149] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:36:06.904070] [D] [thread 35149] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:36:06.904554] [D] [thread 35149] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[17:36:06.942213] [D] [thread 35155] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:36:06.942297] [I] [thread 35155] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:06.942319] [D] [thread 35155] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:36:06.942373] [D] [thread 35155] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[17:36:06.942513] [D] [thread 35155] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:36:06.942540] [D] [thread 35155] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[17:36:06.942589] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:36:06.942631] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:36:06.942646] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:36:06.942658] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:36:06.942688] [D] [thread 35155] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[17:36:06.942707] [D] [thread 35155] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:06.942747] [D] [thread 35155] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:36:06.942776] [D] [thread 35155] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:36:06.942863] [D] [thread 35155] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:36:06.942884] [D] [thread 35155] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:36:06.942996] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:36:06.943054] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:36:06.943081] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:36:06.943123] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[17:36:06.943169] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[17:36:06.943198] [D] [thread 35155] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:36:06.943229] [D] [thread 35155] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:06.943255] [D] [thread 35155] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:36:06.943324] [D] [thread 35155] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:36:06.943440] [D] [thread 35155] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:36:06.943488] [D] [thread 35155] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:36:06.943544] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:36:06.943561] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:36:06.943572] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:36:06.943613] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[17:36:06.943628] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[17:36:06.943664] [D] [thread 35155] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:36:06.943691] [D] [thread 35155] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:06.943707] [D] [thread 35155] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:36:06.943811] [D] [thread 35155] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:36:06.944050] [D] [thread 35155] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:36:06.944118] [D] [thread 35155] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:36:06.944192] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:06.944245] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:06.944299] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:06.944339] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:06.944410] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:06.944437] [D] [thread 35155] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:36:06.944492] [D] [thread 35155] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:06.944548] [D] [thread 35155] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:36:06.944634] [D] [thread 35155] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:36:06.944956] [D] [thread 35155] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:36:06.945076] [D] [thread 35155] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:36:06.945158] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:06.945232] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:06.945274] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:06.945291] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:06.945303] [D] [thread 35155] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:06.945322] [D] [thread 35155] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:36:06.945385] [D] [thread 35155] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:06.945413] [D] [thread 35155] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:36:06.945440] [D] [thread 35155] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:36:06.948667] [D] [thread 35149] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 4
[m
[36m[17:36:06.948741] [D] [thread 35149] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[17:36:06.948758] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:06.948776] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:36:06.948792] [D] [thread 35149] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[17:36:06.948800] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:06.948808] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:36:06.948818] [D] [thread 35149] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:36:06.948867] [D] [thread 35149] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:36:06.948954] [I] [thread 35149] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:06.948976] [D] [thread 35149] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:36:06.948989] [D] [thread 35149] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:36:06.949001] [D] [thread 35149] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 4[m
[32m[17:36:06.949010] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:06.949019] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:36:06.949029] [D] [thread 35149] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[17:36:06.949037] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:36:06.949045] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:36:06.949055] [D] [thread 35149] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[17:36:06.949104] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[36m[17:36:06.949138] [D] [thread 35149] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:36:06.949373] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[36m[17:36:06.949389] [D] [thread 35149] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:07.715764] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:08.717035] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:09.718288] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:10.719545] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:11.720955] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:12.155316] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:12.155789] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:12.156602] [I] [thread 35158] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:12.158935] [I] [thread 35158] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:13.156127] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:13.198050] [D] [thread 35157] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 39413
dataPort: 33073
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492777325
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:13.198323] [D] [thread 35157] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 39413
dataPort: 33073
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3975442432
  cpuCoreNum: 4
  totalCPUJiffies: 2492777325
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:13.198402] [D] [thread 35157] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:36:13.199272] [D] [thread 35157] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:36:13.199345] [D] [thread 35157] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:36:13.199417] [D] [thread 35157] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[17:36:13.199578] [D] [thread 35157] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:36:13.199702] [I] [thread 35157] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:36:13.199925] [I] [thread 35157] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:13.200123] [D] [thread 35157] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[17:36:13.200300] [D] [thread 35157] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:36:13.201222] [D] [thread 35157] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[32m[17:36:13.201360] [I] [thread 35157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:13.201402] [D] [thread 35157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:36:13.201453] [D] [thread 35157] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:36:13.201476] [D] [thread 35157] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:36:13.201503] [D] [thread 35157] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:36:13.202333] [D] [thread 35157] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[17:36:13.237832] [D] [thread 35157] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:36:13.237955] [I] [thread 35157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:13.237996] [D] [thread 35157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:36:13.238086] [D] [thread 35157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[17:36:13.238293] [D] [thread 35157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:36:13.238346] [D] [thread 35157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[17:36:13.238425] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:36:13.238506] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:36:13.238537] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:36:13.238564] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:36:13.238618] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[17:36:13.238658] [D] [thread 35157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[17:36:13.238692] [D] [thread 35157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:13.238727] [D] [thread 35157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:36:13.239314] [D] [thread 35157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:36:13.239755] [D] [thread 35157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:36:13.239901] [D] [thread 35157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:36:13.240351] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:36:13.240420] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:36:13.240452] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:36:13.240570] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[17:36:13.240787] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[17:36:13.240890] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[17:36:13.240995] [D] [thread 35157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:36:13.241094] [D] [thread 35157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:13.241210] [D] [thread 35157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:36:13.241337] [D] [thread 35157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:36:13.241773] [D] [thread 35157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:36:13.241968] [D] [thread 35157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:36:13.242083] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242118] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242199] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242229] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242250] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242270] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[17:36:13.242354] [D] [thread 35157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:36:13.242408] [D] [thread 35157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:13.242474] [D] [thread 35157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:36:13.242588] [D] [thread 35157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:36:13.242831] [D] [thread 35157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:36:13.242955] [D] [thread 35157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:36:13.243049] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243082] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243161] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243183] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243203] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243223] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:13.243306] [D] [thread 35157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:36:13.243357] [D] [thread 35157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:13.243423] [D] [thread 35157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:36:13.243537] [D] [thread 35157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:36:13.243759] [D] [thread 35157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:36:13.243812] [D] [thread 35157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:36:13.243897] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244078] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244148] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244210] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244256] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244303] [D] [thread 35157] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:13.244355] [D] [thread 35157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:36:13.244417] [D] [thread 35157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:13.244466] [D] [thread 35157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:36:13.244524] [D] [thread 35157] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:36:13.248620] [D] [thread 35149] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[17:36:13.248720] [D] [thread 35149] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[17:36:13.248747] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:13.248774] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:36:13.248799] [D] [thread 35149] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[17:36:13.248813] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:13.248828] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:36:13.248846] [D] [thread 35149] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:36:13.248913] [D] [thread 35149] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:36:13.249048] [I] [thread 35149] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:13.249082] [D] [thread 35149] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:36:13.249104] [D] [thread 35149] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:36:13.249124] [D] [thread 35149] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[17:36:13.249140] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:13.249157] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:36:13.249177] [D] [thread 35149] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[17:36:13.249191] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:36:13.249206] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:36:13.249224] [D] [thread 35149] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[17:36:13.249323] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0][m
[36m[17:36:13.249374] [D] [thread 35149] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:36:13.249856] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[36m[17:36:13.249895] [D] [thread 35149] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:14.157400] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:15.158701] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:16.159895] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:17.161210] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:17.850029] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:17.850597] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:17.851323] [I] [thread 35161] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:17.854014] [I] [thread 35161] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:18.851895] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:19.853226] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:20.636325] [D] [thread 35149] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 33101
dataPort: 45291
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492622721
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:20.636552] [D] [thread 35149] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 33101
dataPort: 45291
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492622721
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:20.636620] [D] [thread 35149] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:36:20.637112] [D] [thread 35149] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:36:20.637166] [D] [thread 35149] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:36:20.637235] [D] [thread 35149] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[17:36:20.637374] [D] [thread 35149] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:36:20.637442] [I] [thread 35149] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:36:20.637555] [I] [thread 35149] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:20.637622] [D] [thread 35149] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[17:36:20.637707] [D] [thread 35149] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:36:20.638198] [D] [thread 35149] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[32m[17:36:20.638282] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:20.638312] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:36:20.638350] [D] [thread 35149] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:36:20.638367] [D] [thread 35149] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:36:20.638388] [D] [thread 35149] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:36:20.638894] [D] [thread 35149] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[17:36:20.673133] [D] [thread 35149] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:36:20.673230] [I] [thread 35149] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:20.673260] [D] [thread 35149] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:36:20.673328] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[17:36:20.673495] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:36:20.673531] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[17:36:20.673593] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:36:20.673617] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:36:20.673636] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:36:20.673673] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:36:20.673693] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[17:36:20.673711] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[17:36:20.673737] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[17:36:20.673775] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:20.673802] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:36:20.673839] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:36:20.673934] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:36:20.673963] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:36:20.674045] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:36:20.674075] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:36:20.674094] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:36:20.674112] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[17:36:20.674148] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[17:36:20.674169] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[17:36:20.674187] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[17:36:20.674210] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:36:20.674242] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:20.674265] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:36:20.674301] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:36:20.674392] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:36:20.674431] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:36:20.674469] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674490] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674508] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674526] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674544] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674563] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674581] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[17:36:20.674603] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:36:20.674623] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:20.674644] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:36:20.674680] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:36:20.674795] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:36:20.674829] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:36:20.674867] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.674890] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.674909] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.674927] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.674946] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.674986] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.675007] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:20.675032] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:36:20.675055] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:20.675091] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:36:20.675134] [D] [thread 35149] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:36:20.675256] [D] [thread 35149] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:36:20.675292] [D] [thread 35149] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:36:20.675335] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675357] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675376] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675394] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675413] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675431] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675449] [D] [thread 35149] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:20.675473] [D] [thread 35149] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:36:20.675495] [D] [thread 35149] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:20.675517] [D] [thread 35149] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:36:20.675534] [D] [thread 35149] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:36:20.681846] [D] [thread 35163] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 5
[m
[36m[17:36:20.681942] [D] [thread 35163] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[17:36:20.681966] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:20.681992] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:36:20.682015] [D] [thread 35163] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[17:36:20.682029] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:20.682042] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:36:20.682058] [D] [thread 35163] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:36:20.682121] [D] [thread 35163] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:36:20.682248] [I] [thread 35163] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:20.682281] [D] [thread 35163] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:36:20.682301] [D] [thread 35163] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:36:20.682337] [D] [thread 35163] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 5[m
[32m[17:36:20.682353] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:20.682369] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:36:20.682387] [D] [thread 35163] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[17:36:20.682400] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:36:20.682413] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:36:20.682429] [D] [thread 35163] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  5  exists[m
[32m[17:36:20.682571] [I] [thread 35163] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[36m[17:36:20.682621] [D] [thread 35163] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:36:20.683042] [D] [thread 35163] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[36m[17:36:20.683067] [D] [thread 35163] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:20.854505] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:21.855782] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:22.857050] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:23.629422] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:23.629810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:23.630363] [I] [thread 35165] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:23.632682] [I] [thread 35165] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:24.015539] [D] [thread 35163] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.39"
grpcPort: 44559
dataPort: 37871
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492601070
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:24.015750] [D] [thread 35163] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.39"
grpcPort: 44559
dataPort: 37871
numberOfSlots: 65535
registrationMetrics {
  totalMemoryBytes: 3977551872
  cpuCoreNum: 4
  totalCPUJiffies: 2492601070
  cpuPeriodUS: 100000
  cpuQuotaUS: -1
}
[m
[36m[17:36:24.015801] [D] [thread 35163] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:36:24.016189] [D] [thread 35163] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:36:24.016232] [D] [thread 35163] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:36:24.016283] [D] [thread 35163] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 11 and resources 65535[m
[36m[17:36:24.016389] [D] [thread 35163] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[17:36:24.016432] [I] [thread 35163] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:36:24.016508] [I] [thread 35163] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:24.016565] [D] [thread 35163] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 11[m
[36m[17:36:24.019243] [D] [thread 35163] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:36:24.019733] [D] [thread 35163] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[32m[17:36:24.019856] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:24.019880] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[17:36:24.019917] [D] [thread 35163] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:36:24.019927] [D] [thread 35163] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:36:24.019971] [D] [thread 35163] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:36:24.020413] [D] [thread 35163] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=11[m
[36m[17:36:24.056628] [D] [thread 35163] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 11
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream10"
  logicalSourceName: "debs"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "DiskMetric_ph"
  logicalSourceName: "DiskMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "MemoryMetric_ph"
  logicalSourceName: "MemoryMetric"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedCpuMetrics_ph"
  logicalSourceName: "WrappedCpuMetrics"
}
physicalSources {
  sourceType: "MONITORING_SOURCE"
  physicalSourceName: "WrappedNetworkMetrics_ph"
  logicalSourceName: "WrappedNetworkMetrics"
}
[m
[32m[17:36:24.056755] [I] [thread 35163] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:24.056797] [D] [thread 35163] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[17:36:24.056888] [D] [thread 35163] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= test_stream10 logical source= debs[m
[36m[17:36:24.057098] [D] [thread 35163] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:36:24.057148] [D] [thread 35163] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream10[m
[36m[17:36:24.057235] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=test_stream3[m
[36m[17:36:24.057269] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:36:24.057296] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:36:24.057321] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:36:24.057347] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[17:36:24.057374] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[17:36:24.057400] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=test_stream9[m
[36m[17:36:24.057436] [D] [thread 35163] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream10 does not exist, try to add[m
[36m[17:36:24.057497] [D] [thread 35163] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:24.057542] [D] [thread 35163] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[17:36:24.057607] [D] [thread 35163] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= DiskMetric_ph logical source= DiskMetric[m
[36m[17:36:24.057778] [D] [thread 35163] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() DiskMetric[m
[36m[17:36:24.057852] [D] [thread 35163] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source DiskMetric exists try to add physical source DiskMetric_ph[m
[36m[17:36:24.057914] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=DiskMetric_ph[m
[36m[17:36:24.057948] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=DiskMetric_ph[m
[36m[17:36:24.057976] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=DiskMetric_ph[m
[36m[17:36:24.058003] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=DiskMetric_ph[m
[36m[17:36:24.058030] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=DiskMetric_ph[m
[36m[17:36:24.058057] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=DiskMetric_ph[m
[36m[17:36:24.058084] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=DiskMetric_ph[m
[36m[17:36:24.058111] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=DiskMetric_ph[m
[36m[17:36:24.058147] [D] [thread 35163] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  DiskMetric_ph does not exist, try to add[m
[36m[17:36:24.058178] [D] [thread 35163] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:24.058234] [D] [thread 35163] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[17:36:24.058295] [D] [thread 35163] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= MemoryMetric_ph logical source= MemoryMetric[m
[36m[17:36:24.058446] [D] [thread 35163] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() MemoryMetric[m
[36m[17:36:24.058495] [D] [thread 35163] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source MemoryMetric exists try to add physical source MemoryMetric_ph[m
[36m[17:36:24.058591] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058627] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058655] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058683] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058711] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058738] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058765] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058793] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=MemoryMetric_ph[m
[36m[17:36:24.058829] [D] [thread 35163] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  MemoryMetric_ph does not exist, try to add[m
[36m[17:36:24.058863] [D] [thread 35163] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:24.058916] [D] [thread 35163] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[17:36:24.058981] [D] [thread 35163] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedCpuMetrics_ph logical source= WrappedCpuMetrics[m
[36m[17:36:24.059168] [D] [thread 35163] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedCpuMetrics[m
[36m[17:36:24.059223] [D] [thread 35163] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedCpuMetrics exists try to add physical source WrappedCpuMetrics_ph[m
[36m[17:36:24.059282] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059315] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059342] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059369] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059396] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059424] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059451] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059479] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedCpuMetrics_ph[m
[36m[17:36:24.059513] [D] [thread 35163] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedCpuMetrics_ph does not exist, try to add[m
[36m[17:36:24.059544] [D] [thread 35163] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:24.059594] [D] [thread 35163] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[17:36:24.059786] [D] [thread 35163] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 11 physical source= WrappedNetworkMetrics_ph logical source= WrappedNetworkMetrics[m
[36m[17:36:24.060038] [D] [thread 35163] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() WrappedNetworkMetrics[m
[36m[17:36:24.060101] [D] [thread 35163] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source WrappedNetworkMetrics exists try to add physical source WrappedNetworkMetrics_ph[m
[36m[17:36:24.060273] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=1 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060316] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=4 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060344] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060372] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060398] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060426] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060453] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060480] [D] [thread 35163] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=10 phyStr=WrappedNetworkMetrics_ph[m
[36m[17:36:24.060516] [D] [thread 35163] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  WrappedNetworkMetrics_ph does not exist, try to add[m
[36m[17:36:24.060547] [D] [thread 35163] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:36:24.060654] [D] [thread 35163] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=11 successful added[m
[36m[17:36:24.060693] [D] [thread 35163] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:36:24.065150] [D] [thread 35166] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 11
oldParent: 1
newParent: 5
[m
[36m[17:36:24.065233] [D] [thread 35166] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 11  parentId= 1[m
[32m[17:36:24.065264] [I] [thread 35166] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:24.065298] [D] [thread 35166] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[17:36:24.065331] [D] [thread 35166] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  11  exists[m
[32m[17:36:24.065350] [I] [thread 35166] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:24.065370] [D] [thread 35166] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:36:24.065393] [D] [thread 35166] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:36:24.065476] [D] [thread 35166] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:36:24.065643] [I] [thread 35166] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:36:24.065686] [D] [thread 35166] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:36:24.065714] [D] [thread 35166] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:36:24.065741] [D] [thread 35166] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 11  parentId= 5[m
[32m[17:36:24.065762] [I] [thread 35166] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:24.065785] [D] [thread 35166] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[36m[17:36:24.065810] [D] [thread 35166] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 11 exists[m
[32m[17:36:24.065829] [I] [thread 35166] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:36:24.065877] [D] [thread 35166] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:36:24.065903] [D] [thread 35166] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  5  exists[m
[32m[17:36:24.066040] [I] [thread 35166] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0][m
[36m[17:36:24.066122] [D] [thread 35166] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:36:24.066785] [D] [thread 35166] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=11, ip=192.168.2.39, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|  |  |--PhysicalNode[id=8, ip=192.168.2.36, resourceCapacity=65535, usedResource=0]
[m
[36m[17:36:24.066826] [D] [thread 35166] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:36:24.631239] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:25.632532] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:25.793656] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:25.794274] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:25.794803] [I] [thread 35167] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:36:25.797946] [I] [thread 35167] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:36:26.795610] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:27.257598] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:27.258196] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:27.457912] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:27.458276] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:27.459719] [D] [thread 35171] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceMst.out", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[17:36:27.459820] [I] [thread 35171] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[17:36:27.459836] [I] [thread 35171] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[17:36:27.459871] [D] [thread 35171] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[17:36:27.459981] [D] [thread 35171] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "WrappedNetworkMetrics"[m
[36m[17:36:27.460030] [D] [thread 35171] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceMst.out", true));[m
[36m[17:36:27.460053] [D] [thread 35171] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("WrappedNetworkMetrics").window(TumblingWindow::of(EventTime(Attribute("timestamp")), Seconds(1))).byKey(Attribute("node_id")).apply(Avg(Attribute("tBytes"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpWithMonitoringSourceMst.out", true));
}
}
[m
[36m[17:36:27.460904] [D] [thread 35172] [File.cpp:27] [createFile] Create File to file:///tmp/query_26-10-2023_17-36-27_3053812.cpp[m
[36m[17:36:27.461298] [D] [thread 35172] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[17:36:27.461350] [D] [thread 35172] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[17:36:27.461559] [D] [thread 35172] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_26-10-2023_17-36-27_3053812.so -DFMT_HEADER_ONLY /tmp/query_26-10-2023_17-36-27_3053812.cpp'[m
[36m[17:36:28.459513] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:29.460745] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:30.320464] [I] [thread 35172] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2859.612399ms[m
[36m[17:36:30.320994] [D] [thread 35171] [Query.cpp:231] [from] Query: create new Query with source WrappedNetworkMetrics[m
[36m[17:36:30.321045] [D] [thread 35171] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  WrappedNetworkMetrics[m
[32m[17:36:30.321293] [I] [thread 35171] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.322413] [D] [thread 35171] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[17:36:30.322909] [D] [thread 35171] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[17:36:30.323260] [I] [thread 35171] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.323404] [D] [thread 35171] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[17:36:30.323587] [D] [thread 35171] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.323618] [D] [thread 35171] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.324069] [I] [thread 35171] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:36:30.324349] [D] [thread 35171] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Avg;) as new root of the plan.[m
[36m[17:36:30.324500] [D] [thread 35171] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.324518] [D] [thread 35171] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.324729] [D] [thread 35171] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[17:36:30.324845] [I] [thread 35171] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[17:36:30.324950] [D] [thread 35171] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[17:36:30.325075] [D] [thread 35171] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.325093] [D] [thread 35171] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.326015] [D] [thread 35171] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.326221] [D] [thread 35171] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.326363] [D] [thread 35171] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.326541] [D] [thread 35171] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.326587] [D] [thread 35171] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.326616] [D] [thread 35171] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.326717] [D] [thread 35171] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:36:30.326766] [D] [thread 35171] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.326798] [D] [thread 35171] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.326821] [D] [thread 35171] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.327478] [D] [thread 35171] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source WrappedNetworkMetrics with schema: WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.327516] [D] [thread 35171] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.327633] [D] [thread 35171] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.328721] [D] [thread 35171] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.329418] [D] [thread 35171] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[17:36:30.329934] [I] [thread 35171] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[17:36:30.330638] [I] [thread 35171] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[17:36:30.330717] [I] [thread 35171] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[17:36:30.330776] [I] [thread 35120] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[17:36:30.330896] [I] [thread 35120] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[17:36:30.330935] [I] [thread 35120] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[17:36:30.331203] [I] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[17:36:30.331373] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[17:36:30.331409] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.331533] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.331582] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.331638] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.331684] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.332756] [D] [thread 35120] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.333486] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.333568] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[17:36:30.333595] [D] [thread 35120] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[17:36:30.333856] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[17:36:30.333912] [I] [thread 35120] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:36:30.334161] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:36:30.334587] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:36:30.334916] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:36:30.335139] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.335413] [D] [thread 35120] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[17:36:30.335740] [D] [thread 35120] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.336004] [D] [thread 35120] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[17:36:30.336163] [I] [thread 35120] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.336330] [D] [thread 35120] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[17:36:30.336360] [I] [thread 35120] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:36:30.336472] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:36:30.336639] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:36:30.336882] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:36:30.337089] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.337319] [D] [thread 35120] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[17:36:30.337542] [I] [thread 35120] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.337609] [D] [thread 35120] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[17:36:30.337623] [I] [thread 35120] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:36:30.337704] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:36:30.337838] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:36:30.338023] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:36:30.338205] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.338412] [D] [thread 35120] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[17:36:30.338558] [I] [thread 35120] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[32m[17:36:30.338705] [I] [thread 35120] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.338844] [D] [thread 35120] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[17:36:30.338972] [D] [thread 35120] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.339070] [D] [thread 35120] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.339230] [D] [thread 35120] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[17:36:30.339351] [D] [thread 35120] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.339450] [D] [thread 35120] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.339588] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.339652] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.339691] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.339749] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.339788] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.340618] [D] [thread 35120] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.341067] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[17:36:30.341141] [I] [thread 35120] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[17:36:30.341312] [I] [thread 35120] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(2)
      SOURCE(1,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, ))
[m
[36m[17:36:30.341342] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.341396] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.341432] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[17:36:30.342050] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.342137] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.342234] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.342256] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.342289] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.342496] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.342966] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.343040] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.343114] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.343131] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.343161] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.343331] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.343599] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.343668] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.343740] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.343756] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.343808] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.344059] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.344409] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.344477] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.344543] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.344559] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.344588] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.344812] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.345079] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.345139] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.345197] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.345211] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.345253] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.345406] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.345650] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.345707] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.345763] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.345778] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.345801] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.345940] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.346170] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.346225] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.346286] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.346301] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.346325] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.346475] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.346761] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.346825] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.346887] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.346902] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.346928] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.347077] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:36:30.347341] [I] [thread 35120] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:36:30.347400] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:36:30.347460] [D] [thread 35120] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:36:30.347475] [D] [thread 35120] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:36:30.347510] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:36:30.347666] [D] [thread 35120] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[17:36:30.348298] [D] [thread 35120] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[32m[17:36:30.348414] [I] [thread 35120] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[17:36:30.348687] [D] [thread 35120] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.349002] [D] [thread 35120] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[17:36:30.349312] [D] [thread 35120] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.349371] [D] [thread 35120] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[17:36:30.349628] [D] [thread 35120] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Avg;)
    WATERMARKASSIGNER(6)
      SOURCE(5,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.349980] [D] [thread 35120] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[17:36:30.350049] [D] [thread 35120] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[17:36:30.350095] [D] [thread 35120] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.350218] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:30.350244] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[17:36:30.350276] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:36:30.350287] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[17:36:30.350647] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:36:30.350689] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[17:36:30.350856] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:36:30.350885] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[17:36:30.351000] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:30.351016] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[17:36:30.351102] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:30.351117] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[17:36:30.351191] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:30.351213] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[17:36:30.351281] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:30.351294] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[17:36:30.351366] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:30.351380] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[17:36:30.351864] [I] [thread 35120] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:36:30.351965] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.351983] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.351993] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352003] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352012] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352021] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352030] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352039] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352047] [I] [thread 35120] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:30.352057] [I] [thread 35120] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:30.352069] [I] [thread 35120] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:36:30.352077] [I] [thread 35120] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:36:30.352223] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[17:36:30.352475] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(23) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.352694] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[17:36:30.352816] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.352947] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[17:36:30.353041] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.353218] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[17:36:30.353343] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.353509] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[17:36:30.353626] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(27) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.353789] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[17:36:30.353901] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(28) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.354077] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[17:36:30.354192] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(29) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[32m[17:36:30.354371] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[17:36:30.354498] [D] [thread 35120] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(30) old node=WINDOW AGGREGATION(OP-3, Avg;)[m
[36m[17:36:30.354961] [D] [thread 35120] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.355347] [D] [thread 35120] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.355592] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.355705] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.355779] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[17:36:30.355841] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.355878] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.356611] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.356911] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.357028] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.357679] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.357940] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.358048] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.358652] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.358903] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.359010] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.359619] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.359865] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.359999] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.360615] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.360883] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.360994] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.361599] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.361860] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.361966] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.362624] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.362883] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.362993] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.363614] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.363859] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.364032] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.364214] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.365099] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[17:36:30.365151] [D] [thread 35120] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[17:36:30.365520] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[17:36:30.365630] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[17:36:30.365650] [D] [thread 35120] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[17:36:30.365706] [I] [thread 35120] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[17:36:30.365747] [I] [thread 35120] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:36:30.365858] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:36:30.366014] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[17:36:30.366325] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[17:36:30.366560] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[17:36:30.366732] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[17:36:30.366911] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[32m[17:36:30.367090] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[32m[17:36:30.367268] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[32m[17:36:30.367453] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[32m[17:36:30.367686] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[17:36:30.367858] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[17:36:30.368032] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[17:36:30.368174] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[17:36:30.368309] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[17:36:30.368438] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[17:36:30.368571] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[17:36:30.368733] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[17:36:30.368889] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[17:36:30.369091] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[17:36:30.369253] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[17:36:30.369418] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[17:36:30.369608] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[17:36:30.369781] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[17:36:30.369938] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[17:36:30.370102] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[17:36:30.370743] [D] [thread 35120] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[17:36:30.370803] [D] [thread 35120] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[17:36:30.370861] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.370904] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.370926] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.370957] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.370977] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.370997] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371018] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371038] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371058] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371078] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371098] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371126] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371147] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371168] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371188] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371209] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371229] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371250] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371261] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371287] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371298] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371329] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371350] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371372] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371383] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371399] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371411] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371431] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371443] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371483] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371498] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.371515] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.371526] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.372881] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[17:36:30.372921] [D] [thread 35120] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[17:36:30.372992] [D] [thread 35120] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[17:36:30.373012] [D] [thread 35120] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[17:36:30.373020] [D] [thread 35120] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[17:36:30.373029] [D] [thread 35120] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[17:36:30.373055] [I] [thread 35120] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[17:36:30.373679] [D] [thread 35120] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.373734] [D] [thread 35120] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[17:36:30.373750] [D] [thread 35120] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[17:36:30.373808] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373850] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373871] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373891] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373911] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373930] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373950] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.373983] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374004] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374025] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374045] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374065] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374085] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374105] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374126] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374157] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374178] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374199] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374210] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374241] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374256] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374281] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374293] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374318] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374329] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374346] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374358] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374379] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374390] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374407] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374418] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374434] [D] [thread 35120] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:36:30.374445] [D] [thread 35120] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:36:30.374665] [D] [thread 35120] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[17:36:30.374712] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:36:30.374732] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[17:36:30.374809] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:36:30.374821] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[32m[17:36:30.374855] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:36:30.374867] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[17:36:30.374889] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:36:30.374899] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[17:36:30.374916] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:36:30.374937] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[17:36:30.374956] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:36:30.374967] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[17:36:30.374984] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 11[m
[36m[17:36:30.374994] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 11[m
[32m[17:36:30.375012] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:36:30.375022] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[17:36:30.375041] [I] [thread 35120] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:36:30.375052] [D] [thread 35120] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[17:36:30.375120] [I] [thread 35120] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[17:36:30.375338] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.375494] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.375601] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.375683] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.375761] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.375969] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.376054] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376123] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376222] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376322] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376474] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.376526] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376581] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376649] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376766] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.376816] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376894] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.376961] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377023] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377126] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.377173] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377227] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377289] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377413] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.377465] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377519] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377580] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377675] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.377721] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377775] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377858] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.377968] [D] [thread 35120] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:36:30.378016] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.378068] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.378129] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.378188] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[17:36:30.378241] [I] [thread 35120] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 8 sub-graphs to create a single sub-graph[m
[36m[17:36:30.378251] [D] [thread 35120] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[17:36:30.378718] [D] [thread 35120] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[17:36:30.378735] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.378800] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.378813] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.378840] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:36:30.378918] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.378994] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379062] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379099] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379161] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379173] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.379193] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:36:30.379243] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[33m[1m[17:36:30.379303] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.379319] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379328] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:36:30.379345] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[17:36:30.379366] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.379379] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379422] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379433] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.379451] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:36:30.379490] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[17:36:30.379511] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.379535] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379579] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379591] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.379605] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:36:30.379654] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379703] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379713] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:36:30.379731] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[17:36:30.379751] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.379764] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379822] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.379837] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.379856] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:36:30.379896] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.379911] [D] [thread 35120] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:36:30.379992] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:36:30.380011] [D] [thread 35120] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:36:30.380030] [D] [thread 35120] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:36:30.380074] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[33m[1m[17:36:30.380097] [W] [thread 35120] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:36:30.380171] [D] [thread 35120] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[17:36:30.380183] [D] [thread 35120] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[17:36:30.380190] [D] [thread 35120] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[17:36:30.380197] [D] [thread 35120] [Node.cpp:432] [getAllRootNodes] Node: Inserting root node to the collection[m
[36m[17:36:30.380214] [D] [thread 35120] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[17:36:30.380221] [D] [thread 35120] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[17:36:30.380242] [D] [thread 35120] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[17:36:30.380415] [D] [thread 35120] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[17:36:30.380483] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.380547] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.380580] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.380635] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[17:36:30.380650] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.380718] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(23)[m
[36m[17:36:30.380733] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.380784] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.380803] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.380820] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.380929] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.380966] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.380987] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.381194] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.381249] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.381284] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.381301] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.381336] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[17:36:30.381350] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.381401] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[17:36:30.381415] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.381449] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.381462] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.381474] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.381567] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.381588] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.381605] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.381778] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.381825] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.381860] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.381886] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.381920] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[17:36:30.381934] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.381980] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[17:36:30.381994] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.382027] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.382050] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.382062] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.382157] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.382179] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.382189] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.382359] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.382401] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.382434] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.382451] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.382483] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[17:36:30.382497] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.382543] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[17:36:30.382557] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.382589] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.382602] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.382613] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.382704] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.382724] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.382734] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.382901] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.382940] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.382972] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.382988] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383020] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(18)[m
[36m[17:36:30.383046] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383092] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(27)[m
[36m[17:36:30.383107] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383140] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.383153] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.383164] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.383256] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.383278] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.383289] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.383458] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.383499] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.383532] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.383547] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383579] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[17:36:30.383593] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383635] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(28)[m
[36m[17:36:30.383650] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.383683] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.383696] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.383707] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.383807] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.383829] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.383839] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.384050] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.384102] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.384146] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.384164] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.384208] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(22)[m
[36m[17:36:30.384223] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.384279] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(29)[m
[36m[17:36:30.384302] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.384337] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.384411] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.384425] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.384524] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.384548] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.384568] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.384753] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.384799] [D] [thread 35120] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) placement.[m
[36m[17:36:30.384839] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))[m
[36m[17:36:30.384856] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.384892] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[17:36:30.384906] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.384954] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(30)[m
[36m[17:36:30.384968] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.385003] [D] [thread 35120] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[17:36:30.385016] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.385028] [D] [thread 35120] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:36:30.385119] [D] [thread 35120] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:36:30.385141] [D] [thread 35120] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:36:30.385156] [D] [thread 35120] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:36:30.385326] [D] [thread 35120] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:36:30.385340] [D] [thread 35120] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.385351] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.385401] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.385437] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.385660] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 5[m
[36m[17:36:30.385682] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.385712] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.385905] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[17:36:30.386087] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.386106] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.386114] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.386142] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.386154] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.386287] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.386372] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.386409] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:36:30.386421] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:36:30.386511] [D] [thread 35120] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[17:36:30.386688] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.386711] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.386738] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:36:30.386759] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.386817] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.386895] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.386913] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.386973] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.386985] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.387020] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 5[m
[36m[17:36:30.387032] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.387047] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.387092] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.387105] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.387141] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.387153] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.387220] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.387237] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.387267] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.387360] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[17:36:30.387541] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.387561] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.387577] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[17:36:30.387586] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[17:36:30.387751] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.387817] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.387833] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.387871] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.387889] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.387904] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:36:30.387913] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:36:30.388055] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:36:30.388132] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.388152] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.388168] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:36:30.388188] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.388242] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.388318] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.388338] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.388389] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.388400] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.388429] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(23) on execution node with id 5[m
[36m[17:36:30.388440] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.388451] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.388485] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.388511] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.388543] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.388555] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.388593] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.388603] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.388620] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.388700] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[17:36:30.388889] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.388908] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.388928] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[17:36:30.388938] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[17:36:30.389036] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[17:36:30.389079] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.389094] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.389128] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.389149] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.389164] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:36:30.389172] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:36:30.389225] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:36:30.389262] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.389279] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.389293] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:36:30.389311] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.389355] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.389418] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.389439] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.389447] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.389460] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.389468] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.389518] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.389537] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.389619] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 4[m
[36m[17:36:30.389633] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.389650] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.389738] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[17:36:30.389895] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.389911] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.389919] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.389946] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.389957] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.390006] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.390036] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.390050] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:36:30.390059] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:36:30.390109] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[17:36:30.390185] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.390203] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.390217] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[17:36:30.390234] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.390277] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.390335] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.390351] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.390398] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.390410] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.390435] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 4[m
[36m[17:36:30.390446] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.390457] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.390479] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.390502] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.390528] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.390539] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.390586] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.390596] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.390612] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.390673] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[17:36:30.390825] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.390844] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.390856] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[17:36:30.390865] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[17:36:30.390974] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.391018] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.391032] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.391061] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.391077] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.391091] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:36:30.391100] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:36:30.391148] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[17:36:30.391188] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.391205] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.391220] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[17:36:30.391238] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.391280] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.391334] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.391351] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.391395] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.391414] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.391441] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 4[m
[36m[17:36:30.391451] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.391461] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.391485] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.391505] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.391526] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.391544] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.391581] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.391591] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.391606] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.391665] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[17:36:30.391828] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.391847] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.391859] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[17:36:30.391868] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[17:36:30.391993] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[17:36:30.392040] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.392054] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.392088] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.392104] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.392117] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:36:30.392126] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:36:30.392189] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[17:36:30.392227] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.392244] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.392258] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[17:36:30.392277] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.392321] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.392385] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.392406] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.392415] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.392428] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.392435] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.392484] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.392502] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.392596] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 7[m
[36m[17:36:30.392610] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.392620] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.392734] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[17:36:30.392927] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.392946] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.392954] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.392976] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.392986] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.393034] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:36:30.393060] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.393074] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:36:30.393083] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:36:30.393130] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[17:36:30.393191] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.393277] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.393293] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:36:30.393342] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.393398] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.393467] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.393484] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.393534] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.393546] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:36:30.393575] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[17:36:30.393586] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.393609] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.393631] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.393641] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.393674] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.393685] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.393735] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.393745] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.393764] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.393832] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[17:36:30.393999] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.394019] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.394031] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[17:36:30.394041] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[17:36:30.394155] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.394202] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.394217] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.394251] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:36:30.394267] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.394282] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:36:30.394291] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:36:30.394343] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[17:36:30.394379] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.394396] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.394411] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:36:30.394430] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.394478] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.394535] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.394553] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.394600] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.394611] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:36:30.394638] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 7[m
[36m[17:36:30.394648] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.394659] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.394677] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.394707] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.394732] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.394743] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.394784] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.394794] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.394812] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.394875] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[17:36:30.395047] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.395068] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.395079] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[17:36:30.395100] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[17:36:30.395198] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[17:36:30.395237] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.395252] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.395285] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:36:30.395302] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.395322] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:36:30.395332] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:36:30.395383] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[17:36:30.395422] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.395438] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.395453] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:36:30.395472] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.395515] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.395591] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.395614] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.395622] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.395635] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.395651] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.395703] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.395720] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.395803] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 6[m
[36m[17:36:30.395817] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.395827] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.395919] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[17:36:30.396128] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.396150] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.396158] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.396179] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.396202] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.396254] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:36:30.396282] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.396297] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:36:30.396306] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:36:30.396356] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[17:36:30.396400] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.396423] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.396438] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:36:30.396454] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.396499] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.396560] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.396577] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.396632] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.396643] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:36:30.396670] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 6[m
[36m[17:36:30.396681] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.396691] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.396711] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.396723] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.396751] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.396761] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.396807] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.396817] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.396833] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.396933] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[17:36:30.397101] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.397123] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.397136] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[17:36:30.397145] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[17:36:30.397258] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.397318] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.397338] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.397373] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:36:30.397388] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.397405] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:36:30.397415] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:36:30.397466] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[17:36:30.397505] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.397521] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.397535] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:36:30.397554] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.397605] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.397664] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.397691] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.397739] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.397751] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:36:30.397778] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 6[m
[36m[17:36:30.397796] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.397807] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.397825] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.397844] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.397867] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.397877] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.397916] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.397926] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.397942] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.398018] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[17:36:30.398225] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.398252] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.398265] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[17:36:30.398274] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[17:36:30.398388] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[17:36:30.398433] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.398450] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.398494] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:36:30.398512] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.398527] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:36:30.398551] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:36:30.398615] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[17:36:30.398666] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.398686] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.398702] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:36:30.398724] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.398784] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.398940] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.398976] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.398988] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.399003] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.399011] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.399079] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.399103] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.399218] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 9[m
[36m[17:36:30.399235] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.399249] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.399366] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[17:36:30.399574] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.399597] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.399605] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.399633] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.399646] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.399711] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:36:30.399749] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.399766] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:36:30.399775] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:36:30.399837] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[17:36:30.399889] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.399909] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.399936] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:36:30.399991] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.400053] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.400131] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.400151] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.400203] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.400215] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:36:30.400245] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(18) on execution node with id 9[m
[36m[17:36:30.400256] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.400268] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.400294] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.400311] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.400343] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.400354] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.400406] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.400416] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.400435] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.400536] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[17:36:30.400707] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.400726] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.400738] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[17:36:30.400747] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[17:36:30.400862] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.400909] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.400923] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.400957] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:36:30.400974] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.400988] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:36:30.400997] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:36:30.401054] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[17:36:30.401094] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.401111] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.401125] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:36:30.401143] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.401188] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.401246] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.401263] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.401310] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.401321] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:36:30.401363] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(27) on execution node with id 9[m
[36m[17:36:30.401374] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.401385] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.401403] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.401424] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.401446] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.401457] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.401494] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.401503] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.401518] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.401618] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[17:36:30.401798] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.401817] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.401829] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[17:36:30.401838] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[17:36:30.401929] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(18) as root operator.[m
[36m[17:36:30.401970] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.401985] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.402019] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:36:30.402034] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.402047] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:36:30.402057] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:36:30.402105] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[17:36:30.402141] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.402170] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.402186] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:36:30.402205] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.402247] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.402311] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.402341] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.402351] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.402364] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.402372] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.402423] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.402439] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.402522] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 8[m
[36m[17:36:30.402536] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.402546] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.402643] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[17:36:30.402800] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.402816] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.402824] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.402846] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.402856] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.402904] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:36:30.402929] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.402942] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:36:30.402951] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:36:30.402999] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[17:36:30.403045] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.403067] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.403081] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:36:30.403099] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.403143] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.403201] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.403218] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.403265] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.403276] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:36:30.403303] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 8[m
[36m[17:36:30.403314] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.403324] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.403344] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.403355] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.403381] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.403392] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.403438] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.403449] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.403465] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.403526] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[17:36:30.403682] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.403702] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.403714] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[17:36:30.403728] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[17:36:30.403840] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.403885] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.403899] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.403931] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:36:30.403979] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.403995] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:36:30.404004] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:36:30.404057] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[17:36:30.404097] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.404124] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.404139] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:36:30.404158] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.404209] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.404270] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.404292] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.404340] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.404352] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:36:30.404379] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(28) on execution node with id 8[m
[36m[17:36:30.404389] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.404400] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.404418] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.404438] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.404460] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.404471] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.404505] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.404525] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.404543] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.404607] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[17:36:30.404772] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.404791] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.404802] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[17:36:30.404811] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[17:36:30.404903] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[17:36:30.404942] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.404956] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.404986] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:36:30.405000] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.405012] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:36:30.405021] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:36:30.405070] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[17:36:30.405106] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.405121] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.405135] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:36:30.405153] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.405193] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.405252] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.405279] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.405289] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.405302] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.405310] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.405358] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.405377] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.405474] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 11[m
[36m[17:36:30.405488] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.405499] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.405616] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[17:36:30.405772] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.405787] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.405795] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.405816] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.405826] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.405873] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[17:36:30.405906] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.405923] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[17:36:30.405933] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[17:36:30.405982] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 11 to the query Id 1[m
[36m[17:36:30.406031] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.406049] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.406063] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[17:36:30.406080] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.406123] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.406184] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.406202] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.406250] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.406261] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[17:36:30.406288] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(22) on execution node with id 11[m
[36m[17:36:30.406299] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.406309] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.406328] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.406350] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.406379] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.406390] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.406446] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.406461] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.406478] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.406540] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[17:36:30.406681] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.406700] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.406712] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[17:36:30.406721] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[17:36:30.406830] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.406876] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.406891] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.406922] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[17:36:30.406938] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.406951] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[17:36:30.406961] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[17:36:30.407010] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[17:36:30.407047] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.407062] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.407075] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[17:36:30.407094] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.407147] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.407205] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.407228] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.407274] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.407286] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[17:36:30.407312] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(29) on execution node with id 11[m
[36m[17:36:30.407322] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.407332] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.407350] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.407369] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.407390] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.407401] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.407435] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.407449] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.407466] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.407526] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[17:36:30.407686] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.407706] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.407718] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[17:36:30.407727] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[17:36:30.407826] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(22) as root operator.[m
[36m[17:36:30.407862] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.407876] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.407906] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  11[m
[36m[17:36:30.407921] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.407934] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 11 already scheduled[m
[36m[17:36:30.407978] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 11 to the query Id index.[m
[36m[17:36:30.408038] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 11 already mapped to the query Id 1[m
[36m[17:36:30.408081] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.408098] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.408112] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 11[m
[36m[17:36:30.408131] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.408176] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.408256] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:36:30.408286] [W] [thread 35120] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:36:30.408296] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.408309] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.408317] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.408371] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.408389] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.408477] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) on execution node with id 10[m
[36m[17:36:30.408491] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.408512] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.408607] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[17:36:30.408769] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as new root of the plan.[m
[36m[17:36:30.408786] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.408793] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.408815] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.408826] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.408892] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:36:30.408923] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.408939] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:36:30.408957] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:36:30.409010] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[17:36:30.409060] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.409077] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.409091] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:36:30.409109] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.409198] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.409271] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.409288] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.409343] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.409354] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:36:30.409382] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 10[m
[36m[17:36:30.409393] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.409404] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.409425] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.409437] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.409467] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.409477] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.409525] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.409535] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.409551] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.409616] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[17:36:30.409770] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.409789] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.409801] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[17:36:30.409810] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[17:36:30.409919] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)) as root operator.[m
[36m[17:36:30.409983] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.410000] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.410032] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:36:30.410048] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.410070] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:36:30.410080] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:36:30.410130] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[17:36:30.410167] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.410183] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.410196] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:36:30.410215] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.410258] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.410316] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:36:30.410334] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.410382] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.410393] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:36:30.410421] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(30) on execution node with id 10[m
[36m[17:36:30.410432] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.410442] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.410472] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.410492] [D] [thread 35120] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:36:30.410514] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.410525] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.410558] [D] [thread 35120] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:36:30.410578] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.410595] [D] [thread 35120] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:36:30.410657] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[17:36:30.410820] [D] [thread 35120] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:36:30.410839] [D] [thread 35120] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:36:30.410852] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[17:36:30.410861] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[17:36:30.410948] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[17:36:30.410993] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.411007] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.411038] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:36:30.411053] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.411066] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:36:30.411075] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:36:30.411132] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[17:36:30.411247] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.411266] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.411281] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:36:30.411301] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.411347] [D] [thread 35120] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:36:30.411428] [D] [thread 35120] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:36:30.411461] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.411549] [D] [thread 35120] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[17:36:30.411563] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:36:30.411574] [W] [thread 35120] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:36:30.411664] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[17:36:30.411839] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[17:36:30.411857] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.411865] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.411886] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.411897] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.411985] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:36:30.412018] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.412033] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[17:36:30.412042] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[17:36:30.412099] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[17:36:30.412149] [D] [thread 35120] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:36:30.412166] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:36:30.412180] [I] [thread 35120] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[17:36:30.412198] [D] [thread 35120] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:36:30.412221] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.412238] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.412247] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.412255] [D] [thread 35120] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:36:30.412271] [D] [thread 35120] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[17:36:30.412315] [I] [thread 35120] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[17:36:30.412336] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.412396] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[17:36:30.412438] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.412467] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[17:36:30.412478] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[17:36:30.412511] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.412658] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.412684] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.412704] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[17:36:30.412751] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.412822] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.412837] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.412863] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.412874] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.412881] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.413000] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.413076] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.413088] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.413107] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.413122] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.413149] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[17:36:30.413161] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[17:36:30.413304] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[17:36:30.413492] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(23) as root operator.[m
[36m[17:36:30.413570] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[17:36:30.413863] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[17:36:30.413975] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::31::0::0}) as new root of the plan.[m
[36m[17:36:30.413992] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.414000] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.414085] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[17:36:30.414151] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.414263] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.414275] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.414300] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.414313] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.414367] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.414398] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.414414] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.414423] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.414479] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[17:36:30.414531] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.414543] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.414565] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[17:36:30.414579] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.414611] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.414627] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.414680] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.414692] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.414716] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.414729] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.414825] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[17:36:30.414868] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.414881] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.415018] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.415034] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.415044] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.415053] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.415075] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:36:30.415104] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.415145] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[17:36:30.415180] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.415207] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[17:36:30.415218] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[17:36:30.415234] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.415348] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.415390] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.415422] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.415459] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.415543] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.415560] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.415586] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.415598] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.415604] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.415691] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.415757] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.415769] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.415784] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.415798] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.415838] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[17:36:30.415851] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[17:36:30.415915] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[17:36:30.416110] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[17:36:30.416216] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.416263] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.416274] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[17:36:30.416398] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[17:36:30.416472] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::37::0::0}) as new root of the plan.[m
[36m[17:36:30.416485] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.416492] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.416564] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[17:36:30.416624] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.416725] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.416736] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.416757] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.416773] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.416841] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.416859] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.416873] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.416882] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.416940] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[17:36:30.416968] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.416980] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.416989] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[17:36:30.416997] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.417041] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.417058] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.417105] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.417116] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.417129] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.417139] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.417255] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[17:36:30.417297] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.417311] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.417447] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.417464] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.417474] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.417483] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.417497] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[17:36:30.417521] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.417562] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[17:36:30.417596] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.417623] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[17:36:30.417634] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[17:36:30.417649] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.417761] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.417807] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.417858] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[17:36:30.417897] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.417960] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.417974] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.418000] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.418012] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.418018] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.418088] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.418163] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.418174] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:36:30.418189] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.418203] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.418227] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[17:36:30.418239] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[17:36:30.418303] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[17:36:30.418445] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[17:36:30.418509] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[17:36:30.418669] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[17:36:30.418745] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.35:38259 1::43::0::0}) as new root of the plan.[m
[36m[17:36:30.418758] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.418777] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.418846] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[17:36:30.418907] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.419010] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.419021] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.419042] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.419064] [D] [thread 35120] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:36:30.419115] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:36:30.419144] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.419159] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[17:36:30.419169] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[17:36:30.419223] [D] [thread 35120] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[17:36:30.419272] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:36:30.419283] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:36:30.419293] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[17:36:30.419302] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.419358] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:36:30.419382] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.419448] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.419463] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.419477] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.419488] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.419579] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[17:36:30.419620] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.419633] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.419774] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:36:30.419791] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:36:30.419802] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[17:36:30.419810] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.419843] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:36:30.419872] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.419913] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[17:36:30.419981] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.420018] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[17:36:30.420030] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[17:36:30.420053] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.420169] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.420218] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.420257] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[17:36:30.420294] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.420357] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.420371] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.420397] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.420408] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.420415] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.420485] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.420551] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.420562] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:36:30.420577] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.420591] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.420624] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[17:36:30.420636] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[17:36:30.420702] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[17:36:30.420847] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[17:36:30.420915] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:36:30.420966] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:36:30.420980] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[17:36:30.421103] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[17:36:30.421176] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.34:40101 1::49::0::0}) as new root of the plan.[m
[36m[17:36:30.421189] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.421196] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.421263] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[17:36:30.421328] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.421445] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.421462] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.421485] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.421501] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.421544] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:36:30.421559] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.421573] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[17:36:30.421582] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[17:36:30.421641] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[17:36:30.421669] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:36:30.421681] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:36:30.421700] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[17:36:30.421708] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.421742] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:36:30.421757] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.421806] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.421817] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.421831] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.421841] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.421962] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[17:36:30.422005] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.422019] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.422159] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:36:30.422176] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:36:30.422187] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[17:36:30.422195] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.422209] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[17:36:30.422234] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.422284] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[17:36:30.422320] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.422347] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[17:36:30.422358] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[36m[17:36:30.422384] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.422501] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.422552] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.422592] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[17:36:30.422631] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.422714] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.422730] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.422763] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.422775] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.422799] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.422811] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.422817] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.422891] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.422956] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.422973] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:36:30.422989] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.423002] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.423028] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[17:36:30.423040] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[32m[17:36:30.423104] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[17:36:30.423242] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(27) as root operator.[m
[36m[17:36:30.423311] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.423361] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.423373] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[17:36:30.423498] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[17:36:30.423571] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.37:33073 1::55::0::0}) as new root of the plan.[m
[36m[17:36:30.423583] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.423590] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.423655] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[17:36:30.423724] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.10:33527)}) as new root of the plan.[m
[36m[17:36:30.423827] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.423839] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.423861] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.423875] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.423916] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.423931] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.423978] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:36:30.423993] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:36:30.424056] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[17:36:30.424087] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:36:30.424099] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:36:30.424109] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[17:36:30.424117] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.424149] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.424167] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.424223] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.424234] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[17:36:30.424388] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[17:36:30.424476] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::58::0::0}) as new root of the plan.[m
[36m[17:36:30.424490] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.424497] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.424579] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[17:36:30.424644] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(63: {NetworkSinkDescriptor(partition=1::61::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.424752] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.424763] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.424788] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.424818] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.424860] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.424875] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.424888] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.424897] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.424947] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[17:36:30.424973] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.424984] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.424994] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[17:36:30.425001] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.425016] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[17:36:30.425028] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.425072] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.425083] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.425096] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.425105] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.425186] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[17:36:30.425223] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.425236] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.425380] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.425395] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.425417] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.425426] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.425440] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[17:36:30.425467] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.425508] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[17:36:30.425552] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.425580] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[17:36:30.425591] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[36m[17:36:30.425608] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.425720] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.425774] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.425816] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[17:36:30.425855] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.425926] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.425940] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.425973] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.425985] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.426009] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.426020] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.426026] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.426101] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.426165] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.426177] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:36:30.426191] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.426205] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.426229] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[17:36:30.426241] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[32m[17:36:30.426304] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[17:36:30.426441] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(28) as root operator.[m
[36m[17:36:30.426504] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.426544] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.426567] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[17:36:30.426717] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[36m[17:36:30.426793] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.36:36431 1::64::0::0}) as new root of the plan.[m
[36m[17:36:30.426805] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.426812] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.426883] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[17:36:30.426943] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(69: {NetworkSinkDescriptor(partition=1::67::0::0;nodeLocation=tcp://192.168.2.10:33527)}) as new root of the plan.[m
[36m[17:36:30.427045] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.427056] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.427080] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.427095] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.427135] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.427151] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.427165] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:36:30.427174] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:36:30.427229] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[17:36:30.427258] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:36:30.427269] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:36:30.427278] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[17:36:30.427286] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.427320] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:36:30.427336] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.427381] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.427392] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[17:36:30.427497] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[17:36:30.427567] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::67::0::0}) as new root of the plan.[m
[36m[17:36:30.427579] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.427597] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.427676] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[17:36:30.427738] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.427844] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.427855] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.427877] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.427891] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.427928] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.427981] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.428000] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.428010] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.428070] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[17:36:30.428157] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:36:30.428171] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:36:30.428181] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[17:36:30.428189] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.428207] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[17:36:30.428219] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.428274] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.428285] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.428298] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.428309] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.428434] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[17:36:30.428481] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.428496] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.428664] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.428695] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.428708] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.428716] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.428731] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[17:36:30.428760] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.428802] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[17:36:30.428838] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.428865] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[17:36:30.428876] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[36m[17:36:30.428902] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.429019] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.429076] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.429118] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[17:36:30.429159] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.429230] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.429245] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.429277] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.429289] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.429313] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.429324] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.429331] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.429408] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.429472] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.429484] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[17:36:30.429498] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.429512] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.429537] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[17:36:30.429548] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[32m[17:36:30.429612] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[17:36:30.429747] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(29) as root operator.[m
[36m[17:36:30.429825] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.429865] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.429885] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[17:36:30.430002] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[17:36:30.430072] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.39:37871 1::73::0::0}) as new root of the plan.[m
[36m[17:36:30.430085] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.430092] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.430171] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[17:36:30.430231] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.10:33527)}) as new root of the plan.[m
[36m[17:36:30.430332] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.430343] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.430366] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.430380] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.430422] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.430438] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.430452] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:36:30.430461] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:36:30.430517] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:36:30.430545] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 11 exists[m
[36m[17:36:30.430557] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  11[m
[36m[17:36:30.430566] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  11[m
[36m[17:36:30.430587] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.430617] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.430633] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.430678] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.430690] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[17:36:30.430831] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[17:36:30.430909] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::76::0::0}) as new root of the plan.[m
[36m[17:36:30.430921] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.430928] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.431000] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 81[m
[36m[17:36:30.431060] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(81: {NetworkSinkDescriptor(partition=1::79::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.431164] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.431176] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.431198] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.431212] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.431252] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.431267] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.431280] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.431288] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.431334] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[17:36:30.431361] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.431372] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.431381] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[17:36:30.431388] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.431403] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[17:36:30.431415] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.431457] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.431468] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.431481] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.431490] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.431566] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[17:36:30.431601] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.431614] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.431762] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.431778] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.431788] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.431796] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.431808] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[17:36:30.431834] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.431873] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[17:36:30.431909] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.431936] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 30 exists in the query plan or not[m
[36m[17:36:30.431990] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 30 in the query plan[m
[36m[17:36:30.432011] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.432136] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.432193] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.432237] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 7 source operators.[m
[36m[17:36:30.432277] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.432348] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.432362] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.432409] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.432421] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.432454] [D] [thread 35120] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:36:30.432466] [D] [thread 35120] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:36:30.432472] [D] [thread 35120] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:36:30.432548] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.432617] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.432629] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:36:30.432644] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.432664] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.432690] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 30 exists in the query plan or not[m
[36m[17:36:30.432703] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 30 in the query plan[m
[32m[17:36:30.432768] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 84[m
[36m[17:36:30.432914] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(30) as root operator.[m
[36m[17:36:30.433049] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.433098] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.433110] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[32m[17:36:30.433230] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 82[m
[36m[17:36:30.433306] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.38:45291 1::82::0::0}) as new root of the plan.[m
[36m[17:36:30.433318] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.433326] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.433394] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 87[m
[36m[17:36:30.433452] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(87: {NetworkSinkDescriptor(partition=1::85::0::0;nodeLocation=tcp://192.168.2.10:33527)}) as new root of the plan.[m
[36m[17:36:30.433558] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.433570] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.433593] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.433608] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.433650] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.433666] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.433681] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:36:30.433704] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:36:30.433771] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:36:30.433803] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:36:30.433815] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:36:30.433826] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[17:36:30.433834] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.433870] [D] [thread 35120] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:36:30.433887] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.433934] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.433945] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[17:36:30.434057] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 85[m
[36m[17:36:30.434134] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(85,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::85::0::0}) as new root of the plan.[m
[36m[17:36:30.434146] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.434153] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:30.434235] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 90[m
[36m[17:36:30.434307] [D] [thread 35120] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(90: {NetworkSinkDescriptor(partition=1::88::0::0;nodeLocation=tcp://192.168.2.30:37557)}) as new root of the plan.[m
[36m[17:36:30.434447] [D] [thread 35120] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:30.434461] [D] [thread 35120] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:30.434485] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.434499] [D] [thread 35120] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:36:30.434541] [D] [thread 35120] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:36:30.434555] [D] [thread 35120] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:36:30.434568] [W] [thread 35120] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:36:30.434577] [D] [thread 35120] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:36:30.434625] [D] [thread 35120] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[17:36:30.434652] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:36:30.434664] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:36:30.434673] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[17:36:30.434680] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.434694] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  5[m
[36m[17:36:30.434706] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.434751] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.434762] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.434774] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.434784] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:36:30.434866] [I] [thread 35120] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 88[m
[36m[17:36:30.434905] [D] [thread 35120] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[17:36:30.434919] [D] [thread 35120] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[17:36:30.435075] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:36:30.435091] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:36:30.435101] [D] [thread 35120] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:36:30.435109] [D] [thread 35120] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:36:30.435122] [D] [thread 35120] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[17:36:30.435169] [D] [thread 35120] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:36:30.435205] [D] [thread 35120] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[17:36:30.435216] [D] [thread 35120] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:36:30.435226] [D] [thread 35120] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:36:30.435240] [D] [thread 35120] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[17:36:30.435258] [D] [thread 35120] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:36:30.435326] [D] [thread 35120] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[17:36:30.435348] [D] [thread 35120] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:36:30.435368] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.435381] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.435603] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.435651] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.435687] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.435730] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.435755] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.436537] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.436832] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.436931] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.437047] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.437197] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.437235] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.437267] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.437301] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.437322] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.437439] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.437536] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.437562] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.437588] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.437611] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.437629] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.437778] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.437815] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.437831] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.437948] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.437975] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.437998] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.438026] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.438045] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.438684] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.438968] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.439065] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.439166] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.439300] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.439333] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.439362] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.439391] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.439412] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.439522] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.439640] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.439682] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.439708] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.439731] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.439749] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.439853] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.439885] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.439901] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.440049] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.440096] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.440121] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.440151] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.440170] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.440847] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.441104] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.441198] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.441293] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.441332] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.441348] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.441491] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.441525] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.441553] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.441589] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.441609] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.442276] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.442540] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.442650] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.442746] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.442785] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.442802] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.442943] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.442979] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.443007] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.443040] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.443074] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.443737] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.444049] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.444153] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.444277] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.444325] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.444352] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.444516] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.444556] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.444590] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.444630] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.444651] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.445323] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.445572] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.445666] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.445791] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.445835] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.445851] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.445999] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.446033] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.446061] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.446108] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.446129] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.446768] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.447045] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.447145] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.447245] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.447283] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.447310] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.447455] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.447491] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.447517] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.447550] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.447570] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.448263] [D] [thread 35120] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[32m[17:36:30.448552] [I] [thread 35120] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow WrappedNetworkMetrics$tBytes[m
[32m[17:36:30.448647] [I] [thread 35120] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.448748] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.448791] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.448807] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.449004] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.449057] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.449097] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 8 source operators.[m
[36m[17:36:30.449137] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.449159] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.449358] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.449389] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.449402] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.449492] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.449519] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.449541] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.449565] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.449583] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.449697] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.449776] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.449800] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.449820] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.449849] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.449867] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.450005] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.450092] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.450115] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.450137] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.450159] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.450176] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.450279] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.450353] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.450376] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.450396] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.450416] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.450433] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.450533] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.450607] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.450630] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.450648] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.450667] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.450684] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.450780] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.450852] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.450873] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.450892] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.450911] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.450928] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.451062] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.451096] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.451111] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.451196] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.451221] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.451243] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.451266] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.451284] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.451391] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.451467] [D] [thread 35120] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:36:30.451489] [D] [thread 35120] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:36:30.451509] [D] [thread 35120] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:36:30.451528] [D] [thread 35120] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:36:30.451558] [D] [thread 35120] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:36:30.451660] [D] [thread 35120] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:36:30.451708] [D] [thread 35120] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[17:36:30.454336] [D] [thread 35120] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.30, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:9)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::34::0::0})
|    SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::40::0::0})
|    SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::46::0::0})
|    SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::52::0::0})
|    SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::61::0::0})
|    SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::70::0::0})
|    SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::79::0::0})
|    SOURCE(88,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::88::0::0})
|--ExecutionNode(id:2, ip:192.168.2.10, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::31::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::37::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:15)
|  |  SINK(63: {NetworkSinkDescriptor(partition=1::61::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::58::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:17)
|  |  SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::67::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:19)
|  |  SINK(81: {NetworkSinkDescriptor(partition=1::79::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::76::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:21)
|  |  SINK(90: {NetworkSinkDescriptor(partition=1::88::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(85,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::85::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.33, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    CENTRALWINDOW(23)
|  |  |      WATERMARKASSIGNER(10)
|  |  |        SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |  | QuerySubPlan(queryId:1, querySubPlanId:18)
|  |  |  SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.39:37871 1::73::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:20)
|  |  |  SINK(87: {NetworkSinkDescriptor(partition=1::85::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.38:45291 1::82::0::0})
|  |  |--ExecutionNode(id:11, ip:192.168.2.39, topologyId:11)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  |  SINK(75: {NetworkSinkDescriptor(partition=1::73::0::0;nodeLocation=tcp://192.168.2.33:41005)})
|  |  |  |    CENTRALWINDOW(29)
|  |  |  |      WATERMARKASSIGNER(22)
|  |  |  |        SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  |  SINK(84: {NetworkSinkDescriptor(partition=1::82::0::0;nodeLocation=tcp://192.168.2.33:41005)})
|  |  |  |    CENTRALWINDOW(30)
|  |  |  |      WATERMARKASSIGNER(20)
|  |  |  |        SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:4, ip:192.168.2.32, topologyId:4)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    CENTRALWINDOW(24)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |  | QuerySubPlan(queryId:1, querySubPlanId:14)
|  |  |  SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.37:33073 1::55::0::0})
|  |  | QuerySubPlan(queryId:1, querySubPlanId:16)
|  |  |  SINK(69: {NetworkSinkDescriptor(partition=1::67::0::0;nodeLocation=tcp://192.168.2.10:33527)})
|  |  |    SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.36:36431 1::64::0::0})
|  |  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  |  SINK(57: {NetworkSinkDescriptor(partition=1::55::0::0;nodeLocation=tcp://192.168.2.32:42999)})
|  |  |  |    CENTRALWINDOW(27)
|  |  |  |      WATERMARKASSIGNER(18)
|  |  |  |        SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |  |--ExecutionNode(id:8, ip:192.168.2.36, topologyId:8)
|  |  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  |  SINK(66: {NetworkSinkDescriptor(partition=1::64::0::0;nodeLocation=tcp://192.168.2.32:42999)})
|  |  |  |    CENTRALWINDOW(28)
|  |  |  |      WATERMARKASSIGNER(16)
|  |  |  |        SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|--ExecutionNode(id:3, ip:192.168.2.31, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.35:38259 1::43::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:37557)})
|  |    SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.34:40101 1::49::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.35, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:40951)})
|  |  |    CENTRALWINDOW(25)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
|  |--ExecutionNode(id:6, ip:192.168.2.34, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:40951)})
|  |  |    CENTRALWINDOW(26)
|  |  |      WATERMARKASSIGNER(12)
|  |  |        SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.454487] [D] [thread 35120] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[17:36:30.454519] [D] [thread 35120] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:36:30.454791] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.454814] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455070] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455088] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455168] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455190] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455232] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455244] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455280] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455291] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455324] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455335] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455367] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455378] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455412] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455423] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455456] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455467] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455499] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455510] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455619] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455631] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.455814] [D] [thread 35120] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[17:36:30.455845] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[17:36:30.455854] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.455863] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.456105] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:45855[m
[36m[17:36:30.456149] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:45855 queryId=1 querySubPlanId = 1[m
[36m[17:36:30.456413] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(33: {NetworkSinkDescriptor(partition=1::31::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  CENTRALWINDOW(23)
    WATERMARKASSIGNER(10)
      SOURCE(9,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.456450] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.456703] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.460284] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.461120] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.461440] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.461587] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.461966] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:30.462195] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.463252] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.463547] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.463649] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.463687] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.463746] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.464404] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.464893] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.465099] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.465230] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.465732] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.465815] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.466140] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.466601] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.466918] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.467351] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.467901] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.468246] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.468765] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.469426] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.469907] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.470221] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.470684] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.483348] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:45855 queryId=1 querySubPlanId = 18[m
[36m[17:36:30.483682] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(78: {NetworkSinkDescriptor(partition=1::76::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  SOURCE(73,,NetworkSourceDescriptor{tcp://192.168.2.39:37871 1::73::0::0})
[m
[36m[17:36:30.483735] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.483893] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.484182] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.484368] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.484534] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.484678] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.485052] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.39:37871 1::73::0::0}[m
[36m[17:36:30.485213] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.485384] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.485698] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.485858] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.485993] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.486132] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.491607] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:45855 queryId=1 querySubPlanId = 20[m
[36m[17:36:30.491873] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(87: {NetworkSinkDescriptor(partition=1::85::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  SOURCE(82,,NetworkSourceDescriptor{tcp://192.168.2.38:45291 1::82::0::0})
[m
[36m[17:36:30.491922] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.492107] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.492371] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.492556] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.492717] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.492858] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.493227] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:45291 1::82::0::0}[m
[36m[17:36:30.493347] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.493497] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.493762] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.493919] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.494054] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.494190] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.499850] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[17:36:30.499932] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.499991] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.500114] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:43905[m
[36m[17:36:30.500145] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:43905 queryId=1 querySubPlanId = 2[m
[36m[17:36:30.500349] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(39: {NetworkSinkDescriptor(partition=1::37::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      SOURCE(7,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.500438] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.500610] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.500868] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.501056] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.501220] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.501368] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.501761] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.501895] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.502090] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.502189] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.502223] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.502283] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.502647] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.503142] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.503365] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.503513] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.504010] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.504115] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.504415] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.504898] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.505235] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.505700] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.506199] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.506469] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.506967] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.507446] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.507915] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.508260] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.508722] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.517981] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:43905 queryId=1 querySubPlanId = 14[m
[36m[17:36:30.518261] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(60: {NetworkSinkDescriptor(partition=1::58::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.37:33073 1::55::0::0})
[m
[36m[17:36:30.518311] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.518470] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.518727] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.518913] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.519074] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.519217] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.519580] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:33073 1::55::0::0}[m
[36m[17:36:30.519699] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.519846] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.520165] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.520324] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.520464] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.520604] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.526152] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:43905 queryId=1 querySubPlanId = 16[m
[36m[17:36:30.526472] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(69: {NetworkSinkDescriptor(partition=1::67::0::0;nodeLocation=tcp://192.168.2.10:33527)})
  SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.36:36431 1::64::0::0})
[m
[36m[17:36:30.526522] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.526678] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.526918] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.527100] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.527258] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.527404] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.527758] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.36:36431 1::64::0::0}[m
[36m[17:36:30.527877] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.528081] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.528346] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.528503] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.528630] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.528769] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.534369] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[17:36:30.534449] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.534480] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.534594] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:34879[m
[36m[17:36:30.534624] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:34879 queryId=1 querySubPlanId = 3[m
[36m[17:36:30.534827] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(45: {NetworkSinkDescriptor(partition=1::43::0::0;nodeLocation=tcp://192.168.2.31:40951)})
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      SOURCE(13,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.534861] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.535016] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.535304] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.535492] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.535654] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.535802] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.536240] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.536382] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.536536] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.536635] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.536671] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.536730] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.537087] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.537582] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.537804] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.537947] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.538373] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.538476] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.538762] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.539250] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.539585] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.540121] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.540623] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.540886] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.541441] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.541919] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.542398] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.542715] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.543178] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.552518] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[17:36:30.552595] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.552615] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.552731] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:43721[m
[36m[17:36:30.552759] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:43721 queryId=1 querySubPlanId = 4[m
[36m[17:36:30.552963] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(51: {NetworkSinkDescriptor(partition=1::49::0::0;nodeLocation=tcp://192.168.2.31:40951)})
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(12)
      SOURCE(11,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.552997] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.553150] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.553419] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.553607] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.553772] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.553922] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.554323] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.554458] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.554607] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.554703] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.554738] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.554797] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.555149] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.555635] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.555833] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.556034] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.556459] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.556560] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.556849] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.557335] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.557676] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.558144] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.558597] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.558901] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.559389] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.559866] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.560382] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.560717] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.561187] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.570355] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[17:36:30.570478] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.570498] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.570622] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:39413[m
[36m[17:36:30.570652] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:39413 queryId=1 querySubPlanId = 5[m
[36m[17:36:30.570855] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(57: {NetworkSinkDescriptor(partition=1::55::0::0;nodeLocation=tcp://192.168.2.32:42999)})
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(18)
      SOURCE(17,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.570915] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.571080] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.571340] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.571528] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.571689] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.571834] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.572305] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.572448] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.572594] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.572689] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.572725] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.572781] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.573137] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.573626] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.573829] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.573969] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.574368] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.574465] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.574752] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.575233] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.575565] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.576071] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.576535] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.576800] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.577288] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.577761] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.578236] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.578565] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.579034] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.588307] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[17:36:30.588384] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.588416] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.588535] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.36:42379[m
[36m[17:36:30.588570] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.36:42379 queryId=1 querySubPlanId = 6[m
[36m[17:36:30.588776] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(66: {NetworkSinkDescriptor(partition=1::64::0::0;nodeLocation=tcp://192.168.2.32:42999)})
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(16)
      SOURCE(15,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.588866] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.589033] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.589295] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.589484] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.589648] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.589798] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.590188] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.590319] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.590464] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.590563] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.590599] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.590658] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.591015] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.591501] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.591712] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.591861] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.592320] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.592433] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.592752] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.593284] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.593637] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.594098] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.594618] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.594883] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.595364] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.595831] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.596339] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.596678] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.597147] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.606391] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=11[m
[36m[17:36:30.606516] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.606538] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.606661] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.39:44559[m
[36m[17:36:30.606690] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.39:44559 queryId=1 querySubPlanId = 7[m
[36m[17:36:30.606890] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(75: {NetworkSinkDescriptor(partition=1::73::0::0;nodeLocation=tcp://192.168.2.33:41005)})
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(22)
      SOURCE(21,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.606962] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.607126] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.607386] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.607569] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.607726] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.607863] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.608292] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.608429] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.608577] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.608669] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.608702] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.608761] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.609116] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.609598] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.609808] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.609950] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.610359] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.610456] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.610739] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.611219] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.611542] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.612042] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.612511] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.612775] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.613252] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.613719] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.614191] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.614512] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.614973] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.624402] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[17:36:30.624475] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.624496] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.624617] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:33101[m
[36m[17:36:30.624650] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:33101 queryId=1 querySubPlanId = 8[m
[36m[17:36:30.624860] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(84: {NetworkSinkDescriptor(partition=1::82::0::0;nodeLocation=tcp://192.168.2.33:41005)})
  CENTRALWINDOW(30)
    WATERMARKASSIGNER(20)
      SOURCE(19,WrappedNetworkMetrics,LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph))
[m
[36m[17:36:30.624893] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.625045] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.625293] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.625461] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.625604] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.625729] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.626101] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$node_id[INTEGER(64 bits)])[m
[36m[17:36:30.626236] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.626379] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.626474] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.626508] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$tBytes[INTEGER(64 bits)])[m
[36m[17:36:30.626570] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.626925] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.627420] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.627636] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.627783] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.628255] [D] [thread 35120] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(WrappedNetworkMetrics$timestamp[Undefined])[m
[36m[17:36:30.628365] [D] [thread 35120] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:36:30.628653] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.629137] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.629465] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.629924] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.630397] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(WrappedNetworkMetrics, WrappedNetworkMetrics_ph)[m
[36m[17:36:30.630661] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.631144] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.631630] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.632166] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.632505] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$timestamp:INTEGER(64 bits) WrappedNetworkMetrics$name:INTEGER(64 bits) WrappedNetworkMetrics$rBytes:INTEGER(64 bits) WrappedNetworkMetrics$rPackets:INTEGER(64 bits) WrappedNetworkMetrics$rErrs:INTEGER(64 bits) WrappedNetworkMetrics$rDrop:INTEGER(64 bits) WrappedNetworkMetrics$rFifo:INTEGER(64 bits) WrappedNetworkMetrics$rFrame:INTEGER(64 bits) WrappedNetworkMetrics$rCompressed:INTEGER(64 bits) WrappedNetworkMetrics$rMulticast:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits) WrappedNetworkMetrics$tPackets:INTEGER(64 bits) WrappedNetworkMetrics$tErrs:INTEGER(64 bits) WrappedNetworkMetrics$tDrop:INTEGER(64 bits) WrappedNetworkMetrics$tFifo:INTEGER(64 bits) WrappedNetworkMetrics$tColls:INTEGER(64 bits) WrappedNetworkMetrics$tCarrier:INTEGER(64 bits) WrappedNetworkMetrics$tCompressed:INTEGER(64 bits)[m
[36m[17:36:30.632972] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.642334] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[17:36:30.642415] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.642434] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.642552] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:34457[m
[36m[17:36:30.642582] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:34457 queryId=1 querySubPlanId = 9[m
[36m[17:36:30.642930] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(34,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::34::0::0})
  SOURCE(40,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::40::0::0})
  SOURCE(46,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::46::0::0})
  SOURCE(52,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::52::0::0})
  SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::61::0::0})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::70::0::0})
  SOURCE(79,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::79::0::0})
  SOURCE(88,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::88::0::0})
[m
[36m[17:36:30.642968] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.643105] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.643384] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.643566] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.643719] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.643863] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.644294] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::34::0::0}[m
[36m[17:36:30.644419] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.644574] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.644844] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.645007] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.645192] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.645343] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.645693] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::40::0::0}[m
[36m[17:36:30.645808] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.645956] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.646218] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.646366] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.646522] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.646665] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.646982] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::46::0::0}[m
[36m[17:36:30.647093] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.647233] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.647466] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.647613] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.647743] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.647886] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.648305] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::52::0::0}[m
[36m[17:36:30.648434] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.648598] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.648872] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.649029] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.649165] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.649305] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.649629] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::61::0::0}[m
[36m[17:36:30.649743] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.649893] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.650145] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.650304] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.650438] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.650575] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.650960] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::70::0::0}[m
[36m[17:36:30.651096] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.651258] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.651536] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.651695] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.651829] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.651997] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.652360] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::79::0::0}[m
[36m[17:36:30.652481] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.652625] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.652878] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.653048] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.653216] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.653418] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.653949] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::88::0::0}[m
[36m[17:36:30.654110] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.654304] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.654627] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.654806] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.654946] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.655088] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.664224] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[17:36:30.664308] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.664368] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.664507] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.10:37133[m
[36m[17:36:30.664544] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 10[m
[36m[17:36:30.664757] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(36: {NetworkSinkDescriptor(partition=1::34::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(31,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::31::0::0})
[m
[36m[17:36:30.664790] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.664948] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.665193] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.665358] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.665528] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.665661] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.666026] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::31::0::0}[m
[36m[17:36:30.666143] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.666291] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.666541] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.666693] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.666825] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.666964] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.672655] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 11[m
[36m[17:36:30.672928] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(42: {NetworkSinkDescriptor(partition=1::40::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(37,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::37::0::0})
[m
[36m[17:36:30.672989] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.673145] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.673391] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.673574] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.673726] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.673873] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.674279] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::37::0::0}[m
[36m[17:36:30.674398] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.674543] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.674784] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.674930] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.675039] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.675172] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.680807] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 15[m
[36m[17:36:30.681079] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(63: {NetworkSinkDescriptor(partition=1::61::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(58,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::58::0::0})
[m
[36m[17:36:30.681122] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.681271] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.681542] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.681724] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.681889] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.682038] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.682419] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::58::0::0}[m
[36m[17:36:30.682546] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.682705] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.682963] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.683126] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.683261] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.683402] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.689056] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 17[m
[36m[17:36:30.689333] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(72: {NetworkSinkDescriptor(partition=1::70::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(67,,NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::67::0::0})
[m
[36m[17:36:30.689405] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.689563] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.689806] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.689988] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.690183] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.690330] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.690704] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:42999 1::67::0::0}[m
[36m[17:36:30.690821] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.690971] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.691229] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.691382] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.691503] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.691649] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.697295] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 19[m
[36m[17:36:30.697570] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(81: {NetworkSinkDescriptor(partition=1::79::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(76,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::76::0::0})
[m
[36m[17:36:30.697646] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.697803] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.698050] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.698233] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.698394] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.698538] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.698892] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::76::0::0}[m
[36m[17:36:30.699011] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.699157] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.699419] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.699566] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.699686] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.699831] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.705523] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.10:37133 queryId=1 querySubPlanId = 21[m
[36m[17:36:30.705798] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(90: {NetworkSinkDescriptor(partition=1::88::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(85,,NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::85::0::0})
[m
[36m[17:36:30.705834] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.705986] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.706225] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.706410] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.706577] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.706719] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.707124] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:41005 1::85::0::0}[m
[36m[17:36:30.707259] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.707427] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.707702] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.707853] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.708013] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.708164] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.713877] [D] [thread 35120] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[17:36:30.713961] [D] [thread 35120] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:36:30.713984] [D] [thread 35120] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:36:30.714095] [D] [thread 35120] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:35535[m
[36m[17:36:30.714125] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35535 queryId=1 querySubPlanId = 12[m
[36m[17:36:30.714316] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(48: {NetworkSinkDescriptor(partition=1::46::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(43,,NetworkSourceDescriptor{tcp://192.168.2.35:38259 1::43::0::0})
[m
[36m[17:36:30.714349] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.714499] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.714748] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.714918] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.715061] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.715181] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.715514] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:38259 1::43::0::0}[m
[36m[17:36:30.715636] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.715780] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.716078] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.716241] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.716378] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.716523] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.722212] [D] [thread 35120] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:35535 queryId=1 querySubPlanId = 13[m
[36m[17:36:30.722486] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(54: {NetworkSinkDescriptor(partition=1::52::0::0;nodeLocation=tcp://192.168.2.30:37557)})
  SOURCE(49,,NetworkSourceDescriptor{tcp://192.168.2.34:40101 1::49::0::0})
[m
[36m[17:36:30.722528] [D] [thread 35120] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:36:30.722674] [D] [thread 35120] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:36:30.722929] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.723116] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.723274] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.723426] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.723805] [D] [thread 35120] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:40101 1::49::0::0}[m
[36m[17:36:30.723925] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.724111] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.724381] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.724541] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.724674] [D] [thread 35120] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:30.724818] [D] [thread 35120] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:36:30.730551] [D] [thread 35120] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 11 queues[m
[36m[17:36:30.766964] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:30.767278] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:31.768520] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:31.960603] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:31.961102] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:32.962397] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:33.102942] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:33.103419] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:33.104507] [D] [thread 35187] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:33.104631] [I] [thread 35187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:33.104651] [I] [thread 35187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[31m[1m[17:36:33.104707] [E] [thread 35187] [NodeEngine.cpp:479] [getQueryStatistics] AbstractQueryManager::getQueryStatistics: query does not exists 1[m
[36m[17:36:33.320107] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:33.320599] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:36:33.790130] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 91[m
[36m[17:36:33.790301] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.790914] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.791016] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.791433] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.792879] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.793056] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.793583] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.793835] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 92[m
[36m[17:36:33.793920] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.794348] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.794409] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.794714] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.796043] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.796150] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.796543] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.796694] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 93[m
[36m[17:36:33.796760] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.797171] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.797235] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.797561] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.798936] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.799061] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.799581] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.799772] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 94[m
[36m[17:36:33.799832] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.800307] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.800381] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.800713] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.802020] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.802126] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.802513] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.802666] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 95[m
[36m[17:36:33.802730] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.803085] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.803140] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.803455] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.804815] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.804929] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.805327] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.805483] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 96[m
[36m[17:36:33.805552] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.805922] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.805977] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.806283] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.807539] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.807638] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.808035] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.808180] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 97[m
[36m[17:36:33.808235] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.808591] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.808650] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.808965] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.810218] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.810316] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.810680] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.810819] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 98[m
[36m[17:36:33.810868] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.811224] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.811280] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.811584] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.812879] [D] [thread 35132] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:36:33.812979] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.813347] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:36:33.813485] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 99[m
[36m[17:36:33.813545] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.813900] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.813950] [D] [thread 35132] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:36:33.814256] [D] [thread 35132] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:36:33.816196] [D] [thread 35132] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(91: {FileSinkDescriptor()})
  SOURCE(94,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::34::0::0})
  SOURCE(97,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::40::0::0})
  SOURCE(92,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::46::0::0})
  SOURCE(96,,NetworkSourceDescriptor{tcp://192.168.2.31:40951 1::52::0::0})
  SOURCE(95,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::61::0::0})
  SOURCE(99,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::70::0::0})
  SOURCE(98,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::79::0::0})
  SOURCE(93,,NetworkSourceDescriptor{tcp://192.168.2.10:33527 1::88::0::0})
[m
[32m[17:36:33.816267] [I] [thread 35132] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 9 [m
[32m[17:36:33.816390] [I] [thread 35132] [DefaultQueryCompiler.cpp:61] [compileQuery] Compile Query with Default Compiler[m
[36m[17:36:33.816824] [D] [thread 35132] [DefaultQueryCompiler.cpp:75] [compileQuery] compile query with id: 1 subPlanId: 9[m
[36m[17:36:33.816886] [D] [thread 35132] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 1. LogicalQueryPlan[m
[36m[17:36:33.816927] [D] [thread 35132] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 9 for context QueryCompilation-1-9-2023-10-26 17:36:33 and scope 1. LogicalQueryPlan[m
[32m[17:36:33.818677] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 100[m
[32m[17:36:33.818872] [I] [thread 35132] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[17:36:33.818897] [I] [thread 35132] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[17:36:33.818905] [I] [thread 35132] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:36:33.818925] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818935] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818944] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818953] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818963] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818972] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818981] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.818989] [I] [thread 35132] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:36:33.819074] [I] [thread 35132] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.819665] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[17:36:33.819833] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[17:36:33.819862] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.819871] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[17:36:33.819990] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.820009] [D] [thread 35132] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[17:36:33.820057] [D] [thread 35132] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[17:36:33.820078] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.820219] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 102[m
[36m[17:36:33.820327] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.820350] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.820390] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.820399] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.820412] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.820501] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.820516] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.820564] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[17:36:33.820619] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.820634] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.820681] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.820691] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.820700] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.820768] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.820783] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.820817] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[17:36:33.820867] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.820882] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.820917] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.820936] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.820947] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.821014] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.821030] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.821076] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 105[m
[36m[17:36:33.821129] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.821145] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.821191] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.821200] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.821209] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.821276] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.821291] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.821326] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[36m[17:36:33.821375] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.821390] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.821429] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.821437] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.821447] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.821510] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.821532] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.821571] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[36m[17:36:33.821623] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.821638] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.821680] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.821688] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.821706] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.821771] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.821786] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.821820] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 108[m
[36m[17:36:33.821867] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.821883] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.821926] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.821934] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.821942] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.822004] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.822018] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:36:33.822061] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 109[m
[36m[17:36:33.822108] [D] [thread 35132] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:36:33.822123] [D] [thread 35132] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:36:33.822169] [I] [thread 35132] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:36:33.822176] [I] [thread 35132] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:36:33.822185] [I] [thread 35132] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:36:33.822255] [D] [thread 35132] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:36:33.822269] [D] [thread 35132] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[17:36:33.822407] [D] [thread 35132] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 2. PhysicalQueryPlan[m
[36m[17:36:33.822435] [D] [thread 35132] [VizDumpHandler.cpp:122] [dump] Dump query plan: 1 : 9 for context QueryCompilation-1-9-2023-10-26 17:36:33 and scope 2. PhysicalQueryPlan[m
[36m[17:36:33.823343] [D] [thread 35132] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 9[m
[32m[17:36:33.823705] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 101[m
[36m[17:36:33.823892] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[17:36:33.823908] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.823917] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.824432] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 102[m
[36m[17:36:33.824604] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.824633] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.824642] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.824763] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 103[m
[36m[17:36:33.824853] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.824866] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.824873] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.824950] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 104[m
[36m[17:36:33.825018] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825031] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825037] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.825104] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 105[m
[36m[17:36:33.825179] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825191] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825198] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.825268] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 106[m
[36m[17:36:33.825331] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825352] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825359] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.825424] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 107[m
[36m[17:36:33.825542] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825556] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825563] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.825640] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 108[m
[36m[17:36:33.825724] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825737] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825744] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:36:33.825822] [I] [thread 35132] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 109[m
[36m[17:36:33.825889] [D] [thread 35132] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:36:33.825901] [D] [thread 35132] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:36:33.825908] [D] [thread 35132] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:36:33.825989] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 3. AfterPipelinedQueryPlan[m
[36m[17:36:33.826028] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[36m[17:36:33.827177] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 4. AfterAddScanAndEmitPhase[m
[36m[17:36:33.827244] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[36m[17:36:33.828261] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 5. GeneratableOperators[m
[36m[17:36:33.828322] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[36m[17:36:33.829258] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 6. BufferOptimizationPhase[m
[36m[17:36:33.829348] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[36m[17:36:33.830253] [D] [thread 35132] [PredicationOptimizationPhase.cpp:41] [apply] PredicationOptimizationPhase: No optimization requested or applied.[m
[36m[17:36:33.830307] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 7. PredicationOptimizationPhase[m
[36m[17:36:33.830330] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[36m[17:36:33.831217] [D] [thread 35132] [CodeGenerationPhase.cpp:44] [apply] Generate code for query plan 1 - 9[m
[36m[17:36:33.831271] [D] [thread 35132] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-9-2023-10-26 17:36:33 - 8. ExecutableOperatorPlan[m
[36m[17:36:33.831290] [D] [thread 35132] [VizDumpHandler.cpp:145] [dump] Dump query plan: 1 : 9 for scope QueryCompilation-1-9-2023-10-26 17:36:33[m
[32m[17:36:33.832435] [I] [thread 35132] [DefaultQueryCompiler.cpp:108] [compileQuery] DefaultQueryCompiler Runtime:
overall runtime: 15.1015 ms
DefaultQueryCompiler_LogicalQueryPlan:	1.53055 ms
DefaultQueryCompiler_PhysicalQueryPlan:	4.80689 ms
DefaultQueryCompiler_AfterPipelinedQueryPlan:	3.78514 ms
DefaultQueryCompiler_AfterAddScanAndEmitPhase:	1.06583 ms
DefaultQueryCompiler_GeneratableOperators:	0.973382 ms
DefaultQueryCompiler_BufferOptimizationPhase:	0.987567 ms
DefaultQueryCompiler_PredicationOptimizationPhase:	0.940642 ms
DefaultQueryCompiler_ExecutableOperatorPlan:	1.00651 ms[m
[36m[17:36:33.832836] [D] [thread 35132] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  101[m
[32m[17:36:33.832958] [I] [thread 35132] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[17:36:33.833382] [D] [thread 35132] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpWithMonitoringSourceMst.out[m
[32m[17:36:33.834091] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.834803] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  34 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.835832] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.836210] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::61::0::0[m
[36m[17:36:33.836233] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  40 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.836325] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::61::0::0(threadId=0) Data[m
[33m[1m[17:36:33.836442] [W] [thread 35129] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::61::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[17:36:33.836532] [W] [thread 35129] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::61::0::0[m
[32m[17:36:33.836693] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[33m[1m[17:36:33.836753] [W] [thread 35129] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::61::0::0[m
[36m[17:36:33.836834] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::46::0::0[m
[32m[17:36:33.836875] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::46::0::0(threadId=0) Data[m
[33m[1m[17:36:33.836919] [W] [thread 35129] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::46::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[17:36:33.836949] [W] [thread 35129] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::46::0::0[m
[33m[1m[17:36:33.837005] [W] [thread 35129] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::46::0::0[m
[36m[17:36:33.837027] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  46 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.837410] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.837686] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  52 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.838053] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.838309] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  61 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.838618] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.838861] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  70 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.839168] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.839415] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  79 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[32m[17:36:33.839716] [I] [thread 35132] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:36:33.840017] [D] [thread 35132] [DataSource.cpp:75] [DataSource] DataSource  88 : Init Data Source with schema  WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)[m
[36m[17:36:33.841081] [D] [thread 35132] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 9[m
[36m[17:36:33.841264] [D] [thread 35132] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  9  as a singleton[m
[36m[17:36:33.841286] [D] [thread 35132] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=9[m
[36m[17:36:33.841305] [D] [thread 35132] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 8[m
[36m[17:36:33.841342] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  34  not found. Creating new element with with qep [m
[36m[17:36:33.841586] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  40  not found. Creating new element with with qep [m
[36m[17:36:33.841638] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  46  not found. Creating new element with with qep [m
[36m[17:36:33.841659] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  52  not found. Creating new element with with qep [m
[36m[17:36:33.841677] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  61  not found. Creating new element with with qep [m
[36m[17:36:33.841695] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  70  not found. Creating new element with with qep [m
[36m[17:36:33.841726] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  79  not found. Creating new element with with qep [m
2023-10-26 17:36:33.842 setup: queryId=1, querySubPlanId=9; 
[36m[17:36:33.841748] [D] [thread 35132] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  88  not found. Creating new element with with qep [m
2023-10-26 17:36:33.842 start: queryId=1, querySubPlanId=9; 
[36m[17:36:33.841784] [D] [thread 35132] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 9  pair queryId= 1  subplanId= 9[m
[36m[17:36:33.842233] [D] [thread 35132] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=9[m
[36m[17:36:33.842348] [D] [thread 35132] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=9[m
[36m[17:36:33.842657] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::34::0::0 from 192.168.2.10[m
[36m[17:36:33.842951] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::34::0::0=1[m
[36m[17:36:33.842997] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5001c1b0  started successfully[m
[36m[17:36:33.843046] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::40::0::0 from 192.168.2.10[m
[36m[17:36:33.843099] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::40::0::0=1[m
[36m[17:36:33.843115] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5001c970  started successfully[m
[36m[17:36:33.843146] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::46::0::0 from 192.168.2.31[m
[36m[17:36:33.843193] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::46::0::0=1[m
[36m[17:36:33.843207] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5001f210  started successfully[m
[36m[17:36:33.843235] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::52::0::0 from 192.168.2.31[m
[36m[17:36:33.843269] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::52::0::0=1[m
[36m[17:36:33.843282] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff5001fb00  started successfully[m
[36m[17:36:33.843309] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::61::0::0 from 192.168.2.10[m
[36m[17:36:33.843341] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::61::0::0=1[m
[36m[17:36:33.843362] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff500205f0  started successfully[m
[36m[17:36:33.843391] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::70::0::0 from 192.168.2.10[m
[36m[17:36:33.843424] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::70::0::0=1[m
[36m[17:36:33.843475] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff50021150  started successfully[m
[36m[17:36:33.843508] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::79::0::0 from 192.168.2.10[m
[36m[17:36:33.843559] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::79::0::0=1[m
[36m[17:36:33.843573] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff50021c60  started successfully[m
[36m[17:36:33.843603] [D] [thread 35132] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::88::0::0 from 192.168.2.10[m
[36m[17:36:33.843638] [D] [thread 35132] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::88::0::0=1[m
[36m[17:36:33.843651] [D] [thread 35132] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff500227c0  started successfully[m
[36m[17:36:33.843699] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.843821] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.844198] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.845091] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::34::0::0[m
[36m[17:36:33.845243] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::34::0::0[m
[36m[17:36:33.845522] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.845547] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5001c1b0  started successfully[m
[36m[17:36:33.845583] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.845646] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.845779] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.846096] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::40::0::0[m
[36m[17:36:33.846181] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::40::0::0[m
[36m[17:36:33.846288] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.846306] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5001c970  started successfully[m
[36m[17:36:33.846334] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.846385] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.846477] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.846728] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::46::0::0[m
[36m[17:36:33.846805] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::46::0::0[m
[36m[17:36:33.846891] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.846916] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5001f210  started successfully[m
[36m[17:36:33.846943] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.846993] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.847069] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.847343] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[17:36:33.847421] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[17:36:33.847510] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.847528] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff5001fb00  started successfully[m
[36m[17:36:33.847554] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.847602] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.847694] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.847968] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::61::0::0[m
[36m[17:36:33.848051] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::61::0::0[m
[36m[17:36:33.848145] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.848164] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff500205f0  started successfully[m
[36m[17:36:33.848189] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.848238] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.848318] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.848615] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::70::0::0[m
[36m[17:36:33.848719] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::70::0::0[m
[36m[17:36:33.848808] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::46::0::0[m
[36m[17:36:33.848846] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[32m[17:36:33.848855] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::46::0::0(threadId=0) Data[m
[36m[17:36:33.848867] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff50021150  started successfully[m
[36m[17:36:33.848910] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:79 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.848915] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::46::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.848979] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.849073] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.849089] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::61::0::0[m
[32m[17:36:33.849125] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::61::0::0(threadId=0) Data[m
[36m[17:36:33.849168] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::61::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.849385] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::79::0::0[m
[36m[17:36:33.849586] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::79::0::0[m
[36m[17:36:33.849727] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:79 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.849746] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff50021c60  started successfully[m
[36m[17:36:33.849779] [D] [thread 35132] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:88 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.849842] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.849935] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Initialize[m
[36m[17:36:33.850290] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::88::0::0[m
[36m[17:36:33.850386] [D] [thread 35132] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::88::0::0[m
[36m[17:36:33.850504] [D] [thread 35132] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:88 PartitionId: 0 SubpartitionID: 0[m
[36m[17:36:33.850524] [D] [thread 35132] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff500227c0  started successfully[m
[36m[17:36:33.850655] [D] [thread 35132] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:36:33.850938] [D] [thread 35132] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  9  succeeded[m
[36m[17:36:33.851038] [D] [thread 35132] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[17:36:33.856611] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::70::0::0[m
[32m[17:36:33.856728] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::70::0::0(threadId=0) Data[m
[36m[17:36:33.856832] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::70::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.858190] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::52::0::0[m
[32m[17:36:33.858272] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::52::0::0(threadId=0) Data[m
[36m[17:36:33.858330] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::52::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.864867] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::79::0::0[m
[32m[17:36:33.864984] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::79::0::0(threadId=0) Data[m
[36m[17:36:33.865068] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::79::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.873295] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::34::0::0[m
[32m[17:36:33.873421] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::34::0::0(threadId=0) Data[m
[36m[17:36:33.873509] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::34::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.883401] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::88::0::0[m
[32m[17:36:33.883520] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::88::0::0(threadId=0) Data[m
[36m[17:36:33.883604] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::88::0::0(threadId=0) REGISTERED[m
[36m[17:36:33.893779] [D] [thread 35129] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): ClientAnnouncement received for channel 0:1::40::0::0[m
[32m[17:36:33.893896] [I] [thread 35129] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::40::0::0(threadId=0) Data[m
[36m[17:36:33.893980] [D] [thread 35129] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::40::0::0(threadId=0) REGISTERED[m
[36m[17:36:34.321805] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:35.323074] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:35.693419] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:35.694102] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:35.694979] [D] [thread 35199] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:35.695076] [I] [thread 35199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:35.695094] [I] [thread 35199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:35.695315] [I] [thread 35199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:35.695365] [I] [thread 35199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:35.911467] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:35.912022] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:36.913321] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:37.914586] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:38.055633] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:38.056224] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:38.057043] [D] [thread 35204] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:38.057133] [I] [thread 35204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:38.057149] [I] [thread 35204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:38.057270] [I] [thread 35204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:38.057282] [I] [thread 35204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:38.221104] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:38.221425] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:39.222702] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:40.223915] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:40.282108] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:40.282565] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:40.283464] [D] [thread 35209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:40.283560] [I] [thread 35209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:40.283577] [I] [thread 35209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:40.283694] [I] [thread 35209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:40.283708] [I] [thread 35209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:40.476708] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:40.477171] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:41.478429] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:42.479694] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:42.523816] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:42.524184] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:42.525297] [D] [thread 35214] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:42.525411] [I] [thread 35214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:42.525428] [I] [thread 35214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:42.525556] [I] [thread 35214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:42.525573] [I] [thread 35214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:42.719237] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:42.719562] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:43.720771] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:44.722061] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:44.857624] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:44.858107] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:44.859203] [D] [thread 35219] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:44.859312] [I] [thread 35219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:44.859328] [I] [thread 35219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:44.859452] [I] [thread 35219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:44.859467] [I] [thread 35219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:45.010537] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:45.011009] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:46.012296] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:47.013560] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:47.064989] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:47.065544] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:47.066538] [D] [thread 35224] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:47.066630] [I] [thread 35224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:47.066647] [I] [thread 35224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:47.066764] [I] [thread 35224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:47.066777] [I] [thread 35224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:47.252790] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:47.253350] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:48.254563] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:49.255830] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:49.293757] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:49.294264] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:49.295061] [D] [thread 35229] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:49.295152] [I] [thread 35229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:49.295169] [I] [thread 35229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:49.295288] [I] [thread 35229] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:49.295301] [I] [thread 35229] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:49.462202] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:49.462743] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:50.464020] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:51.465258] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:51.502321] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:51.502773] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:51.503630] [D] [thread 35234] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:51.503723] [I] [thread 35234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:51.503740] [I] [thread 35234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:51.503856] [I] [thread 35234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:51.503869] [I] [thread 35234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:51.691384] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:51.691914] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:52.693244] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:53.694521] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:53.840361] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:53.840936] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:53.841685] [D] [thread 35239] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:53.841775] [I] [thread 35239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:53.841792] [I] [thread 35239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:53.841908] [I] [thread 35239] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:53.841921] [I] [thread 35239] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:54.107343] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:54.107930] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:55.109216] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:56.110629] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:56.256084] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:56.256573] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:56.257480] [D] [thread 35244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:56.257572] [I] [thread 35244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:56.257588] [I] [thread 35244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:56.257705] [I] [thread 35244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:56.257717] [I] [thread 35244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:56.476792] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:56.477125] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:57.478298] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:58.479551] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:58.544520] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:58.544831] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:58.545870] [D] [thread 35249] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:36:58.545964] [I] [thread 35249] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:58.545981] [I] [thread 35249] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:36:58.546099] [I] [thread 35249] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:36:58.546123] [I] [thread 35249] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:36:58.730161] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:58.730621] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:36:59.731835] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:00.728032] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:00.728571] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:00.729352] [D] [thread 35254] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:00.729443] [I] [thread 35254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:00.729460] [I] [thread 35254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:00.729579] [I] [thread 35254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:00.729591] [I] [thread 35254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:00.931633] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:00.931936] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:01.933188] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:02.934493] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:02.995813] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:02.996166] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:02.997165] [D] [thread 35259] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:02.997259] [I] [thread 35259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:02.997275] [I] [thread 35259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:02.997396] [I] [thread 35259] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:02.997410] [I] [thread 35259] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:03.192392] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:03.192736] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:04.193960] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:05.195227] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:05.240403] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:05.240739] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:05.241740] [D] [thread 35264] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:05.241834] [I] [thread 35264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:05.241852] [I] [thread 35264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:05.241970] [I] [thread 35264] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:05.241983] [I] [thread 35264] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:05.427922] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:05.428303] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:06.429614] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:07.430882] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:07.571603] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:07.571972] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:07.573647] [D] [thread 35269] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:07.573749] [I] [thread 35269] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:07.573767] [I] [thread 35269] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:07.573884] [I] [thread 35269] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:07.573899] [I] [thread 35269] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:07.783788] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:07.784158] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:08.785397] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:09.786708] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:09.831992] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:09.832331] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:09.833336] [D] [thread 35274] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:09.833430] [I] [thread 35274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:09.833447] [I] [thread 35274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:09.833564] [I] [thread 35274] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:09.833577] [I] [thread 35274] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:10.018624] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:10.018940] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:11.020133] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:12.021408] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:12.059699] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:12.060046] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:12.061116] [D] [thread 35279] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:12.061209] [I] [thread 35279] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:12.061225] [I] [thread 35279] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:12.061343] [I] [thread 35279] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:12.061357] [I] [thread 35279] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:12.274179] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:12.274490] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:13.275679] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:14.276978] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:14.332228] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:14.332566] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:14.333525] [D] [thread 35284] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:14.333615] [I] [thread 35284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:14.333632] [I] [thread 35284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:14.333750] [I] [thread 35284] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:14.333763] [I] [thread 35284] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:14.501592] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:14.501903] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:15.503104] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:16.504369] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:16.545876] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:16.546199] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:16.547373] [D] [thread 35289] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:16.547468] [I] [thread 35289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:16.547486] [I] [thread 35289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:16.547606] [I] [thread 35289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:16.547619] [I] [thread 35289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:16.728831] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:16.729180] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:17.730414] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:18.731726] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:18.871688] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:18.872040] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:18.873071] [D] [thread 35294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:18.873164] [I] [thread 35294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:18.873181] [I] [thread 35294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:18.873299] [I] [thread 35294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:18.873313] [I] [thread 35294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:19.040846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:19.041167] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:20.042381] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:21.043666] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:21.091024] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:21.091366] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:21.092363] [D] [thread 35299] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:21.092455] [I] [thread 35299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:21.092473] [I] [thread 35299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:21.092590] [I] [thread 35299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:21.092604] [I] [thread 35299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:21.278605] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:21.278952] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:22.280192] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:23.281487] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:23.421019] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:23.421348] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:23.422390] [D] [thread 35304] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:23.422487] [I] [thread 35304] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:23.422504] [I] [thread 35304] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:23.422623] [I] [thread 35304] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:23.422681] [I] [thread 35304] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:23.584402] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:23.584746] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:24.586024] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:25.587296] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:25.734325] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:25.734681] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:25.736260] [D] [thread 35309] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:25.736355] [I] [thread 35309] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:25.736373] [I] [thread 35309] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:25.736490] [I] [thread 35309] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:25.736521] [I] [thread 35309] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:25.995009] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:25.995357] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:26.996592] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:27.997889] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:28.029347] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:28.029860] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:28.030657] [D] [thread 35314] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:28.030742] [I] [thread 35314] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:28.030759] [I] [thread 35314] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:28.030877] [I] [thread 35314] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:28.030891] [I] [thread 35314] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:28.134334] [D] [thread 35120] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[17:37:28.134442] [D] [thread 35120] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[17:37:28.134982] [D] [thread 35120] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[17:37:28.135155] [D] [thread 35120] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[17:37:28.135184] [D] [thread 35120] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[17:37:28.135333] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.33[m
[36m[17:37:28.135369] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:45855 queryId=1[m
[36m[17:37:28.140243] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.32[m
[36m[17:37:28.140320] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:43905 queryId=1[m
[36m[17:37:28.144460] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.35[m
[36m[17:37:28.144539] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:34879 queryId=1[m
[36m[17:37:28.148682] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.34[m
[36m[17:37:28.148767] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:43721 queryId=1[m
[36m[17:37:28.152966] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[17:37:28.153050] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:39413 queryId=1[m
[36m[17:37:28.158109] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.36[m
[36m[17:37:28.158222] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.36:42379 queryId=1[m
[36m[17:37:28.163130] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=11 and IP=192.168.2.39[m
[36m[17:37:28.163270] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.39:44559 queryId=1[m
[36m[17:37:28.168278] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[17:37:28.168366] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:33101 queryId=1[m
[36m[17:37:28.173576] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.30[m
[36m[17:37:28.173750] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:34457 queryId=1[m
[36m[17:37:28.179005] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.10[m
[36m[17:37:28.179106] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.10:37133 queryId=1[m
[36m[17:37:28.181042] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:28.181549] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:28.184139] [D] [thread 35120] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.31[m
[36m[17:37:28.184222] [D] [thread 35120] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:35535 queryId=1[m
[36m[17:37:28.189221] [D] [thread 35120] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 11 queues[m
[36m[17:37:28.288449] [D] [thread 35196] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[17:37:28.288559] [D] [thread 35196] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[17:37:28.288686] [D] [thread 35196] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  9   1[m
[36m[17:37:28.288788] [D] [thread 35196] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1698341848288[m
[36m[17:37:28.288811] [D] [thread 35196] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  9  succeeded[m
[36m[17:37:28.288836] [D] [thread 35196] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[17:37:28.292049] [D] [thread 35120] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[17:37:28.292153] [D] [thread 35120] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[17:37:28.292906] [I] [thread 35120] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[17:37:28.293092] [D] [thread 35120] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[17:37:29.182846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:30.184175] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:30.209012] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:30.209498] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:30.210369] [D] [thread 35319] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:30.210463] [I] [thread 35319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:30.210480] [I] [thread 35319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:30.210600] [I] [thread 35319] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:30.210613] [I] [thread 35319] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:30.412969] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:30.413439] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:31.414713] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:32.416047] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:32.475428] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:32.475911] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:32.476812] [D] [thread 35324] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:32.476906] [I] [thread 35324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:32.476922] [I] [thread 35324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:32.477041] [I] [thread 35324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:32.477053] [I] [thread 35324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:32.672832] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:32.673310] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:33.674614] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:34.675902] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:34.817560] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:34.818165] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:34.818869] [D] [thread 35329] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:34.818957] [I] [thread 35329] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:34.818973] [I] [thread 35329] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:34.819091] [I] [thread 35329] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:34.819104] [I] [thread 35329] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:35.038228] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:35.038725] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:36.040045] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:37.041276] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:37.043392] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:37.043861] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:37.044775] [D] [thread 35334] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:37.044865] [I] [thread 35334] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:37.044882] [I] [thread 35334] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:37.044998] [I] [thread 35334] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:37.045012] [I] [thread 35334] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:37.298300] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:37.298639] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:38.299844] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:39.301142] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:39.309298] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:39.309604] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:39.310607] [D] [thread 35339] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:39.310702] [I] [thread 35339] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:39.310719] [I] [thread 35339] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:39.310838] [I] [thread 35339] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:39.310852] [I] [thread 35339] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:39.509037] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:39.509357] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:40.510599] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:41.511885] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:41.546575] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:41.546912] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:41.547916] [D] [thread 35344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:41.548040] [I] [thread 35344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:41.548056] [I] [thread 35344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:41.548176] [I] [thread 35344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:41.548190] [I] [thread 35344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:41.736801] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:41.737123] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:42.738345] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:43.738273] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:43.738595] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:43.739568] [D] [thread 35349] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:43.739663] [I] [thread 35349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:43.739679] [I] [thread 35349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:43.739795] [I] [thread 35349] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:43.739808] [I] [thread 35349] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:43.938337] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:43.938653] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:44.939894] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:45.941185] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:45.978819] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:45.979386] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:45.980234] [D] [thread 35354] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:45.980336] [I] [thread 35354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:45.980354] [I] [thread 35354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:45.980485] [I] [thread 35354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:45.980500] [I] [thread 35354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:46.174975] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:46.175516] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:47.176142] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:48.177454] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:48.314568] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:48.314881] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:48.315895] [D] [thread 35359] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:48.316037] [I] [thread 35359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:48.316056] [I] [thread 35359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:48.316184] [I] [thread 35359] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:48.316200] [I] [thread 35359] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:48.528832] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:48.529138] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:49.530335] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:50.531619] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:50.538810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:50.539114] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:50.540178] [D] [thread 35364] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:50.540274] [I] [thread 35364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:50.540290] [I] [thread 35364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:50.540408] [I] [thread 35364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:50.540432] [I] [thread 35364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:50.723103] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:50.723449] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:51.724096] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:52.725393] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:52.763164] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:52.763511] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:52.764718] [D] [thread 35369] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:52.764813] [I] [thread 35369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:52.764829] [I] [thread 35369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:52.764949] [I] [thread 35369] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:52.764963] [I] [thread 35369] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:52.932603] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:52.932941] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:53.934186] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:54.935503] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:55.075575] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:55.075915] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:55.076947] [D] [thread 35375] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:55.077043] [I] [thread 35375] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:55.077060] [I] [thread 35375] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:55.077176] [I] [thread 35375] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:55.077189] [I] [thread 35375] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:55.237197] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:55.237768] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:56.239039] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:57.240297] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:57.252874] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:57.253375] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:57.254222] [D] [thread 35383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:57.254349] [I] [thread 35383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:57.254367] [I] [thread 35383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:57.254502] [I] [thread 35383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:57.254517] [I] [thread 35383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:57.447296] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:57.447606] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:58.448854] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:59.450176] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:59.480322] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:59.480631] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:59.481670] [D] [thread 35391] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:37:59.481765] [I] [thread 35391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:59.481782] [I] [thread 35391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:37:59.481900] [I] [thread 35391] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:37:59.481924] [I] [thread 35391] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:37:59.692056] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:37:59.692392] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:00.693625] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:01.694889] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:01.836019] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:01.836607] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:01.837662] [D] [thread 35396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:01.837763] [I] [thread 35396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:01.837780] [I] [thread 35396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:01.837897] [I] [thread 35396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:01.837910] [I] [thread 35396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:02.002658] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:02.003163] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:03.004445] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:04.005763] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:04.048236] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:04.048799] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:04.049576] [D] [thread 35401] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:04.049662] [I] [thread 35401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:04.049679] [I] [thread 35401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:04.049795] [I] [thread 35401] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:04.049807] [I] [thread 35401] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:04.227717] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:04.228263] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:05.229523] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:06.230771] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:06.247319] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:06.247893] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:06.248713] [D] [thread 35406] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:06.248807] [I] [thread 35406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:06.248823] [I] [thread 35406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:06.248942] [I] [thread 35406] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:06.248955] [I] [thread 35406] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:06.460020] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:06.460493] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:07.461776] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:08.463087] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:08.502765] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:08.503255] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:08.504135] [D] [thread 35412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:08.504221] [I] [thread 35412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:08.504240] [I] [thread 35412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:08.504360] [I] [thread 35412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:08.504373] [I] [thread 35412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:08.681830] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:08.682331] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:09.683693] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:10.685054] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:10.724094] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:10.724646] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:10.725397] [D] [thread 35418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:10.725488] [I] [thread 35418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:10.725505] [I] [thread 35418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:10.725619] [I] [thread 35418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:10.725632] [I] [thread 35418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:10.914848] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:10.915350] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:11.916262] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:12.917517] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:12.932598] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:12.932912] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:12.934472] [D] [thread 35423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:12.934565] [I] [thread 35423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:12.934582] [I] [thread 35423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:12.934699] [I] [thread 35423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:12.934712] [I] [thread 35423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:13.136966] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:13.137300] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:14.138492] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:15.139846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:15.149285] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:15.149629] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:15.151186] [D] [thread 35428] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:15.151280] [I] [thread 35428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:15.151297] [I] [thread 35428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:15.151413] [I] [thread 35428] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:15.151426] [I] [thread 35428] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:15.405674] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:15.406049] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:16.407289] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:17.403369] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:17.403680] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:17.404803] [D] [thread 35434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:17.404901] [I] [thread 35434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:17.404918] [I] [thread 35434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:17.405038] [I] [thread 35434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:17.405051] [I] [thread 35434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:17.616493] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:17.616817] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:18.618075] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:19.619546] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:19.639806] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:19.640195] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:19.641195] [D] [thread 35439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:19.641292] [I] [thread 35439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:19.641309] [I] [thread 35439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:19.641428] [I] [thread 35439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:19.641441] [I] [thread 35439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:19.842517] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:19.842863] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:20.844095] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:21.816597] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:21.816937] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:21.817979] [D] [thread 35445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:21.818110] [I] [thread 35445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:21.818128] [I] [thread 35445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:21.818246] [I] [thread 35445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:21.818259] [I] [thread 35445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:22.028904] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:22.029352] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:23.029796] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:24.022353] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:24.022909] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:24.023870] [D] [thread 35450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:24.023988] [I] [thread 35450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:24.024005] [I] [thread 35450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:24.024123] [I] [thread 35450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:24.024136] [I] [thread 35450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:24.219423] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:24.219923] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:25.221179] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:26.222413] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:26.320288] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:26.320786] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:26.321630] [D] [thread 35455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:26.321728] [I] [thread 35455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:26.321745] [I] [thread 35455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:26.321869] [I] [thread 35455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:26.321895] [I] [thread 35455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:26.527006] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:26.527526] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:27.528099] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:28.529425] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:28.574112] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:28.574423] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:28.575600] [D] [thread 35461] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:28.575723] [I] [thread 35461] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:28.575741] [I] [thread 35461] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:28.575871] [I] [thread 35461] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:28.575889] [I] [thread 35461] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:28.738801] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:28.739156] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:29.740394] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:30.741643] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:30.744859] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:30.745167] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:30.746752] [D] [thread 35466] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:30.746846] [I] [thread 35466] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:30.746862] [I] [thread 35466] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:30.746982] [I] [thread 35466] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:30.746995] [I] [thread 35466] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:31.000120] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:31.000431] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:32.001674] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:33.002980] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:33.048809] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:33.049124] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:33.050649] [D] [thread 35473] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:33.050743] [I] [thread 35473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:33.050762] [I] [thread 35473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:33.050880] [I] [thread 35473] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:33.050894] [I] [thread 35473] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:33.239640] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:33.239985] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:34.241232] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:35.238458] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:35.238787] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:35.240016] [D] [thread 35480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:35.240102] [I] [thread 35480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:35.240121] [I] [thread 35480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:35.240240] [I] [thread 35480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:35.240253] [I] [thread 35480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:35.400269] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:35.400741] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:36.402035] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:37.388101] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:37.388644] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:37.389426] [D] [thread 35487] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:37.389519] [I] [thread 35487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:37.389536] [I] [thread 35487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:37.389651] [I] [thread 35487] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:37.389664] [I] [thread 35487] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:37.599002] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:37.599321] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:38.600563] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:39.601853] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:39.743743] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:39.744082] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:39.745154] [D] [thread 35495] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:39.745248] [I] [thread 35495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:39.745264] [I] [thread 35495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:39.745382] [I] [thread 35495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:39.745395] [I] [thread 35495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:39.951576] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:39.951917] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:40.953142] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:41.954393] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:42.012081] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:42.012398] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:42.013473] [D] [thread 35501] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:42.013567] [I] [thread 35501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:42.013584] [I] [thread 35501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:42.013700] [I] [thread 35501] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:42.013713] [I] [thread 35501] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:42.208531] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:42.208851] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:43.210135] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:44.211382] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:44.402540] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:44.402880] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:44.403894] [D] [thread 35509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:44.404010] [I] [thread 35509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:44.404029] [I] [thread 35509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:44.404146] [I] [thread 35509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:44.404160] [I] [thread 35509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:44.606099] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:44.606438] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:45.607674] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:46.608966] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:46.670369] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:46.670704] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:46.671823] [D] [thread 35516] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:46.671917] [I] [thread 35516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:46.671934] [I] [thread 35516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:46.672137] [I] [thread 35516] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:46.672152] [I] [thread 35516] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:46.835597] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:46.835936] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:47.837197] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:48.838488] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:48.860347] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:48.860667] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:48.861651] [D] [thread 35523] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:48.861745] [I] [thread 35523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:48.861762] [I] [thread 35523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:48.861879] [I] [thread 35523] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:48.861891] [I] [thread 35523] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:49.057383] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:49.057711] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:50.058967] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:51.060263] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:51.199763] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:51.200340] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:51.201141] [D] [thread 35529] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:51.201233] [I] [thread 35529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:51.201249] [I] [thread 35529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:51.201365] [I] [thread 35529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:51.201379] [I] [thread 35529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:51.410763] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:51.411093] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:52.412315] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:53.413599] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:53.474804] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:53.475140] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:53.476164] [D] [thread 35534] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:53.476256] [I] [thread 35534] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:53.476275] [I] [thread 35534] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:53.476390] [I] [thread 35534] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:53.476411] [I] [thread 35534] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:53.643648] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:53.644017] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:54.645255] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:55.646614] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:55.764684] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:55.765033] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:55.765959] [D] [thread 35539] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:55.766051] [I] [thread 35539] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:55.766068] [I] [thread 35539] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:55.766185] [I] [thread 35539] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:55.766198] [I] [thread 35539] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:55.982120] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:55.982463] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:56.983825] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:57.985182] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:58.047666] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:58.048039] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:58.049024] [D] [thread 35544] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:38:58.049118] [I] [thread 35544] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:58.049134] [I] [thread 35544] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:38:58.049252] [I] [thread 35544] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:38:58.049275] [I] [thread 35544] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:38:58.220900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:58.221251] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:38:59.222496] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:00.223810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:00.275822] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:00.276202] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:00.277684] [D] [thread 35549] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:00.277778] [I] [thread 35549] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:00.277794] [I] [thread 35549] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:00.277911] [I] [thread 35549] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:00.277924] [I] [thread 35549] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:00.467270] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:00.467781] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:01.469052] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:02.459465] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:02.459996] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:02.461169] [D] [thread 35554] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:02.461260] [I] [thread 35554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:02.461276] [I] [thread 35554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:02.461395] [I] [thread 35554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:02.461407] [I] [thread 35554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:02.608341] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:02.608846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:03.610104] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:04.611448] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:04.656647] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:04.657126] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:04.658025] [D] [thread 35559] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:04.658137] [I] [thread 35559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:04.658155] [I] [thread 35559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:04.658300] [I] [thread 35559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:04.658323] [I] [thread 35559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:04.843122] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:04.843441] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:05.844631] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:06.845921] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:06.899774] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:06.900324] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:06.901097] [D] [thread 35564] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:06.901187] [I] [thread 35564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:06.901204] [I] [thread 35564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:06.901322] [I] [thread 35564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:06.901334] [I] [thread 35564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:07.072091] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:07.072390] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:08.073633] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:09.074942] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:09.096400] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:09.096703] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:09.097746] [D] [thread 35569] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:09.097841] [I] [thread 35569] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:09.097859] [I] [thread 35569] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:09.097979] [I] [thread 35569] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:09.097993] [I] [thread 35569] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:09.310192] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:09.310502] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:10.311717] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:11.312176] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:11.362216] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:11.362549] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:11.363555] [D] [thread 35574] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:11.363649] [I] [thread 35574] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:11.363666] [I] [thread 35574] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:11.363784] [I] [thread 35574] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:11.363797] [I] [thread 35574] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:11.527878] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:11.528248] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:12.529463] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:13.530775] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:13.669421] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:13.669755] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:13.670707] [D] [thread 35580] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:13.670800] [I] [thread 35580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:13.670816] [I] [thread 35580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:13.670932] [I] [thread 35580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:13.670944] [I] [thread 35580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:13.883931] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:13.884274] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:14.885518] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:15.886832] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:16.028760] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:16.029073] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:16.030060] [D] [thread 35587] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:16.030185] [I] [thread 35587] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:16.030203] [I] [thread 35587] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:16.030320] [I] [thread 35587] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:16.030333] [I] [thread 35587] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:16.189001] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:16.189318] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:17.190534] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:18.191814] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:18.252043] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:18.252349] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:18.253545] [D] [thread 35594] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:18.253640] [I] [thread 35594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:18.253657] [I] [thread 35594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:18.253773] [I] [thread 35594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:18.253787] [I] [thread 35594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:18.444693] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:18.445014] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:19.446257] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:20.447568] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:20.485178] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:20.485489] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:20.486478] [D] [thread 35601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:20.486571] [I] [thread 35601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:20.486588] [I] [thread 35601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:20.486704] [I] [thread 35601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:20.486717] [I] [thread 35601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:20.679591] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:20.680142] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:21.681447] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:22.682773] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:22.789108] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:22.789651] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:22.790407] [D] [thread 35608] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:22.790496] [I] [thread 35608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:22.790513] [I] [thread 35608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:22.790630] [I] [thread 35608] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:22.790643] [I] [thread 35608] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:23.056948] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:23.057469] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:24.058724] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:25.042487] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:25.042801] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:25.043863] [D] [thread 35616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:25.043987] [I] [thread 35616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:25.044009] [I] [thread 35616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:25.044129] [I] [thread 35616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:25.044144] [I] [thread 35616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:25.239274] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:25.239585] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:26.240818] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:27.242114] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:27.305486] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:27.305808] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:27.306825] [D] [thread 35624] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:27.306917] [I] [thread 35624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:27.306934] [I] [thread 35624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:27.307048] [I] [thread 35624] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:27.307071] [I] [thread 35624] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:27.469652] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:27.470208] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:28.471499] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:29.472816] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:29.515440] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:29.516039] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:29.516816] [D] [thread 35630] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:29.516909] [I] [thread 35630] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:29.516925] [I] [thread 35630] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:29.517043] [I] [thread 35630] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:29.517056] [I] [thread 35630] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:29.704283] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:29.704799] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:30.706051] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:31.707354] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:31.846576] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:31.846910] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:31.848523] [D] [thread 35638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:31.848618] [I] [thread 35638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:31.848635] [I] [thread 35638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:31.848753] [I] [thread 35638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:31.848766] [I] [thread 35638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:32.054851] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:32.055332] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:33.056618] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:34.057934] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:34.103052] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:34.103530] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:34.104429] [D] [thread 35645] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:34.104524] [I] [thread 35645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:34.104541] [I] [thread 35645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:34.104659] [I] [thread 35645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:34.104672] [I] [thread 35645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:34.287501] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:34.287980] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:35.289233] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:36.290541] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:36.343249] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:36.343731] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:36.344617] [D] [thread 35652] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:36.344711] [I] [thread 35652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:36.344728] [I] [thread 35652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:36.344845] [I] [thread 35652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:36.344860] [I] [thread 35652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:36.508066] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:36.508572] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:37.509866] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:38.511186] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:38.531302] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:38.531779] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:38.532949] [D] [thread 35661] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:38.533066] [I] [thread 35661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:38.533086] [I] [thread 35661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:38.533208] [I] [thread 35661] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:38.533226] [I] [thread 35661] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:38.731074] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:38.731580] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:39.732148] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:40.733444] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:40.770174] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:40.770659] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:40.771727] [D] [thread 35670] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:40.771837] [I] [thread 35670] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:40.771855] [I] [thread 35670] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:40.772016] [I] [thread 35670] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:40.772046] [I] [thread 35670] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:40.959409] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:40.959974] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:41.961167] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:42.962464] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:43.014726] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:43.015040] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:43.016144] [D] [thread 35678] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:43.016240] [I] [thread 35678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:43.016259] [I] [thread 35678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:43.016377] [I] [thread 35678] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:43.016400] [I] [thread 35678] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:43.187320] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:43.187629] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:44.188861] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:45.190182] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:45.331774] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:45.332116] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:45.333199] [D] [thread 35685] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:45.333294] [I] [thread 35685] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:45.333311] [I] [thread 35685] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:45.333427] [I] [thread 35685] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:45.333440] [I] [thread 35685] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:45.542620] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:45.542963] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:46.544209] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:47.545447] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:47.548550] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:47.548879] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:47.549862] [D] [thread 35694] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:47.549952] [I] [thread 35694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:47.549970] [I] [thread 35694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:47.550086] [I] [thread 35694] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:47.550152] [I] [thread 35694] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:47.763073] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:47.763406] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:48.764646] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:49.765917] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:49.826139] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:49.826461] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:49.827693] [D] [thread 35702] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:49.827787] [I] [thread 35702] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:49.827804] [I] [thread 35702] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:49.827922] [I] [thread 35702] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:49.827934] [I] [thread 35702] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:50.018971] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:50.019305] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:51.020575] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:52.021898] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:52.044580] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:52.044913] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:52.045892] [D] [thread 35709] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:52.045983] [I] [thread 35709] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:52.046000] [I] [thread 35709] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:52.046116] [I] [thread 35709] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:52.046172] [I] [thread 35709] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:52.254810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:52.255216] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:53.256462] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:54.257755] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:54.318814] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:54.319140] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:54.320717] [D] [thread 35715] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:54.320813] [I] [thread 35715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:54.320829] [I] [thread 35715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:54.320945] [I] [thread 35715] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:54.320959] [I] [thread 35715] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:54.491199] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:54.491515] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:55.492759] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:56.494074] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:56.541342] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:56.541642] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:56.542662] [D] [thread 35721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:56.542754] [I] [thread 35721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:56.542770] [I] [thread 35721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:56.542888] [I] [thread 35721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:56.542901] [I] [thread 35721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:56.723066] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:56.723435] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:57.724679] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:58.725894] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:58.728860] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:58.729183] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:58.730209] [D] [thread 35729] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:39:58.730340] [I] [thread 35729] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:58.730357] [I] [thread 35729] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:39:58.730475] [I] [thread 35729] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:39:58.730508] [I] [thread 35729] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:39:58.935883] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:58.936220] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:39:59.937433] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:00.938681] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:00.974136] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:00.974470] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:00.976088] [D] [thread 35735] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:00.976180] [I] [thread 35735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:00.976198] [I] [thread 35735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:00.976317] [I] [thread 35735] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:00.976331] [I] [thread 35735] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:01.147912] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:01.148260] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:02.149499] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:03.150807] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:03.194804] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:03.195156] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:03.196570] [D] [thread 35741] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:03.196664] [I] [thread 35741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:03.196681] [I] [thread 35741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:03.196797] [I] [thread 35741] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:03.196811] [I] [thread 35741] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:03.376648] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:03.376971] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:04.378218] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:05.316641] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:05.317109] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:05.318380] [D] [thread 35747] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:05.318498] [I] [thread 35747] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:05.318517] [I] [thread 35747] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:05.318637] [I] [thread 35747] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:05.318654] [I] [thread 35747] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:05.520101] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:05.520609] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:06.521821] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:07.523131] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:07.549445] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:07.549810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:07.551005] [D] [thread 35752] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:07.551217] [I] [thread 35752] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:07.551239] [I] [thread 35752] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:07.551368] [I] [thread 35752] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:07.551386] [I] [thread 35752] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:07.767027] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:07.767379] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:08.768546] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:09.769824] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:09.835219] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:09.835689] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:09.836598] [D] [thread 35757] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:09.836691] [I] [thread 35757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:09.836707] [I] [thread 35757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:09.836824] [I] [thread 35757] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:09.836837] [I] [thread 35757] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:10.014720] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:10.015169] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:11.016504] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:12.017823] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:12.024288] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:12.024590] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:12.026193] [D] [thread 35766] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:12.026320] [I] [thread 35766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:12.026338] [I] [thread 35766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:12.026457] [I] [thread 35766] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:12.026471] [I] [thread 35766] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:12.229925] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:12.230264] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:13.231513] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:14.232121] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:14.238736] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:14.239037] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:14.240084] [D] [thread 35773] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:14.240173] [I] [thread 35773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:14.240192] [I] [thread 35773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:14.240308] [I] [thread 35773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:14.240321] [I] [thread 35773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:14.404557] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:14.404876] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:15.406084] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:16.403983] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:16.404443] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:16.405333] [D] [thread 35779] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:16.405426] [I] [thread 35779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:16.405443] [I] [thread 35779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:16.405558] [I] [thread 35779] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:16.405571] [I] [thread 35779] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:16.594776] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:16.595268] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:17.596561] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.597843] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.646401] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.646921] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.647826] [D] [thread 35785] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:18.647922] [I] [thread 35785] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:18.647970] [I] [thread 35785] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:18.648094] [I] [thread 35785] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:18.648107] [I] [thread 35785] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:18.837151] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.837617] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:19.838931] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:20.840336] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:20.976474] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:20.976982] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:20.977821] [D] [thread 35795] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:20.977917] [I] [thread 35795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:20.977933] [I] [thread 35795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:20.978052] [I] [thread 35795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:20.978066] [I] [thread 35795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:21.195187] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:21.195507] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:22.196169] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.197498] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.233020] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.233363] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.234515] [D] [thread 35805] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:23.234610] [I] [thread 35805] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:23.234627] [I] [thread 35805] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:23.234746] [I] [thread 35805] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:23.234759] [I] [thread 35805] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:23.396872] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.397219] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:24.398476] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.399797] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.420846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.421164] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.422139] [D] [thread 35813] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:25.422267] [I] [thread 35813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:25.422286] [I] [thread 35813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:25.422404] [I] [thread 35813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:25.422417] [I] [thread 35813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:25.678900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.679207] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:26.680429] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.676264] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.676612] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.677749] [D] [thread 35821] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:27.677843] [I] [thread 35821] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:27.677860] [I] [thread 35821] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:27.677978] [I] [thread 35821] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:27.677992] [I] [thread 35821] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:27.929620] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.929947] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:28.931265] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:29.932160] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:29.950381] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:29.950710] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:29.951887] [D] [thread 35830] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:29.952007] [I] [thread 35830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:29.952025] [I] [thread 35830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:29.952145] [I] [thread 35830] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:29.952158] [I] [thread 35830] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:30.163171] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:30.163527] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:31.164789] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:32.165186] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:32.165505] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:32.166680] [D] [thread 35837] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:32.166770] [I] [thread 35837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:32.166787] [I] [thread 35837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:32.166907] [I] [thread 35837] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:32.166920] [I] [thread 35837] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:32.360370] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:32.360914] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:33.362176] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.363428] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.402781] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.403336] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.404430] [D] [thread 35847] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:34.404538] [I] [thread 35847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:34.404556] [I] [thread 35847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:34.404680] [I] [thread 35847] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:34.404696] [I] [thread 35847] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:34.587212] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.587721] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:35.588089] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:36.589357] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:36.652030] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:36.652337] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:36.653551] [D] [thread 35852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:36.653667] [I] [thread 35852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:36.653686] [I] [thread 35852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:36.653811] [I] [thread 35852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:36.653840] [I] [thread 35852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:36.838517] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:36.838870] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:37.840051] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.823684] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.824064] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.825023] [D] [thread 35859] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:38.825117] [I] [thread 35859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:38.825133] [I] [thread 35859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:38.825251] [I] [thread 35859] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:38.825264] [I] [thread 35859] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:39.026325] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:39.026654] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:40.027916] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.029311] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.068181] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.068503] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.069918] [D] [thread 35864] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:41.070013] [I] [thread 35864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:41.070029] [I] [thread 35864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:41.070148] [I] [thread 35864] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:41.070161] [I] [thread 35864] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:41.252756] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.253065] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:42.254267] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:43.255555] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:43.393526] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:43.393957] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:43.394857] [D] [thread 35869] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:43.394948] [I] [thread 35869] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:43.394965] [I] [thread 35869] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:43.395084] [I] [thread 35869] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:43.395097] [I] [thread 35869] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:43.578727] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:43.579063] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:44.580294] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.581602] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.631721] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.632079] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.633101] [D] [thread 35875] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:45.633198] [I] [thread 35875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:45.633215] [I] [thread 35875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:45.633331] [I] [thread 35875] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:45.633355] [I] [thread 35875] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:45.799593] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.799966] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:46.801192] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:47.802459] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:47.836054] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:47.836392] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:47.837420] [D] [thread 35883] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:47.837514] [I] [thread 35883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:47.837531] [I] [thread 35883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:47.837650] [I] [thread 35883] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:47.837663] [I] [thread 35883] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:48.021232] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:48.021571] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:49.022808] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.024124] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.071894] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.072245] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.073365] [D] [thread 35889] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:50.073459] [I] [thread 35889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:50.073476] [I] [thread 35889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:50.073594] [I] [thread 35889] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:50.073611] [I] [thread 35889] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:50.257483] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.257940] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:51.259167] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.260454] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.295313] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.295783] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.296707] [D] [thread 35897] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:52.296803] [I] [thread 35897] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:52.296820] [I] [thread 35897] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:52.296937] [I] [thread 35897] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:52.296950] [I] [thread 35897] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:52.482785] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.483116] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:53.484277] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.485686] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.624996] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.625312] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.626350] [D] [thread 35905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:54.626445] [I] [thread 35905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:54.626462] [I] [thread 35905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:54.626581] [I] [thread 35905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:54.626594] [I] [thread 35905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:54.829902] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.830246] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:55.831484] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.832792] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.968759] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.969072] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.970057] [D] [thread 35912] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:56.970183] [I] [thread 35912] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:56.970202] [I] [thread 35912] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:56.970321] [I] [thread 35912] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:56.970335] [I] [thread 35912] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:57.166203] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:57.166527] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:58.167721] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:59.168158] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:59.202237] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:59.202545] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:59.203712] [D] [thread 35920] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:40:59.203809] [I] [thread 35920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:59.203826] [I] [thread 35920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:40:59.203975] [I] [thread 35920] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:40:59.203994] [I] [thread 35920] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:40:59.372800] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:59.373133] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:00.374367] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.375623] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.391302] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.391744] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.392699] [D] [thread 35927] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:01.392793] [I] [thread 35927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:01.392810] [I] [thread 35927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:01.392928] [I] [thread 35927] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:01.392941] [I] [thread 35927] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:01.599416] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.599904] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:02.601227] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.602507] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.747771] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.748389] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.749148] [D] [thread 35934] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:03.749241] [I] [thread 35934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:03.749257] [I] [thread 35934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:03.749377] [I] [thread 35934] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:03.749390] [I] [thread 35934] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:03.907487] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.908030] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:04.909289] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.884590] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.884961] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.886179] [D] [thread 35939] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:05.886298] [I] [thread 35939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:05.886317] [I] [thread 35939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:05.886460] [I] [thread 35939] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:05.886474] [I] [thread 35939] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:06.080949] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:06.081303] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:07.082514] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.083751] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.102494] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.102797] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.103838] [D] [thread 35945] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:08.103931] [I] [thread 35945] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:08.103981] [I] [thread 35945] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:08.104115] [I] [thread 35945] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:08.104131] [I] [thread 35945] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:08.292804] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.293164] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:09.294337] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.295678] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.331487] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.332017] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.332929] [D] [thread 35954] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:10.333021] [I] [thread 35954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:10.333037] [I] [thread 35954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:10.333155] [I] [thread 35954] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:10.333168] [I] [thread 35954] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:10.510433] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.510944] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:11.512226] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.513551] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.544690] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.545030] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.545982] [D] [thread 35962] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:12.546107] [I] [thread 35962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:12.546126] [I] [thread 35962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:12.546243] [I] [thread 35962] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:12.546257] [I] [thread 35962] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:12.749351] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.749681] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:13.750905] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.752170] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.784248] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.784582] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.785555] [D] [thread 35969] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:14.785647] [I] [thread 35969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:14.785664] [I] [thread 35969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:14.785781] [I] [thread 35969] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:14.785794] [I] [thread 35969] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:14.996912] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.997231] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:15.998449] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:16.979544] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:16.979861] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:16.980982] [D] [thread 35977] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:16.981078] [I] [thread 35977] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:16.981095] [I] [thread 35977] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:16.981213] [I] [thread 35977] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:16.981227] [I] [thread 35977] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:17.195404] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:17.195709] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:18.196935] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.183849] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.184215] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.185237] [D] [thread 35985] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:19.185332] [I] [thread 35985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:19.185348] [I] [thread 35985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:19.185467] [I] [thread 35985] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:19.185490] [I] [thread 35985] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:19.389902] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.390250] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:20.391510] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.392757] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.424831] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.425285] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.426137] [D] [thread 35994] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:21.426230] [I] [thread 35994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:21.426248] [I] [thread 35994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:21.426386] [I] [thread 35994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:21.426423] [I] [thread 35994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:21.618749] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.619176] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:22.620469] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.621775] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.670386] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.670992] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.671832] [D] [thread 36003] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:23.671975] [I] [thread 36003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:23.671998] [I] [thread 36003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:23.672126] [I] [thread 36003] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:23.672145] [I] [thread 36003] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:23.839450] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.839997] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:24.841267] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.842547] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.851925] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.852273] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.853868] [D] [thread 36010] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:25.853962] [I] [thread 36010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:25.853979] [I] [thread 36010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:25.854098] [I] [thread 36010] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:25.854110] [I] [thread 36010] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:26.067532] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:26.067843] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:27.069076] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.070397] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.122443] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.122759] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.124480] [D] [thread 36019] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:28.124579] [I] [thread 36019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:28.124595] [I] [thread 36019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:28.124714] [I] [thread 36019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:28.124727] [I] [thread 36019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:28.296404] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.296735] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:29.297816] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.299070] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.346761] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.347126] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.348090] [D] [thread 36027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:30.348176] [I] [thread 36027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:30.348195] [I] [thread 36027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:30.348312] [I] [thread 36027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:30.348326] [I] [thread 36027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:30.529093] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.529482] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:31.530667] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.531858] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.575876] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.576214] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.577383] [D] [thread 36037] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:32.577495] [I] [thread 36037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:32.577514] [I] [thread 36037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:32.577637] [I] [thread 36037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:32.577660] [I] [thread 36037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:32.746873] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.747191] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:33.748351] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.749636] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.927627] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.927978] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.929298] [D] [thread 36046] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:34.929397] [I] [thread 36046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:34.929415] [I] [thread 36046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:34.929545] [I] [thread 36046] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:34.929560] [I] [thread 36046] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:35.255405] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:35.255740] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:36.256989] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.258239] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.390925] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.391247] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.392342] [D] [thread 36055] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:37.392436] [I] [thread 36055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:37.392453] [I] [thread 36055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:37.392570] [I] [thread 36055] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:37.392583] [I] [thread 36055] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:37.545523] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.545849] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:38.547165] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.534900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.535201] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.536410] [D] [thread 36064] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:39.536537] [I] [thread 36064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:39.536557] [I] [thread 36064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:39.536753] [I] [thread 36064] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:39.536780] [I] [thread 36064] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:39.743641] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.744014] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:40.745185] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.746469] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.886446] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.886916] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.888207] [D] [thread 36072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:41.888310] [I] [thread 36072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:41.888328] [I] [thread 36072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:41.888550] [I] [thread 36072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:41.888571] [I] [thread 36072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:42.039300] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:42.039634] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:43.040800] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.042037] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.052958] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.053337] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.054487] [D] [thread 36081] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:44.054580] [I] [thread 36081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:44.054597] [I] [thread 36081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:44.054715] [I] [thread 36081] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:44.054729] [I] [thread 36081] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:44.264009] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.264351] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:45.265594] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.266883] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.304328] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.304642] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.305637] [D] [thread 36091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:46.305733] [I] [thread 36091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:46.305751] [I] [thread 36091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:46.305869] [I] [thread 36091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:46.305882] [I] [thread 36091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:46.470856] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.471189] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:47.472408] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.473721] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.616259] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.616588] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.618137] [D] [thread 36098] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:48.618233] [I] [thread 36098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:48.618251] [I] [thread 36098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:48.618369] [I] [thread 36098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:48.618382] [I] [thread 36098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:48.780550] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.780867] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:49.782088] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.783353] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.983913] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.984259] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.985248] [D] [thread 36106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:50.985339] [I] [thread 36106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:50.985355] [I] [thread 36106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:50.985472] [I] [thread 36106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:50.985485] [I] [thread 36106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:51.199569] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:51.199869] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.201080] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:53.201129] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:53.201445] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:53.202448] [D] [thread 36113] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:53.202540] [I] [thread 36113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:53.202558] [I] [thread 36113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:53.202674] [I] [thread 36113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:53.202687] [I] [thread 36113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:53.411752] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:53.412108] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:54.413367] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.414680] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.451341] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.451648] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.452790] [D] [thread 36121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:55.452888] [I] [thread 36121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:55.452904] [I] [thread 36121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:55.453020] [I] [thread 36121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:55.453099] [I] [thread 36121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:55.615570] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.615900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:56.617131] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.618422] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.662676] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.662983] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.664062] [D] [thread 36130] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:57.664153] [I] [thread 36130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:57.664171] [I] [thread 36130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:57.664289] [I] [thread 36130] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:57.664302] [I] [thread 36130] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:57.844198] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.844549] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:58.845799] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.847104] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.892252] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.892590] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.893565] [D] [thread 36140] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:59.893658] [I] [thread 36140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:59.893675] [I] [thread 36140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:59.893792] [I] [thread 36140] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:59.893805] [I] [thread 36140] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:00.056597] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:00.056932] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:01.058224] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.059480] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.200818] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.201369] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.202131] [D] [thread 36150] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:02.202253] [I] [thread 36150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:02.202270] [I] [thread 36150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:02.202391] [I] [thread 36150] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:02.202404] [I] [thread 36150] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:02.407859] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.408407] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:03.409700] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.411004] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.445303] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.445887] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.446647] [D] [thread 36159] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:04.446740] [I] [thread 36159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:04.446757] [I] [thread 36159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:04.446873] [I] [thread 36159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:04.446886] [I] [thread 36159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:04.644344] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.644660] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:05.645893] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.647213] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.695198] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.695506] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.696598] [D] [thread 36168] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:06.696675] [I] [thread 36168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:06.696692] [I] [thread 36168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:06.696812] [I] [thread 36168] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:06.696825] [I] [thread 36168] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:06.861517] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.861867] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:07.863108] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.859732] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.860101] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.861239] [D] [thread 36178] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:08.861331] [I] [thread 36178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:08.861349] [I] [thread 36178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:08.861467] [I] [thread 36178] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:08.861481] [I] [thread 36178] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:09.079799] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:09.080158] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.081429] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.082695] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.135442] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.135900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.136772] [D] [thread 36187] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:11.136864] [I] [thread 36187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:11.136881] [I] [thread 36187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:11.137001] [I] [thread 36187] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:11.137016] [I] [thread 36187] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:11.303324] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.303821] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:12.305041] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.306224] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.351287] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.351812] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.352982] [D] [thread 36195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:13.353094] [I] [thread 36195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:13.353111] [I] [thread 36195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:13.353234] [I] [thread 36195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:13.353251] [I] [thread 36195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:13.535925] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.536422] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:14.537683] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.538953] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.600980] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.601391] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.603081] [D] [thread 36203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:15.603227] [I] [thread 36203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:15.603247] [I] [thread 36203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:15.603413] [I] [thread 36203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:15.603432] [I] [thread 36203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:15.762605] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.762940] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:16.764238] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.765551] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.796155] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.796456] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.797474] [D] [thread 36211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:17.797566] [I] [thread 36211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:17.797582] [I] [thread 36211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:17.797700] [I] [thread 36211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:17.797713] [I] [thread 36211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:18.008319] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:18.008626] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.009870] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.011185] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.068848] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.069168] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.070607] [D] [thread 36224] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:20.070700] [I] [thread 36224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:20.070716] [I] [thread 36224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:20.070837] [I] [thread 36224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:20.070851] [I] [thread 36224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:20.252110] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.252457] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.253671] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.255050] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.266273] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.266578] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.267680] [D] [thread 36234] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:22.267777] [I] [thread 36234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:22.267794] [I] [thread 36234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:22.267913] [I] [thread 36234] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:22.267936] [I] [thread 36234] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:22.463812] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.464182] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:23.465399] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.466759] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.615744] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.616151] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.617300] [D] [thread 36244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:24.617394] [I] [thread 36244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:24.617411] [I] [thread 36244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:24.617528] [I] [thread 36244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:24.617541] [I] [thread 36244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:24.776537] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.776888] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:25.778127] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.779407] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.888502] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.888844] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.889813] [D] [thread 36252] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:26.889902] [I] [thread 36252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:26.889919] [I] [thread 36252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:26.890037] [I] [thread 36252] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:26.890050] [I] [thread 36252] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:27.151792] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:27.152177] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.153405] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.154727] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.255128] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.255477] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.256506] [D] [thread 36263] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:29.256602] [I] [thread 36263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:29.256619] [I] [thread 36263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:29.256737] [I] [thread 36263] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:29.256760] [I] [thread 36263] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:29.420665] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.421118] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.422415] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.423706] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.482768] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.483097] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.484778] [D] [thread 36272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:31.484887] [I] [thread 36272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:31.484905] [I] [thread 36272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:31.485033] [I] [thread 36272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:31.485052] [I] [thread 36272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:31.670702] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.671049] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:32.672296] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.673551] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.731231] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.731542] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.733208] [D] [thread 36280] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:33.733303] [I] [thread 36280] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:33.733320] [I] [thread 36280] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:33.733437] [I] [thread 36280] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:33.733449] [I] [thread 36280] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:33.891845] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.892198] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:34.893444] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.894729] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.955873] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.956228] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.957790] [D] [thread 36289] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:35.957881] [I] [thread 36289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:35.957898] [I] [thread 36289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:35.958017] [I] [thread 36289] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:35.958029] [I] [thread 36289] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:36.141810] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:36.142166] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.143410] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:38.131891] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:38.132269] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:38.133872] [D] [thread 36297] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:38.133964] [I] [thread 36297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:38.133980] [I] [thread 36297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:38.134099] [I] [thread 36297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:38.134112] [I] [thread 36297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:38.341204] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:38.341552] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.342803] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.344132] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.403314] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.403621] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.404717] [D] [thread 36305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:40.404815] [I] [thread 36305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:40.404832] [I] [thread 36305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:40.404952] [I] [thread 36305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:40.404966] [I] [thread 36305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:40.590303] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.590662] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:41.592077] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.593381] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.636246] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.636571] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.637742] [D] [thread 36314] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:42.637837] [I] [thread 36314] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:42.637854] [I] [thread 36314] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:42.637969] [I] [thread 36314] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:42.637983] [I] [thread 36314] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:42.808446] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.809000] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:43.810296] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.811523] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.852754] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.853067] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.854254] [D] [thread 36323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:44.854415] [I] [thread 36323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:44.854434] [I] [thread 36323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:44.854562] [I] [thread 36323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:44.854575] [I] [thread 36323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:45.039332] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:45.039668] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:46.040849] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.042245] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.054874] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.055175] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.056338] [D] [thread 36332] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:47.056441] [I] [thread 36332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:47.056459] [I] [thread 36332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:47.056595] [I] [thread 36332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:47.056612] [I] [thread 36332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:47.210161] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.210474] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.211715] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:49.196929] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:49.197243] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:49.198371] [D] [thread 36340] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:49.198468] [I] [thread 36340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:49.198484] [I] [thread 36340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:49.198600] [I] [thread 36340] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:49.198614] [I] [thread 36340] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:49.408298] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:49.408638] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:50.409846] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.411118] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.423546] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.423909] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.425083] [D] [thread 36347] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:51.425178] [I] [thread 36347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:51.425194] [I] [thread 36347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:51.425312] [I] [thread 36347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:51.425325] [I] [thread 36347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:51.632138] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.632480] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:52.633725] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.635040] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.774857] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.775205] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.776385] [D] [thread 36354] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:53.776479] [I] [thread 36354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:53.776495] [I] [thread 36354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:53.776614] [I] [thread 36354] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:53.776627] [I] [thread 36354] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:53.982600] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.982941] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:54.984181] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:55.985468] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:56.124896] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:56.125418] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:56.126185] [D] [thread 36362] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:56.126309] [I] [thread 36362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:56.126327] [I] [thread 36362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:56.126448] [I] [thread 36362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:56.126461] [I] [thread 36362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:56.282890] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:56.283226] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.284510] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.285725] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.320310] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.320622] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.321642] [D] [thread 36368] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:58.321737] [I] [thread 36368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:58.321754] [I] [thread 36368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:58.321872] [I] [thread 36368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:58.321890] [I] [thread 36368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:58.507354] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.507667] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.508900] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.510190] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.557902] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.558235] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.559252] [D] [thread 36376] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:00.559351] [I] [thread 36376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:00.559369] [I] [thread 36376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:00.559480] [I] [thread 36376] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:00.559493] [I] [thread 36376] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:00.724069] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.724376] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:01.725609] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:02.726888] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:02.839480] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:02.839813] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:02.841466] [D] [thread 36385] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:02.841594] [I] [thread 36385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:02.841612] [I] [thread 36385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:02.841732] [I] [thread 36385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:02.841745] [I] [thread 36385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:03.058496] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:03.058961] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.060238] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.061470] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.063388] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.063851] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.064783] [D] [thread 36394] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:05.064873] [I] [thread 36394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:05.064890] [I] [thread 36394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:05.065007] [I] [thread 36394] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:05.065020] [I] [thread 36394] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:05.279544] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.280114] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.281427] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.282760] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.321931] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.322458] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.323259] [D] [thread 36400] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:07.323347] [I] [thread 36400] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:07.323364] [I] [thread 36400] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:07.323482] [I] [thread 36400] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:07.323494] [I] [thread 36400] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:07.503037] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.503354] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.504586] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.505896] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.652944] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.653426] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.654246] [D] [thread 36408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:09.654334] [I] [thread 36408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:09.654351] [I] [thread 36408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:09.654467] [I] [thread 36408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:09.654481] [I] [thread 36408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:09.872104] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.872549] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:10.873800] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:11.875198] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:12.022143] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:12.022634] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:12.023452] [D] [thread 36416] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:12.023543] [I] [thread 36416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:12.023560] [I] [thread 36416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:12.023676] [I] [thread 36416] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:12.023690] [I] [thread 36416] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:12.235718] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:12.236068] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.237313] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.238632] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.379769] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.380105] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.381141] [D] [thread 36422] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:14.381235] [I] [thread 36422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:14.381252] [I] [thread 36422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:14.381369] [I] [thread 36422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:14.381383] [I] [thread 36422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:14.589236] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.589546] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.590783] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.592133] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.635291] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.635602] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.636691] [D] [thread 36430] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:16.636785] [I] [thread 36430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:16.636803] [I] [thread 36430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:16.636921] [I] [thread 36430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:16.636935] [I] [thread 36430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:16.819560] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.819871] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:17.821073] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:18.822359] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:18.880081] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:18.880389] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:18.881430] [D] [thread 36439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:18.881525] [I] [thread 36439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:18.881542] [I] [thread 36439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:18.881659] [I] [thread 36439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:18.881672] [I] [thread 36439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:19.044658] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:19.045004] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:19.236418] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:19.236738] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:43:19.237741] [I] [thread 36443] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[17:43:19.237828] [D] [thread 36443] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[17:43:19.237967] [I] [thread 36443] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[17:43:19.237984] [I] [thread 36443] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[17:43:19.238117] [I] [thread 35120] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[17:43:19.238193] [I] [thread 35120] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[17:43:19.238216] [I] [thread 35120] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[17:43:19.238264] [I] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[17:43:19.238278] [D] [thread 35120] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[17:43:19.238327] [D] [thread 35120] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[17:43:19.238493] [D] [thread 35120] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[17:43:19.238966] [D] [thread 35120] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[17:43:19.239027] [D] [thread 35120] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[17:43:19.239107] [D] [thread 35120] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[17:43:19.239123] [D] [thread 35120] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[17:43:19.239131] [D] [thread 35120] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[17:43:19.239162] [D] [thread 35120] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[17:43:19.239182] [D] [thread 35120] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:43:19.239244] [D] [thread 35120] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[17:43:19.239260] [D] [thread 35120] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[17:43:19.239401] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.33:45855[m
[36m[17:43:19.239431] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:45855 queryId=1[m
[36m[17:43:19.244733] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.32:43905[m
[36m[17:43:19.244819] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:43905 queryId=1[m
[36m[17:43:19.249120] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.35:34879[m
[36m[17:43:19.249319] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:34879 queryId=1[m
[36m[17:43:19.253677] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.34:43721[m
[36m[17:43:19.253763] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:43721 queryId=1[m
[36m[17:43:19.257992] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:39413[m
[36m[17:43:19.258077] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:39413 queryId=1[m
[36m[17:43:19.262208] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.36:42379[m
[36m[17:43:19.262293] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.36:42379 queryId=1[m
[36m[17:43:19.266463] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=11 and IP=192.168.2.39:44559[m
[36m[17:43:19.266547] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.39:44559 queryId=1[m
[36m[17:43:19.270724] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:33101[m
[36m[17:43:19.270851] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:33101 queryId=1[m
[36m[17:43:19.274915] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.30:34457[m
[36m[17:43:19.275000] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:34457 queryId=1[m
[36m[17:43:19.279381] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.10:37133[m
[36m[17:43:19.279466] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.10:37133 queryId=1[m
[36m[17:43:19.283611] [D] [thread 35120] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.31:35535[m
[36m[17:43:19.283740] [D] [thread 35120] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:35535 queryId=1[m
[36m[17:43:19.287780] [D] [thread 35120] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 11 queues[m
[36m[17:43:19.342366] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.342522] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::61::0::0(threadId=0)[m
[32m[17:43:19.342650] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::61::0::0; newCnt(1)[m
[36m[17:43:19.342689] [D] [thread 35129] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::61::0::0, counter is at 1.[m
[36m[17:43:19.342829] [D] [thread 35129] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[17:43:19.342879] [W] [thread 35129] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.357471] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.357612] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::46::0::0(threadId=0)[m
[32m[17:43:19.357700] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::46::0::0; newCnt(1)[m
[36m[17:43:19.357733] [D] [thread 35129] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::46::0::0, counter is at 1.[m
[36m[17:43:19.357915] [D] [thread 35129] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[17:43:19.357955] [W] [thread 35129] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.384465] [D] [thread 35132] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[17:43:19.384613] [D] [thread 35132] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[17:43:19.384735] [D] [thread 35132] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  9  type= HardStop[m
[36m[17:43:19.384790] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.384870] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.385067] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.385489] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 34 is notifying completion: HardStop[m
[36m[17:43:19.385608] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 34 is terminated; tokens left = 9[m
[36m[17:43:19.385663] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 34 terminationType=HardStop[m
[36m[17:43:19.385679] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::34::0::0[m
[36m[17:43:19.385795] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.385940] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.385926] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::34::0::0 Thread 0[m
[36m[17:43:19.386054] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::34::0::0[m
[36m[17:43:19.386161] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::34::0::0[m
[36m[17:43:19.386179] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=34 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.386232] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::34::0::0[m
[36m[17:43:19.386267] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:34 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.386312] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.386360] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[32m[17:43:19.386412] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::34::0::0; newCnt(1)[m
[36m[17:43:19.386472] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.386512] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::34::0::0, counter is at 1.[m
[36m[17:43:19.386701] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 40 is notifying completion: HardStop[m
[36m[17:43:19.386756] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 40 is terminated; tokens left = 8[m
[36m[17:43:19.386794] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 40 terminationType=HardStop[m
[36m[17:43:19.386879] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.386996] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.387183] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=40 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.387247] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:40 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.387286] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.387328] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.387375] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.387433] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.387618] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 46 is notifying completion: HardStop[m
[36m[17:43:19.387663] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 46 is terminated; tokens left = 7[m
[36m[17:43:19.387699] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 46 terminationType=HardStop[m
[36m[17:43:19.387774] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.387885] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.387913] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::40::0::0[m
[36m[17:43:19.388097] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::40::0::0 Thread 0[m
[36m[17:43:19.388120] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=46 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.388175] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:46 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.388206] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.388196] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::40::0::0[m
[36m[17:43:19.388243] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.388317] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::40::0::0[m
[36m[17:43:19.388343] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.388375] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::40::0::0[m
[32m[17:43:19.388506] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::40::0::0; newCnt(1)[m
[36m[17:43:19.388520] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 52 is notifying completion: HardStop[m
[36m[17:43:19.388546] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::40::0::0, counter is at 1.[m
[36m[17:43:19.388559] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 52 is terminated; tokens left = 6[m
[36m[17:43:19.388589] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 52 terminationType=HardStop[m
[36m[17:43:19.388655] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.388781] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.388953] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=52 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.389012] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:52 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.389045] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.389081] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.389199] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.389370] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.389392] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 61 is notifying completion: HardStop[m
[36m[17:43:19.389437] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 61 is terminated; tokens left = 5[m
[36m[17:43:19.389469] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 61 terminationType=HardStop[m
[36m[17:43:19.389532] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.389637] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.389784] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=61 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.389836] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:61 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.389835] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::46::0::0[m
[36m[17:43:19.389869] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.389905] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.389977] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::46::0::0 Thread 0[m
[36m[17:43:19.389994] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.390061] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::46::0::0[m
[36m[17:43:19.390095] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::46::0::0[m
[36m[17:43:19.390160] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 70 is notifying completion: HardStop[m
[36m[17:43:19.390155] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::46::0::0[m
[36m[17:43:19.390197] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 70 is terminated; tokens left = 4[m
[36m[17:43:19.390227] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 70 terminationType=HardStop[m
[32m[17:43:19.390288] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::46::0::0; newCnt(0)[m
[36m[17:43:19.390304] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.390398] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.390566] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=70 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.390623] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:70 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.390656] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:79 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.390692] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.390781] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.390946] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 79 is notifying completion: HardStop[m
[36m[17:43:19.390984] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 79 is terminated; tokens left = 3[m
[36m[17:43:19.390945] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.391014] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 79 terminationType=HardStop[m
[36m[17:43:19.391088] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.391261] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.391420] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=79 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.391477] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:79 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.391508] [D] [thread 35132] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:88 PartitionId: 0 SubpartitionID: 0[m
[36m[17:43:19.391546] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.391556] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::52::0::0[m
[36m[17:43:19.391644] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:43:19.391662] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::52::0::0 Thread 0[m
[36m[17:43:19.391721] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::52::0::0[m
[36m[17:43:19.391791] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::52::0::0[m
[36m[17:43:19.391828] [D] [thread 35132] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 9 Source 88 is notifying completion: HardStop[m
[36m[17:43:19.391830] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::52::0::0[m
[36m[17:43:19.391865] [D] [thread 35132] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 9 Source 88 is terminated; tokens left = 2[m
[36m[17:43:19.391905] [D] [thread 35132] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 88 terminationType=HardStop[m
[36m[17:43:19.392018] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[32m[17:43:19.392043] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(1)[m
[36m[17:43:19.392084] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::52::0::0, counter is at 1.[m
[36m[17:43:19.392124] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.392302] [D] [thread 35132] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=88 reconfType=HardEndOfStream queryId=1 querySubPlanId=9 threadPool->getNumberOfThreads()=1[m
[36m[17:43:19.392362] [D] [thread 35132] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:88 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:43:19.392719] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.393177] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::61::0::0[m
[36m[17:43:19.393324] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::61::0::0 Thread 0[m
[36m[17:43:19.393407] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::61::0::0[m
[36m[17:43:19.393440] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::61::0::0[m
[36m[17:43:19.393501] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::61::0::0[m
[32m[17:43:19.393614] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::61::0::0; newCnt(0)[m
[36m[17:43:19.394217] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.394605] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::70::0::0[m
[36m[17:43:19.394740] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::70::0::0 Thread 0[m
[36m[17:43:19.394795] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::70::0::0[m
[36m[17:43:19.394860] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::70::0::0[m
[36m[17:43:19.394928] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::70::0::0[m
[32m[17:43:19.395008] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::70::0::0; newCnt(1)[m
[36m[17:43:19.395088] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::70::0::0, counter is at 1.[m
[36m[17:43:19.395652] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.396134] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::79::0::0[m
[36m[17:43:19.396251] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::79::0::0 Thread 0[m
[36m[17:43:19.396386] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::79::0::0[m
[36m[17:43:19.396466] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::79::0::0[m
[36m[17:43:19.396498] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::79::0::0[m
[32m[17:43:19.396632] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::79::0::0; newCnt(1)[m
[36m[17:43:19.396713] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::79::0::0, counter is at 1.[m
[36m[17:43:19.397346] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.397711] [D] [thread 35130] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::88::0::0[m
[36m[17:43:19.397773] [D] [thread 35130] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::88::0::0 Thread 0[m
[36m[17:43:19.397895] [D] [thread 35130] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::88::0::0[m
[36m[17:43:19.397965] [D] [thread 35130] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::88::0::0[m
[36m[17:43:19.398039] [D] [thread 35130] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::88::0::0[m
[32m[17:43:19.398138] [I] [thread 35130] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::88::0::0; newCnt(1)[m
[36m[17:43:19.398219] [D] [thread 35130] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::88::0::0, counter is at 1.[m
[36m[17:43:19.398790] [D] [thread 35130] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits)))[m
[36m[17:43:19.399238] [D] [thread 35130] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 9 Sink FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits))) is terminated; tokens left = 1[m
[36m[17:43:19.399345] [D] [thread 35130] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.399560] [D] [thread 35130] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=false type HardEndOfStream[m
[36m[17:43:19.400144] [D] [thread 35130] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink(SCHEMA(WrappedNetworkMetrics$start:INTEGER(64 bits) WrappedNetworkMetrics$end:INTEGER(64 bits) WrappedNetworkMetrics$node_id:INTEGER(64 bits) WrappedNetworkMetrics$tBytes:INTEGER(64 bits))) ] is completed with  HardStop[m
2023-10-26 17:43:19.400 postReconfigurationCallback: queryId=1, querySubPlanId=9; queryId=1 subPlanId=9 processedTasks=0 processedTuple=0 processedBuffers=0 processedWatermarks=0 latencyAVG=0 queueSizeAVG=0 availableGlobalBufferAVG=0 availableFixedBufferAVG=0
[36m[17:43:19.400626] [D] [thread 35130] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=9[m
[36m[17:43:19.400718] [D] [thread 35130] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=9[m
[36m[17:43:19.400733] [D] [thread 35130] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-9 is marked as stopped now[m
[36m[17:43:19.400928] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Destroy[m
[36m[17:43:19.401093] [D] [thread 35132] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 9 blocking=true type Destroy[m
[36m[17:43:19.401576] [D] [thread 35132] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  9[m
[36m[17:43:19.401716] [D] [thread 35132] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 9 was successful[m
[36m[17:43:19.401741] [D] [thread 35132] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  9  succeeded[m
[36m[17:43:19.401757] [D] [thread 35132] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[1m[41m[17:43:19.434012] [C] [thread 35120] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[17:43:19.434237] [I] [thread 35120] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[17:43:19.434263] [I] [thread 35120] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[17:43:19.434347] [W] [thread 35120] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[17:43:19.434369] [I] [thread 35120] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[17:43:19.434381] [W] [thread 35120] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[17:43:19.680182] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.680314] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::34::0::0(threadId=0)[m
[32m[17:43:19.680393] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::34::0::0; newCnt(0)[m
[36m[17:43:19.680453] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::34::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:19.684915] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.685029] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::40::0::0(threadId=0)[m
[32m[17:43:19.685103] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::40::0::0; newCnt(0)[m
[36m[17:43:19.685143] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::40::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:19.689830] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.690011] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::70::0::0(threadId=0)[m
[32m[17:43:19.690097] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::70::0::0; newCnt(0)[m
[36m[17:43:19.690381] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::70::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:19.694814] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.694939] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::79::0::0(threadId=0)[m
[32m[17:43:19.695022] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::79::0::0; newCnt(0)[m
[36m[17:43:19.695066] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::79::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:19.699176] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.699315] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::88::0::0(threadId=0)[m
[32m[17:43:19.699404] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::88::0::0; newCnt(0)[m
[36m[17:43:19.699453] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::88::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:19.976377] [D] [thread 35129] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.30:37557): EndOfStream received for channel [m
[36m[17:43:19.976553] [D] [thread 35129] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::52::0::0(threadId=0)[m
[32m[17:43:19.976676] [I] [thread 35129] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::52::0::0; newCnt(0)[m
[36m[17:43:19.976759] [D] [thread 35129] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::52::0::0(threadId=0) but there is still some active subpartition: 0[m
[36m[17:43:20.237986] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[17:43:20.514315] [E] [thread 36446] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::31::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab00db1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffabd46d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab00dbb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5c2efeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5a47c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffadde26c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffac45ab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaddf4ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaddf5c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab00db1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffabd46d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab00dbb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5c2efeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5a47c1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffadde26c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffac45ab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaddf4ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffaddf5c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[17:43:20.756148] [E] [thread 36446] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::49::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac88d11e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff86d1de0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac88d1b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff90c05feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff90a1ec1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88db96c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff87431b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88dcbca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88dccc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac88d11e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff86d1de0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac88d1b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff90c05feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff90a1ec1f, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88db96c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff87431b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88dcbca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff88dccc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[17:43:20.836066] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:20.836999] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:37133 went dead so we remove it[m
[32m[17:43:20.837153] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[32m[17:43:20.837179] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:20.837207] [I] [thread 35136] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:43:20.837215] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:43:20.837225] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:43:20.837234] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:43:20.837274] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:20.842141] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:20.843034] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:35535 went dead so we remove it[m
[32m[17:43:20.843179] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[17:43:20.843202] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:20.843224] [I] [thread 35136] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:43:20.843232] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:43:20.843247] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:43:20.843266] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:43:20.843290] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:21.126042] [E] [thread 36447] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 2 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac92b91e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff85ce2e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac92b9b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8fbcafeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8f9e3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8fa12623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff863f6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff87d90ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff87d91c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac92b91e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff85ce2e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac92b9b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8fbcafeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8f9e3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff8fa12623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff863f6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff87d90ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff87d91c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[17:43:21.239242] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[17:43:21.278410] [E] [thread 36447] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 5 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 1 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaad8f3c1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff73b16e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaad8f3cb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d9fefeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d817823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d846623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7422ab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff75bc4ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff75bc5c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaad8f3c1e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff73b16e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaad8f3cb9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d9fefeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d817823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff7d846623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7422ab17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff75bc4ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff75bc5c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[17:43:21.598013] [E] [thread 36446] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 6 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 4 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae35431e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff79d9ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3543b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83c86feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83a9f823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83ace623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7a4b2b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7be4cca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7be4dc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae35431e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff79d9ee0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3543b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83c86feb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83a9f823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff83ace623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff7a4b2b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7be4cca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff7be4dc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[17:43:21.882484] [E] [thread 36446] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 7 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 3 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac80271e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9d1b2e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac8027b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa709afeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6eb3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6ee2623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9d8c6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f260ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f261c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac80271e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9d1b2e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaac8027b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa709afeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6eb3823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa6ee2623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9d8c6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f260ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9f261c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[31m[1m[17:43:21.984350] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:21.985246] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.10:37133 went dead so we remove it[m
[32m[17:43:21.985392] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.10, resourceCapacity=65535, usedResource=0][m
[33m[1m[17:43:21.985421] [W] [thread 35136] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[17:43:21.990136] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:21.991033] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:35535 went dead so we remove it[m
[32m[17:43:21.991177] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[33m[1m[17:43:21.991203] [W] [thread 35136] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[17:43:21.996031] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:21.997012] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:43905 went dead so we remove it[m
[32m[17:43:21.997153] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.32, resourceCapacity=65535, usedResource=3][m
[32m[17:43:21.997177] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:21.997187] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:43:21.997213] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:43:21.997235] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:43:21.997261] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:22.002172] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:22.003088] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.33:45855 went dead so we remove it[m
[32m[17:43:22.003235] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.33, resourceCapacity=65535, usedResource=3][m
[32m[17:43:22.003259] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:22.003269] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:43:22.003295] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:43:22.003305] [I] [thread 35136] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:43:22.003339] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:22.008322] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:22.009249] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:43721 went dead so we remove it[m
[32m[17:43:22.009396] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=6, ip=192.168.2.34, resourceCapacity=65535, usedResource=3][m
[32m[17:43:22.009421] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:22.009431] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[17:43:22.009455] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:22.014342] [E] [thread 35136] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:43:22.015254] [W] [thread 35136] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.35:34879 went dead so we remove it[m
[32m[17:43:22.015397] [I] [thread 35136] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.35, resourceCapacity=65535, usedResource=3][m
[32m[17:43:22.015422] [I] [thread 35136] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:43:22.015433] [I] [thread 35136] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[17:43:22.015455] [D] [thread 35136] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:43:22.173652] [E] [thread 36447] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 8 Reason for failure: onFatalException: exception=[Failed assertion on qepStatus == Execution::ExecutableQueryPlanStatus::Finished || qepStatus == Execution::ExecutableQueryPlanStatus::ErrorState || qepStatus == Execution::ExecutableQueryPlanStatus::Stopped error message: Cannot deregisterQuery query 6 as it is not stopped/failed:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadba71e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8f5d0e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadba7b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff994bcfeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff992d5823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff99304623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8fce6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff91682ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff91683c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadba71e7, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff8f5d0e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadba7b9f, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff994bcfeb, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff992d5823, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff99304623, in NES::Runtime::AbstractQueryManager::deregisterQuery(std::shared_ptr<NES::Runtime::Execution::ExecutableQueryPlan> const&)
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff8fce6b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff91682ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff91683c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[17:43:22.240487] [D] [thread 35135] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
