
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[12:57:47.765032] [I] [thread 143132] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[12:57:47.765225] [I] [thread 143132] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[12:57:47.765485] [D] [thread 143132] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[12:57:47.766571] [D] [thread 143132] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[12:57:47.766916] [I] [thread 143132] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[12:57:47.767707] [D] [thread 143132] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[12:57:47.767803] [D] [thread 143132] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[12:57:47.768527] [D] [thread 143132] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[12:57:47.768624] [D] [thread 143132] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[12:57:47.768740] [D] [thread 143132] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[12:57:47.769062] [D] [thread 143132] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[12:57:47.769245] [D] [thread 143132] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[12:57:47.821849] [D] [thread 143132] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[12:57:47.821943] [D] [thread 143132] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:57:47.822417] [D] [thread 143132] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:57:47.822831] [D] [thread 143132] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[12:57:47.823161] [D] [thread 143132] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[12:57:47.823450] [D] [thread 143132] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[12:57:47.823635] [D] [thread 143132] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[12:57:47.824028] [D] [thread 143132] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[12:57:47.825220] [D] [thread 143132] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[12:57:47.825296] [D] [thread 143132] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[12:57:47.825586] [D] [thread 143132] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[12:57:47.825894] [D] [thread 143132] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[12:57:47.826198] [D] [thread 143132] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[12:57:47.827196] [D] [thread 143132] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[12:57:47.827702] [D] [thread 143132] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[12:57:47.827911] [D] [thread 143132] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[12:57:47.828160] [D] [thread 143132] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[12:57:47.828271] [W] [thread 143132] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[12:57:47.828312] [I] [thread 143132] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[12:57:47.828351] [D] [thread 143132] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[12:57:47.828734] [D] [thread 143132] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[12:57:47.828766] [I] [thread 143140] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[12:57:47.828839] [D] [thread 143140] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[12:57:47.829189] [D] [thread 143141] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[12:57:47.836065] [D] [thread 143141] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[12:57:47.836084] [D] [thread 143132] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[12:57:47.836141] [D] [thread 143132] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[12:57:47.836261] [D] [thread 143132] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[12:57:47.836273] [D] [thread 143132] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[12:57:47.836905] [D] [thread 143132] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[12:57:47.837111] [D] [thread 143132] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[12:57:47.837142] [D] [thread 143132] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[12:57:47.837180] [D] [thread 143132] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[12:57:47.837441] [D] [thread 143132] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[12:57:47.837510] [D] [thread 143132] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[12:57:47.837614] [I] [thread 143132] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:57:47.838283] [I] [thread 143132] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[12:57:47.838357] [I] [thread 143132] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:57:47.838615] [I] [thread 143132] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[12:57:47.838667] [I] [thread 143132] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:57:47.839164] [I] [thread 143132] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[12:57:47.839218] [I] [thread 143132] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[12:57:47.840091] [I] [thread 143132] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[12:57:47.840520] [D] [thread 143132] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[12:57:47.840785] [D] [thread 143132] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[12:57:47.840872] [W] [thread 143132] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[12:57:47.852891] [D] [thread 143132] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[12:57:47.865981] [D] [thread 143132] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[12:57:47.915455] [D] [thread 143132] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[12:57:47.915883] [W] [thread 143132] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[12:57:47.916085] [D] [thread 143132] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[12:57:47.916196] [D] [thread 143132] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[12:57:47.916282] [D] [thread 143132] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[12:57:47.916366] [D] [thread 143132] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[12:57:47.916582] [D] [thread 143132] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[12:57:47.916690] [D] [thread 143132] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[12:57:47.916982] [D] [thread 143132] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[12:57:47.917188] [D] [thread 143132] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[12:57:47.917267] [D] [thread 143132] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[12:57:47.919602] [D] [thread 143146] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[12:57:47.921227] [D] [thread 143146] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[12:57:47.921381] [D] [thread 143146] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 35105[m
[36m[12:57:47.922528] [D] [thread 143149] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 35105[m
[36m[12:57:47.922528] [D] [thread 143150] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 35105[m
[32m[12:57:47.922673] [I] [thread 143132] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:35105[m
[36m[12:57:47.922775] [D] [thread 143132] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699754584  with numThreads= 4[m
[36m[12:57:47.923035] [D] [thread 143132] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[12:57:47.924113] [D] [thread 143132] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[12:57:47.924210] [D] [thread 143132] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[12:57:47.924252] [D] [thread 143153] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 1 pins to queue 0[m
[36m[12:57:47.924293] [D] [thread 143152] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 2 pins to queue 0[m
[36m[12:57:47.924414] [D] [thread 143132] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[12:57:47.924454] [D] [thread 143132] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[12:57:47.924585] [D] [thread 143152] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[12:57:47.924252] [D] [thread 143151] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[12:57:47.925331] [D] [thread 143155] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[12:57:47.925489] [D] [thread 143154] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 3 pins to queue 0[m
[36m[12:57:47.925495] [D] [thread 143153] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[12:57:47.926194] [D] [thread 143151] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[12:57:47.926667] [D] [thread 143155] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[12:57:47.926809] [D] [thread 143154] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[12:57:47.929902] [D] [thread 143155] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 33067[m
[36m[12:57:47.929939] [D] [thread 143132] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:33067: 33067[m
[36m[12:57:47.929970] [D] [thread 143132] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[12:57:47.930000] [D] [thread 143132] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[12:57:47.930109] [D] [thread 143132] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[12:57:47.932424] [D] [thread 143155] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[12:57:47.933046] [D] [thread 143132] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[12:57:47.934250] [W] [thread 143132] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[12:57:47.934310] [D] [thread 143132] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[12:57:47.936307] [D] [thread 143132] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 33067
dataPort: 35105
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:47.948735] [D] [thread 143142] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 33067
dataPort: 35105
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:47.949031] [D] [thread 143142] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 33067
dataPort: 35105
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:47.949150] [D] [thread 143142] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[12:57:47.949173] [W] [thread 143142] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[12:57:47.949184] [D] [thread 143142] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:57:47.949195] [D] [thread 143142] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:57:47.949233] [D] [thread 143142] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[12:57:47.949438] [D] [thread 143142] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[12:57:47.949526] [I] [thread 143142] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[12:57:47.949638] [D] [thread 143142] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:57:47.949881] [D] [thread 143142] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[12:57:47.949981] [I] [thread 143142] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:57:47.950015] [D] [thread 143142] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:57:47.950054] [D] [thread 143142] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:57:47.950066] [D] [thread 143142] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:57:47.950100] [D] [thread 143142] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:57:47.951394] [D] [thread 143142] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[12:57:47.953160] [D] [thread 143132] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[12:57:47.953240] [D] [thread 143132] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[12:57:47.953343] [D] [thread 143132] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[12:57:47.953357] [D] [thread 143132] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[12:57:47.987866] [D] [thread 143132] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[12:57:47.988003] [D] [thread 143132] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[12:57:47.988019] [D] [thread 143132] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[12:57:47.988660] [D] [thread 143132] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[12:57:47.988870] [D] [thread 143132] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[12:57:47.989621] [D] [thread 143132] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[12:57:47.989700] [I] [thread 143159] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[12:57:48.006125] [I] [thread 143159] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[12:57:48.006292] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:48.021197] [D] [thread 143132] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[12:57:48.021290] [D] [thread 143132] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[12:57:48.021313] [D] [thread 143132] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[12:57:48.021783] [D] [thread 143132] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[12:57:49.007577] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:50.008883] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:51.010168] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:51.532959] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:51.534368] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:51.536643] [D] [thread 143162] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[12:57:51.539480] [D] [thread 143162] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[12:57:51.539786] [D] [thread 143162] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[12:57:51.539918] [D] [thread 143162] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[12:57:51.542149] [D] [thread 143163] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_12-57-51_5195498.cpp[m
[36m[12:57:51.542958] [D] [thread 143163] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[12:57:51.543504] [D] [thread 143163] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_13-11-2023_12-57-51_5195498.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_13-11-2023_12-57-51_5195498.cpp'[m
[36m[12:57:52.535636] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:57:53.277792] [I] [thread 143163] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1735.710671ms[m
[36m[12:57:53.279720] [D] [thread 143162] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[12:57:53.279828] [D] [thread 143162] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[12:57:53.279866] [D] [thread 143162] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[12:57:53.279925] [D] [thread 143162] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[12:57:53.463969] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:53.464513] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:57:53.465151] [I] [thread 143169] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:57:53.466388] [I] [thread 143169] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:57:53.770754] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:53.771186] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:57:53.771990] [I] [thread 143170] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:57:53.772814] [I] [thread 143170] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:57:53.938566] [D] [thread 143157] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 38749
dataPort: 36051
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:53.938834] [D] [thread 143157] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 38749
dataPort: 36051
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:53.938916] [D] [thread 143157] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:57:53.939168] [D] [thread 143157] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:57:53.939246] [D] [thread 143157] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:57:53.939403] [D] [thread 143157] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[12:57:53.939734] [D] [thread 143157] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:57:53.940038] [I] [thread 143157] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:57:53.940466] [I] [thread 143157] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:57:53.940787] [D] [thread 143157] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[12:57:53.941297] [D] [thread 143157] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:57:53.941699] [D] [thread 143157] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[12:57:53.941898] [I] [thread 143157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:57:53.941944] [D] [thread 143157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:57:53.942020] [D] [thread 143157] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:57:53.942048] [D] [thread 143157] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:57:53.942103] [D] [thread 143157] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:57:53.943184] [D] [thread 143157] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[12:57:54.772479] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:55.773768] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:56.775040] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:57.497088] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:57.497413] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:57:57.497983] [I] [thread 143171] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:57:57.498616] [I] [thread 143171] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:57:57.642396] [D] [thread 143157] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 37687
dataPort: 41099
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:57.642651] [D] [thread 143157] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 37687
dataPort: 41099
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:57:57.642729] [D] [thread 143157] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:57:57.643041] [D] [thread 143157] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:57:57.643079] [D] [thread 143157] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:57:57.643238] [D] [thread 143157] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[12:57:57.643622] [D] [thread 143157] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:57:57.643900] [I] [thread 143157] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:57:57.644096] [I] [thread 143157] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:57:57.644315] [D] [thread 143157] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[12:57:57.644596] [D] [thread 143157] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:57:57.645210] [D] [thread 143157] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[12:57:57.645325] [I] [thread 143157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:57:57.645367] [D] [thread 143157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:57:57.645418] [D] [thread 143157] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:57:57.645443] [D] [thread 143157] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:57:57.645488] [D] [thread 143157] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:57:57.646504] [D] [thread 143157] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[12:57:58.498678] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:57:59.499984] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:00.501289] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:01.446283] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:01.446811] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:01.447607] [I] [thread 143172] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:01.448854] [I] [thread 143172] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:01.590491] [D] [thread 143142] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 45131
dataPort: 43437
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:01.590715] [D] [thread 143142] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 45131
dataPort: 43437
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:01.590778] [D] [thread 143142] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:01.591025] [D] [thread 143142] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:01.591046] [D] [thread 143142] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:01.591090] [D] [thread 143142] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[12:58:01.591209] [D] [thread 143142] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:01.591270] [I] [thread 143142] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:01.591371] [I] [thread 143142] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:01.591440] [D] [thread 143142] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[12:58:01.591519] [D] [thread 143142] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:01.591709] [D] [thread 143142] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:01.591754] [I] [thread 143142] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:58:01.591777] [D] [thread 143142] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:58:01.591818] [D] [thread 143142] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:01.591835] [D] [thread 143142] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:01.591855] [D] [thread 143142] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:01.592376] [D] [thread 143142] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[12:58:02.448068] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:03.449382] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:04.450702] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:05.424822] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:05.425334] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:05.426138] [I] [thread 143173] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:05.427514] [I] [thread 143173] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:05.571995] [D] [thread 143157] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 39391
dataPort: 45739
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:05.572248] [D] [thread 143157] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 39391
dataPort: 45739
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:05.572380] [D] [thread 143157] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:05.572943] [D] [thread 143157] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:05.572999] [D] [thread 143157] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:05.573296] [D] [thread 143157] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[12:58:05.573541] [D] [thread 143157] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:05.573748] [I] [thread 143157] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:05.573905] [I] [thread 143157] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:05.574070] [D] [thread 143157] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[12:58:05.574236] [D] [thread 143157] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:05.574748] [D] [thread 143157] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:05.574864] [I] [thread 143157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:05.574895] [D] [thread 143157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:58:05.574936] [D] [thread 143157] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:05.574955] [D] [thread 143157] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:05.574977] [D] [thread 143157] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:05.575814] [D] [thread 143157] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[12:58:05.611206] [D] [thread 143157] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[12:58:05.611313] [I] [thread 143157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:05.611344] [D] [thread 143157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:58:05.611450] [D] [thread 143157] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[12:58:05.612051] [D] [thread 143157] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:05.612150] [D] [thread 143157] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[12:58:05.612511] [D] [thread 143157] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[12:58:05.612583] [D] [thread 143157] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:05.612800] [D] [thread 143157] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[12:58:05.612861] [D] [thread 143157] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:05.617046] [D] [thread 143174] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[12:58:05.617160] [D] [thread 143174] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[12:58:05.617184] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:05.617208] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:58:05.617231] [D] [thread 143174] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[12:58:05.617243] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:05.617256] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:05.617271] [D] [thread 143174] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:05.617339] [D] [thread 143174] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:05.617462] [I] [thread 143174] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:05.617511] [D] [thread 143174] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:05.617531] [D] [thread 143174] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:05.617556] [D] [thread 143174] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[12:58:05.617570] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:05.617585] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[12:58:05.617602] [D] [thread 143174] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[12:58:05.617613] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:58:05.617625] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:58:05.617640] [D] [thread 143174] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:58:05.617723] [I] [thread 143174] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[12:58:05.617766] [D] [thread 143174] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:05.617995] [D] [thread 143174] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:05.618017] [D] [thread 143174] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:06.426596] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:07.427939] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:08.429271] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:09.134822] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:09.135401] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:09.136389] [I] [thread 143175] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:09.138185] [I] [thread 143175] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:09.283094] [D] [thread 143157] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 39241
dataPort: 45109
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:09.283348] [D] [thread 143157] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 39241
dataPort: 45109
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:09.283429] [D] [thread 143157] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:09.283844] [D] [thread 143157] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:09.283912] [D] [thread 143157] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:09.283988] [D] [thread 143157] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[12:58:09.284245] [D] [thread 143157] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:09.284367] [I] [thread 143157] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:09.284485] [I] [thread 143157] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:09.284555] [D] [thread 143157] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[12:58:09.284636] [D] [thread 143157] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:09.284906] [D] [thread 143157] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:09.284984] [I] [thread 143157] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:09.285013] [D] [thread 143157] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:58:09.285049] [D] [thread 143157] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:09.285067] [D] [thread 143157] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:09.285087] [D] [thread 143157] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:09.285557] [D] [thread 143157] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[12:58:09.322276] [D] [thread 143174] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[12:58:09.322404] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:09.322450] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:58:09.322538] [D] [thread 143174] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[12:58:09.322745] [D] [thread 143174] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:09.322795] [D] [thread 143174] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[12:58:09.322910] [D] [thread 143174] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:58:09.322966] [D] [thread 143174] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[12:58:09.322999] [D] [thread 143174] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:09.323074] [D] [thread 143174] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[12:58:09.323102] [D] [thread 143174] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:09.328102] [D] [thread 143176] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[12:58:09.328215] [D] [thread 143176] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[12:58:09.328243] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:09.328270] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:58:09.328297] [D] [thread 143176] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[12:58:09.328312] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:09.328381] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:09.328405] [D] [thread 143176] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:09.328477] [D] [thread 143176] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:09.328630] [I] [thread 143176] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:09.328700] [D] [thread 143176] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:09.328725] [D] [thread 143176] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:09.328747] [D] [thread 143176] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[12:58:09.328764] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:09.328885] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[12:58:09.328920] [D] [thread 143176] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[12:58:09.328973] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[12:58:09.329058] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[12:58:09.329149] [D] [thread 143176] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[12:58:09.329484] [I] [thread 143176] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[12:58:09.329668] [D] [thread 143176] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:09.330356] [D] [thread 143176] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:09.330483] [D] [thread 143176] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:10.136763] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:11.138081] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:12.139368] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:12.812837] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:12.813249] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:12.813797] [I] [thread 143177] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:12.814775] [I] [thread 143177] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:12.958042] [D] [thread 143174] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 37343
dataPort: 43895
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:12.958254] [D] [thread 143174] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 37343
dataPort: 43895
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:12.958350] [D] [thread 143174] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:12.958922] [D] [thread 143174] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:12.958980] [D] [thread 143174] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:12.959055] [D] [thread 143174] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[12:58:12.959192] [D] [thread 143174] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:12.959289] [I] [thread 143174] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:12.959561] [I] [thread 143174] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:12.959706] [D] [thread 143174] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[12:58:12.959881] [D] [thread 143174] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:12.960588] [D] [thread 143174] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:12.960702] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:12.960733] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:58:12.960776] [D] [thread 143174] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:12.960795] [D] [thread 143174] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:12.960817] [D] [thread 143174] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:12.961664] [D] [thread 143174] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[12:58:12.997074] [D] [thread 143174] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[12:58:12.997167] [I] [thread 143174] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:12.997198] [D] [thread 143174] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:58:12.997262] [D] [thread 143174] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[12:58:12.997420] [D] [thread 143174] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:12.997454] [D] [thread 143174] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[12:58:12.997538] [D] [thread 143174] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:58:12.997581] [D] [thread 143174] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:58:12.997605] [D] [thread 143174] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[12:58:12.997627] [D] [thread 143174] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:12.997837] [D] [thread 143174] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[12:58:12.997881] [D] [thread 143174] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:13.001931] [D] [thread 143176] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[12:58:13.002024] [D] [thread 143176] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[12:58:13.002051] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:13.002075] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:58:13.002097] [D] [thread 143176] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[12:58:13.002109] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:13.002122] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:13.002137] [D] [thread 143176] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:13.002199] [D] [thread 143176] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:13.002314] [I] [thread 143176] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:13.002361] [D] [thread 143176] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:13.002381] [D] [thread 143176] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:13.002399] [D] [thread 143176] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[12:58:13.002414] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:13.002430] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[12:58:13.002446] [D] [thread 143176] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[12:58:13.002458] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:58:13.002470] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:58:13.002485] [D] [thread 143176] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:58:13.002565] [I] [thread 143176] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:58:13.002609] [D] [thread 143176] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:13.002938] [D] [thread 143176] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:13.002964] [D] [thread 143176] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:13.814422] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:14.815766] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:15.816486] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:16.808777] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:16.809207] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:16.809885] [I] [thread 143179] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:16.811546] [I] [thread 143179] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:16.958230] [D] [thread 143176] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 38865
dataPort: 37673
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:16.958442] [D] [thread 143176] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 38865
dataPort: 37673
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:16.958507] [D] [thread 143176] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:16.959106] [D] [thread 143176] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:16.959163] [D] [thread 143176] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:16.959231] [D] [thread 143176] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[12:58:16.959368] [D] [thread 143176] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:16.959463] [I] [thread 143176] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:16.959728] [I] [thread 143176] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:16.959963] [D] [thread 143176] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[12:58:16.960132] [D] [thread 143176] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:16.960876] [D] [thread 143176] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:16.960968] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:16.961000] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:58:16.961043] [D] [thread 143176] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:16.961061] [D] [thread 143176] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:16.961084] [D] [thread 143176] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:16.961892] [D] [thread 143176] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[12:58:16.997874] [D] [thread 143176] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[12:58:16.998000] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:16.998041] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:58:16.998129] [D] [thread 143176] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[12:58:16.998336] [D] [thread 143176] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:16.998386] [D] [thread 143176] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[12:58:16.998465] [D] [thread 143176] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:58:16.998545] [D] [thread 143176] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:58:16.998573] [D] [thread 143176] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:58:16.998738] [D] [thread 143176] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[12:58:16.998788] [D] [thread 143176] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:16.998826] [D] [thread 143176] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[12:58:16.998931] [D] [thread 143176] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:17.004406] [D] [thread 143180] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[12:58:17.004539] [D] [thread 143180] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[12:58:17.004574] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:17.004608] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:58:17.004641] [D] [thread 143180] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[12:58:17.004661] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:17.004682] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:17.004707] [D] [thread 143180] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:17.004794] [D] [thread 143180] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:17.004969] [I] [thread 143180] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:17.005017] [D] [thread 143180] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:17.005046] [D] [thread 143180] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:17.005074] [D] [thread 143180] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[12:58:17.005094] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:17.005118] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[12:58:17.005146] [D] [thread 143180] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[12:58:17.005166] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[12:58:17.005186] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[12:58:17.005211] [D] [thread 143180] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[12:58:17.005345] [I] [thread 143180] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[12:58:17.005409] [D] [thread 143180] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:17.005910] [D] [thread 143180] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:17.005975] [D] [thread 143180] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:17.810502] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:18.811820] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:19.813232] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:20.694556] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:20.695049] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:20.695639] [I] [thread 143181] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:20.697770] [I] [thread 143181] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:20.842870] [D] [thread 143180] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 36221
dataPort: 38651
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:20.843075] [D] [thread 143180] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 36221
dataPort: 38651
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:20.843139] [D] [thread 143180] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:20.843549] [D] [thread 143180] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:20.843576] [D] [thread 143180] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:20.843624] [D] [thread 143180] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[12:58:20.843744] [D] [thread 143180] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:20.843805] [I] [thread 143180] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:20.843907] [I] [thread 143180] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:20.843968] [D] [thread 143180] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[12:58:20.844046] [D] [thread 143180] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:20.844439] [D] [thread 143180] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:20.844517] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:20.844538] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:58:20.844570] [D] [thread 143180] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:20.844587] [D] [thread 143180] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:20.844606] [D] [thread 143180] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:20.845051] [D] [thread 143180] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[12:58:20.881739] [D] [thread 143180] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[12:58:20.881863] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:20.881905] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:58:20.881994] [D] [thread 143180] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[12:58:20.882196] [D] [thread 143180] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:20.882249] [D] [thread 143180] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[12:58:20.882328] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:58:20.882362] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:58:20.882390] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:58:20.882417] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[12:58:20.882480] [D] [thread 143180] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[12:58:20.882519] [D] [thread 143180] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:20.882578] [D] [thread 143180] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[12:58:20.882604] [D] [thread 143180] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:20.886725] [D] [thread 143176] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[12:58:20.886830] [D] [thread 143176] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[12:58:20.886862] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:20.886889] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:58:20.886917] [D] [thread 143176] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[12:58:20.886932] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:20.886948] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:20.886967] [D] [thread 143176] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:20.887036] [D] [thread 143176] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:20.887174] [I] [thread 143176] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:20.887248] [D] [thread 143176] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:20.887272] [D] [thread 143176] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:20.887295] [D] [thread 143176] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[12:58:20.887388] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:20.887421] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[12:58:20.887442] [D] [thread 143176] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[12:58:20.887458] [I] [thread 143176] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:58:20.887474] [D] [thread 143176] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:58:20.887577] [D] [thread 143176] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[12:58:20.887783] [I] [thread 143176] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:58:20.887968] [D] [thread 143176] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:20.889237] [D] [thread 143176] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:20.889304] [D] [thread 143176] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:21.696393] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:22.697682] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:23.699004] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:24.480614] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:24.481288] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:24.481739] [I] [thread 143182] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:24.484553] [I] [thread 143182] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:24.630560] [D] [thread 143180] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 44971
dataPort: 44879
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:24.630859] [D] [thread 143180] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 44971
dataPort: 44879
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[12:58:24.630942] [D] [thread 143180] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[12:58:24.631827] [D] [thread 143180] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[12:58:24.631902] [D] [thread 143180] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[12:58:24.631995] [D] [thread 143180] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[12:58:24.632163] [D] [thread 143180] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[12:58:24.632431] [I] [thread 143180] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[12:58:24.632830] [I] [thread 143180] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:24.633046] [D] [thread 143180] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[12:58:24.633281] [D] [thread 143180] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[12:58:24.634239] [D] [thread 143180] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[12:58:24.634354] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:24.634394] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:58:24.634446] [D] [thread 143180] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[12:58:24.634472] [D] [thread 143180] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[12:58:24.634499] [D] [thread 143180] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[12:58:24.635309] [D] [thread 143180] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[12:58:24.670981] [D] [thread 143180] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[12:58:24.671074] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:24.671102] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:58:24.671162] [D] [thread 143180] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[12:58:24.671309] [D] [thread 143180] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[12:58:24.671340] [D] [thread 143180] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[12:58:24.671418] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[12:58:24.671439] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[12:58:24.671467] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[12:58:24.671482] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[12:58:24.671495] [D] [thread 143180] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[12:58:24.671589] [D] [thread 143180] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[12:58:24.671616] [D] [thread 143180] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[12:58:24.671684] [D] [thread 143180] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[12:58:24.671705] [D] [thread 143180] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[12:58:24.675511] [D] [thread 143180] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[12:58:24.675599] [D] [thread 143180] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[12:58:24.675620] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:24.675642] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:58:24.675662] [D] [thread 143180] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[12:58:24.675672] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:24.675682] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[12:58:24.675695] [D] [thread 143180] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[12:58:24.675753] [D] [thread 143180] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[12:58:24.675856] [I] [thread 143180] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[12:58:24.675909] [D] [thread 143180] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[12:58:24.675928] [D] [thread 143180] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[12:58:24.675954] [D] [thread 143180] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[12:58:24.675966] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:24.675980] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[12:58:24.676073] [D] [thread 143180] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[12:58:24.676104] [I] [thread 143180] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[12:58:24.676121] [D] [thread 143180] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[12:58:24.676187] [D] [thread 143180] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[12:58:24.676495] [I] [thread 143180] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[12:58:24.676551] [D] [thread 143180] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[12:58:24.677262] [D] [thread 143180] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[12:58:24.677334] [D] [thread 143180] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[12:58:25.482658] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:26.483980] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:26.637868] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:26.638343] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:26.639168] [I] [thread 143185] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[12:58:26.642101] [I] [thread 143185] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[12:58:27.639643] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:28.004217] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:28.004634] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:28.158366] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:28.158863] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:28.160988] [D] [thread 143189] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[12:58:28.161106] [I] [thread 143189] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[12:58:28.161135] [I] [thread 143189] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[12:58:28.161183] [D] [thread 143189] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[12:58:28.161277] [D] [thread 143189] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[12:58:28.161341] [D] [thread 143189] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[12:58:28.161375] [D] [thread 143189] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[12:58:28.163078] [D] [thread 143190] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_12-58-28_1935330.cpp[m
[36m[12:58:28.163595] [D] [thread 143190] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[12:58:28.163673] [D] [thread 143190] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[12:58:28.164009] [D] [thread 143190] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_13-11-2023_12-58-28_1935330.so -DFMT_HEADER_ONLY /tmp/query_13-11-2023_12-58-28_1935330.cpp'[m
[36m[12:58:29.160108] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:30.161336] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[12:58:31.158265] [I] [thread 143190] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2995.285146ms[m
[36m[12:58:31.158613] [D] [thread 143189] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[12:58:31.158662] [D] [thread 143189] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[12:58:31.158911] [I] [thread 143189] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.159540] [D] [thread 143189] [Query.cpp:237] [project] Query: add projection to query[m
[36m[12:58:31.159623] [D] [thread 143189] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[12:58:31.159714] [I] [thread 143189] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.159863] [D] [thread 143189] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[12:58:31.160016] [D] [thread 143189] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.160037] [D] [thread 143189] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.160752] [D] [thread 143189] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[12:58:31.161131] [D] [thread 143189] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[12:58:31.161477] [I] [thread 143189] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.161628] [D] [thread 143189] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[12:58:31.161752] [D] [thread 143189] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.161780] [D] [thread 143189] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.162174] [I] [thread 143189] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[12:58:31.162335] [D] [thread 143189] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[12:58:31.162452] [D] [thread 143189] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.162469] [D] [thread 143189] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.162550] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:31.162667] [D] [thread 143189] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[12:58:31.162768] [I] [thread 143189] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[12:58:31.162874] [D] [thread 143189] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[12:58:31.162977] [D] [thread 143189] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.162991] [D] [thread 143189] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.163825] [D] [thread 143189] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.164005] [D] [thread 143189] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.164139] [D] [thread 143189] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.164295] [D] [thread 143189] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.164370] [D] [thread 143189] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.164406] [D] [thread 143189] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.164504] [D] [thread 143189] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[12:58:31.164550] [D] [thread 143189] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.164579] [D] [thread 143189] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.164601] [D] [thread 143189] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.165093] [D] [thread 143189] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.165122] [D] [thread 143189] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.165222] [D] [thread 143189] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.166021] [D] [thread 143189] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.166533] [D] [thread 143189] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.167058] [D] [thread 143189] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[12:58:31.167605] [I] [thread 143189] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[12:58:31.168423] [I] [thread 143189] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[12:58:31.168513] [I] [thread 143189] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[12:58:31.168570] [I] [thread 143140] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[12:58:31.168691] [I] [thread 143140] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[12:58:31.168740] [I] [thread 143140] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[12:58:31.169014] [I] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[12:58:31.169132] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[12:58:31.169218] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.169289] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.169333] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.169384] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.169422] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.170200] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.170616] [D] [thread 143140] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.171054] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.171120] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[12:58:31.171144] [D] [thread 143140] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[12:58:31.171385] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[12:58:31.171438] [I] [thread 143140] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:58:31.171648] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[12:58:31.172009] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:58:31.172430] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:58:31.172750] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:58:31.173024] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.173371] [D] [thread 143140] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[12:58:31.173804] [D] [thread 143140] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.174130] [D] [thread 143140] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[12:58:31.174343] [I] [thread 143140] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.174517] [D] [thread 143140] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[12:58:31.174548] [I] [thread 143140] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:58:31.174660] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[12:58:31.174828] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:58:31.175056] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:58:31.175254] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:58:31.175521] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.175818] [D] [thread 143140] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[12:58:31.176127] [I] [thread 143140] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.176201] [D] [thread 143140] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[12:58:31.176215] [I] [thread 143140] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:58:31.176305] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[12:58:31.176497] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[12:58:31.176716] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[12:58:31.176911] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[12:58:31.177132] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.177432] [D] [thread 143140] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[12:58:31.177666] [I] [thread 143140] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[12:58:31.177921] [I] [thread 143140] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.178089] [D] [thread 143140] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[12:58:31.178293] [D] [thread 143140] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.178517] [D] [thread 143140] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.178678] [D] [thread 143140] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[12:58:31.178878] [D] [thread 143140] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.179060] [D] [thread 143140] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.179184] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.179239] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.179281] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.179327] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.179363] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.180041] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.180494] [D] [thread 143140] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.180894] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[12:58:31.180969] [I] [thread 143140] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[12:58:31.181214] [I] [thread 143140] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[12:58:31.181246] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.181293] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.181332] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[12:58:31.181975] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.182061] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.182161] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.182181] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.182231] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.182292] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.182326] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.182690] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:58:31.183166] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.183245] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.183324] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.183346] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.183393] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.183455] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.183486] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.183870] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:58:31.184166] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.184282] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.184412] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.184438] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.184487] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.184553] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.184584] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.184945] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:58:31.185264] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.185327] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.185388] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.185402] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.185439] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.185493] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.185520] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.185801] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:58:31.186080] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.186119] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.186176] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.186190] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.186227] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.186276] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.186324] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.186609] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[12:58:31.186892] [I] [thread 143140] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[12:58:31.186934] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[12:58:31.186988] [D] [thread 143140] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[12:58:31.187018] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.187057] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[12:58:31.187111] [D] [thread 143140] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[12:58:31.187144] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[12:58:31.187475] [D] [thread 143140] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[12:58:31.188301] [D] [thread 143140] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[12:58:31.188456] [I] [thread 143140] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[12:58:31.188955] [D] [thread 143140] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[12:58:31.189259] [D] [thread 143140] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[12:58:31.189775] [D] [thread 143140] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[12:58:31.189838] [D] [thread 143140] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[12:58:31.190306] [D] [thread 143140] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[12:58:31.190667] [D] [thread 143140] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[12:58:31.190745] [D] [thread 143140] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[12:58:31.190791] [D] [thread 143140] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.190913] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:31.190936] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[12:58:31.191314] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:31.191355] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[12:58:31.191531] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:31.191548] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[12:58:31.191665] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:31.191691] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[12:58:31.191779] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:31.191794] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[12:58:31.191884] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:31.191897] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[12:58:31.192413] [I] [thread 143140] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:58:31.192466] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192477] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192486] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192495] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192504] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192526] [I] [thread 143140] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:31.192537] [I] [thread 143140] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:31.192547] [I] [thread 143140] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[12:58:31.192555] [I] [thread 143140] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:58:31.192698] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[12:58:31.192950] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.193156] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[12:58:31.193275] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.193409] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[12:58:31.193501] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.193628] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[12:58:31.193713] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(27) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.193840] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[12:58:31.193923] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(28) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[12:58:31.194057] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[12:58:31.194214] [D] [thread 143140] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(29) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[12:58:31.194905] [D] [thread 143140] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[12:58:31.195483] [D] [thread 143140] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[12:58:31.195735] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.195847] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.195922] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[12:58:31.195975] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.196010] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.196656] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.197010] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.197240] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.197353] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.197916] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.198221] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.198411] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.198525] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.199143] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.199449] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.199653] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.199767] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.200351] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.200668] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.200870] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.200981] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.201608] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.201985] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.202203] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.202321] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.202865] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.203203] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.203397] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.203509] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.203709] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.204625] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[12:58:31.204674] [D] [thread 143140] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[12:58:31.205076] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[12:58:31.205192] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[12:58:31.205214] [D] [thread 143140] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[12:58:31.205270] [I] [thread 143140] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[12:58:31.205312] [I] [thread 143140] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[12:58:31.205423] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[12:58:31.205589] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[12:58:31.205936] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[12:58:31.206180] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[12:58:31.206383] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[32m[12:58:31.206642] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[32m[12:58:31.206850] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[32m[12:58:31.207103] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[12:58:31.207277] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[12:58:31.207425] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[12:58:31.207559] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[12:58:31.207673] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[12:58:31.207784] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[12:58:31.207941] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[12:58:31.208170] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[12:58:31.208412] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[12:58:31.208635] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[12:58:31.208843] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[12:58:31.209027] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[12:58:31.209216] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[12:58:31.209529] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[12:58:31.209752] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[12:58:31.209961] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[12:58:31.210189] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[12:58:31.210405] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[12:58:31.211123] [D] [thread 143140] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[12:58:31.211183] [D] [thread 143140] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[12:58:31.211251] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211293] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211313] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211333] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211352] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211371] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211390] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211412] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211432] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211452] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211472] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211492] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211511] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211530] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211550] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211570] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211604] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211624] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211644] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211664] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211675] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.211704] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211716] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.211746] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211758] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.211777] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211788] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.211804] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211824] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.211845] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.211857] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.213147] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[12:58:31.213178] [D] [thread 143140] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[12:58:31.213248] [D] [thread 143140] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[12:58:31.213267] [D] [thread 143140] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[12:58:31.213274] [D] [thread 143140] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[12:58:31.213284] [D] [thread 143140] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[12:58:31.213308] [I] [thread 143140] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[12:58:31.214164] [D] [thread 143140] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[12:58:31.214212] [D] [thread 143140] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[12:58:31.214227] [D] [thread 143140] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[12:58:31.214286] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214328] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214348] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214368] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214387] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214406] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214425] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214445] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214464] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214485] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214504] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214523] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214542] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214562] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214582] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214603] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214624] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214644] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214664] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214684] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214696] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.214732] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214745] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.214769] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214781] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.214801] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214813] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.214830] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214842] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.214862] [D] [thread 143140] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[12:58:31.214890] [D] [thread 143140] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[12:58:31.215119] [D] [thread 143140] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[12:58:31.215172] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[12:58:31.215192] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[12:58:31.215272] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[12:58:31.215284] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[12:58:31.215318] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[12:58:31.215330] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[12:58:31.215349] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[12:58:31.215359] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[12:58:31.215376] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[12:58:31.215387] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[12:58:31.215407] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[12:58:31.215417] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[12:58:31.215436] [I] [thread 143140] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[12:58:31.215446] [D] [thread 143140] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[12:58:31.215516] [I] [thread 143140] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[12:58:31.215731] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.215898] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216016] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216098] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216272] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.216380] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216463] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216537] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216675] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.216758] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216825] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.216892] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217008] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.217060] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217115] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217177] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217300] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.217358] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217415] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217479] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217588] [D] [thread 143140] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[12:58:31.217639] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217695] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.217778] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[12:58:31.217830] [I] [thread 143140] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[12:58:31.217840] [D] [thread 143140] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[12:58:31.218171] [D] [thread 143140] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[12:58:31.218187] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.218255] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218285] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.218318] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[12:58:31.218395] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218481] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218515] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.218578] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218590] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.218615] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[12:58:31.218672] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218734] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.218779] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218790] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.218857] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[12:58:31.218922] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.218978] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.219023] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.219035] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.219048] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:58:31.219088] [W] [thread 143140] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:58:31.219102] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.219162] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.219175] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.219198] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:58:31.219243] [W] [thread 143140] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:58:31.219258] [D] [thread 143140] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[12:58:31.219306] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[12:58:31.219317] [D] [thread 143140] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[12:58:31.219331] [D] [thread 143140] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[12:58:31.219370] [W] [thread 143140] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[12:58:31.219444] [D] [thread 143140] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[12:58:31.219456] [D] [thread 143140] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[12:58:31.219463] [D] [thread 143140] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[12:58:31.219469] [D] [thread 143140] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[12:58:31.219487] [D] [thread 143140] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[12:58:31.219495] [D] [thread 143140] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[12:58:31.219516] [D] [thread 143140] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[12:58:31.219679] [D] [thread 143140] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[12:58:31.219748] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[12:58:31.219812] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[12:58:31.219845] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.219958] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.219975] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220049] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[12:58:31.220065] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220106] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[12:58:31.220121] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220157] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.220171] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.220188] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.220298] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.220385] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.220405] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.220603] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.220662] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[12:58:31.220698] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[12:58:31.220717] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220809] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.220825] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220880] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[12:58:31.220895] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.220951] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[12:58:31.220969] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.221005] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.221019] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.221032] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.221119] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.221147] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.221159] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.221322] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.221386] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[12:58:31.221425] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[12:58:31.221443] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.221532] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.221549] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.221603] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[12:58:31.221618] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.221657] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[12:58:31.221670] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.221704] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.221717] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.221729] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.221814] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.221841] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.221895] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.222073] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.222123] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[12:58:31.222159] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[12:58:31.222177] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.222264] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.222282] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.222406] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[12:58:31.222424] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.222464] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(27)[m
[36m[12:58:31.222478] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.222512] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.222535] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.222548] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.222638] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.222665] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.222676] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.222840] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.222885] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[12:58:31.222918] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[12:58:31.222946] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223031] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.223064] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223126] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[12:58:31.223141] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223180] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(28)[m
[36m[12:58:31.223194] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223228] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.223242] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.223253] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.223339] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.223365] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.223377] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.223536] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.223582] [D] [thread 143140] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[12:58:31.223631] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[12:58:31.223649] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223734] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[12:58:31.223751] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223806] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[12:58:31.223826] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223867] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(29)[m
[36m[12:58:31.223881] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.223914] [D] [thread 143140] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[12:58:31.223927] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.223948] [D] [thread 143140] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[12:58:31.224034] [D] [thread 143140] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[12:58:31.224065] [D] [thread 143140] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[12:58:31.224077] [D] [thread 143140] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[12:58:31.224237] [D] [thread 143140] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[12:58:31.224253] [D] [thread 143140] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.224265] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.224349] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.224391] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.224629] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[12:58:31.224650] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.224682] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.224909] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[12:58:31.225110] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[12:58:31.225129] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.225137] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.225165] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.225179] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.225312] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:58:31.225401] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.225440] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:58:31.225451] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:58:31.225544] [D] [thread 143140] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 6[m
[36m[12:58:31.225721] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.225743] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.225770] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:58:31.225791] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.225851] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.225997] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.226019] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.226069] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.226082] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:58:31.226156] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[12:58:31.226169] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.226186] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.226231] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.226245] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.226282] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.226293] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.226365] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.226377] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.226407] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.226513] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[12:58:31.226695] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.226716] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.226737] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[12:58:31.226747] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[12:58:31.226926] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[12:58:31.226992] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.227009] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.227048] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:58:31.227067] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.227081] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:58:31.227091] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:58:31.227197] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[12:58:31.227249] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.227267] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.227297] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:58:31.227318] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.227367] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.227437] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.227455] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.227501] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.227517] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:58:31.227549] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[12:58:31.227559] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.227571] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.227592] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.227617] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.227640] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.227651] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.227741] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.227753] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.227772] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.227842] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[12:58:31.228010] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.228029] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.228041] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[12:58:31.228063] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[12:58:31.228253] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.228368] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.228389] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.228430] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:58:31.228450] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.228518] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:58:31.228531] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:58:31.228592] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[12:58:31.228638] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.228664] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.228681] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:58:31.228702] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.228755] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.228825] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.228844] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.228891] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.228903] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:58:31.228933] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 6[m
[36m[12:58:31.228954] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.228967] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.228990] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.229016] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.229040] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.229092] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.229138] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.229149] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.229168] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.229252] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[12:58:31.229455] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.229477] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.229489] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[12:58:31.229498] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[12:58:31.229599] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[12:58:31.229652] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.229668] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.229704] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[12:58:31.229722] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.229742] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[12:58:31.229752] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[12:58:31.229807] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[12:58:31.229846] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.229862] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.229878] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[12:58:31.229897] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.229943] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.230010] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:58:31.230031] [W] [thread 143140] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:58:31.230039] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.230068] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.230077] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.230085] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.230134] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.230152] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.230237] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[12:58:31.230252] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.230263] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.230365] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[12:58:31.230544] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[12:58:31.230561] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.230569] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.230591] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.230603] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.230654] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:58:31.230687] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.230702] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:58:31.230711] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:58:31.230779] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[12:58:31.230893] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.230914] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.230928] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:58:31.230946] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.230994] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.231121] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.231140] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.231180] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.231191] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:58:31.231258] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[12:58:31.231271] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.231284] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.231307] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.231318] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.231345] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.231356] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.231404] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.231415] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.231433] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.231515] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[12:58:31.231675] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.231694] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.231706] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[12:58:31.231715] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[12:58:31.231914] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[12:58:31.231967] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.231984] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.232021] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:58:31.232038] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.232052] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:58:31.232061] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:58:31.232113] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[12:58:31.232157] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.232174] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.232189] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:58:31.232208] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.232271] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.232373] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.232398] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.232451] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.232463] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:58:31.232494] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[12:58:31.232506] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.232519] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.232545] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.232569] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.232604] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.232615] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.232706] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.232759] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.232781] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.232853] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[12:58:31.233037] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.233056] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.233069] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[12:58:31.233077] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[12:58:31.233266] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.233346] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.233363] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.233415] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:58:31.233434] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.233449] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:58:31.233459] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:58:31.233516] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[12:58:31.233556] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.233574] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.233590] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:58:31.233610] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.233669] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.233735] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.233754] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.233800] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.233811] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:58:31.233841] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 5[m
[36m[12:58:31.233853] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.233865] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.233886] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.233908] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.233932] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.233943] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.233980] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.233990] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.234008] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.234074] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[12:58:31.234267] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.234288] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.234300] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[12:58:31.234309] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[12:58:31.234408] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[12:58:31.234544] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.234562] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.234603] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[12:58:31.234623] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.234637] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[12:58:31.234646] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[12:58:31.234702] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[12:58:31.234742] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.234759] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.234774] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[12:58:31.234795] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.234842] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.234915] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:58:31.234937] [W] [thread 143140] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:58:31.234945] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.234964] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.235009] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.235019] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.235081] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.235102] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.235199] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[12:58:31.235213] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.235226] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.235324] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[12:58:31.235501] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[12:58:31.235529] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.235538] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.235561] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.235573] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.235627] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:58:31.235655] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.235670] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:58:31.235679] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:58:31.235734] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[12:58:31.235783] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.235801] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.235816] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:58:31.235834] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.235884] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.236008] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.236028] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.236067] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.236079] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:58:31.236144] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[12:58:31.236170] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.236184] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.236209] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.236221] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.236250] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.236260] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.236353] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.236368] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.236389] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.236476] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[12:58:31.236647] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.236666] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.236679] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[12:58:31.236688] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[12:58:31.236863] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[12:58:31.236914] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.236931] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.236971] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:58:31.236989] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.237004] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:58:31.237021] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:58:31.237080] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[12:58:31.237124] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.237142] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.237158] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:58:31.237179] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.237229] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.237298] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.237329] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.237377] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.237389] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:58:31.237419] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[12:58:31.237431] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.237443] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.237464] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.237486] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.237510] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.237521] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.237608] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.237662] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.237685] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.237778] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[12:58:31.237959] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.237979] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.237991] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[12:58:31.238001] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[12:58:31.238190] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.238269] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.238286] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.238323] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:58:31.238342] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.238356] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:58:31.238365] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:58:31.238419] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[12:58:31.238460] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.238476] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.238491] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:58:31.238511] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.238557] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.238620] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.238637] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.238695] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.238707] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:58:31.238737] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 8[m
[36m[12:58:31.238749] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.238760] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.238781] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.238806] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.238830] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.238841] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.238877] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.238892] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.238911] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.238979] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[12:58:31.239166] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.239185] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.239197] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[12:58:31.239206] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[12:58:31.239302] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[12:58:31.239341] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.239356] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.239391] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[12:58:31.239409] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.239424] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[12:58:31.239433] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[12:58:31.239487] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[12:58:31.239524] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.239540] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.239554] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[12:58:31.239573] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.239616] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.239681] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:58:31.239705] [W] [thread 143140] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:58:31.239714] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.239727] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.239735] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.239743] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.239792] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.239811] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.239899] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[12:58:31.239913] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.239924] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.240021] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[12:58:31.240189] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[12:58:31.240204] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.240212] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.240233] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.240244] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.240295] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:58:31.240425] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.240445] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:58:31.240454] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:58:31.240515] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[12:58:31.240580] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.240598] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.240613] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:58:31.240641] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.240696] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.240833] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.240861] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.240903] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.240916] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:58:31.240984] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[12:58:31.240997] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.241010] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.241035] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.241048] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.241080] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.241091] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.241140] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.241152] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.241170] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.241329] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[12:58:31.241500] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.241520] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.241545] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[12:58:31.241555] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[12:58:31.241737] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[12:58:31.241790] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.241807] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.241849] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:58:31.241868] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.241882] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:58:31.241892] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:58:31.241949] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[12:58:31.241990] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.242007] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.242022] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:58:31.242043] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.242090] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.242169] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.242187] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.242233] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.242244] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:58:31.242274] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[12:58:31.242285] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.242297] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.242318] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.242340] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.242365] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.242376] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.242463] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.242475] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.242494] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.242588] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[12:58:31.242766] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.242787] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.242799] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[12:58:31.242808] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[12:58:31.242994] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.243076] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.243094] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.243136] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:58:31.243155] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.243170] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:58:31.243179] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:58:31.243238] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[12:58:31.243279] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.243295] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.243311] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:58:31.243331] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.243379] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.243443] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.243461] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.243505] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.243517] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:58:31.243547] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(27) on execution node with id 7[m
[36m[12:58:31.243558] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.243570] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.243591] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.243614] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.243638] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.243648] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.243699] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.243710] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.243729] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.243796] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[12:58:31.243984] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.244008] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.244078] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[12:58:31.244090] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[12:58:31.244198] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[12:58:31.244240] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.244255] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.244295] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[12:58:31.244314] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.244352] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[12:58:31.244372] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[12:58:31.244435] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[12:58:31.244481] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.244498] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.244513] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[12:58:31.244534] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.244582] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.244659] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:58:31.244685] [W] [thread 143140] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:58:31.244693] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.244706] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.244714] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.244722] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.244773] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.244791] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.244881] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[12:58:31.244896] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.244908] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.245004] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[12:58:31.245176] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[12:58:31.245192] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.245200] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.245223] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.245234] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.245299] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:58:31.245326] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.245342] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:58:31.245395] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:58:31.245456] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[12:58:31.245514] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.245532] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.245547] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:58:31.245567] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.245616] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.245746] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.245766] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.245806] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.245817] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:58:31.245899] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[12:58:31.245913] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.245927] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.245959] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.245973] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.246006] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.246017] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.246071] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.246086] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.246113] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.246198] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[12:58:31.246367] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.246387] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.246399] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[12:58:31.246409] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[12:58:31.246581] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[12:58:31.246631] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.246647] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.246685] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:58:31.246705] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.246719] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:58:31.246729] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:58:31.246786] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[12:58:31.246827] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.246843] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.246858] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:58:31.246893] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.246940] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.247005] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.247022] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.247067] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.247079] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:58:31.247109] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[12:58:31.247120] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.247131] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.247152] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.247173] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.247198] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.247208] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.247291] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.247303] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.247322] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.247424] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[12:58:31.247652] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.247675] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.247687] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[12:58:31.247696] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[12:58:31.247887] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.247966] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.247984] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.248025] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:58:31.248045] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.248059] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:58:31.248068] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:58:31.248124] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[12:58:31.248166] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.248184] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.248199] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:58:31.248220] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.248268] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.248361] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.248385] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.248437] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.248449] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:58:31.248481] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(28) on execution node with id 10[m
[36m[12:58:31.248493] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.248506] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.248528] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.248554] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.248581] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.248592] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.248629] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.248639] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.248657] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.248726] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[12:58:31.248916] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.248936] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.248948] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:58:31.248957] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[12:58:31.249050] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[12:58:31.249091] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.249106] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.249142] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[12:58:31.249160] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.249175] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[12:58:31.249184] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[12:58:31.249239] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[12:58:31.249278] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.249295] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.249310] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[12:58:31.249330] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.249377] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.249444] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[12:58:31.249470] [W] [thread 143140] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[12:58:31.249478] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.249492] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.249512] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.249522] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.249578] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.249599] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.249693] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[12:58:31.249707] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.249720] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.249816] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[12:58:31.249984] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[12:58:31.249999] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.250007] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.250029] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.250040] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.250093] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:58:31.250122] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.250137] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:58:31.250146] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:58:31.250202] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[12:58:31.250249] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.250266] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.250280] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:58:31.250298] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.250346] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.250466] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.250487] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.250527] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.250539] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:58:31.250605] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[12:58:31.250618] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.250630] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.250665] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.250677] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.250707] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.250718] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.250768] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.250779] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.250796] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.250877] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[12:58:31.251036] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.251055] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.251067] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[12:58:31.251087] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[12:58:31.251254] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[12:58:31.251309] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.251326] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.251363] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:58:31.251380] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.251399] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:58:31.251408] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:58:31.251464] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[12:58:31.251505] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.251530] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.251547] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:58:31.251567] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.251613] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.251677] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.251746] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.251799] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.251811] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:58:31.251841] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[12:58:31.251852] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.251864] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.251886] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.251908] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.251933] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.251953] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.252041] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.252053] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.252082] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.252178] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[12:58:31.252392] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.252425] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.252438] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[12:58:31.252447] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[12:58:31.252642] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[12:58:31.252722] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.252741] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.252781] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:58:31.252801] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.252815] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:58:31.252824] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:58:31.252883] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[12:58:31.252927] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.252945] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.252961] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:58:31.252981] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.253031] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.253102] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[12:58:31.253121] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.253165] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.253178] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:58:31.253207] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(29) on execution node with id 9[m
[36m[12:58:31.253219] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.253230] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.253265] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.253292] [D] [thread 143140] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[12:58:31.253316] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.253327] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.253366] [D] [thread 143140] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[12:58:31.253406] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.253424] [D] [thread 143140] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[12:58:31.253491] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[12:58:31.253683] [D] [thread 143140] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[12:58:31.253705] [D] [thread 143140] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[12:58:31.253717] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[12:58:31.253726] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[12:58:31.253820] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[12:58:31.253859] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.253875] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.253907] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[12:58:31.253926] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.253940] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[12:58:31.253949] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[12:58:31.254005] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[12:58:31.254042] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.254058] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.254073] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[12:58:31.254091] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.254135] [D] [thread 143140] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[12:58:31.254201] [D] [thread 143140] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[12:58:31.254231] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.254343] [D] [thread 143140] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[12:58:31.254372] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[12:58:31.254386] [W] [thread 143140] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[12:58:31.254482] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[12:58:31.254652] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[12:58:31.254669] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.254677] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.254713] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.254727] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.254783] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:58:31.254813] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.254879] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[12:58:31.254891] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[12:58:31.254950] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[12:58:31.255007] [D] [thread 143140] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[12:58:31.255025] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[12:58:31.255040] [I] [thread 143140] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[12:58:31.255058] [D] [thread 143140] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[12:58:31.255082] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.255097] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.255106] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.255114] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.255123] [D] [thread 143140] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[12:58:31.255139] [D] [thread 143140] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[12:58:31.255184] [I] [thread 143140] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[12:58:31.255208] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.255274] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[12:58:31.255323] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.255350] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[12:58:31.255375] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.255400] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:58:31.255411] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[12:58:31.255456] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.255612] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.255633] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.255654] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[12:58:31.255702] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.255775] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.255792] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.255817] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.255828] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.255834] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.255959] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.256040] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.256053] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:58:31.256074] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.256090] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.256120] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[12:58:31.256132] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[12:58:31.256275] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[12:58:31.256499] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[12:58:31.256583] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[12:58:31.256894] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[12:58:31.257007] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:45109 1::30::0::0}) as new root of the plan.[m
[36m[12:58:31.257033] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.257041] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.257131] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[12:58:31.257202] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.257316] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.257328] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.257412] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.257429] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.257487] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:58:31.257527] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.257545] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[12:58:31.257555] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[12:58:31.257619] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[12:58:31.257674] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[12:58:31.257687] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[12:58:31.257707] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[12:58:31.257722] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.257757] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:58:31.257774] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.257830] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.257842] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.257856] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.257868] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.257976] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[12:58:31.258023] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.258037] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.258185] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:58:31.258201] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:58:31.258213] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[12:58:31.258223] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.258243] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:58:31.258275] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.258320] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[12:58:31.258361] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.258387] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[12:58:31.258411] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.258436] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[12:58:31.258446] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[12:58:31.258463] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.258589] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.258633] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.258667] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.258705] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.258771] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.258786] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.258809] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.258820] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.258827] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.258901] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.258972] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.258985] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:58:31.259000] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.259015] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.259042] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[12:58:31.259054] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[12:58:31.259180] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[12:58:31.259348] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[12:58:31.259452] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:58:31.259497] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:58:31.259507] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[12:58:31.259635] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[12:58:31.259719] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:45739 1::36::0::0}) as new root of the plan.[m
[36m[12:58:31.259733] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.259740] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.259814] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[12:58:31.259879] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.259984] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.259996] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.260019] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.260050] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.260107] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:58:31.260125] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.260140] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[12:58:31.260209] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[12:58:31.260278] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[12:58:31.260310] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[12:58:31.260352] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[12:58:31.260366] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[12:58:31.260376] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.260427] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[12:58:31.260446] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.260506] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.260518] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.260533] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.260545] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.260653] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[12:58:31.260701] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.260716] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.260892] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[12:58:31.260911] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[12:58:31.260924] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[12:58:31.260934] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.260948] [D] [thread 143140] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[12:58:31.261017] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.261070] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[12:58:31.261112] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.261140] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[12:58:31.261163] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.261187] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[12:58:31.261204] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[12:58:31.261224] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.261360] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.261408] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.261449] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[12:58:31.261491] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.261560] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.261576] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.261600] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.261661] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.261670] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.261747] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.261823] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.261835] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:58:31.261853] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.261869] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.261898] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[12:58:31.261911] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[12:58:31.262029] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[12:58:31.262205] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[12:58:31.262283] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[12:58:31.262464] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[12:58:31.262557] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:37673 1::42::0::0}) as new root of the plan.[m
[36m[12:58:31.262571] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.262579] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.262655] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[12:58:31.262721] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.262824] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.262836] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.262860] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.262873] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.262930] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:58:31.262963] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.262979] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[12:58:31.262988] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[12:58:31.263047] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[12:58:31.263097] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[12:58:31.263110] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[12:58:31.263121] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[12:58:31.263129] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.263158] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:58:31.263174] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.263226] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.263238] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.263251] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.263280] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.263385] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[12:58:31.263432] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.263447] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.263614] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:58:31.263633] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:58:31.263645] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[12:58:31.263656] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.263747] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:58:31.263784] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.263835] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[12:58:31.263876] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.263901] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[12:58:31.263924] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.263959] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[12:58:31.263971] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[36m[12:58:31.263988] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.264160] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.264214] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.264255] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[12:58:31.264295] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.264400] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.264421] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.264446] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.264458] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.264464] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.264543] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.264624] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.264636] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:58:31.264654] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.264670] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.264702] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 27 exists in the query plan or not[m
[36m[12:58:31.264715] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 27 in the query plan[m
[32m[12:58:31.264787] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[12:58:31.264963] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(27) as root operator.[m
[36m[12:58:31.265039] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:58:31.265082] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:58:31.265093] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[12:58:31.265226] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[12:58:31.265325] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:43895 1::48::0::0}) as new root of the plan.[m
[36m[12:58:31.265339] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.265347] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.265427] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[12:58:31.265494] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.265605] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.265617] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.265641] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.265721] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.265772] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:58:31.265792] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.265807] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[12:58:31.265816] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[12:58:31.265880] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[12:58:31.265911] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[12:58:31.265923] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[12:58:31.265934] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[12:58:31.265942] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.265980] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[12:58:31.265997] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.266052] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.266064] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.266078] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.266089] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.266195] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[12:58:31.266242] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.266257] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.266471] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[12:58:31.266492] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[12:58:31.266504] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[12:58:31.266513] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.266528] [D] [thread 143140] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[12:58:31.266557] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.266605] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[12:58:31.266645] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.266670] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[12:58:31.266694] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.266720] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[12:58:31.266730] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[36m[12:58:31.266747] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.266871] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.266938] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.266980] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[12:58:31.267022] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.267087] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.267101] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.267125] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.267137] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.267143] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.267216] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.267288] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.267300] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:58:31.267317] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.267332] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.267361] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 28 exists in the query plan or not[m
[36m[12:58:31.267373] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 28 in the query plan[m
[32m[12:58:31.267443] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[12:58:31.267594] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(28) as root operator.[m
[36m[12:58:31.267664] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[12:58:31.267840] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[12:58:31.267927] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:44879 1::54::0::0}) as new root of the plan.[m
[36m[12:58:31.267940] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.267948] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.268024] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[12:58:31.268089] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.268194] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.268206] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.268229] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.268243] [D] [thread 143140] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[12:58:31.268297] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:58:31.268360] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.268382] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[12:58:31.268392] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[12:58:31.268457] [D] [thread 143140] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[12:58:31.268508] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[12:58:31.268522] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[12:58:31.268533] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[12:58:31.268542] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.268574] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:58:31.268591] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.268650] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.268663] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.268676] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.268688] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.268839] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[12:58:31.268895] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.268913] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.269092] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:58:31.269110] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[12:58:31.269123] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[12:58:31.269133] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.269161] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:58:31.269192] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.269236] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[12:58:31.269274] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.269301] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[12:58:31.269324] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.269348] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[12:58:31.269359] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[36m[12:58:31.269392] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.269523] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.269579] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.269622] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[12:58:31.269664] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.269731] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.269746] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.269769] [D] [thread 143140] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[12:58:31.269780] [D] [thread 143140] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[12:58:31.269787] [D] [thread 143140] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[12:58:31.269861] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.269932] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.269945] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:58:31.269962] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.269977] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.270061] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 29 exists in the query plan or not[m
[36m[12:58:31.270077] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 29 in the query plan[m
[32m[12:58:31.270152] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[12:58:31.270315] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(29) as root operator.[m
[36m[12:58:31.270388] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:58:31.270433] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:58:31.270445] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[12:58:31.270574] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[12:58:31.270658] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38651 1::60::0::0}) as new root of the plan.[m
[36m[12:58:31.270672] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.270679] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:31.270753] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[12:58:31.270817] [D] [thread 143140] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35105)}) as new root of the plan.[m
[36m[12:58:31.270923] [D] [thread 143140] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:31.270936] [D] [thread 143140] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:31.270964] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.270994] [D] [thread 143140] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[12:58:31.271045] [D] [thread 143140] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:58:31.271064] [D] [thread 143140] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[12:58:31.271079] [W] [thread 143140] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[12:58:31.271088] [D] [thread 143140] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[12:58:31.271151] [D] [thread 143140] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[12:58:31.271182] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[12:58:31.271194] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[12:58:31.271205] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[12:58:31.271214] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.271260] [D] [thread 143140] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[12:58:31.271279] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.271332] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.271343] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.271357] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.271368] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[12:58:31.271514] [I] [thread 143140] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[12:58:31.271567] [D] [thread 143140] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[12:58:31.271584] [D] [thread 143140] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[12:58:31.271762] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[12:58:31.271826] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[12:58:31.271843] [D] [thread 143140] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[12:58:31.271853] [D] [thread 143140] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[12:58:31.271870] [D] [thread 143140] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[12:58:31.271924] [D] [thread 143140] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[12:58:31.271963] [D] [thread 143140] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[12:58:31.271974] [D] [thread 143140] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[12:58:31.271983] [D] [thread 143140] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[12:58:31.271999] [D] [thread 143140] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[12:58:31.272030] [D] [thread 143140] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[12:58:31.272096] [D] [thread 143140] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[12:58:31.272124] [D] [thread 143140] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:58:31.272149] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.272165] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.272450] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.272509] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.272547] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.272593] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.272631] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.273308] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.273658] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.273875] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.273970] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.274066] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.274117] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.274134] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.274317] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.274360] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.274402] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.274443] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.274466] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.275097] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.275410] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.275604] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.275704] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.275811] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.275912] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.275932] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.276108] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.276151] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.276196] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.276237] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.276262] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.276944] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.277274] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.277473] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.277566] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.277660] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.277708] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.277726] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.277905] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.277949] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.277982] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.278021] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.278043] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.278673] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.279006] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.279199] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.279289] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.279382] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.279443] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.279461] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.279637] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.279681] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.279713] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.279767] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.279793] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.280410] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.280773] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.280987] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.281080] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.281174] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.281220] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.281248] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.281422] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.281463] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.281502] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.281542] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.281564] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.282172] [D] [thread 143140] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[12:58:31.282481] [D] [thread 143140] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:31.282672] [I] [thread 143140] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[12:58:31.282764] [I] [thread 143140] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.282855] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.282901] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.282917] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.283094] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.283146] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.283185] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[12:58:31.283223] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.283245] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.283417] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.283448] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.283461] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.283557] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.283584] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.283606] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.283645] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.283665] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.283778] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.283866] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.283890] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.283910] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.283931] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.283949] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.284099] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.284134] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.284148] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.284246] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.284273] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.284294] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.284344] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.284372] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.284488] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.284578] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.284604] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.284625] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.284650] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.284668] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.284769] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.284798] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.284812] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.284900] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.284924] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.284944] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.284965] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.285000] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.285112] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.285206] [D] [thread 143140] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[12:58:31.285243] [D] [thread 143140] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[12:58:31.285265] [D] [thread 143140] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[12:58:31.285288] [D] [thread 143140] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[12:58:31.285307] [D] [thread 143140] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[12:58:31.285413] [D] [thread 143140] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[12:58:31.285463] [D] [thread 143140] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[12:58:31.287745] [D] [thread 143140] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::33::0::0})
|    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::39::0::0})
|    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::45::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::51::0::0})
|    SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::57::0::0})
|    SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::63::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:45109 1::30::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:45739 1::36::0::0})
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:36051)})
|  |  |    CENTRALWINDOW(24)
|  |  |      WATERMARKASSIGNER(11)
|  |  |        PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:36051)})
|  |  |    CENTRALWINDOW(25)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:37673 1::42::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:43895 1::48::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:41099)})
|  |  |    CENTRALWINDOW(26)
|  |  |      WATERMARKASSIGNER(17)
|  |  |        PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:41099)})
|  |  |    CENTRALWINDOW(27)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:44879 1::54::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35105)})
|  |    SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38651 1::60::0::0})
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:43437)})
|  |  |    CENTRALWINDOW(28)
|  |  |      WATERMARKASSIGNER(23)
|  |  |        PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:43437)})
|  |  |    CENTRALWINDOW(29)
|  |  |      WATERMARKASSIGNER(20)
|  |  |        PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |          SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[12:58:31.287878] [D] [thread 143140] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[12:58:31.287909] [D] [thread 143140] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[12:58:31.288176] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288200] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288448] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288471] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288536] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288548] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288583] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288595] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288628] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288640] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288672] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288683] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288716] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288727] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288762] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288773] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288848] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288862] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.288912] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.288931] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.289174] [D] [thread 143140] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[12:58:31.289208] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[12:58:31.289222] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.289234] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.289451] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:39241[m
[36m[12:58:31.289495] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:39241 queryId=1 querySubPlanId = 1[m
[36m[12:58:31.289856] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:36051)})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[12:58:31.289894] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.290160] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.294015] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.294882] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.295203] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.295350] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.295946] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.297066] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.297375] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.297552] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.297595] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.297654] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.298137] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.298287] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.298427] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.298546] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.298990] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.299077] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.299272] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.299411] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.299527] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.299624] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.299998] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.300112] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.300146] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.300202] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.300230] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.300285] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.300560] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.300891] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.301049] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.301146] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.301519] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[12:58:31.301810] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.302152] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.302626] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.302955] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.303192] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.303498] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.316013] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[12:58:31.316049] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.316066] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.316196] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:39391[m
[36m[12:58:31.316227] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:39391 queryId=1 querySubPlanId = 2[m
[36m[12:58:31.316551] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.12:36051)})
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[12:58:31.316592] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.316750] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.316982] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.317168] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.317310] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.317427] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.317797] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.317931] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.318075] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.318148] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.318181] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.318237] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.318457] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.318570] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.318695] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.318809] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.319141] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.319214] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.319347] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.319457] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.319562] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.319655] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.319967] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.320069] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.320103] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.320160] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.320188] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.320243] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.320528] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.320862] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.321028] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.321130] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.321550] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[12:58:31.321749] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.322086] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.322469] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.322789] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.323022] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.323335] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.332353] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[12:58:31.332391] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.332409] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.332539] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:38865[m
[36m[12:58:31.332570] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:38865 queryId=1 querySubPlanId = 3[m
[36m[12:58:31.332900] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.30:41099)})
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[12:58:31.332938] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.333092] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.333322] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.333482] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.333622] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.333739] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.334141] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.334289] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.334463] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.334568] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.334609] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.334679] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.334944] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.335090] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.335246] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.335393] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.335814] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.335909] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.336070] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.336213] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.336369] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.336478] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.336846] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.336955] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.336988] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.337059] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.337087] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.337141] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.337365] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.337680] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.337842] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.337944] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.338303] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[12:58:31.338495] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.338827] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.339209] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.339525] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.339759] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.340066] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.349162] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[12:58:31.349204] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.349232] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.349360] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:37343[m
[36m[12:58:31.349390] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:37343 queryId=1 querySubPlanId = 4[m
[36m[12:58:31.349662] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.30:41099)})
  CENTRALWINDOW(27)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[12:58:31.349701] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.349860] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.350094] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.350255] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.350401] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.350520] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.350935] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.351079] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.351239] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.351338] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.351381] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.351440] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.351662] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.351778] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.351904] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.352018] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.352392] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.352482] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.352635] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.352759] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.352877] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.352988] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.353350] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.353460] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.353493] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.353551] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.353581] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.353636] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.353856] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.354167] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.354325] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.354425] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.354776] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[12:58:31.354965] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.355317] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.355699] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.356016] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.356250] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.356633] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.365601] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[12:58:31.365646] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.365664] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.365786] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:44971[m
[36m[12:58:31.365818] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:44971 queryId=1 querySubPlanId = 5[m
[36m[12:58:31.366086] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(56: {NetworkSinkDescriptor(partition=1::54::0::0;nodeLocation=tcp://192.168.2.31:43437)})
  CENTRALWINDOW(28)
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[12:58:31.366129] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.366285] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.366519] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.366679] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.366831] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.366975] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.367391] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.367513] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.367653] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.367729] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.367762] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.367816] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.368032] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.368144] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.368264] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.368415] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.368759] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.368832] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.368967] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.369090] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.369195] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.369286] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.369600] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.369699] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.369733] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.369797] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.369869] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.369939] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.370162] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.370477] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.370632] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.370727] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.371092] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[12:58:31.371287] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.371624] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.372005] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.372380] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.372643] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.372963] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.382312] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[12:58:31.382355] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.382372] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.382504] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:36221[m
[36m[12:58:31.382538] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:36221 queryId=1 querySubPlanId = 6[m
[36m[12:58:31.382841] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(62: {NetworkSinkDescriptor(partition=1::60::0::0;nodeLocation=tcp://192.168.2.31:43437)})
  CENTRALWINDOW(29)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[12:58:31.382887] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.383061] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.383323] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.383516] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.383685] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.383826] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.384377] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.384638] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.384927] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.385118] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.385177] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.385277] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.385663] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.385855] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.386048] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.386213] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.386677] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[12:58:31.386794] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.386976] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.387112] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.387242] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.387336] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.387712] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[12:58:31.387820] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.387854] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[12:58:31.387905] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.387935] [D] [thread 143140] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[12:58:31.387993] [D] [thread 143140] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[12:58:31.388207] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.388572] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.388750] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.388881] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.389273] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[12:58:31.389481] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.389827] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.390218] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.390551] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.390799] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[12:58:31.391130] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.399161] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[12:58:31.399245] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.399275] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.399390] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:33067[m
[36m[12:58:31.399419] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:33067 queryId=1 querySubPlanId = 7[m
[36m[12:58:31.399720] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::33::0::0})
  SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::39::0::0})
  SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::45::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::51::0::0})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::57::0::0})
  SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::63::0::0})
[m
[36m[12:58:31.399774] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.399920] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.400223] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.400461] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.400637] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.400782] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.401160] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::33::0::0}[m
[36m[12:58:31.401314] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.401476] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.401787] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.401932] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.402058] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.402194] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.402517] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::39::0::0}[m
[36m[12:58:31.402626] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.402761] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.402997] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.403140] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.403250] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.403382] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.403688] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::45::0::0}[m
[36m[12:58:31.403797] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.403938] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.404178] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.404345] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.404484] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.404623] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.404953] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::51::0::0}[m
[36m[12:58:31.405065] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.405203] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.405449] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.405588] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.405709] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.405841] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.406154] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::57::0::0}[m
[36m[12:58:31.406262] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.406397] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.406634] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.406774] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.406890] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.407011] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.407351] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::63::0::0}[m
[36m[12:58:31.407458] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.407591] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.407821] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.407958] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.408081] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.408214] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.416596] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[12:58:31.416680] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.416745] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.416880] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:38749[m
[36m[12:58:31.416915] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:38749 queryId=1 querySubPlanId = 8[m
[36m[12:58:31.417125] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:45109 1::30::0::0})
[m
[36m[12:58:31.417173] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.417332] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.417599] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.417784] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.417942] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.418083] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.418492] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:45109 1::30::0::0}[m
[36m[12:58:31.418612] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.418758] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.419024] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.419174] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.419302] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.419446] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.425202] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:38749 queryId=1 querySubPlanId = 9[m
[36m[12:58:31.425473] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.32:45739 1::36::0::0})
[m
[36m[12:58:31.425521] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.425677] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.425932] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.426110] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.426268] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.426410] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.426773] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:45739 1::36::0::0}[m
[36m[12:58:31.426934] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.427097] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.427366] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.427513] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.427643] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.427762] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.433512] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[12:58:31.433595] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.433654] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.433769] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:37687[m
[36m[12:58:31.433801] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:37687 queryId=1 querySubPlanId = 10[m
[36m[12:58:31.433993] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.35:37673 1::42::0::0})
[m
[36m[12:58:31.434027] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.434178] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.434444] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.434633] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.434792] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.434940] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.435312] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:37673 1::42::0::0}[m
[36m[12:58:31.435428] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.435574] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.435836] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.435985] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.436118] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.436257] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.442067] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:37687 queryId=1 querySubPlanId = 11[m
[36m[12:58:31.442340] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.34:43895 1::48::0::0})
[m
[36m[12:58:31.442377] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.442532] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.442791] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.442966] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.443125] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.443268] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.443626] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:43895 1::48::0::0}[m
[36m[12:58:31.443746] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.443894] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.444156] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.444305] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.444495] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.444651] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.450394] [D] [thread 143140] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[12:58:31.450519] [D] [thread 143140] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[12:58:31.450542] [D] [thread 143140] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[12:58:31.450662] [D] [thread 143140] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:45131[m
[36m[12:58:31.450692] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45131 queryId=1 querySubPlanId = 12[m
[36m[12:58:31.450891] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(59: {NetworkSinkDescriptor(partition=1::57::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(54,,NetworkSourceDescriptor{tcp://192.168.2.38:44879 1::54::0::0})
[m
[36m[12:58:31.450957] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.451124] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.451376] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.451564] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.451725] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.451874] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.452245] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:44879 1::54::0::0}[m
[36m[12:58:31.452416] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.452578] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.452850] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.452998] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.453126] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.453263] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.459058] [D] [thread 143140] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:45131 queryId=1 querySubPlanId = 13[m
[36m[12:58:31.459333] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(65: {NetworkSinkDescriptor(partition=1::63::0::0;nodeLocation=tcp://192.168.2.11:35105)})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.37:38651 1::60::0::0})
[m
[36m[12:58:31.459381] [D] [thread 143140] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[12:58:31.459536] [D] [thread 143140] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[12:58:31.459789] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.459974] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.460132] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.460274] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.460670] [D] [thread 143140] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:38651 1::60::0::0}[m
[36m[12:58:31.460797] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.460950] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.461200] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.461351] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.461479] [D] [thread 143140] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:31.461619] [D] [thread 143140] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[12:58:31.467489] [D] [thread 143140] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[12:58:31.821658] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:31.821998] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:32.823232] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:32.950197] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.950357] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.951080] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.951427] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[36m[12:58:32.951590] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.952153] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.952255] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.952881] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.954542] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[12:58:32.954659] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.955262] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.955357] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.955997] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.957519] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.957683] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.958356] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.958554] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[12:58:32.958631] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.959228] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.959315] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.959838] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.961298] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.961408] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.961983] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.962200] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[12:58:32.962272] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.962905] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.962995] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.963578] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.965213] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.965360] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.966073] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.966286] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[12:58:32.966419] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.967085] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.967177] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.967646] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.969415] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.969563] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.970137] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.970328] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[12:58:32.970514] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.971186] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.971294] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.971867] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.975524] [D] [thread 143156] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[12:58:32.976039] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.978011] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[12:58:32.978176] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[12:58:32.978011] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[12:58:32.978376] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[12:58:32.978410] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:32.978936] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[12:58:32.979336] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[12:58:32.980185] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[12:58:32.980264] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[12:58:32.980477] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:32.980560] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[12:58:32.981048] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[12:58:32.978309] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:32.981626] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[12:58:32.981879] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[12:58:32.981978] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[12:58:32.982053] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[12:58:32.982110] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:32.982220] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[12:58:32.982347] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[12:58:32.982597] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[12:58:32.983003] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[12:58:32.983222] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.983678] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:32.984150] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:32.984756] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.984847] [D] [thread 143156] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[12:58:32.985749] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[12:58:32.986051] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[12:58:32.986119] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:32.986162] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[33m[1m[12:58:32.986259] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[12:58:32.986524] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[12:58:32.986742] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[33m[1m[12:58:32.986842] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:32.986889] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[12:58:32.987161] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[36m[12:58:32.987433] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[12:58:32.987491] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[12:58:32.987536] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:32.987566] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[12:58:32.987642] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[12:58:32.987935] [D] [thread 143156] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[12:58:32.988379] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[12:58:32.988470] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[12:58:32.988673] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:32.988731] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[12:58:32.988876] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[36m[12:58:32.989011] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[12:58:32.989193] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[33m[1m[12:58:32.989461] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:32.989644] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[12:58:32.990173] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[36m[12:58:32.991115] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[12:58:32.991220] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[33m[1m[12:58:32.991408] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:32.991471] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[33m[1m[12:58:32.991643] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[36m[12:58:32.991654] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::57::0::0[m
[32m[12:58:32.991701] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[33m[1m[12:58:32.991740] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:32.991769] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[33m[1m[12:58:32.991856] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[36m[12:58:32.992223] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[12:58:32.992286] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[12:58:32.992406] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:32.992453] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[12:58:32.992546] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[36m[12:58:32.993015] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::57::0::0[m
[32m[12:58:32.993097] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[33m[1m[12:58:32.993147] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:32.993181] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[33m[1m[12:58:32.993271] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[36m[12:58:32.993375] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[12:58:32.993412] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[33m[1m[12:58:32.993446] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:32.993474] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[12:58:32.993539] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[12:58:32.993643] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[12:58:32.993680] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[33m[1m[12:58:32.993715] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:32.993743] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[12:58:32.993832] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[36m[12:58:32.994171] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[12:58:32.994172] [D] [thread 143156] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(67: {FileSinkDescriptor()})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::33::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::39::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::45::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::51::0::0})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::57::0::0})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::63::0::0})
[m
[32m[12:58:32.994222] [I] [thread 143156] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[12:58:32.994224] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[12:58:32.994268] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:32.994299] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[12:58:32.994394] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[32m[12:58:32.994402] [I] [thread 143156] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[12:58:32.994832] [D] [thread 143156] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
[36m[12:58:32.994883] [D] [thread 143156] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 12:58:32 - 1. LogicalQueryPlan[m
SINK(67: {FileSinkDescriptor()})
  SOURCE(70,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::33::0::0})
  SOURCE(66,,NetworkSourceDescriptor{tcp://192.168.2.12:36051 1::39::0::0})
  SOURCE(69,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::45::0::0})
  SOURCE(72,,NetworkSourceDescriptor{tcp://192.168.2.30:41099 1::51::0::0})
  SOURCE(68,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::57::0::0})
  SOURCE(71,,NetworkSourceDescriptor{tcp://192.168.2.31:43437 1::63::0::0})

[32m[12:58:32.995599] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[32m[12:58:32.995837] [I] [thread 143156] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[12:58:32.995870] [I] [thread 143156] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[12:58:32.995879] [I] [thread 143156] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[12:58:32.995899] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.995909] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.995917] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.995926] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.995934] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.995942] [I] [thread 143156] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[12:58:32.996101] [I] [thread 143156] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:32.996724] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[12:58:32.997028] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[12:58:32.997066] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:32.997075] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[12:58:32.997157] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:32.997224] [D] [thread 143156] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[12:58:32.997278] [D] [thread 143156] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[12:58:32.997301] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:58:32.997527] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[36m[12:58:32.997719] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:58:32.997768] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:32.997814] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:32.997823] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:32.997838] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:58:32.997998] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:32.998070] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:58:32.998185] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[12:58:32.998311] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:58:32.998346] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:32.998457] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:32.998487] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:32.998507] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:58:32.998713] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:32.998760] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:58:32.998879] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[12:58:32.998990] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:58:32.999085] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:32.999165] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:32.999177] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:32.999187] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:58:32.999356] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:32.999402] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:58:32.999525] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[12:58:32.999775] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:58:32.999894] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:32.999970] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:32.999979] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:32.999993] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:58:33.000198] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:33.000236] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[12:58:33.000427] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[12:58:33.000577] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[12:58:33.000655] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[36m[12:58:33.000721] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[12:58:33.000749] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:33.000761] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:33.000773] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[33m[1m[12:58:33.000829] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:33.000866] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[32m[12:58:33.000776] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[33m[1m[12:58:33.001004] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::51::0::0[m
[36m[12:58:33.001075] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:33.001098] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
Dumping queryPlan: [32m[12:58:33.001187] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[12:58:33.001407] [D] [thread 143156] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[36m[12:58:33.001438] [D] [thread 143156] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[12:58:33.001497] [I] [thread 143156] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[12:58:33.001506] [I] [thread 143156] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[12:58:33.001518] [I] [thread 143156] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[12:58:33.001682] [D] [thread 143156] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[12:58:33.001705] [D] [thread 143156] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[12:58:33.001841] [D] [thread 143156] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-13 12:58:32 - 2. PhysicalQueryPlan[m
[36m[12:58:33.002042] [D] [thread 143156] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[12:58:33.002411] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 74[m
[36m[12:58:33.002662] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[12:58:33.002696] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:33.002714] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:33.003469] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::51::0::0[m
[36m[12:58:33.003517] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[12:58:33.003567] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[32m[12:58:33.003567] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[33m[1m[12:58:33.003635] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:33.003642] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) NOT REGISTERED[m
[32m[12:58:33.003656] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 75[m
[33m[1m[12:58:33.003672] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[12:58:33.003674] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[33m[1m[12:58:33.003777] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::51::0::0[m
[33m[1m[12:58:33.003790] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::51::0::0[m
[36m[12:58:33.003832] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::57::0::0[m
[36m[12:58:33.003838] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[12:58:33.003838] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:58:33.003864] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[32m[12:58:33.003865] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[12:58:33.003876] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:33.003870] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[33m[1m[12:58:33.003915] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:33.003919] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:33.003944] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[33m[1m[12:58:33.003947] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[12:58:33.004008] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::51::0::0[m
[33m[1m[12:58:33.004009] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::57::0::0[m
[32m[12:58:33.004018] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 76[m
[36m[12:58:33.004061] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::57::0::0[m
[36m[12:58:33.004062] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[12:58:33.004097] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[32m[12:58:33.004101] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[36m[12:58:33.004126] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[33m[1m[12:58:33.004129] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:33.004140] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) NOT REGISTERED[m
[36m[12:58:33.004144] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:33.004152] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[33m[1m[12:58:33.004165] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[33m[1m[12:58:33.004165] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[33m[1m[12:58:33.004212] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::57::0::0[m
[32m[12:58:33.004246] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 77[m
[36m[12:58:33.004376] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:58:33.004395] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:33.004402] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[33m[1m[12:58:33.004212] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::57::0::0[m
[32m[12:58:33.004670] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 78[m
[36m[12:58:33.004843] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:58:33.004862] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
Dumping pipelineQueryPlan: [36m[12:58:33.004873] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:33.005225] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 79[m
[36m[12:58:33.005455] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:58:33.005473] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:33.005526] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[12:58:33.005745] [I] [thread 143156] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 80[m
[36m[12:58:33.005912] [D] [thread 143156] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[12:58:33.005979] [D] [thread 143156] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[12:58:33.005988] [D] [thread 143156] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[12:58:33.006164] [D] [thread 143156] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 12:58:32 - 3. AfterPipelinedQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


Dumping pipelineQueryPlan: [36m[12:58:33.007339] [D] [thread 143156] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-13 12:58:32 - 4. AfterAddScanAndEmitPhase[m
[36m[12:58:33.007608] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::57::0::0[m
[32m[12:58:33.007682] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[33m[1m[12:58:33.007732] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) NOT REGISTERED[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[33m[1m[12:58:33.007765] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[33m[1m[12:58:33.007885] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::57::0::0[m
[36m[12:58:33.008054] [D] [thread 143156] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[36m[12:58:33.008552] [D] [thread 143156] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  74[m
[32m[12:58:33.008688] [I] [thread 143156] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[12:58:33.009127] [D] [thread 143156] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out[m
[32m[12:58:33.009885] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.010614] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:33.011597] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.011957] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  39 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:33.012481] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.012785] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  45 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:33.013246] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.013529] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:33.013949] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.014427] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  57 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[12:58:33.015184] [I] [thread 143156] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[12:58:33.015741] [D] [thread 143156] [DataSource.cpp:75] [DataSource] DataSource  63 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[12:58:33.016148] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::33::0::0[m
[36m[12:58:33.016182] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[12:58:33.016232] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[32m[12:58:33.016232] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[33m[1m[12:58:33.016304] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[12:58:33.016312] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) NOT REGISTERED[m
[33m[1m[12:58:33.016418] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[12:58:33.016505] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[33m[1m[12:58:33.016569] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 3:1::33::0::0[m
[33m[1m[12:58:33.016577] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::33::0::0[m
[36m[12:58:33.016632] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[12:58:33.016632] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[12:58:33.016675] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[12:58:33.016674] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[33m[1m[12:58:33.016732] [W] [thread 143150] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) NOT REGISTERED[m
[33m[1m[12:58:33.016753] [W] [thread 143149] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) NOT REGISTERED[m
[33m[1m[12:58:33.016761] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[12:58:33.016783] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[33m[1m[12:58:33.016815] [W] [thread 143150] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 2:1::33::0::0[m
[33m[1m[12:58:33.016828] [W] [thread 143149] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 1:1::33::0::0[m
[36m[12:58:33.017541] [D] [thread 143156] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[12:58:33.017829] [D] [thread 143156] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[12:58:33.017887] [D] [thread 143156] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[12:58:33.017942] [D] [thread 143156] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[12:58:33.018007] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[12:58:33.018410] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  39  not found. Creating new element with with qep [m
[36m[12:58:33.018488] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  45  not found. Creating new element with with qep [m
[36m[12:58:33.018510] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[12:58:33.018528] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  57  not found. Creating new element with with qep [m
[36m[12:58:33.018546] [D] [thread 143156] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  63  not found. Creating new element with with qep [m
[36m[12:58:33.018579] [D] [thread 143156] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
2023-11-13 12:58:33.18 setup: queryId=1, querySubPlanId=7; 
[36m[12:58:33.019188] [D] [thread 143156] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
2023-11-13 12:58:33.19 start: queryId=1, querySubPlanId=7; 
[36m[12:58:33.019395] [D] [thread 143156] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[12:58:33.019843] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[12:58:33.020162] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[12:58:33.020249] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c013620  started successfully[m
[36m[12:58:33.020308] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::39::0::0 from 192.168.2.12[m
[36m[12:58:33.020402] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::39::0::0=1[m
[36m[12:58:33.020437] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c0181b0  started successfully[m
[36m[12:58:33.020477] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::45::0::0 from 192.168.2.30[m
[36m[12:58:33.020529] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::45::0::0=1[m
[36m[12:58:33.020586] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c018570  started successfully[m
[36m[12:58:33.020665] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.30[m
[36m[12:58:33.020751] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[12:58:33.020801] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c018930  started successfully[m
[36m[12:58:33.020840] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::57::0::0 from 192.168.2.31[m
[36m[12:58:33.020960] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::57::0::0=1[m
[36m[12:58:33.021010] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c018e50  started successfully[m
[36m[12:58:33.021082] [D] [thread 143156] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::63::0::0 from 192.168.2.31[m
[36m[12:58:33.021179] [D] [thread 143156] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::63::0::0=1[m
[36m[12:58:33.021249] [D] [thread 143156] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff2c0198a0  started successfully[m
[36m[12:58:33.021344] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.021599] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.022038] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.022991] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[12:58:33.022991] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[12:58:33.022991] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[12:58:33.022991] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[12:58:33.023581] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[12:58:33.023986] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.024033] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c013620  started successfully[m
[36m[12:58:33.024074] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.024146] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.024509] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.024686] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::51::0::0[m
[32m[12:58:33.024737] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[12:58:33.024813] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.025073] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[12:58:33.025073] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[12:58:33.025190] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[12:58:33.025245] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[12:58:33.025331] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[12:58:33.025456] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.025481] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c0181b0  started successfully[m
[36m[12:58:33.025513] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.025582] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.025701] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.026072] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[12:58:33.026072] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[12:58:33.026072] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[12:58:33.026143] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[12:58:33.026244] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[12:58:33.026290] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.026306] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c018570  started successfully[m
[36m[12:58:33.026345] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.026407] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.026575] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.026891] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[12:58:33.026892] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[12:58:33.026892] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[12:58:33.026963] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[12:58:33.027046] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[12:58:33.027090] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.027105] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c018930  started successfully[m
[36m[12:58:33.027158] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.027222] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.027327] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.027892] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[12:58:33.027892] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[12:58:33.027892] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[12:58:33.027934] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[12:58:33.028285] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[12:58:33.028468] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.028493] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c018e50  started successfully[m
[36m[12:58:33.028529] [D] [thread 143156] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.028599] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.028616] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::51::0::0[m
[36m[12:58:33.028616] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::57::0::0[m
[32m[12:58:33.028674] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=1) Data[m
[32m[12:58:33.028673] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[12:58:33.028708] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[12:58:33.028751] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.028761] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.028881] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::57::0::0[m
[32m[12:58:33.028938] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=0) Data[m
[36m[12:58:33.028981] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=0) REGISTERED[m
[36m[12:58:33.028877] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[12:58:33.029034] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[36m[12:58:33.029042] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::57::0::0[m
[36m[12:58:33.029070] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[32m[12:58:33.029071] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=2) Data[m
[36m[12:58:33.029113] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.029130] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[12:58:33.029157] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[12:58:33.029189] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.029456] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[12:58:33.029545] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[12:58:33.029605] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[12:58:33.029615] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::57::0::0[m
[36m[12:58:33.029660] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[32m[12:58:33.029669] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::57::0::0(threadId=3) Data[m
[36m[12:58:33.029710] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::57::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.029746] [D] [thread 143156] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[12:58:33.029802] [D] [thread 143156] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[12:58:33.029819] [D] [thread 143156] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff2c0198a0  started successfully[m
[36m[12:58:33.029872] [D] [thread 143156] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[12:58:33.030187] [D] [thread 143156] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[12:58:33.030298] [D] [thread 143156] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[12:58:33.040983] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::45::0::0[m
[32m[12:58:33.041108] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=1) Data[m
[36m[12:58:33.041195] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.042667] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::45::0::0[m
[36m[12:58:33.042662] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::45::0::0[m
[32m[12:58:33.042809] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=3) Data[m
[32m[12:58:33.042809] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=2) Data[m
[36m[12:58:33.042930] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.043048] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.043635] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::45::0::0[m
[32m[12:58:33.043700] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::45::0::0(threadId=0) Data[m
[36m[12:58:33.043768] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::45::0::0(threadId=0) REGISTERED[m
[36m[12:58:33.044567] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::63::0::0[m
[32m[12:58:33.044638] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=2) Data[m
[36m[12:58:33.044703] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.044897] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::63::0::0[m
[32m[12:58:33.044943] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=3) Data[m
[36m[12:58:33.044990] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.045365] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::63::0::0[m
[32m[12:58:33.045428] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=0) Data[m
[36m[12:58:33.045490] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=0) REGISTERED[m
[36m[12:58:33.045837] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::63::0::0[m
[32m[12:58:33.045936] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::63::0::0(threadId=1) Data[m
[36m[12:58:33.045993] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::63::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.058669] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::33::0::0[m
[36m[12:58:33.058732] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[12:58:33.058772] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[32m[12:58:33.058845] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[12:58:33.058892] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[12:58:33.058904] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.059040] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::33::0::0[m
[36m[12:58:33.059055] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[12:58:33.059100] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[32m[12:58:33.059101] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[12:58:33.059199] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.059226] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.074921] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 0:1::39::0::0[m
[32m[12:58:33.075074] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=0) Data[m
[36m[12:58:33.075091] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 1:1::39::0::0[m
[36m[12:58:33.075176] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=0) REGISTERED[m
[32m[12:58:33.075283] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=1) Data[m
[36m[12:58:33.075363] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=1) REGISTERED[m
[36m[12:58:33.075667] [D] [thread 143150] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 3:1::39::0::0[m
[32m[12:58:33.075734] [I] [thread 143150] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=3) Data[m
[36m[12:58:33.075800] [D] [thread 143150] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=3) REGISTERED[m
[36m[12:58:33.076115] [D] [thread 143149] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): ClientAnnouncement received for channel 2:1::39::0::0[m
[32m[12:58:33.076198] [I] [thread 143149] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::39::0::0(threadId=2) Data[m
[36m[12:58:33.076299] [D] [thread 143149] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::39::0::0(threadId=2) REGISTERED[m
[36m[12:58:33.443524] [D] [thread 143140] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[12:58:33.443632] [D] [thread 143140] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[12:58:33.444127] [D] [thread 143140] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[12:58:33.444291] [D] [thread 143140] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[12:58:33.444350] [D] [thread 143140] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[12:58:33.444510] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[12:58:33.444562] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:39241 queryId=1[m
[36m[12:58:33.449318] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[12:58:33.449400] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:39391 queryId=1[m
[36m[12:58:33.453745] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[12:58:33.453830] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:38865 queryId=1[m
[36m[12:58:33.458163] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[12:58:33.458248] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:37343 queryId=1[m
[36m[12:58:33.462508] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[12:58:33.462632] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:44971 queryId=1[m
[36m[12:58:33.466894] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[12:58:33.466979] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:36221 queryId=1[m
[36m[12:58:33.471202] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[12:58:33.471287] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:33067 queryId=1[m
[36m[12:58:33.475821] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[12:58:33.475910] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:38749 queryId=1[m
[36m[12:58:33.480166] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[12:58:33.480251] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:37687 queryId=1[m
[36m[12:58:33.484464] [D] [thread 143140] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[12:58:33.484543] [D] [thread 143140] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:45131 queryId=1[m
[36m[12:58:33.488687] [D] [thread 143140] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[12:58:33.491789] [D] [thread 143203] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[12:58:33.491878] [D] [thread 143203] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[12:58:33.491984] [D] [thread 143203] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[12:58:33.492093] [D] [thread 143203] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699880313492[m
[36m[12:58:33.492109] [D] [thread 143203] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[12:58:33.492128] [D] [thread 143203] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[12:58:33.558226] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:33.558570] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:33.574994] [D] [thread 143140] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[12:58:33.575087] [D] [thread 143140] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[12:58:33.575595] [I] [thread 143140] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[12:58:33.575749] [D] [thread 143140] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[12:58:34.559825] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:35.560463] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:35.570843] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:35.571189] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:35.573322] [D] [thread 143211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:35.573485] [I] [thread 143211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:35.573508] [I] [thread 143211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:35.573712] [I] [thread 143211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:35.573739] [I] [thread 143211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:35.795463] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:35.795843] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:36.797068] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:37.768314] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:37.768787] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:37.770154] [D] [thread 143216] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:37.770295] [I] [thread 143216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:37.770316] [I] [thread 143216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:37.770482] [I] [thread 143216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:37.770501] [I] [thread 143216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:37.982452] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:37.982807] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:38.983974] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:39.976762] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:39.977116] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:39.978050] [D] [thread 143221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:39.978143] [I] [thread 143221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:39.978160] [I] [thread 143221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:39.978278] [I] [thread 143221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:39.978291] [I] [thread 143221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:40.142604] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:40.142952] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:41.144193] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:42.109047] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:42.109381] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:42.110600] [D] [thread 143226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:42.110797] [I] [thread 143226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:42.110818] [I] [thread 143226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:42.110960] [I] [thread 143226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:42.111052] [I] [thread 143226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:42.372885] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:42.373205] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:42.952143] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:42.954753] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,100,1699880313571,1699880322952
[m
[36m[12:58:42.955218] [D] [thread 143152] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699880322955[m
[36m[12:58:43.211045] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:43.211152] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:43.212448] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,54,1699880313501,1699880323211
[m
[36m[12:58:43.374433] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:43.665492] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:43.665560] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:43.666630] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,47,1699880313520,1699880323665
[m
[36m[12:58:43.693214] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:43.693303] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:43.694300] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,63,1699880313538,1699880323693
[m
[36m[12:58:43.904019] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:43.904117] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:43.905310] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,24,1699880313510,1699880323904
[m
[36m[12:58:44.372241] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:44.372388] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:44.373503] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,13,1699880313562,1699880324372
[m
[36m[12:58:44.375720] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:44.571494] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:44.571833] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:44.572886] [D] [thread 143231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:44.572987] [I] [thread 143231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:44.573006] [I] [thread 143231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:44.573122] [I] [thread 143231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:44.573135] [I] [thread 143231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:44.778837] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:44.779162] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:45.780399] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:46.777742] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:46.778067] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:46.779031] [D] [thread 143236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:46.779127] [I] [thread 143236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:46.779144] [I] [thread 143236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:46.779260] [I] [thread 143236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:46.779273] [I] [thread 143236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:47.035527] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:47.035889] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:48.037139] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:49.038471] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:49.046064] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:49.046411] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:49.047427] [D] [thread 143241] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:49.047524] [I] [thread 143241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:49.047541] [I] [thread 143241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:49.047657] [I] [thread 143241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:49.047670] [I] [thread 143241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:49.251278] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:49.251815] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:50.253089] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:51.226286] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:51.226997] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:51.227694] [D] [thread 143246] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:51.227788] [I] [thread 143246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:51.227805] [I] [thread 143246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:51.227921] [I] [thread 143246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:51.227933] [I] [thread 143246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:51.395276] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:51.395893] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:52.396552] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:53.383344] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:53.383981] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:53.384724] [D] [thread 143251] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:53.384818] [I] [thread 143251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:53.384836] [I] [thread 143251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:53.384953] [I] [thread 143251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:53.384966] [I] [thread 143251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:53.600021] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:53.600398] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:53.954280] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:53.954390] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:53.955587] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699880322753,1699880333954
[m
[36m[12:58:54.601570] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:55.525807] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:55.526390] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:55.527134] [D] [thread 143256] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:55.527230] [I] [thread 143256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:55.527247] [I] [thread 143256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:55.527364] [I] [thread 143256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:55.527376] [I] [thread 143256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:55.786186] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:55.786555] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:56.088226] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:56.088306] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:56.089169] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,54,1699880323035,1699880336088
[m
[36m[12:58:56.773810] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:56.773917] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:56.775097] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,47,1699880323478,1699880336774
[m
[36m[12:58:56.787914] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:56.872733] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:56.872821] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:56.873998] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,63,1699880323499,1699880336872
[m
[36m[12:58:57.544143] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:57.544250] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:57.545480] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,24,1699880323713,1699880337544
[m
[36m[12:58:57.776380] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:57.776753] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:57.777881] [D] [thread 143261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:58:57.777977] [I] [thread 143261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:57.777994] [I] [thread 143261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:58:57.778111] [I] [thread 143261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:58:57.778124] [I] [thread 143261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:58:58.042581] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:58.042911] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:58:58.426147] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:58:58.426222] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:58:58.427014] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,13,1699880324195,1699880338426
[m
[36m[12:58:59.044209] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:00.045512] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:00.108098] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:00.108455] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:00.109572] [D] [thread 143266] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:00.109673] [I] [thread 143266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:00.109692] [I] [thread 143266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:00.109810] [I] [thread 143266] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:00.109823] [I] [thread 143266] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:00.277967] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:00.278335] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:01.279737] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:02.280557] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:02.311232] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:02.311564] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:02.312746] [D] [thread 143273] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:02.312844] [I] [thread 143273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:02.312862] [I] [thread 143273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:02.312978] [I] [thread 143273] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:02.313009] [I] [thread 143273] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:02.533959] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:02.534316] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:03.535551] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:04.125019] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:04.125098] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:04.125857] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699880333817,1699880344125
[m
[36m[12:59:04.516111] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:04.516487] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:04.517568] [D] [thread 143278] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:04.517670] [I] [thread 143278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:04.517687] [I] [thread 143278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:04.517805] [I] [thread 143278] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:04.517818] [I] [thread 143278] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:04.734110] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:04.734458] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:05.735699] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:06.736996] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:06.766429] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:06.766786] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:06.767722] [D] [thread 143283] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:06.767816] [I] [thread 143283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:06.767832] [I] [thread 143283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:06.767950] [I] [thread 143283] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:06.767963] [I] [thread 143283] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:07.027751] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:07.028073] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:08.029435] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.030689] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.034877] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.035204] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.036419] [D] [thread 143288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:09.036513] [I] [thread 143288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:09.036533] [I] [thread 143288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:09.036651] [I] [thread 143288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:09.036663] [I] [thread 143288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:09.172304] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:09.172464] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:09.173645] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,54,1699880335924,1699880349172
[m
[36m[12:59:09.351216] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.351574] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:09.673427] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:09.673537] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:09.674722] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,47,1699880336631,1699880349673
[m
[36m[12:59:09.831522] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:09.831599] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:09.832415] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,63,1699880336692,1699880349831
[m
[36m[12:59:10.352809] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:11.201249] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:11.201356] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:11.202575] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,24,1699880337394,1699880351201
[m
[36m[12:59:11.354092] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:11.378683] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:11.379046] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:11.380006] [D] [thread 143293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:11.380099] [I] [thread 143293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:11.380117] [I] [thread 143293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:11.380233] [I] [thread 143293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:11.380247] [I] [thread 143293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:11.646479] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:11.646843] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:12.036951] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:12.037027] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:12.037787] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,13,1699880338225,1699880352037
[m
[36m[12:59:12.648104] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:13.630020] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:13.630673] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:13.631462] [D] [thread 143298] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:13.631562] [I] [thread 143298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:13.631580] [I] [thread 143298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:13.631697] [I] [thread 143298] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:13.631710] [I] [thread 143298] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:13.804723] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:13.805260] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:14.806505] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:15.790806] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:15.791448] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:15.792166] [D] [thread 143303] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:15.792260] [I] [thread 143303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:15.792278] [I] [thread 143303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:15.792430] [I] [thread 143303] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:15.792447] [I] [thread 143303] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:15.948730] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:15.948836] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:15.950020] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699880343988,1699880355948
[m
[36m[12:59:15.992778] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:15.993119] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:16.994351] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:17.962044] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:17.962662] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:17.963448] [D] [thread 143308] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:17.963546] [I] [thread 143308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:17.963563] [I] [thread 143308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:17.963681] [I] [thread 143308] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:17.963693] [I] [thread 143308] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:18.136274] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:18.136896] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:19.138171] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:20.139487] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:20.142791] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:20.143420] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:20.144563] [D] [thread 143313] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:20.144677] [I] [thread 143313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:20.144696] [I] [thread 143313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:20.144835] [I] [thread 143313] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:20.144849] [I] [thread 143313] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:20.350636] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:20.351135] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:21.352558] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:22.260562] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:22.260655] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:22.261757] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,54,1699880348984,1699880362260
[m
[36m[12:59:22.353925] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:22.360691] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:22.360763] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:22.361694] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,63,1699880349647,1699880362360
[m
[36m[12:59:22.439556] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:22.440110] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:22.441067] [D] [thread 143318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:22.441165] [I] [thread 143318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:22.441183] [I] [thread 143318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:22.441299] [I] [thread 143318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:22.441312] [I] [thread 143318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:22.567499] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:22.567604] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:22.568898] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,47,1699880349497,1699880362567
[m
[36m[12:59:22.717958] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:22.718507] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:23.719833] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:24.717884] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:24.718226] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:24.719843] [D] [thread 143323] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:24.719939] [I] [thread 143323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:24.719957] [I] [thread 143323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:24.720074] [I] [thread 143323] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:24.720087] [I] [thread 143323] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:24.938869] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:24.939197] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:25.048285] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:25.048438] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:25.049625] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,24,1699880351059,1699880365048
[m
[36m[12:59:25.864869] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:25.864944] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:25.865633] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,13,1699880351868,1699880365864
[m
[36m[12:59:25.940597] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:26.941842] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:26.990402] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:26.991047] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:26.992071] [D] [thread 143328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:26.992197] [I] [thread 143328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:26.992215] [I] [thread 143328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:26.992396] [I] [thread 143328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:26.992416] [I] [thread 143328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:27.167786] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:27.168121] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:27.362397] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:27.362505] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:27.363927] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,100,1699880355770,1699880367362
[m
[36m[12:59:28.169441] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:29.170709] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:29.171868] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:29.172215] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:29.173401] [D] [thread 143333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:29.173511] [I] [thread 143333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:29.173531] [I] [thread 143333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:29.173653] [I] [thread 143333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:29.173676] [I] [thread 143333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:29.402979] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:29.403337] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:30.404501] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:31.405940] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:31.429802] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:31.430395] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:31.431265] [D] [thread 143338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:31.431388] [I] [thread 143338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:31.431409] [I] [thread 143338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:31.431538] [I] [thread 143338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:31.431554] [I] [thread 143338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:31.654854] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:31.655444] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:32.656478] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:33.657801] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:33.678952] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:33.679573] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:33.680397] [D] [thread 143343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:33.680488] [I] [thread 143343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:33.680507] [I] [thread 143343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:33.680627] [I] [thread 143343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:33.680640] [I] [thread 143343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:33.898902] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:33.899282] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:34.891819] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:34.891901] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:34.892760] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,63,1699880362176,1699880374891
[m
[36m[12:59:34.900477] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:35.134199] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:35.134300] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:35.135368] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,54,1699880362057,1699880375134
[m
[36m[12:59:35.668075] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:35.668183] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:35.669411] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,47,1699880362371,1699880375668
[m
[36m[12:59:35.901767] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:35.936046] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:35.936422] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:35.937417] [D] [thread 143350] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:35.937537] [I] [thread 143350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:35.937559] [I] [thread 143350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:35.937680] [I] [thread 143350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:35.937696] [I] [thread 143350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:36.125388] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:36.125724] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:37.127042] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.128400] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.142572] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.142932] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.144568] [D] [thread 143358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:38.144665] [I] [thread 143358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:38.144682] [I] [thread 143358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:38.144799] [I] [thread 143358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:38.144812] [I] [thread 143358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:38.361802] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.362138] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:38.691956] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:38.692066] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:38.693383] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,24,1699880364858,1699880378692
[m
[36m[12:59:39.363332] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:39.407229] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:39.407337] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:39.408603] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,100,1699880367191,1699880379407
[m
[36m[12:59:40.127021] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:40.127129] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:40.128383] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,13,1699880365714,1699880380127
[m
[36m[12:59:40.353934] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:40.354272] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:40.355260] [D] [thread 143365] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:40.355358] [I] [thread 143365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:40.355376] [I] [thread 143365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:40.355495] [I] [thread 143365] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:40.355507] [I] [thread 143365] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:40.532897] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:40.533274] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:41.534504] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:42.487250] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:42.487656] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:42.488823] [D] [thread 143371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:42.488922] [I] [thread 143371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:42.488941] [I] [thread 143371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:42.489056] [I] [thread 143371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:42.489069] [I] [thread 143371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:42.679347] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:42.679682] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:43.680880] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:44.666132] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:44.666488] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:44.667430] [D] [thread 143378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:44.667525] [I] [thread 143378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:44.667542] [I] [thread 143378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:44.667659] [I] [thread 143378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:44.667671] [I] [thread 143378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:44.865714] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:44.866049] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:45.867284] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:46.868508] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:46.875047] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:46.875358] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:46.876414] [D] [thread 143385] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:46.876505] [I] [thread 143385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:46.876525] [I] [thread 143385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:46.876642] [I] [thread 143385] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:46.876656] [I] [thread 143385] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:47.050266] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:47.050622] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:47.204868] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:47.204978] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:47.206176] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,63,1699880374728,1699880387205
[m
[36m[12:59:47.796653] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:47.796741] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:47.797923] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,54,1699880374990,1699880387796
[m
[36m[12:59:48.051848] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:48.763108] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:48.763221] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:48.764455] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,47,1699880375498,1699880388763
[m
[36m[12:59:49.042671] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:49.043088] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:49.044180] [D] [thread 143390] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:49.044276] [I] [thread 143390] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:49.044293] [I] [thread 143390] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:49.044438] [I] [thread 143390] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:49.044453] [I] [thread 143390] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:49.257913] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:49.258277] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:50.197197] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:50.197307] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:50.198502] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,100,1699880379210,1699880390197
[m
[36m[12:59:50.259522] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:51.230912] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:51.231284] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:51.232265] [D] [thread 143396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:51.232391] [I] [thread 143396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:51.232410] [I] [thread 143396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:51.232530] [I] [thread 143396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:51.232543] [I] [thread 143396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:51.444177] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:51.444555] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:52.445887] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:52.555591] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:52.555687] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:52.556884] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,24,1699880378528,1699880392555
[m
[36m[12:59:53.332689] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:53.332755] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:53.333427] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,13,1699880379940,1699880393332
[m
[36m[12:59:53.447313] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:53.504904] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:53.505253] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:53.506282] [D] [thread 143403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:53.506383] [I] [thread 143403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:53.506400] [I] [thread 143403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:53.506521] [I] [thread 143403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:53.506534] [I] [thread 143403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:53.674423] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:53.674817] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:54.676072] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:55.674095] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:55.674438] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:55.675567] [D] [thread 143408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:55.675665] [I] [thread 143408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:55.675682] [I] [thread 143408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:55.675799] [I] [thread 143408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:55.675812] [I] [thread 143408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:55.945548] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:55.945894] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:56.947138] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:57.938990] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:57.939332] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:57.940307] [D] [thread 143413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[12:59:57.940432] [I] [thread 143413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:57.940449] [I] [thread 143413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[12:59:57.940567] [I] [thread 143413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[12:59:57.940580] [I] [thread 143413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[12:59:58.151225] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:58.151581] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:59.152738] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[12:59:59.949160] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[12:59:59.949286] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[12:59:59.951057] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,63,1699880387013,1699880399949
[m
[36m[13:00:00.131510] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:00.132148] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:00.132871] [D] [thread 143418] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:00.132967] [I] [thread 143418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:00.132985] [I] [thread 143418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:00.133104] [I] [thread 143418] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:00.133117] [I] [thread 143418] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:00.341988] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:00.342641] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:00.665948] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:00.666055] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:00.667245] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,54,1699880387637,1699880400666
[m
[36m[13:00:01.203479] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:01.203561] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:01.204410] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,100,1699880390009,1699880401203
[m
[36m[13:00:01.343907] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:01.857965] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:01.858062] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:01.859131] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,47,1699880388615,1699880401858
[m
[36m[13:00:02.299633] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:02.300886] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:02.301675] [D] [thread 143423] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:02.301789] [I] [thread 143423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:02.301809] [I] [thread 143423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:02.301934] [I] [thread 143423] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:02.301949] [I] [thread 143423] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:02.560983] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:02.561561] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:03.562834] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:04.548092] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:04.548732] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:04.549962] [D] [thread 143429] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:04.550084] [I] [thread 143429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:04.550105] [I] [thread 143429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:04.550230] [I] [thread 143429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:04.550309] [I] [thread 143429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:04.721453] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:04.722073] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:05.723290] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:06.191108] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:06.191221] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:06.192402] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,24,1699880392393,1699880406191
[m
[36m[13:00:06.724566] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:06.757977] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:06.758686] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:06.759408] [D] [thread 143434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:06.759499] [I] [thread 143434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:06.759518] [I] [thread 143434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:06.759635] [I] [thread 143434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:06.759675] [I] [thread 143434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:06.947879] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:06.947955] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:06.948741] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,13,1699880393168,1699880406947
[m
[36m[13:00:07.094708] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:07.095285] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:08.096513] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:09.097782] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:09.127364] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:09.127926] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:09.129077] [D] [thread 143439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:09.129195] [I] [thread 143439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:09.129214] [I] [thread 143439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:09.129342] [I] [thread 143439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:09.129374] [I] [thread 143439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:09.305666] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:09.306171] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:10.307353] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:10.329798] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:10.329870] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:10.330670] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,100,1699880401030,1699880410329
[m
[36m[13:00:11.308595] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:11.449784] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:11.450156] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:11.451484] [D] [thread 143444] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:11.451606] [I] [thread 143444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:11.451626] [I] [thread 143444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:11.451750] [I] [thread 143444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:11.451776] [I] [thread 143444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:11.658198] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:11.658566] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:11.832003] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:11.832090] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:11.833088] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,63,1699880399739,1699880411832
[m
[36m[13:00:12.659844] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:13.539900] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:13.540010] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:13.541273] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,54,1699880400527,1699880413540
[m
[36m[13:00:13.597635] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:13.598222] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:13.598931] [D] [thread 143449] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:13.599025] [I] [thread 143449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:13.599044] [I] [thread 143449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:13.599162] [I] [thread 143449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:13.599175] [I] [thread 143449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:13.765210] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:13.765918] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:14.743868] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:14.743981] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:14.745246] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,47,1699880401717,1699880414744
[m
[36m[13:00:14.767178] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:15.768451] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:15.805485] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:15.806038] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:15.806855] [D] [thread 143454] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:15.806949] [I] [thread 143454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:15.806968] [I] [thread 143454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:15.807086] [I] [thread 143454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:15.807098] [I] [thread 143454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:16.008186] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:16.008655] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:17.009914] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:18.006408] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:18.007105] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:18.007818] [D] [thread 143459] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:18.007909] [I] [thread 143459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:18.007927] [I] [thread 143459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:18.008044] [I] [thread 143459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:18.008057] [I] [thread 143459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:18.240764] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:18.241386] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:19.242637] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:19.615207] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:19.615319] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:19.616464] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,24,1699880405991,1699880419615
[m
[36m[13:00:20.243956] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:20.345742] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:20.346102] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:20.347099] [D] [thread 143464] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:20.347197] [I] [thread 143464] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:20.347214] [I] [thread 143464] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:20.347330] [I] [thread 143464] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:20.347354] [I] [thread 143464] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:20.557022] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:20.557102] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:20.557882] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,13,1699880406749,1699880420557
[m
[36m[13:00:20.604763] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:20.605128] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:21.606345] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:21.735748] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:21.735836] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:21.736761] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,100,1699880410125,1699880421735
[m
[36m[13:00:22.573047] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:22.573405] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:22.574509] [D] [thread 143469] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:22.574612] [I] [thread 143469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:22.574631] [I] [thread 143469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:22.574749] [I] [thread 143469] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:22.574762] [I] [thread 143469] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:22.782684] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:22.783040] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:23.784256] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:24.785575] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:24.801039] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:24.801144] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:24.801167] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:24.801603] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:24.801822] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,63,1699880411670,1699880424801
[m
[36m[13:00:24.802652] [D] [thread 143474] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:24.802739] [I] [thread 143474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:24.802757] [I] [thread 143474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:24.802866] [I] [thread 143474] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:24.802879] [I] [thread 143474] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:25.070303] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:25.071788] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:26.073188] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:26.848513] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:26.848610] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:26.849747] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,54,1699880413398,1699880426848
[m
[36m[13:00:27.074434] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:27.078578] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:27.078957] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:27.080089] [D] [thread 143479] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:27.080188] [I] [thread 143479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:27.080208] [I] [thread 143479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:27.080354] [I] [thread 143479] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:27.080372] [I] [thread 143479] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:27.286126] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:27.286487] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:27.836187] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:27.836270] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:27.837449] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,47,1699880414597,1699880427836
[m
[36m[13:00:28.287727] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:29.266435] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:29.266844] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:29.267935] [D] [thread 143484] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:29.268029] [I] [thread 143484] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:29.268048] [I] [thread 143484] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:29.268165] [I] [thread 143484] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:29.268178] [I] [thread 143484] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:29.471707] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:29.472034] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:30.473246] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:31.442254] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:31.442612] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:31.443638] [D] [thread 143489] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:31.443737] [I] [thread 143489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:31.443756] [I] [thread 143489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:31.443873] [I] [thread 143489] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:31.443887] [I] [thread 143489] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:31.617885] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:31.618213] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:32.619451] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:33.140815] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:33.140893] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:33.141858] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,100,1699880421597,1699880433140
[m
[36m[13:00:33.476386] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:33.476503] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:33.477718] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,24,1699880419428,1699880433476
[m
[36m[13:00:33.620779] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:33.654132] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:33.654523] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:33.655503] [D] [thread 143494] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:33.655602] [I] [thread 143494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:33.655620] [I] [thread 143494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:33.655736] [I] [thread 143494] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:33.655759] [I] [thread 143494] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:33.859991] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:33.860628] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:34.615657] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:34.615765] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:34.617010] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,13,1699880420402,1699880434615
[m
[36m[13:00:34.862067] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:35.816873] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:35.816964] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:35.818154] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,63,1699880424628,1699880435817
[m
[36m[13:00:35.855983] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:35.856351] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:35.857974] [D] [thread 143499] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:35.858071] [I] [thread 143499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:35.858090] [I] [thread 143499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:35.858205] [I] [thread 143499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:35.858218] [I] [thread 143499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:36.033607] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:36.033948] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:37.035178] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:38.036464] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:38.054355] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:38.054724] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:38.056309] [D] [thread 143504] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:38.056431] [I] [thread 143504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:38.056448] [I] [thread 143504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:38.056565] [I] [thread 143504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:38.056578] [I] [thread 143504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:38.329642] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:38.330016] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:39.097838] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:39.097947] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:39.099131] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,54,1699880426640,1699880439098
[m
[36m[13:00:39.331257] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:40.297534] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:40.297858] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:40.298884] [D] [thread 143509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:40.298982] [I] [thread 143509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:40.299002] [I] [thread 143509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:40.299119] [I] [thread 143509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:40.299133] [I] [thread 143509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:40.509875] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:40.510208] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:40.515223] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:40.515300] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:40.516000] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,47,1699880427641,1699880440515
[m
[36m[13:00:41.511369] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:42.480708] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:42.481033] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:42.482125] [D] [thread 143514] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:42.482226] [I] [thread 143514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:42.482244] [I] [thread 143514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:42.482361] [I] [thread 143514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:42.482374] [I] [thread 143514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:42.649315] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:42.649667] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:43.650851] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.346574] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:44.346683] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:44.347870] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,100,1699880432966,1699880444346
[m
[36m[13:00:44.652089] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.663916] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.664312] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.666134] [D] [thread 143519] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:44.666228] [I] [thread 143519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:44.666245] [I] [thread 143519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:44.666363] [I] [thread 143519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:44.666377] [I] [thread 143519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:44.932629] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.932976] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:44.952630] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:44.952705] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:44.953613] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,24,1699880433268,1699880444952
[m
[36m[13:00:45.934183] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:46.866302] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:46.866635] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:46.867975] [D] [thread 143524] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:46.868078] [I] [thread 143524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:46.868096] [I] [thread 143524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:46.868210] [I] [thread 143524] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:46.868225] [I] [thread 143524] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:47.082490] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:47.082861] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:48.084108] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:48.136746] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:48.136844] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:48.138034] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,63,1699880435671,1699880448136
[m
[36m[13:00:48.473678] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:48.473778] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:48.474846] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11160000,11220000,13,1699880434439,1699880448473
[m
[36m[13:00:49.084521] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:49.138287] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:49.138946] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:49.139910] [D] [thread 143529] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:49.140022] [I] [thread 143529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:49.140043] [I] [thread 143529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:49.140169] [I] [thread 143529] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:49.140185] [I] [thread 143529] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:49.334224] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:49.334562] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:50.335863] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:50.919349] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:50.919445] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:50.920709] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,54,1699880438921,1699880450919
[m
[36m[13:00:51.337130] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:51.354665] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:51.354983] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:51.356534] [D] [thread 143534] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:51.356649] [I] [thread 143534] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:51.356667] [I] [thread 143534] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:51.356788] [I] [thread 143534] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:51.356806] [I] [thread 143534] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:51.525927] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:51.526297] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:52.527581] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:53.405281] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:53.405386] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:53.406570] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,47,1699880440358,1699880453405
[m
[36m[13:00:53.528836] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:53.611071] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:53.611441] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:53.613496] [D] [thread 143539] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:53.613624] [I] [thread 143539] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:53.613643] [I] [thread 143539] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:53.613783] [I] [thread 143539] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:53.613799] [I] [thread 143539] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:53.841741] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:53.842096] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:54.843252] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:55.764156] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:55.764264] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:55.765477] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,100,1699880444184,1699880455764
[m
[36m[13:00:55.805642] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:55.805979] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:55.807000] [D] [thread 143544] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:55.807099] [I] [thread 143544] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:55.807116] [I] [thread 143544] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:55.807232] [I] [thread 143544] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:55.807257] [I] [thread 143544] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:55.994076] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:55.994739] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:56.996121] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:57.295870] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:00:57.295980] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:00:57.297116] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,24,1699880444743,1699880457296
[m
[36m[13:00:57.971621] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:57.971950] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:57.973103] [D] [thread 143549] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:00:57.973208] [I] [thread 143549] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:57.973226] [I] [thread 143549] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:00:57.973345] [I] [thread 143549] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:00:57.973371] [I] [thread 143549] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:00:58.146092] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:58.146699] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:00:59.148043] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:00.016674] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:00.016784] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:00.017899] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,63,1699880447961,1699880460016
[m
[36m[13:01:00.149274] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:00.165484] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:00.166112] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:00.166784] [D] [thread 143554] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:00.166875] [I] [thread 143554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:00.166894] [I] [thread 143554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:00.167013] [I] [thread 143554] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:00.167026] [I] [thread 143554] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:00.386667] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:00.387244] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:01.388613] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:01.482035] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:01.482133] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:01.483313] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11220000,11280000,13,1699880448333,1699880461482
[m
[36m[13:01:02.389920] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:02.539209] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:02.539548] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:02.540594] [D] [thread 143559] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:02.540688] [I] [thread 143559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:02.540707] [I] [thread 143559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:02.540823] [I] [thread 143559] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:02.540836] [I] [thread 143559] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:02.760142] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:02.762861] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:03.764143] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:04.003668] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:04.003748] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:04.004615] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,54,1699880450777,1699880464003
[m
[36m[13:01:04.744996] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:04.745386] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:04.747054] [D] [thread 143564] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:04.747153] [I] [thread 143564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:04.747172] [I] [thread 143564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:04.747290] [I] [thread 143564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:04.747303] [I] [thread 143564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:05.014224] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:05.014655] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:06.015881] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:06.139080] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:06.139190] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:06.140500] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,100,1699880455559,1699880466139
[m
[36m[13:01:06.506840] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:06.506946] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:06.508132] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,47,1699880453268,1699880466507
[m
[36m[13:01:06.994441] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:06.994834] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:06.995888] [D] [thread 143570] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:06.995988] [I] [thread 143570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:06.996006] [I] [thread 143570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:06.996124] [I] [thread 143570] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:06.996137] [I] [thread 143570] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:07.165934] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:07.166278] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:08.167507] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:09.168829] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:09.278099] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:09.278461] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:09.279420] [D] [thread 143575] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:09.279518] [I] [thread 143575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:09.279536] [I] [thread 143575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:09.279653] [I] [thread 143575] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:09.279667] [I] [thread 143575] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:09.509560] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:09.509915] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:10.073929] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:10.074017] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:10.075016] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,24,1699880457144,1699880470074
[m
[36m[13:01:10.511149] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:11.506806] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:11.507226] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:11.508288] [D] [thread 143580] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:11.508414] [I] [thread 143580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:11.508433] [I] [thread 143580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:11.508551] [I] [thread 143580] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:11.508564] [I] [thread 143580] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:11.685273] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:11.685382] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:11.686569] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,63,1699880459852,1699880471685
[m
[36m[13:01:11.724654] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:11.725020] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:12.726284] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:13.727586] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:13.773230] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:13.773836] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:13.774539] [D] [thread 143585] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:13.774633] [I] [thread 143585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:13.774652] [I] [thread 143585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:13.774771] [I] [thread 143585] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:13.774784] [I] [thread 143585] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:13.978303] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:13.978976] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:14.892754] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:14.892858] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:14.894038] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11280000,11340000,13,1699880461291,1699880474892
[m
[36m[13:01:14.980200] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:15.953307] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:15.953642] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:15.954763] [D] [thread 143590] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:15.954863] [I] [thread 143590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:15.954880] [I] [thread 143590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:15.954999] [I] [thread 143590] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:15.955011] [I] [thread 143590] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:16.224912] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:16.225269] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:16.873486] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:16.873575] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:16.874500] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,54,1699880463841,1699880476873
[m
[36m[13:01:17.226490] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:17.765438] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:17.765552] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:17.766755] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,100,1699880465960,1699880477765
[m
[36m[13:01:18.202566] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:18.202921] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:18.204004] [D] [thread 143595] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:18.204106] [I] [thread 143595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:18.204123] [I] [thread 143595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:18.204242] [I] [thread 143595] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:18.204265] [I] [thread 143595] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:18.470231] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:18.470869] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:19.472164] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:19.607696] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:19.607807] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:19.609054] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,47,1699880466348,1699880479607
[m
[36m[13:01:20.473485] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:20.616699] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:20.617289] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:20.618011] [D] [thread 143600] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:20.618102] [I] [thread 143600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:20.618119] [I] [thread 143600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:20.618235] [I] [thread 143600] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:20.618249] [I] [thread 143600] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:20.778052] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:20.778645] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:21.779913] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:22.055813] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:22.055922] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:22.057187] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,63,1699880471532,1699880482056
[m
[36m[13:01:22.647489] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:22.647596] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:22.648851] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,24,1699880469886,1699880482647
[m
[36m[13:01:22.781208] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:22.822309] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:22.822671] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:22.824208] [D] [thread 143605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:22.824304] [I] [thread 143605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:22.824355] [I] [thread 143605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:22.824480] [I] [thread 143605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:22.824493] [I] [thread 143605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:23.013578] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:23.013906] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:24.015166] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:25.016430] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:25.032001] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:25.032364] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:25.033350] [D] [thread 143610] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:25.033446] [I] [thread 143610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:25.033464] [I] [thread 143610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:25.033581] [I] [thread 143610] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:25.033596] [I] [thread 143610] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:25.249761] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:25.250081] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:26.251310] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:27.242052] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:27.242430] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:27.243525] [D] [thread 143616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:27.243622] [I] [thread 143616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:27.243639] [I] [thread 143616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:27.243755] [I] [thread 143616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:27.243767] [I] [thread 143616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:27.413329] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:27.413668] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:28.077666] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:28.077764] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:28.079050] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11340000,11400000,13,1699880474733,1699880488077
[m
[36m[13:01:28.414924] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:28.567820] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:28.567922] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:28.569060] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,100,1699880477580,1699880488567
[m
[36m[13:01:29.387795] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:29.388142] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:29.389285] [D] [thread 143623] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:29.389386] [I] [thread 143623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:29.389404] [I] [thread 143623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:29.389523] [I] [thread 143623] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:29.389536] [I] [thread 143623] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:29.594024] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:29.594382] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:29.746890] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:29.747010] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:29.748207] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,54,1699880476677,1699880489747
[m
[36m[13:01:30.595808] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:31.578279] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:31.578682] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:31.579581] [D] [thread 143628] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:31.579676] [I] [thread 143628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:31.579696] [I] [thread 143628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:31.579811] [I] [thread 143628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:31.579825] [I] [thread 143628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:31.845994] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:31.846356] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:32.503816] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:32.503890] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:32.504727] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,47,1699880479443,1699880492503
[m
[36m[13:01:32.847583] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:33.288415] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:33.288512] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:33.289666] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,63,1699880481879,1699880493288
[m
[36m[13:01:33.802529] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:33.802885] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:33.803904] [D] [thread 143633] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:33.804006] [I] [thread 143633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:33.804023] [I] [thread 143633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:33.804140] [I] [thread 143633] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:33.804164] [I] [thread 143633] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:33.974433] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:33.974824] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:34.976083] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:35.638480] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:35.638590] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:35.639779] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,24,1699880482495,1699880495638
[m
[36m[13:01:35.937744] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:35.938110] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:35.939270] [D] [thread 143638] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:35.939376] [I] [thread 143638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:35.939396] [I] [thread 143638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:35.939513] [I] [thread 143638] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:35.939525] [I] [thread 143638] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:36.136802] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:36.137164] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:37.138444] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:38.085784] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:38.086352] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:38.087071] [D] [thread 143643] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:38.087143] [I] [thread 143643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:38.087159] [I] [thread 143643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:38.087267] [I] [thread 143643] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:38.087280] [I] [thread 143643] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:38.304198] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:38.304621] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:39.305843] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:40.189973] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:40.190072] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:40.191189] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,100,1699880488395,1699880500190
[m
[36m[13:01:40.307119] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:40.338279] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:40.338634] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:40.339642] [D] [thread 143648] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:40.339743] [I] [thread 143648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:40.339760] [I] [thread 143648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:40.339875] [I] [thread 143648] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:40.339900] [I] [thread 143648] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:40.552193] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:40.552883] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:41.477055] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:41.477166] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:41.478356] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11400000,11460000,13,1699880487887,1699880501477
[m
[36m[13:01:41.554410] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.555714] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.571131] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.571726] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.572598] [D] [thread 143653] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:42.572691] [I] [thread 143653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:42.572710] [I] [thread 143653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:42.572825] [I] [thread 143653] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:42.572839] [I] [thread 143653] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:42.786488] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.786816] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:42.825479] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:42.825544] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:42.826235] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,54,1699880489584,1699880502825
[m
[36m[13:01:43.788056] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:44.725828] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:44.726156] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:44.727226] [D] [thread 143658] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:44.727330] [I] [thread 143658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:44.727347] [I] [thread 143658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:44.727465] [I] [thread 143658] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:44.727489] [I] [thread 143658] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:44.942407] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:44.942797] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:44.952304] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:44.952397] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:44.953086] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,63,1699880493139,1699880504952
[m
[36m[13:01:45.614031] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:45.614142] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:45.615332] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,47,1699880492306,1699880505614
[m
[36m[13:01:45.944034] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:46.913715] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:46.914065] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:46.915138] [D] [thread 143663] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:46.915241] [I] [thread 143663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:46.915258] [I] [thread 143663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:46.915374] [I] [thread 143663] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:46.915399] [I] [thread 143663] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:47.124779] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:47.125143] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:48.126365] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:48.849820] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:48.849909] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:48.850992] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,24,1699880495425,1699880508849
[m
[36m[13:01:49.112695] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:49.113334] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:49.114010] [D] [thread 143669] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:49.114103] [I] [thread 143669] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:49.114121] [I] [thread 143669] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:49.114237] [I] [thread 143669] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:49.114250] [I] [thread 143669] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:49.330407] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:49.331025] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:50.332307] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:50.998702] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:50.998809] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:51.000013] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,100,1699880500053,1699880510998
[m
[36m[13:01:51.289650] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:51.290255] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:51.290997] [D] [thread 143676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:51.291093] [I] [thread 143676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:51.291112] [I] [thread 143676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:51.291229] [I] [thread 143676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:51.291242] [I] [thread 143676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:51.510247] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:51.510595] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:52.511971] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:53.512472] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:53.515586] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:53.515942] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:53.517115] [D] [thread 143681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:53.517214] [I] [thread 143681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:53.517231] [I] [thread 143681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:53.517349] [I] [thread 143681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:53.517363] [I] [thread 143681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:53.687107] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:53.687424] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:54.688634] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:55.521568] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:55.521659] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:55.522633] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11460000,11520000,13,1699880501321,1699880515521
[m
[36m[13:01:55.689894] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:55.699152] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:55.699220] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:55.699956] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,54,1699880502645,1699880515699
[m
[36m[13:01:55.703589] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:55.703953] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:55.705615] [D] [thread 143686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:55.705715] [I] [thread 143686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:55.705734] [I] [thread 143686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:55.705851] [I] [thread 143686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:55.705865] [I] [thread 143686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:55.920987] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:55.921337] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:56.922558] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:57.480453] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:57.480561] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:57.481704] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,63,1699880504805,1699880517480
[m
[36m[13:01:57.912006] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:57.912366] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:57.913444] [D] [thread 143691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:01:57.913542] [I] [thread 143691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:57.913559] [I] [thread 143691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:01:57.913675] [I] [thread 143691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:01:57.913700] [I] [thread 143691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:01:58.177376] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:58.177698] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:01:58.705262] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:01:58.705341] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:01:58.706144] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,47,1699880505454,1699880518705
[m
[36m[13:01:59.179053] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:00.101876] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:00.102229] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:00.103343] [D] [thread 143696] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:00.103425] [I] [thread 143696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:00.103441] [I] [thread 143696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:00.103548] [I] [thread 143696] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:00.103560] [I] [thread 143696] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:00.316424] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:00.316783] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:01.317976] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.240172] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:02.240246] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:02.240994] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,100,1699880510825,1699880522240
[m
[36m[13:02:02.319375] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.388920] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.389239] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.390297] [D] [thread 143701] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:02.390402] [I] [thread 143701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:02.390420] [I] [thread 143701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:02.390536] [I] [thread 143701] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:02.390600] [I] [thread 143701] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:02.566397] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.566868] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:02.712150] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:02.712260] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:02.713480] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,24,1699880508651,1699880522712
[m
[36m[13:02:03.568310] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:04.515956] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:04.516667] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:04.517628] [D] [thread 143706] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:04.517739] [I] [thread 143706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:04.517758] [I] [thread 143706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:04.517891] [I] [thread 143706] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:04.517906] [I] [thread 143706] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:04.738566] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:04.739117] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:05.740481] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:06.729809] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:06.730614] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:06.731622] [D] [thread 143711] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:06.731742] [I] [thread 143711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:06.731762] [I] [thread 143711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:06.731884] [I] [thread 143711] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:06.731902] [I] [thread 143711] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:06.947105] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:06.947702] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:07.852036] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:07.852108] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:07.852942] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,63,1699880517277,1699880527852
[m
[36m[13:02:07.948958] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:08.782077] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:08.782185] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:08.783370] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,54,1699880515552,1699880528782
[m
[36m[13:02:08.950252] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:09.001640] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:09.002471] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:09.003430] [D] [thread 143716] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:09.003530] [I] [thread 143716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:09.003548] [I] [thread 143716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:09.003662] [I] [thread 143716] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:09.003674] [I] [thread 143716] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:09.193652] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:09.194139] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:09.348669] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:09.348778] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:09.349969] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11520000,11580000,13,1699880515328,1699880529348
[m
[36m[13:02:10.195328] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:11.137598] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:11.137929] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:11.138896] [D] [thread 143721] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:11.138992] [I] [thread 143721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:11.139010] [I] [thread 143721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:11.139125] [I] [thread 143721] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:11.139137] [I] [thread 143721] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:11.357924] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:11.358287] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:11.804898] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:11.805006] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:11.806222] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,47,1699880518531,1699880531805
[m
[36m[13:02:12.359631] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:12.824846] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:12.824935] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:12.826111] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,100,1699880522047,1699880532825
[m
[36m[13:02:13.276370] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:13.276838] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:13.277700] [D] [thread 143726] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:13.277793] [I] [thread 143726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:13.277811] [I] [thread 143726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:13.277926] [I] [thread 143726] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:13.277939] [I] [thread 143726] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:13.490613] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:13.490992] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:14.492218] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.493586] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.516602] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.516933] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.518095] [D] [thread 143731] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:15.518192] [I] [thread 143731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:15.518210] [I] [thread 143731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:15.518325] [I] [thread 143731] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:15.518338] [I] [thread 143731] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:15.741950] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.742334] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:15.927676] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:15.927747] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:15.928566] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,24,1699880522518,1699880535927
[m
[36m[13:02:16.743580] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:17.728800] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:17.729142] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:17.730293] [D] [thread 143738] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:17.730390] [I] [thread 143738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:17.730407] [I] [thread 143738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:17.730524] [I] [thread 143738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:17.730538] [I] [thread 143738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:18.002854] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:18.003188] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:19.004462] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:19.732785] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:19.732894] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:19.734088] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,63,1699880527642,1699880539732
[m
[36m[13:02:20.005723] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:20.073967] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:20.074299] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:20.075338] [D] [thread 143743] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:20.075433] [I] [thread 143743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:20.075450] [I] [thread 143743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:20.075567] [I] [thread 143743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:20.075580] [I] [thread 143743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:20.250705] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:20.251078] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:21.252386] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:21.948856] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:21.948956] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:21.950143] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,100,1699880532664,1699880541949
[m
[36m[13:02:22.080298] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:22.080447] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:22.081581] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,54,1699880528640,1699880542080
[m
[36m[13:02:22.253644] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:22.258381] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:22.258759] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:22.259745] [D] [thread 143748] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:22.259846] [I] [thread 143748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:22.259863] [I] [thread 143748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:22.259981] [I] [thread 143748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:22.260006] [I] [thread 143748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:22.467327] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:22.467689] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:22.957591] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:22.957688] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:22.958914] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11580000,11640000,13,1699880529187,1699880542957
[m
[36m[13:02:23.468942] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.470219] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.481095] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.481445] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.482513] [D] [thread 143753] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:24.482613] [I] [thread 143753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:24.482630] [I] [thread 143753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:24.482747] [I] [thread 143753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:24.482769] [I] [thread 143753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:24.686753] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.687230] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:24.900669] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:24.900763] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:24.901944] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,47,1699880531652,1699880544900
[m
[36m[13:02:25.688527] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:26.642963] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:26.643356] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:26.645046] [D] [thread 143758] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:26.645149] [I] [thread 143758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:26.645167] [I] [thread 143758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:26.645283] [I] [thread 143758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:26.645297] [I] [thread 143758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:26.866147] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:26.866469] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:27.867699] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:28.868988] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:28.893989] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:28.894302] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:28.895345] [D] [thread 143764] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:28.895445] [I] [thread 143764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:28.895462] [I] [thread 143764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:28.895580] [I] [thread 143764] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:28.895594] [I] [thread 143764] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:29.118098] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:29.118452] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:29.135263] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:29.135357] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:29.136380] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,24,1699880535773,1699880549135
[m
[36m[13:02:30.100209] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:30.100307] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:30.101544] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,63,1699880539544,1699880550100
[m
[36m[13:02:30.119638] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:31.083347] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:31.083766] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:31.084892] [D] [thread 143769] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:31.084988] [I] [thread 143769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:31.085008] [I] [thread 143769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:31.085126] [I] [thread 143769] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:31.085140] [I] [thread 143769] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:31.265890] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:31.266224] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:31.706394] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:31.706492] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:31.707566] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,100,1699880541752,1699880551706
[m
[36m[13:02:32.267472] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:33.268492] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:33.271090] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:33.271402] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:33.272547] [D] [thread 143775] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:33.272639] [I] [thread 143775] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:33.272656] [I] [thread 143775] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:33.272773] [I] [thread 143775] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:33.272793] [I] [thread 143775] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:33.477756] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:33.478070] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:34.479308] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:35.154083] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:35.154179] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:35.155361] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,54,1699880541871,1699880555154
[m
[36m[13:02:35.480626] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:35.589019] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:35.589583] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:35.590327] [D] [thread 143780] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:35.590424] [I] [thread 143780] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:35.590440] [I] [thread 143780] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:35.590555] [I] [thread 143780] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:35.590567] [I] [thread 143780] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:35.793357] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:35.793917] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:36.789100] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:36.789207] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:36.790234] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11640000,11700000,13,1699880542779,1699880556789
[m
[36m[13:02:36.795148] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:37.796570] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:37.847848] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:37.848395] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:37.849189] [D] [thread 143785] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:37.849282] [I] [thread 143785] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:37.849299] [I] [thread 143785] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:37.849414] [I] [thread 143785] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:37.849428] [I] [thread 143785] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:38.042157] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:38.042533] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:38.219952] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:38.220042] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:38.221027] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,47,1699880544729,1699880558220
[m
[36m[13:02:39.043786] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:39.996644] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:39.996984] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:39.997957] [D] [thread 143790] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:39.998052] [I] [thread 143790] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:39.998071] [I] [thread 143790] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:39.998186] [I] [thread 143790] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:39.998199] [I] [thread 143790] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:40.195503] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:40.195834] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:41.197039] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:41.552653] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:41.552752] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:41.553784] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,63,1699880549954,1699880561552
[m
[36m[13:02:42.184981] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:42.185339] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:42.187055] [D] [thread 143795] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:42.187185] [I] [thread 143795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:42.187204] [I] [thread 143795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:42.187348] [I] [thread 143795] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:42.187364] [I] [thread 143795] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:42.289268] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:42.289359] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:42.290335] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11940000,12000000,100,1699880551501,1699880562289
[m
[36m[13:02:42.473623] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:42.473995] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:42.569703] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:42.569785] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:42.570635] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,24,1699880548989,1699880562569
[m
[36m[13:02:43.475245] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:44.425575] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:44.425906] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:44.427201] [D] [thread 143801] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:44.427326] [I] [thread 143801] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:44.427344] [I] [thread 143801] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:44.427469] [I] [thread 143801] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:44.427487] [I] [thread 143801] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:44.629854] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:44.630224] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:45.631442] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:46.591581] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:46.591911] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:46.593151] [D] [thread 143808] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:46.593267] [I] [thread 143808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:46.593289] [I] [thread 143808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:46.593417] [I] [thread 143808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:46.593451] [I] [thread 143808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:46.812477] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:46.812811] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:47.813966] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:48.023815] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:48.023887] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:48.024662] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,54,1699880554955,1699880568023
[m
[36m[13:02:48.815272] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:48.841679] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:48.842254] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:48.843010] [D] [thread 143813] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:48.843104] [I] [thread 143813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:48.843122] [I] [thread 143813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:48.843243] [I] [thread 143813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:48.843257] [I] [thread 143813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:49.058654] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:49.059261] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:49.749506] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:49.749617] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:49.750807] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11700000,11760000,13,1699880556607,1699880569749
[m
[36m[13:02:50.060609] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:51.026898] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:51.027456] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:51.028235] [D] [thread 143818] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:51.028357] [I] [thread 143818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:51.028375] [I] [thread 143818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:51.028495] [I] [thread 143818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:51.028507] [I] [thread 143818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:51.285754] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:51.286097] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:51.333763] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:51.333844] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:51.334629] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,47,1699880558025,1699880571333
[m
[36m[13:02:52.287353] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:52.589372] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:52.589484] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:52.590680] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,63,1699880561359,1699880572589
[m
[36m[13:02:52.873889] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:52.873984] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:52.875167] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12000000,12060000,100,1699880562153,1699880572874
[m
[36m[13:02:53.225884] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:53.226282] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:53.227363] [D] [thread 143823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:53.227460] [I] [thread 143823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:53.227478] [I] [thread 143823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:53.227598] [I] [thread 143823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:53.227610] [I] [thread 143823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:53.496901] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:53.497235] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:54.498485] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:55.454713] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:55.455060] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:55.456268] [D] [thread 143828] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:55.456396] [I] [thread 143828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:55.456417] [I] [thread 143828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:55.456536] [I] [thread 143828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:55.456549] [I] [thread 143828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:55.559209] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:02:55.559307] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:02:55.560417] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,24,1699880562396,1699880575559
[m
[36m[13:02:55.667857] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:55.668265] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:56.669633] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:57.670974] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:57.702737] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:57.703270] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:57.704152] [D] [thread 143834] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:57.704248] [I] [thread 143834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:57.704266] [I] [thread 143834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:57.704412] [I] [thread 143834] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:57.704429] [I] [thread 143834] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:02:57.969068] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:57.969412] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:58.970641] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:59.938244] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:59.938622] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:02:59.940220] [D] [thread 143841] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:02:59.940316] [I] [thread 143841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:59.940373] [I] [thread 143841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:02:59.940493] [I] [thread 143841] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:02:59.940507] [I] [thread 143841] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:00.109461] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:00.109793] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:01.111032] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:01.127965] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:01.128054] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:01.129304] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,54,1699880567861,1699880581128
[m
[36m[13:03:02.112535] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:02.134300] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:02.134692] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:02.136292] [D] [thread 143846] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:02.136424] [I] [thread 143846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:02.136443] [I] [thread 143846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:02.136562] [I] [thread 143846] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:02.136575] [I] [thread 143846] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:02.277850] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:02.277950] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:02.279133] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11760000,11820000,13,1699880569576,1699880582278
[m
[36m[13:03:02.433036] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:02.433447] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:03.248221] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:03.248374] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:03.249533] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12060000,12120000,100,1699880572685,1699880583248
[m
[36m[13:03:03.434745] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:04.045039] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:04.045144] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:04.046330] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11940000,12000000,63,1699880572425,1699880584045
[m
[36m[13:03:04.353878] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:04.354226] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:04.355285] [D] [thread 143852] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:04.355386] [I] [thread 143852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:04.355403] [I] [thread 143852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:04.355521] [I] [thread 143852] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:04.355535] [I] [thread 143852] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:04.451492] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:04.451597] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:04.452865] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,47,1699880571157,1699880584451
[m
[36m[13:03:04.594473] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:04.594832] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:05.596209] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:06.589690] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:06.590063] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:06.591026] [D] [thread 143857] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:06.591125] [I] [thread 143857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:06.591145] [I] [thread 143857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:06.591262] [I] [thread 143857] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:06.591275] [I] [thread 143857] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:06.758094] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:06.758715] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:07.759922] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:08.702985] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:08.703533] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:08.704349] [D] [thread 143862] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:08.704424] [I] [thread 143862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:08.704439] [I] [thread 143862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:08.704548] [I] [thread 143862] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:08.704559] [I] [thread 143862] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:08.765430] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:08.765539] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:08.766732] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,24,1699880575399,1699880588765
[m
[36m[13:03:08.920700] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:08.921334] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:09.476423] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:09.476495] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:09.477251] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12120000,12180000,100,1699880583103,1699880589476
[m
[36m[13:03:09.922656] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:10.923910] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:10.931194] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:10.931805] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:10.932588] [D] [thread 143867] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:10.932683] [I] [thread 143867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:10.932702] [I] [thread 143867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:10.932818] [I] [thread 143867] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:10.932831] [I] [thread 143867] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:11.158454] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:11.159152] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:12.160457] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:12.389327] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:12.389445] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:12.390642] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12180000,12240000,100,1699880589322,1699880592389
[m
[36m[13:03:12.390897] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:12.390941] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:12.391968] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12240000,12300000,100,1699880592200,1699880592390
[m
[36m[13:03:13.161786] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:13.263593] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:13.263955] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:13.265586] [D] [thread 143873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:13.265685] [I] [thread 143873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:13.265704] [I] [thread 143873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:13.265821] [I] [thread 143873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:13.265835] [I] [thread 143873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:13.436979] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:13.437312] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:14.222379] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:14.222452] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:14.223173] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,54,1699880580929,1699880594222
[m
[36m[13:03:14.438520] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:14.844651] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:14.844716] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:14.845554] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12000000,12060000,63,1699880583902,1699880594844
[m
[36m[13:03:14.885996] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:14.886094] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:14.887277] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 13020000,13080000,100,1699880592229,1699880594886
[m
[36m[13:03:15.247209] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:15.247280] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:15.248039] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11820000,11880000,13,1699880582104,1699880595247
[m
[36m[13:03:15.439841] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:15.541786] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:15.542136] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:15.543162] [D] [thread 143878] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:15.543260] [I] [thread 143878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:15.543277] [I] [thread 143878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:15.543392] [I] [thread 143878] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:15.543426] [I] [thread 143878] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:15.728544] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:15.728914] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:16.730160] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:17.725948] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:17.726276] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:17.727340] [D] [thread 143884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:17.727444] [I] [thread 143884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:17.727461] [I] [thread 143884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:17.727580] [I] [thread 143884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:17.727604] [I] [thread 143884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:17.773541] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:17.773652] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:17.774838] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,47,1699880584306,1699880597773
[m
[36m[13:03:17.894879] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:17.895261] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:18.896481] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:19.876159] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:19.876893] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:19.878969] [D] [thread 143891] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:19.879118] [I] [thread 143891] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:19.879139] [I] [thread 143891] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:19.879279] [I] [thread 143891] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:19.879297] [I] [thread 143891] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:20.097425] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:20.097757] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:21.098175] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:21.328166] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:21.328247] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:21.329117] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,24,1699880588603,1699880601328
[m
[36m[13:03:22.099434] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:22.131428] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:22.131761] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:22.133053] [D] [thread 143899] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:22.133179] [I] [thread 143899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:22.133199] [I] [thread 143899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:22.133323] [I] [thread 143899] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:22.133390] [I] [thread 143899] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:22.326766] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:22.327117] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:23.328314] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:23.423260] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:23.423501] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:23.424714] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 13080000,13140000,100,1699880594688,1699880603423
[m
[36m[13:03:24.329606] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:24.351559] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:24.351894] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:24.353412] [D] [thread 143905] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:24.353518] [I] [thread 143905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:24.353535] [I] [thread 143905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:24.353655] [I] [thread 143905] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:24.353682] [I] [thread 143905] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:24.511156] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:24.511505] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:25.512459] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:26.296486] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:26.296594] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:26.297785] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 12060000,12120000,63,1699880594633,1699880606296
[m
[36m[13:03:26.474279] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:26.474650] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:26.475603] [D] [thread 143911] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:26.475698] [I] [thread 143911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:26.475715] [I] [thread 143911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:26.475831] [I] [thread 143911] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:26.475843] [I] [thread 143911] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:26.690486] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:26.690854] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:27.305154] [D] [thread 143153] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:27.305263] [D] [thread 143153] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:27.306451] [D] [thread 143153] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11940000,12000000,54,1699880594031,1699880607305
[m
[36m[13:03:27.692112] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:28.453405] [D] [thread 143151] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:28.453511] [D] [thread 143151] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:28.454694] [D] [thread 143151] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11880000,11940000,13,1699880595060,1699880608453
[m
[36m[13:03:28.693411] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:28.878200] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:28.878553] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:28.879562] [D] [thread 143917] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:28.879661] [I] [thread 143917] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:28.879678] [I] [thread 143917] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:28.879792] [I] [thread 143917] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:28.879817] [I] [thread 143917] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:29.099348] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:29.099713] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:30.100884] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:31.089353] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:31.089689] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:31.090705] [D] [thread 143924] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:31.090808] [I] [thread 143924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:31.090826] [I] [thread 143924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:31.090954] [I] [thread 143924] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:31.090969] [I] [thread 143924] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:31.091364] [D] [thread 143152] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:31.091417] [D] [thread 143152] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:31.092094] [D] [thread 143152] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11940000,12000000,47,1699880597603,1699880611091
[m
[36m[13:03:31.286170] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:31.286795] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:32.139327] [D] [thread 143154] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[13:03:32.139433] [D] [thread 143154] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[13:03:32.140687] [D] [thread 143154] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 13140000,13200000,100,1699880603286,1699880612139
[m
[36m[13:03:32.288079] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.227116] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.227743] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.228540] [D] [thread 143932] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[13:03:33.228635] [I] [thread 143932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:33.228653] [I] [thread 143932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[13:03:33.228770] [I] [thread 143932] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[13:03:33.228783] [I] [thread 143932] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[13:03:33.492513] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.492853] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.713548] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[13:03:33.713892] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[13:03:33.715253] [I] [thread 143936] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[13:03:33.715347] [D] [thread 143936] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[13:03:33.715480] [I] [thread 143936] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[13:03:33.715497] [I] [thread 143936] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[13:03:33.715557] [I] [thread 143140] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[13:03:33.715610] [I] [thread 143140] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[13:03:33.715632] [I] [thread 143140] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[13:03:33.715698] [I] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[13:03:33.715717] [D] [thread 143140] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[13:03:33.715779] [D] [thread 143140] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[13:03:33.716120] [D] [thread 143140] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[13:03:33.716865] [D] [thread 143140] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[13:03:33.716936] [D] [thread 143140] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[13:03:33.716991] [D] [thread 143140] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[13:03:33.717007] [D] [thread 143140] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[13:03:33.717015] [D] [thread 143140] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[13:03:33.717047] [D] [thread 143140] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[13:03:33.717069] [D] [thread 143140] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[13:03:33.717101] [D] [thread 143140] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[13:03:33.717114] [D] [thread 143140] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[13:03:33.717316] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:39241[m
[36m[13:03:33.717346] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:39241 queryId=1[m
[36m[13:03:33.722702] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:39391[m
[36m[13:03:33.722790] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:39391 queryId=1[m
[36m[13:03:33.727388] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:38865[m
[36m[13:03:33.727516] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:38865 queryId=1[m
[36m[13:03:33.732070] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:37343[m
[36m[13:03:33.732156] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:37343 queryId=1[m
[36m[13:03:33.736723] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:44971[m
[36m[13:03:33.736802] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:44971 queryId=1[m
[36m[13:03:33.741398] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:36221[m
[36m[13:03:33.741484] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:36221 queryId=1[m
[36m[13:03:33.746002] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:33067[m
[36m[13:03:33.746087] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:33067 queryId=1[m
[36m[13:03:33.750732] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:38749[m
[36m[13:03:33.750868] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:38749 queryId=1[m
[36m[13:03:33.755310] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:37687[m
[36m[13:03:33.755395] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:37687 queryId=1[m
[36m[13:03:33.759972] [D] [thread 143140] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:45131[m
[36m[13:03:33.760135] [D] [thread 143140] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:45131 queryId=1[m
[36m[13:03:33.764944] [D] [thread 143140] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[13:03:34.043082] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.043082] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.043300] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[36m[13:03:34.043300] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[13:03:34.043563] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[32m[13:03:34.043685] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[13:03:34.043834] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[13:03:34.043835] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[13:03:34.043935] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.044009] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[36m[13:03:34.044013] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.044089] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[32m[13:03:34.044307] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[13:03:34.045213] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=3) but there is still some active subpartition: 2[m
[32m[13:03:34.045763] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[13:03:34.046063] [D] [thread 143149] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[13:03:34.046301] [D] [thread 143149] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.046368] [W] [thread 143149] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.047929] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.048069] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=3)[m
[36m[13:03:34.047935] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[32m[13:03:34.048158] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(4)[m
[36m[13:03:34.048195] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=1)[m
[32m[13:03:34.048254] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(3)[m
[36m[13:03:34.048211] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=3) but there is still some active subpartition: 4[m
[36m[13:03:34.048367] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[13:03:34.048577] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.048823] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=0)[m
[32m[13:03:34.049046] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(2)[m
[36m[13:03:34.049417] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.049567] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::39::0::0(threadId=2)[m
[32m[13:03:34.049643] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(1)[m
[36m[13:03:34.049676] [D] [thread 143149] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::39::0::0, counter is at 1.[m
[36m[13:03:34.049751] [D] [thread 143149] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.049784] [W] [thread 143149] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.049197] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::39::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[13:03:34.364267] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.364507] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=1)[m
[36m[13:03:34.364619] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[32m[13:03:34.364641] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(4)[m
[36m[13:03:34.364713] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=0)[m
[36m[13:03:34.364728] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=1) but there is still some active subpartition: 4[m
[32m[13:03:34.364897] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(3)[m
[36m[13:03:34.365177] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[13:03:34.365291] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.365330] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.365411] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=2)[m
[32m[13:03:34.365497] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(2)[m
[36m[13:03:34.365358] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::45::0::0(threadId=3)[m
[36m[13:03:34.365582] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::45::0::0(threadId=2) but there is still some active subpartition: 2[m
[32m[13:03:34.365647] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(1)[m
[36m[13:03:34.365701] [D] [thread 143150] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::45::0::0, counter is at 1.[m
[36m[13:03:34.365781] [D] [thread 143150] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.365824] [W] [thread 143150] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.367989] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.368006] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.368138] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[13:03:34.368253] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[36m[13:03:34.368457] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 4[m
[36m[13:03:34.368549] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.368573] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[36m[13:03:34.368619] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[13:03:34.368722] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[32m[13:03:34.368850] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[13:03:34.369099] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 2[m
[36m[13:03:34.369202] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.369311] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[13:03:34.369426] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[13:03:34.369592] [D] [thread 143150] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[13:03:34.369690] [D] [thread 143150] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.369742] [W] [thread 143150] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.369908] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=0) but there is still some active subpartition: 1[m
[31m[1m[13:03:34.433063] [E] [thread 143930] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::42::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae4ead13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa94ecd4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae4eadaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb335c2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb3174f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab51b207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa9b9c6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab52d7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab52e773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaae4ead13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffa94ecd4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaae4eadaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb335c2ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb3174f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab51b207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffa9b9c6e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab52d7e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffab52e773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[13:03:34.480984] [D] [thread 143156] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[13:03:34.481144] [D] [thread 143156] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[13:03:34.481275] [D] [thread 143156] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[13:03:34.481340] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.481429] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.481612] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.482171] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 33 is notifying completion: HardStop[m
[36m[13:03:34.482308] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 33 is terminated; tokens left = 7[m
[36m[13:03:34.482364] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[13:03:34.482499] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.482650] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.482937] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[13:03:34.483410] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[13:03:34.483410] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[13:03:34.483535] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[13:03:34.483588] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.483636] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[13:03:34.483654] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.483636] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[13:03:34.483732] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[13:03:34.483798] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[13:03:34.483410] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[13:03:34.483892] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.483943] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[13:03:34.483992] [D] [thread 143154] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[13:03:34.484028] [D] [thread 143154] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[13:03:34.484070] [D] [thread 143154] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[13:03:34.484155] [I] [thread 143154] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[13:03:34.484223] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 39 is notifying completion: HardStop[m
[36m[13:03:34.484282] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 39 is terminated; tokens left = 6[m
[36m[13:03:34.484383] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 39 terminationType=HardStop[m
[36m[13:03:34.484496] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.484613] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.484670] [D] [thread 143153] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.484888] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=39 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[13:03:34.484889] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[13:03:34.484890] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[13:03:34.484965] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 1[m
[36m[13:03:34.484974] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 3[m
[36m[13:03:34.484978] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:39 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[13:03:34.485015] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.485061] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.485121] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[13:03:34.485164] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 0[m
[36m[13:03:34.485165] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.485325] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::39::0::0[m
[36m[13:03:34.485374] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::39::0::0 Thread 2[m
[36m[13:03:34.485404] [D] [thread 143152] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::39::0::0[m
[36m[13:03:34.485407] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 45 is notifying completion: HardStop[m
[36m[13:03:34.485426] [D] [thread 143152] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::39::0::0[m
[36m[13:03:34.485441] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 45 is terminated; tokens left = 5[m
[36m[13:03:34.485450] [D] [thread 143152] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::39::0::0[m
[36m[13:03:34.485468] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 45 terminationType=HardStop[m
[32m[13:03:34.485506] [I] [thread 143152] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::39::0::0; newCnt(0)[m
[36m[13:03:34.485534] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.485692] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.485905] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=45 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[13:03:34.485960] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:45 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[13:03:34.485990] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.486029] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.486087] [D] [thread 143153] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.486128] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.486323] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[13:03:34.486320] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[13:03:34.486397] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 1[m
[36m[13:03:34.486326] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 51 is notifying completion: HardStop[m
[36m[13:03:34.486423] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 3[m
[36m[13:03:34.486447] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 51 is terminated; tokens left = 4[m
[36m[13:03:34.486484] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[13:03:34.486553] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[13:03:34.486565] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.486599] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 0[m
[36m[13:03:34.486679] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.486752] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::45::0::0[m
[36m[13:03:34.486799] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::45::0::0 Thread 2[m
[36m[13:03:34.486830] [D] [thread 143152] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::45::0::0[m
[36m[13:03:34.486853] [D] [thread 143152] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::45::0::0[m
[36m[13:03:34.486876] [D] [thread 143152] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::45::0::0[m
[36m[13:03:34.486895] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
2023-11-13 [32m13[13:03:34.486930] [I] [thread 143152] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::45::0::0; newCnt(0)[m
:03:34.492 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=146 processedTuple=146 processedBuffers=146 processedWatermarks=0 latencyAVG=1699880469871 queueSizeAVG=0 availableGlobalBufferAVG=510 availableFixedBufferAVG=0
[36m[13:03:34.486966] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[13:03:34.486997] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.487038] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.487128] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.487335] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 57 is notifying completion: HardStop[m
[36m[13:03:34.487367] [D] [thread 143153] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.487377] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 57 is terminated; tokens left = 3[m
[36m[13:03:34.487408] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 57 terminationType=HardStop[m
[36m[13:03:34.487478] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.487586] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.487600] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[13:03:34.487603] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[13:03:34.487663] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[13:03:34.487663] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[13:03:34.487781] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=57 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[13:03:34.487834] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[13:03:34.487845] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[13:03:34.487862] [D] [thread 143156] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.487896] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[13:03:34.487916] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.488041] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[13:03:34.488048] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[13:03:34.488091] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[13:03:34.488121] [D] [thread 143152] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[13:03:34.488144] [D] [thread 143152] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[13:03:34.488168] [D] [thread 143152] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[13:03:34.488222] [I] [thread 143152] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[13:03:34.488254] [D] [thread 143156] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 63 is notifying completion: HardStop[m
[36m[13:03:34.488292] [D] [thread 143156] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 63 is terminated; tokens left = 2[m
[36m[13:03:34.488398] [D] [thread 143156] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 63 terminationType=HardStop[m
[36m[13:03:34.488490] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.488693] [D] [thread 143153] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.488939] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[13:03:34.488939] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[13:03:34.488598] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.488939] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[13:03:34.489015] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 3[m
[36m[13:03:34.489063] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::57::0::0[m
[36m[13:03:34.489102] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 0[m
[36m[13:03:34.489153] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 1[m
[36m[13:03:34.489012] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::57::0::0 Thread 2[m
[36m[13:03:34.489240] [D] [thread 143156] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=63 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=4[m
[36m[13:03:34.489251] [D] [thread 143152] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::57::0::0[m
[36m[13:03:34.489278] [D] [thread 143152] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::57::0::0[m
[36m[13:03:34.489301] [D] [thread 143152] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::57::0::0[m
[36m[13:03:34.489298] [D] [thread 143156] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[32m[13:03:34.489370] [I] [thread 143152] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(4)[m
[36m[13:03:34.489832] [D] [thread 143153] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.490053] [D] [thread 143153] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[13:03:34.490112] [D] [thread 143153] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 1[m
[36m[13:03:34.490103] [D] [thread 143152] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[13:03:34.490162] [D] [thread 143152] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 2[m
[36m[13:03:34.490250] [D] [thread 143154] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[13:03:34.490294] [D] [thread 143154] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 3[m
[36m[13:03:34.490413] [D] [thread 143151] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::63::0::0[m
[36m[13:03:34.490463] [D] [thread 143151] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::63::0::0 Thread 0[m
[36m[13:03:34.490490] [D] [thread 143151] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::63::0::0[m
[36m[13:03:34.490515] [D] [thread 143151] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::63::0::0[m
[36m[13:03:34.490538] [D] [thread 143151] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::63::0::0[m
[32m[13:03:34.490588] [I] [thread 143151] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(4)[m
[36m[13:03:34.490925] [D] [thread 143152] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[13:03:34.491108] [D] [thread 143152] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[13:03:34.491179] [D] [thread 143152] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.491317] [D] [thread 143152] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[13:03:34.491778] [D] [thread 143152] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[13:03:34.492452] [D] [thread 143153] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[13:03:34.492517] [D] [thread 143153] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[13:03:34.492540] [D] [thread 143153] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[13:03:34.492846] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[13:03:34.493074] [D] [thread 143156] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[13:03:34.494314] [D] [thread 143156] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[13:03:34.494477] [D] [thread 143156] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[13:03:34.494507] [D] [thread 143156] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[13:03:34.494528] [D] [thread 143156] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[31m[1m[13:03:34.631975] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: Transport closed[m
[33m[1m[13:03:34.632894] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:37687 went dead so we remove it[m
[32m[13:03:34.633060] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[13:03:34.633091] [I] [thread 143160] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[13:03:34.633126] [I] [thread 143160] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[13:03:34.633136] [I] [thread 143160] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[13:03:34.633150] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[13:03:34.633161] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[13:03:34.633209] [D] [thread 143160] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[13:03:34.649097] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.649097] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.649234] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=2)[m
[36m[13:03:34.649234] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=0)[m
[32m[13:03:34.649349] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(3)[m
[36m[13:03:34.649404] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=2) but there is still some active subpartition: 3[m
[32m[13:03:34.650164] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(2)[m
[36m[13:03:34.650241] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[13:03:34.650763] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.650841] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=1)[m
[32m[13:03:34.650913] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(1)[m
[36m[13:03:34.650964] [D] [thread 143150] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::57::0::0, counter is at 1.[m
[36m[13:03:34.651023] [D] [thread 143150] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.651049] [W] [thread 143150] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:57 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.651748] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.651830] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::57::0::0(threadId=3)[m
[32m[13:03:34.651906] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::57::0::0; newCnt(0)[m
[36m[13:03:34.651956] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::57::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[13:03:34.661322] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.661624] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=0)[m
[32m[13:03:34.661817] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(3)[m
[36m[13:03:34.661886] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=0) but there is still some active subpartition: 3[m
[36m[13:03:34.661944] [D] [thread 143150] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.662077] [D] [thread 143150] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=2)[m
[32m[13:03:34.662123] [I] [thread 143150] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(2)[m
[36m[13:03:34.662158] [D] [thread 143150] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[13:03:34.662315] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.662370] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=1)[m
[32m[13:03:34.662419] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(1)[m
[36m[13:03:34.662444] [D] [thread 143149] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::63::0::0, counter is at 1.[m
[36m[13:03:34.662490] [D] [thread 143149] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[13:03:34.662513] [W] [thread 143149] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:63 PartitionId: 0 SubpartitionID: 0[m
[36m[13:03:34.662555] [D] [thread 143149] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:35105): EndOfStream received for channel [m
[36m[13:03:34.662588] [D] [thread 143149] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::63::0::0(threadId=3)[m
[32m[13:03:34.662627] [I] [thread 143149] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::63::0::0; newCnt(0)[m
[36m[13:03:34.662679] [D] [thread 143149] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::63::0::0(threadId=3) but there is still some active subpartition: 0[m
[36m[13:03:34.715063] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[13:03:34.867768] [E] [thread 143920] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab024b26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffab1d3d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab024bc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb50b241f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4ecb053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad26f6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffab8e7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad281ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad282c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab024b26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffab1d3d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab024bc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb50b241f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4ecb053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad26f6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffab8e7b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad281ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad282c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[1m[41m[13:03:34.915042] [C] [thread 143140] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[13:03:34.915140] [I] [thread 143140] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[13:03:34.915238] [I] [thread 143140] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[13:03:34.915314] [W] [thread 143140] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[13:03:34.915327] [I] [thread 143140] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[13:03:34.915337] [W] [thread 143140] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[13:03:35.451286] [E] [thread 143920] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::60::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab1b0d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9e429e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab1b0dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa830841f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa8121053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04c56c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9eb3db17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04d7ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04d8c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab1b0d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff9e429e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaab1b0dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa830841f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffa8121053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04c56c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff9eb3db17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04d7ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffa04d8c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[13:03:35.716432] [D] [thread 143159] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[13:03:35.770120] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[13:03:35.771031] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:38749 went dead so we remove it[m
[32m[13:03:35.771176] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[13:03:35.771201] [I] [thread 143160] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[13:03:35.771229] [I] [thread 143160] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[13:03:35.771236] [I] [thread 143160] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[13:03:35.771259] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[13:03:35.771268] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[13:03:35.771291] [D] [thread 143160] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[13:03:35.776202] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[13:03:35.777223] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:37687 went dead so we remove it[m
[32m[13:03:35.777366] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[33m[1m[13:03:35.777396] [W] [thread 143160] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[13:03:35.782364] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[13:03:35.783284] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:45131 went dead so we remove it[m
[32m[13:03:35.783434] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[13:03:35.783459] [I] [thread 143160] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[13:03:35.783481] [I] [thread 143160] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[13:03:35.783489] [I] [thread 143160] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[13:03:35.783506] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[13:03:35.783515] [I] [thread 143160] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[13:03:35.783538] [D] [thread 143160] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[13:03:35.788614] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[13:03:35.789550] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.32:39391 went dead so we remove it[m
[32m[13:03:35.789700] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=4][m
[32m[13:03:35.789726] [I] [thread 143160] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[13:03:35.789737] [I] [thread 143160] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[13:03:35.789761] [D] [thread 143160] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[13:03:35.807042] [E] [thread 143160] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[13:03:35.808021] [W] [thread 143160] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:37343 went dead so we remove it[m
[32m[13:03:35.808181] [I] [thread 143160] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=4][m
[32m[13:03:35.808209] [I] [thread 143160] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[13:03:35.808222] [I] [thread 143160] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[13:03:35.808249] [D] [thread 143160] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
