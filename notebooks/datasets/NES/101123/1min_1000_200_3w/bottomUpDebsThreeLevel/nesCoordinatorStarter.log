
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[09:36:53.825265] [I] [thread 101842] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 1
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1000
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[09:36:53.825447] [I] [thread 101842] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[09:36:53.825701] [D] [thread 101842] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[09:36:53.826682] [D] [thread 101842] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[09:36:53.827015] [I] [thread 101842] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[09:36:53.827798] [D] [thread 101842] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[09:36:53.827877] [D] [thread 101842] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[09:36:53.828598] [D] [thread 101842] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[09:36:53.828694] [D] [thread 101842] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[09:36:53.828817] [D] [thread 101842] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[09:36:53.829153] [D] [thread 101842] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[09:36:53.829323] [D] [thread 101842] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[09:36:53.880803] [D] [thread 101842] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[09:36:53.880909] [D] [thread 101842] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:36:53.881362] [D] [thread 101842] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:36:53.881776] [D] [thread 101842] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:36:53.882111] [D] [thread 101842] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:36:53.882406] [D] [thread 101842] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:36:53.882593] [D] [thread 101842] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:36:53.882984] [D] [thread 101842] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[09:36:53.884140] [D] [thread 101842] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[09:36:53.884212] [D] [thread 101842] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1000[m
[36m[09:36:53.884525] [D] [thread 101842] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[09:36:53.884832] [D] [thread 101842] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[09:36:53.885146] [D] [thread 101842] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[09:36:53.886131] [D] [thread 101842] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[09:36:53.886632] [D] [thread 101842] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[09:36:53.886826] [D] [thread 101842] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[09:36:53.887071] [D] [thread 101842] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[09:36:53.887185] [W] [thread 101842] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[09:36:53.887226] [I] [thread 101842] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[09:36:53.887239] [D] [thread 101842] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[09:36:53.887597] [D] [thread 101842] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[09:36:53.887613] [I] [thread 101850] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[09:36:53.887659] [D] [thread 101850] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:36:53.888037] [D] [thread 101851] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[09:36:53.895002] [D] [thread 101842] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[09:36:53.894983] [D] [thread 101851] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[09:36:53.895064] [D] [thread 101842] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[09:36:53.895193] [D] [thread 101842] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[09:36:53.895205] [D] [thread 101842] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[09:36:53.895849] [D] [thread 101842] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[09:36:53.896035] [D] [thread 101842] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[09:36:53.896058] [D] [thread 101842] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[09:36:53.896088] [D] [thread 101842] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[09:36:53.896414] [D] [thread 101842] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[09:36:53.896482] [D] [thread 101842] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[09:36:53.896571] [I] [thread 101842] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:36:53.897281] [I] [thread 101842] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[09:36:53.897365] [I] [thread 101842] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:36:53.897650] [I] [thread 101842] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[09:36:53.897711] [I] [thread 101842] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:36:53.898279] [I] [thread 101842] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[09:36:53.898342] [I] [thread 101842] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[09:36:53.899276] [I] [thread 101842] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[09:36:53.899662] [D] [thread 101842] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[09:36:53.899928] [D] [thread 101842] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[09:36:53.900015] [W] [thread 101842] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[09:36:53.912940] [D] [thread 101842] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[09:36:53.924205] [D] [thread 101842] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[09:36:53.974253] [D] [thread 101842] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 1[m
[33m[1m[09:36:53.974677] [W] [thread 101842] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[09:36:53.974828] [D] [thread 101842] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[09:36:53.974932] [D] [thread 101842] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[09:36:53.975009] [D] [thread 101842] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[09:36:53.975061] [D] [thread 101842] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[09:36:53.975273] [D] [thread 101842] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[09:36:53.975361] [D] [thread 101842] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[09:36:53.975670] [D] [thread 101842] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[09:36:53.975870] [D] [thread 101842] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[33m[1m[09:36:53.975906] [W] [thread 101842] [ZmqServer.cpp:73] [ZmqServer] ZmqServer(192.168.2.11:0) numNetworkThreads is smaller than DEFAULT_NUM_SERVER_THREADS[m
[36m[09:36:53.975966] [D] [thread 101842] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[09:36:53.978403] [D] [thread 101856] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[09:36:53.979978] [D] [thread 101856] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[09:36:53.980131] [D] [thread 101856] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 41971[m
[36m[09:36:53.981342] [D] [thread 101859] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 41971[m
[32m[09:36:53.981476] [I] [thread 101842] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:41971[m
[36m[09:36:53.981577] [D] [thread 101842] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699509352  with numThreads= 1[m
[36m[09:36:53.981823] [D] [thread 101842] [ThreadPool.cpp:108] [start] Threadpool: Spawning 1 threads[m
[36m[09:36:53.982267] [D] [thread 101842] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[09:36:53.982317] [D] [thread 101842] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[09:36:53.982375] [D] [thread 101860] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 0 pins to queue 0[m
[36m[09:36:53.982483] [D] [thread 101842] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[09:36:53.982521] [D] [thread 101842] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[09:36:53.982609] [D] [thread 101860] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[09:36:53.983093] [D] [thread 101861] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[09:36:53.983566] [D] [thread 101861] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[09:36:53.986801] [D] [thread 101861] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 38261[m
[36m[09:36:53.986841] [D] [thread 101842] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:38261: 38261[m
[36m[09:36:53.986868] [D] [thread 101842] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[09:36:53.986898] [D] [thread 101842] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[09:36:53.987012] [D] [thread 101842] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[09:36:53.989515] [D] [thread 101861] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[09:36:53.989744] [D] [thread 101842] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[09:36:53.990775] [W] [thread 101842] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[09:36:53.990841] [D] [thread 101842] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[09:36:53.993196] [D] [thread 101842] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 38261
dataPort: 41971
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:36:54.006827] [D] [thread 101852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 38261
dataPort: 41971
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:36:54.007141] [D] [thread 101852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 38261
dataPort: 41971
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:36:54.007268] [D] [thread 101852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[09:36:54.007295] [W] [thread 101852] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[09:36:54.007307] [D] [thread 101852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:36:54.007331] [D] [thread 101852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:36:54.007377] [D] [thread 101852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[09:36:54.007603] [D] [thread 101852] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[09:36:54.007698] [I] [thread 101852] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[09:36:54.007821] [D] [thread 101852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:36:54.008076] [D] [thread 101852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[09:36:54.008175] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:36:54.008213] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:36:54.008254] [D] [thread 101852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:36:54.008266] [D] [thread 101852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:36:54.008304] [D] [thread 101852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:36:54.009760] [D] [thread 101852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[09:36:54.011567] [D] [thread 101842] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[09:36:54.011648] [D] [thread 101842] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[09:36:54.011758] [D] [thread 101842] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[09:36:54.011775] [D] [thread 101842] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[09:36:54.045073] [D] [thread 101842] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[09:36:54.045198] [D] [thread 101842] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[09:36:54.045214] [D] [thread 101842] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[09:36:54.045748] [D] [thread 101842] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[09:36:54.045924] [D] [thread 101842] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[09:36:54.046554] [D] [thread 101842] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[09:36:54.046644] [I] [thread 101865] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[09:36:54.063024] [I] [thread 101865] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[09:36:54.063227] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:54.077004] [D] [thread 101842] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[09:36:54.077096] [D] [thread 101842] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[09:36:54.077113] [D] [thread 101842] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[09:36:54.077534] [D] [thread 101842] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[09:36:55.064557] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:56.065877] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:57.067154] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:58.068475] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:59.069731] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:59.196235] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:59.197662] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:36:59.199771] [D] [thread 101869] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[09:36:59.202707] [D] [thread 101869] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:36:59.202849] [D] [thread 101869] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[09:36:59.202976] [D] [thread 101869] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[09:36:59.205579] [D] [thread 101870] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_09-36-59_3798268.cpp[m
[36m[09:36:59.206758] [D] [thread 101870] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:36:59.207545] [D] [thread 101870] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -o/tmp/query_10-11-2023_09-36-59_3798268.so -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -std=c++20 -stdlib=libstdc++ /tmp/query_10-11-2023_09-36-59_3798268.cpp'[m
[36m[09:37:00.198908] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:00.931636] [I] [thread 101870] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1726.204003ms[m
[36m[09:37:00.933469] [D] [thread 101869] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[09:37:00.933567] [D] [thread 101869] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[09:37:00.933601] [D] [thread 101869] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[09:37:00.933660] [D] [thread 101869] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[09:37:01.070124] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:01.070616] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:01.071311] [I] [thread 101876] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:01.072633] [I] [thread 101876] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:01.294385] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:01.294862] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:01.295480] [I] [thread 101877] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:01.296062] [I] [thread 101877] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:01.478950] [D] [thread 101852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 44357
dataPort: 44539
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:01.479118] [D] [thread 101852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 44357
dataPort: 44539
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:01.479166] [D] [thread 101852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:01.479293] [D] [thread 101852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:01.479308] [D] [thread 101852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:01.479337] [D] [thread 101852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[09:37:01.479446] [D] [thread 101852] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:01.479497] [I] [thread 101852] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:01.479615] [I] [thread 101852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:01.479766] [D] [thread 101852] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[09:37:01.479958] [D] [thread 101852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:01.480137] [D] [thread 101852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:01.480192] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:37:01.480212] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:37:01.480239] [D] [thread 101852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:01.480250] [D] [thread 101852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:01.480265] [D] [thread 101852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:01.480717] [D] [thread 101852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[09:37:02.296118] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:03.297421] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:04.298733] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:05.138540] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:05.139157] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:05.140389] [I] [thread 101878] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:05.141494] [I] [thread 101878] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:05.311191] [D] [thread 101863] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 45253
dataPort: 34059
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:05.311482] [D] [thread 101863] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 45253
dataPort: 34059
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:05.311563] [D] [thread 101863] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:05.311909] [D] [thread 101863] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:05.311951] [D] [thread 101863] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:05.312015] [D] [thread 101863] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[09:37:05.312185] [D] [thread 101863] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:05.312282] [I] [thread 101863] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:05.312499] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:05.312615] [D] [thread 101863] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[09:37:05.312720] [D] [thread 101863] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:05.313001] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:05.313071] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:37:05.313103] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:37:05.313148] [D] [thread 101863] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:05.313174] [D] [thread 101863] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:05.313202] [D] [thread 101863] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:05.313793] [D] [thread 101863] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[09:37:06.140484] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:07.141792] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:08.143091] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:08.977224] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:08.977623] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:08.978034] [I] [thread 101880] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:08.978790] [I] [thread 101880] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:09.141440] [D] [thread 101863] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 36941
dataPort: 37899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:09.141712] [D] [thread 101863] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 36941
dataPort: 37899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:09.141787] [D] [thread 101863] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:09.142117] [D] [thread 101863] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:09.142151] [D] [thread 101863] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:09.142211] [D] [thread 101863] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[09:37:09.142516] [D] [thread 101863] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:09.142608] [I] [thread 101863] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:09.142757] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:09.142852] [D] [thread 101863] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[09:37:09.142956] [D] [thread 101863] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:09.143256] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:09.143360] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:37:09.143393] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:37:09.143440] [D] [thread 101863] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:09.143465] [D] [thread 101863] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:09.143492] [D] [thread 101863] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:09.144087] [D] [thread 101863] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[09:37:09.978883] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:10.980189] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:11.981470] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:12.829565] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:12.830039] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:12.831019] [I] [thread 101881] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:12.832662] [I] [thread 101881] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:12.996216] [D] [thread 101863] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 39417
dataPort: 43317
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:12.996546] [D] [thread 101863] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 39417
dataPort: 43317
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:12.996626] [D] [thread 101863] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:12.997002] [D] [thread 101863] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:12.997034] [D] [thread 101863] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:12.997096] [D] [thread 101863] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[09:37:12.997258] [D] [thread 101863] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:12.997349] [I] [thread 101863] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:12.997498] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:12.997581] [D] [thread 101863] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[09:37:12.997685] [D] [thread 101863] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:12.998051] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:12.998118] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:12.998149] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:37:12.998193] [D] [thread 101863] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:12.998247] [D] [thread 101863] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:12.998277] [D] [thread 101863] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:12.998880] [D] [thread 101863] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[09:37:13.035250] [D] [thread 101863] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[09:37:13.035347] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:13.035374] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:37:13.035473] [D] [thread 101863] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[09:37:13.035874] [D] [thread 101863] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:13.035934] [D] [thread 101863] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[09:37:13.036161] [D] [thread 101863] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[09:37:13.036205] [D] [thread 101863] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:13.036291] [D] [thread 101863] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[09:37:13.036355] [D] [thread 101863] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:13.039971] [D] [thread 101863] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[09:37:13.040072] [D] [thread 101863] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[09:37:13.040095] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:13.040116] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:37:13.040137] [D] [thread 101863] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[09:37:13.040149] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:13.040161] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:13.040175] [D] [thread 101863] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:13.040240] [D] [thread 101863] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:13.040414] [I] [thread 101863] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:13.040469] [D] [thread 101863] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:13.040487] [D] [thread 101863] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:13.040511] [D] [thread 101863] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[09:37:13.040526] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:13.040542] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[09:37:13.040559] [D] [thread 101863] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[09:37:13.040570] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:37:13.040581] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:37:13.040595] [D] [thread 101863] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:37:13.040676] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:37:13.040719] [D] [thread 101863] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:13.040933] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:13.040954] [D] [thread 101863] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:13.831327] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:14.832581] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:15.833871] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:16.645454] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:16.646020] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:16.646826] [I] [thread 101882] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:16.648587] [I] [thread 101882] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:16.813245] [D] [thread 101863] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 34901
dataPort: 35535
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:16.813516] [D] [thread 101863] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 34901
dataPort: 35535
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:16.813595] [D] [thread 101863] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:16.814014] [D] [thread 101863] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:16.814092] [D] [thread 101863] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:16.814180] [D] [thread 101863] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[09:37:16.814360] [D] [thread 101863] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:16.814451] [I] [thread 101863] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:16.814602] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:16.814686] [D] [thread 101863] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[09:37:16.814790] [D] [thread 101863] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:16.815171] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:16.815234] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:16.815265] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:37:16.815309] [D] [thread 101863] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:16.815334] [D] [thread 101863] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:16.815362] [D] [thread 101863] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:16.815946] [D] [thread 101863] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[09:37:16.851545] [D] [thread 101863] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[09:37:16.851659] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:16.851700] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:37:16.851788] [D] [thread 101863] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[09:37:16.851994] [D] [thread 101863] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:16.852044] [D] [thread 101863] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[09:37:16.852159] [D] [thread 101863] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:37:16.852215] [D] [thread 101863] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[09:37:16.852275] [D] [thread 101863] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:16.852425] [D] [thread 101863] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[09:37:16.852469] [D] [thread 101863] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:16.856635] [D] [thread 101863] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[09:37:16.856765] [D] [thread 101863] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[09:37:16.856802] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:16.856837] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:37:16.856872] [D] [thread 101863] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[09:37:16.856893] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:16.856915] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:16.856941] [D] [thread 101863] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:16.857031] [D] [thread 101863] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:16.857208] [I] [thread 101863] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:16.857257] [D] [thread 101863] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:16.857309] [D] [thread 101863] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:16.857342] [D] [thread 101863] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[09:37:16.857365] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:16.857391] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[09:37:16.857420] [D] [thread 101863] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[09:37:16.857440] [I] [thread 101863] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[09:37:16.857461] [D] [thread 101863] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[09:37:16.857486] [D] [thread 101863] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[09:37:16.857633] [I] [thread 101863] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[09:37:16.857700] [D] [thread 101863] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:16.858104] [D] [thread 101863] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:16.858141] [D] [thread 101863] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:17.647330] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:18.648671] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:19.650034] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:20.089979] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:20.090486] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:20.091300] [I] [thread 101884] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:20.093254] [I] [thread 101884] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:20.257002] [D] [thread 101883] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 38365
dataPort: 39243
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:20.257278] [D] [thread 101883] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 38365
dataPort: 39243
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:20.257354] [D] [thread 101883] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:20.257824] [D] [thread 101883] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:20.257895] [D] [thread 101883] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:20.257984] [D] [thread 101883] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[09:37:20.258160] [D] [thread 101883] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:20.258255] [I] [thread 101883] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:20.258405] [I] [thread 101883] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:20.258491] [D] [thread 101883] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[09:37:20.258596] [D] [thread 101883] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:20.259030] [D] [thread 101883] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:20.259097] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:20.259128] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:37:20.259173] [D] [thread 101883] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:20.259198] [D] [thread 101883] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:20.259227] [D] [thread 101883] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:20.259821] [D] [thread 101883] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[09:37:20.294192] [D] [thread 101883] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[09:37:20.294322] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:20.294363] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:37:20.294447] [D] [thread 101883] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[09:37:20.294652] [D] [thread 101883] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:20.294700] [D] [thread 101883] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[09:37:20.294770] [D] [thread 101883] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:37:20.294803] [D] [thread 101883] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:37:20.294834] [D] [thread 101883] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[09:37:20.294860] [D] [thread 101883] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:20.294931] [D] [thread 101883] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[09:37:20.294959] [D] [thread 101883] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:20.298953] [D] [thread 101883] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[09:37:20.299043] [D] [thread 101883] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[09:37:20.299066] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:20.299088] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:37:20.299107] [D] [thread 101883] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[09:37:20.299118] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:20.299129] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:20.299142] [D] [thread 101883] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:20.299203] [D] [thread 101883] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:20.299317] [I] [thread 101883] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:20.299347] [D] [thread 101883] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:20.299365] [D] [thread 101883] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:20.299382] [D] [thread 101883] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[09:37:20.299394] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:20.299409] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[09:37:20.299424] [D] [thread 101883] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[09:37:20.299434] [I] [thread 101883] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:37:20.299445] [D] [thread 101883] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:37:20.299466] [D] [thread 101883] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:37:20.299542] [I] [thread 101883] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:37:20.299583] [D] [thread 101883] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:20.299835] [D] [thread 101883] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:20.299854] [D] [thread 101883] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:21.091760] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:22.092519] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:23.093816] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:23.477424] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:23.477904] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:23.478632] [I] [thread 101886] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:23.480868] [I] [thread 101886] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:23.638569] [D] [thread 101852] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 46675
dataPort: 33527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:23.638851] [D] [thread 101852] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 46675
dataPort: 33527
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:23.638928] [D] [thread 101852] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:23.639533] [D] [thread 101852] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:23.639609] [D] [thread 101852] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:23.639688] [D] [thread 101852] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[09:37:23.639864] [D] [thread 101852] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:23.639957] [I] [thread 101852] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:23.640107] [I] [thread 101852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:23.640192] [D] [thread 101852] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[09:37:23.640296] [D] [thread 101852] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:23.640848] [D] [thread 101852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:23.640923] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:23.640955] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:37:23.641034] [D] [thread 101852] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:23.641064] [D] [thread 101852] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:23.641092] [D] [thread 101852] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:23.641683] [D] [thread 101852] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[09:37:23.677298] [D] [thread 101852] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[09:37:23.677411] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:23.677448] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:37:23.677530] [D] [thread 101852] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[09:37:23.677739] [D] [thread 101852] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:23.677792] [D] [thread 101852] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[09:37:23.677871] [D] [thread 101852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:37:23.677907] [D] [thread 101852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:37:23.677935] [D] [thread 101852] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:37:23.677970] [D] [thread 101852] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[09:37:23.678018] [D] [thread 101852] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:23.678057] [D] [thread 101852] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[09:37:23.678084] [D] [thread 101852] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:23.682397] [D] [thread 101852] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[09:37:23.682527] [D] [thread 101852] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[09:37:23.682568] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:23.682604] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:37:23.682639] [D] [thread 101852] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[09:37:23.682660] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:23.682683] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:23.682708] [D] [thread 101852] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:23.682798] [D] [thread 101852] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:23.682977] [I] [thread 101852] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:23.683027] [D] [thread 101852] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:23.683056] [D] [thread 101852] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:23.683085] [D] [thread 101852] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[09:37:23.683109] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:23.683152] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[09:37:23.683184] [D] [thread 101852] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[09:37:23.683204] [I] [thread 101852] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[09:37:23.683226] [D] [thread 101852] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[09:37:23.683251] [D] [thread 101852] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[09:37:23.683397] [I] [thread 101852] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[09:37:23.683465] [D] [thread 101852] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:23.683960] [D] [thread 101852] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:23.684000] [D] [thread 101852] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:24.479198] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:25.480502] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:26.481798] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:27.337749] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:27.338262] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:27.339265] [I] [thread 101891] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:27.341892] [I] [thread 101891] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:27.507815] [D] [thread 101887] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 46753
dataPort: 44595
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:27.508076] [D] [thread 101887] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 46753
dataPort: 44595
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:27.508152] [D] [thread 101887] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:27.509105] [D] [thread 101887] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:27.509182] [D] [thread 101887] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:27.509255] [D] [thread 101887] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[09:37:27.509423] [D] [thread 101887] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:27.509553] [I] [thread 101887] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:27.509905] [I] [thread 101887] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:27.510083] [D] [thread 101887] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[09:37:27.510278] [D] [thread 101887] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:27.511177] [D] [thread 101887] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:27.511438] [I] [thread 101887] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:27.511482] [D] [thread 101887] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:37:27.511557] [D] [thread 101887] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:27.511584] [D] [thread 101887] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:27.511613] [D] [thread 101887] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:27.512788] [D] [thread 101887] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[09:37:27.547950] [D] [thread 101887] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[09:37:27.548040] [I] [thread 101887] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:27.548066] [D] [thread 101887] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:37:27.548128] [D] [thread 101887] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[09:37:27.548280] [D] [thread 101887] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:27.548311] [D] [thread 101887] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[09:37:27.548430] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:37:27.548457] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:37:27.548473] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:37:27.548488] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:37:27.548592] [D] [thread 101887] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[09:37:27.548676] [D] [thread 101887] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:27.548738] [D] [thread 101887] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[09:37:27.548803] [D] [thread 101887] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:27.552276] [D] [thread 101892] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[09:37:27.552413] [D] [thread 101892] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[09:37:27.552435] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:27.552458] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:37:27.552478] [D] [thread 101892] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[09:37:27.552490] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:27.552502] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:27.552516] [D] [thread 101892] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:27.552574] [D] [thread 101892] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:27.552688] [I] [thread 101892] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:27.552718] [D] [thread 101892] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:27.552736] [D] [thread 101892] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:27.552755] [D] [thread 101892] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[09:37:27.552767] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:27.552782] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[09:37:27.552809] [D] [thread 101892] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[09:37:27.552821] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:37:27.552833] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:37:27.552847] [D] [thread 101892] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[09:37:27.552928] [I] [thread 101892] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[09:37:27.552971] [D] [thread 101892] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:27.553296] [D] [thread 101892] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:27.553316] [D] [thread 101892] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:28.339528] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:29.340824] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:30.342141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:31.343454] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:31.488969] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:31.489588] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:31.490551] [I] [thread 101896] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:31.493417] [I] [thread 101896] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:31.551146] [D] [thread 101892] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 33517
dataPort: 38899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:31.551405] [D] [thread 101892] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 33517
dataPort: 38899
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[09:37:31.551486] [D] [thread 101892] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[09:37:31.552475] [D] [thread 101892] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[09:37:31.552552] [D] [thread 101892] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[09:37:31.552630] [D] [thread 101892] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[09:37:31.552800] [D] [thread 101892] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[09:37:31.552930] [I] [thread 101892] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[09:37:31.553276] [I] [thread 101892] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:31.553449] [D] [thread 101892] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[09:37:31.553636] [D] [thread 101892] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[09:37:31.554631] [D] [thread 101892] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[09:37:31.554898] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:31.554942] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:37:31.554996] [D] [thread 101892] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[09:37:31.555040] [D] [thread 101892] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[09:37:31.555073] [D] [thread 101892] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[09:37:31.556207] [D] [thread 101892] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[09:37:31.592376] [D] [thread 101887] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[09:37:31.592481] [I] [thread 101887] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:31.592515] [D] [thread 101887] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:37:31.592590] [D] [thread 101887] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[09:37:31.592765] [D] [thread 101887] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[09:37:31.592805] [D] [thread 101887] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[09:37:31.592870] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[09:37:31.592899] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[09:37:31.592920] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[09:37:31.592941] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[09:37:31.592961] [D] [thread 101887] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[09:37:31.592989] [D] [thread 101887] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[09:37:31.593013] [D] [thread 101887] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[09:37:31.593042] [D] [thread 101887] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[09:37:31.593063] [D] [thread 101887] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[09:37:31.597432] [D] [thread 101892] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[09:37:31.597553] [D] [thread 101892] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[09:37:31.597584] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:31.597615] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:37:31.597643] [D] [thread 101892] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[09:37:31.597659] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:31.597675] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[09:37:31.597695] [D] [thread 101892] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[09:37:31.597770] [D] [thread 101892] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[09:37:31.597914] [I] [thread 101892] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[09:37:31.597993] [D] [thread 101892] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[09:37:31.598025] [D] [thread 101892] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[09:37:31.598073] [D] [thread 101892] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[09:37:31.598194] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:31.598222] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[09:37:31.598246] [D] [thread 101892] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[09:37:31.598280] [I] [thread 101892] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[09:37:31.598391] [D] [thread 101892] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[09:37:31.598498] [D] [thread 101892] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[09:37:31.598898] [I] [thread 101892] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[09:37:31.599120] [D] [thread 101892] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[09:37:31.600461] [D] [thread 101892] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[09:37:31.600535] [D] [thread 101892] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[09:37:32.490880] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:33.492178] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:33.673857] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:33.674326] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:33.675491] [I] [thread 101899] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[09:37:33.678575] [I] [thread 101899] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[09:37:34.675541] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:34.687358] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:34.687992] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:34.814402] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:34.815141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:34.817192] [D] [thread 101905] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[09:37:34.817311] [I] [thread 101905] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[09:37:34.817340] [I] [thread 101905] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[09:37:34.817388] [D] [thread 101905] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[09:37:34.817481] [D] [thread 101905] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[09:37:34.817545] [D] [thread 101905] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));[m
[36m[09:37:34.817578] [D] [thread 101905] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(1))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[09:37:34.819311] [D] [thread 101906] [File.cpp:27] [createFile] Create File to file:///tmp/query_10-11-2023_09-37-34_8152981.cpp[m
[36m[09:37:34.819841] [D] [thread 101906] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[09:37:34.819920] [D] [thread 101906] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[09:37:34.820246] [D] [thread 101906] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -I/home/ubuntu/git/nebulastream/build/include/nebulastream -o/tmp/query_10-11-2023_09-37-34_8152981.so -DFMT_HEADER_ONLY /tmp/query_10-11-2023_09-37-34_8152981.cpp'[m
[36m[09:37:35.816440] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:36.817692] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:37.681985] [I] [thread 101906] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2862.757889ms[m
[36m[09:37:37.682334] [D] [thread 101905] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[09:37:37.682382] [D] [thread 101905] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[09:37:37.682670] [I] [thread 101905] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.683824] [D] [thread 101905] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[09:37:37.684199] [D] [thread 101905] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[09:37:37.684636] [I] [thread 101905] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.684807] [D] [thread 101905] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(2) as new root of the plan.[m
[36m[09:37:37.685016] [D] [thread 101905] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.685062] [D] [thread 101905] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.685532] [I] [thread 101905] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[09:37:37.685722] [D] [thread 101905] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-3, Min;) as new root of the plan.[m
[36m[09:37:37.685875] [D] [thread 101905] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.685895] [D] [thread 101905] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.686090] [D] [thread 101905] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[09:37:37.686228] [I] [thread 101905] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[09:37:37.686345] [D] [thread 101905] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:37:37.686479] [D] [thread 101905] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.686497] [D] [thread 101905] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.687420] [D] [thread 101905] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.687616] [D] [thread 101905] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.687759] [D] [thread 101905] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.687934] [D] [thread 101905] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.687984] [D] [thread 101905] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.688014] [D] [thread 101905] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.688114] [D] [thread 101905] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[09:37:37.688165] [D] [thread 101905] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.688271] [D] [thread 101905] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.688305] [D] [thread 101905] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.688881] [D] [thread 101905] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.688920] [D] [thread 101905] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.689036] [D] [thread 101905] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.689898] [D] [thread 101905] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.690535] [D] [thread 101905] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:37:37.691047] [I] [thread 101905] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[09:37:37.691746] [I] [thread 101905] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[09:37:37.691868] [I] [thread 101905] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:37:37.691927] [I] [thread 101850] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:37:37.692055] [I] [thread 101850] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:37:37.692094] [I] [thread 101850] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:37:37.692423] [I] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[09:37:37.692564] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:37:37.692599] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.692673] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.692723] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.692780] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.692822] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.693581] [D] [thread 101850] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.694118] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.694196] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:37:37.694226] [D] [thread 101850] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:37:37.694481] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[09:37:37.694567] [I] [thread 101850] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:37:37.694773] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:37:37.695086] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:37:37.695449] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:37:37.695659] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.695925] [D] [thread 101850] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[09:37:37.696246] [D] [thread 101850] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.696523] [D] [thread 101850] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:37:37.696672] [I] [thread 101850] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.696818] [D] [thread 101850] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:37:37.696846] [I] [thread 101850] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:37:37.696953] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:37:37.697115] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:37:37.697332] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:37:37.697620] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.697847] [D] [thread 101850] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[09:37:37.698061] [I] [thread 101850] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.698129] [D] [thread 101850] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[09:37:37.698142] [I] [thread 101850] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:37:37.698226] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:37:37.698359] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[09:37:37.698558] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[09:37:37.698723] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.698907] [D] [thread 101850] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[09:37:37.699055] [I] [thread 101850] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[09:37:37.699178] [I] [thread 101850] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.699316] [D] [thread 101850] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[09:37:37.699431] [D] [thread 101850] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.699591] [D] [thread 101850] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.699708] [D] [thread 101850] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[09:37:37.699816] [D] [thread 101850] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.699896] [D] [thread 101850] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.699991] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.700045] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.700081] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.700127] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.700172] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.700762] [D] [thread 101850] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.701168] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[09:37:37.701242] [I] [thread 101850] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[09:37:37.701418] [I] [thread 101850] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(2)
      SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[09:37:37.701448] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.701494] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.701528] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[32m[09:37:37.702141] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.702226] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.702323] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.702343] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.702376] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.702585] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:37:37.703067] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.703144] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.703226] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.703242] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.703271] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.703450] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:37:37.703758] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.703802] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.703881] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.703899] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.703927] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.704081] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:37:37.704362] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.704411] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.704507] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.704525] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.704553] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.704725] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:37:37.704995] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.705050] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.705108] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.705121] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.705145] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.705294] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[09:37:37.705541] [I] [thread 101850] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[09:37:37.705579] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[09:37:37.705635] [D] [thread 101850] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[09:37:37.705649] [D] [thread 101850] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[09:37:37.705671] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[09:37:37.705839] [D] [thread 101850] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[09:37:37.706324] [D] [thread 101850] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[09:37:37.706417] [I] [thread 101850] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[09:37:37.706634] [D] [thread 101850] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:37:37.706891] [D] [thread 101850] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[09:37:37.707213] [D] [thread 101850] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:37:37.707277] [D] [thread 101850] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[09:37:37.707496] [D] [thread 101850] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(4: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-3, Min;)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:37:37.707798] [D] [thread 101850] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[09:37:37.707876] [D] [thread 101850] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-3, Min;)[m
[36m[09:37:37.707924] [D] [thread 101850] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.708042] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:37.708074] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:37:37.708490] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:37.708539] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:37:37.708731] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:37.708756] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:37:37.708888] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:37.708904] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:37:37.708980] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:37.709047] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:37:37.709148] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:37.709164] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:37:37.709640] [I] [thread 101850] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:37:37.709708] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709721] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709730] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709739] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709748] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709756] [I] [thread 101850] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:37.709765] [I] [thread 101850] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:37.709776] [I] [thread 101850] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:37:37.709784] [I] [thread 101850] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:37:37.709930] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[09:37:37.710181] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(17) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.710393] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[09:37:37.710530] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(18) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.710693] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[09:37:37.710798] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(19) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.710938] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[09:37:37.711027] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(20) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.711158] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[09:37:37.711242] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(21) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[32m[09:37:37.711382] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[09:37:37.711466] [D] [thread 101850] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(22) old node=WINDOW AGGREGATION(OP-3, Min;)[m
[36m[09:37:37.711861] [D] [thread 101850] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:37:37.712172] [D] [thread 101850] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:37:37.712440] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.712560] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.712634] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[09:37:37.712689] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.712724] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.713287] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.713550] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.713666] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.714136] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.714415] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.714530] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.714983] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.715195] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.715306] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.715784] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.715998] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.716112] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.716610] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.716828] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.716938] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.717434] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.717647] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.717753] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.717914] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.718732] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[09:37:37.718782] [D] [thread 101850] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[09:37:37.719112] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[09:37:37.719223] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[09:37:37.719243] [D] [thread 101850] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[09:37:37.719299] [I] [thread 101850] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[09:37:37.719341] [I] [thread 101850] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[09:37:37.719475] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[09:37:37.719646] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[09:37:37.719942] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[09:37:37.720193] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[09:37:37.720462] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[09:37:37.720699] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[32m[09:37:37.720912] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[09:37:37.721172] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[09:37:37.721359] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[09:37:37.721518] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[09:37:37.721644] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[09:37:37.721804] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[09:37:37.721960] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[09:37:37.722126] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[09:37:37.722349] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[09:37:37.722537] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[09:37:37.722723] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[09:37:37.722905] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[09:37:37.723081] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[09:37:37.723748] [D] [thread 101850] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:37:37.723811] [D] [thread 101850] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:37:37.723874] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.723916] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.723937] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.723972] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.723995] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724018] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724052] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724079] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724189] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724214] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724234] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724254] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724369] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724398] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724409] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.724441] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724491] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.724532] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724545] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.724566] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724577] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.724593] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724605] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.724625] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.724642] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.725852] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:37:37.725880] [D] [thread 101850] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:37:37.725949] [D] [thread 101850] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:37:37.726023] [D] [thread 101850] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:37:37.726034] [D] [thread 101850] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[09:37:37.726045] [D] [thread 101850] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[09:37:37.726071] [I] [thread 101850] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[09:37:37.726617] [D] [thread 101850] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(4: {FileSinkDescriptor()})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:37:37.726646] [D] [thread 101850] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[09:37:37.726659] [D] [thread 101850] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[09:37:37.726712] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726754] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726774] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726794] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726813] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726833] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726851] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726894] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726918] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726939] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726958] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.726989] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727014] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727034] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727046] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727076] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727088] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727112] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727124] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727142] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727154] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727170] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727181] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727200] [D] [thread 101850] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[09:37:37.727212] [D] [thread 101850] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[09:37:37.727419] [D] [thread 101850] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[09:37:37.727467] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[09:37:37.727487] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[09:37:37.727578] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[09:37:37.727592] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[09:37:37.727626] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[09:37:37.727638] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[09:37:37.727659] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[09:37:37.727669] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[09:37:37.727686] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[09:37:37.727697] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[09:37:37.727717] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[09:37:37.727727] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[09:37:37.727746] [I] [thread 101850] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[09:37:37.727757] [D] [thread 101850] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[09:37:37.727825] [I] [thread 101850] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[09:37:37.728028] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.728232] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.728393] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.728498] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.728689] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.728753] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.728817] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.728909] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729045] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.729102] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729170] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729238] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729348] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.729403] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729477] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729547] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729651] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.729717] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729774] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729841] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.729953] [D] [thread 101850] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[09:37:37.730024] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730087] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730154] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[09:37:37.730201] [I] [thread 101850] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[09:37:37.730211] [D] [thread 101850] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[09:37:37.730547] [D] [thread 101850] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[09:37:37.730564] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.730629] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730644] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.730670] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:37:37.730740] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730846] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730887] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.730933] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.730944] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.730965] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:37:37.731019] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731074] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.731118] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731130] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.731148] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[09:37:37.731198] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731247] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.731324] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731338] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.731354] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:37:37.731454] [W] [thread 101850] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:37:37.731472] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.731532] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731544] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.731570] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:37:37.731614] [W] [thread 101850] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:37:37.731629] [D] [thread 101850] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[09:37:37.731677] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[09:37:37.731688] [D] [thread 101850] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[09:37:37.731702] [D] [thread 101850] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[09:37:37.731758] [W] [thread 101850] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[09:37:37.731835] [D] [thread 101850] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:37:37.731848] [D] [thread 101850] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[09:37:37.731855] [D] [thread 101850] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[09:37:37.731861] [D] [thread 101850] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[09:37:37.731880] [D] [thread 101850] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:37:37.731888] [D] [thread 101850] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[09:37:37.731909] [D] [thread 101850] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[09:37:37.732076] [D] [thread 101850] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[09:37:37.732146] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[09:37:37.732215] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[09:37:37.732249] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.732303] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[09:37:37.732346] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.732429] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(17)[m
[36m[09:37:37.732448] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.732516] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.732533] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.732552] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.732655] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.732696] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.732711] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.732898] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.732950] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[09:37:37.732986] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[09:37:37.733003] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733040] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(6)[m
[36m[09:37:37.733054] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733106] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(18)[m
[36m[09:37:37.733122] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733155] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.733169] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.733181] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.733262] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.733287] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.733298] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.733443] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.733487] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[09:37:37.733521] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[09:37:37.733537] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733571] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(12)[m
[36m[09:37:37.733585] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733631] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(19)[m
[36m[09:37:37.733646] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.733679] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.733693] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.733705] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.733779] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.733801] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.733812] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.733951] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.733994] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[09:37:37.734028] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[09:37:37.734045] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734080] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(10)[m
[36m[09:37:37.734095] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734140] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(20)[m
[36m[09:37:37.734170] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734213] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.734229] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.734241] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.734323] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.734347] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.734359] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.734507] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.734553] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[09:37:37.734586] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[09:37:37.734615] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734655] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(16)[m
[36m[09:37:37.734669] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734719] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(21)[m
[36m[09:37:37.734734] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.734767] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.734781] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.734798] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.734880] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.734905] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.734917] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.735069] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.735126] [D] [thread 101850] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[09:37:37.735163] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[09:37:37.735181] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.735217] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[09:37:37.735231] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.735280] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(22)[m
[36m[09:37:37.735295] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.735328] [D] [thread 101850] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(4: {FileSinkDescriptor()})[m
[36m[09:37:37.735342] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.735353] [D] [thread 101850] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[09:37:37.735430] [D] [thread 101850] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[09:37:37.735452] [D] [thread 101850] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[09:37:37.735464] [D] [thread 101850] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[09:37:37.735608] [D] [thread 101850] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[09:37:37.735624] [D] [thread 101850] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.735637] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.735688] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.735724] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.735955] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[09:37:37.735977] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.736009] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.736226] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[09:37:37.736468] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[09:37:37.736490] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.736498] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.736527] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.736542] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.736679] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:37:37.736826] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.736871] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:37:37.736883] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:37:37.736978] [D] [thread 101850] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 6[m
[36m[09:37:37.737162] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.737185] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.737212] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:37:37.737235] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.737347] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.737444] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.737468] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.737533] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.737547] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:37:37.737587] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 6[m
[36m[09:37:37.737600] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.737617] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.737653] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.737666] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.737706] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.737730] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.737810] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.737832] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.737868] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.737967] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[09:37:37.738169] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.738190] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.738207] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[09:37:37.738217] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[09:37:37.738347] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[09:37:37.738414] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.738432] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.738471] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:37:37.738503] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.738520] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:37:37.738530] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:37:37.738639] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:37:37.738699] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.738718] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.738735] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:37:37.738755] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.738809] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.738884] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.738903] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.738957] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.738969] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:37:37.739001] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(17) on execution node with id 6[m
[36m[09:37:37.739013] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.739026] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.739050] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.739078] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.739105] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.739117] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.739158] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.739169] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.739186] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.739274] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[09:37:37.739478] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.739501] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.739523] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:37:37.739587] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[09:37:37.739703] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[09:37:37.739747] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.739769] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.739846] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[09:37:37.739867] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.739892] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[09:37:37.739903] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[09:37:37.739965] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[09:37:37.740010] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.740028] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.740043] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[09:37:37.740064] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.740115] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.740193] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:37:37.740214] [W] [thread 101850] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:37:37.740223] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.740236] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.740244] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.740295] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.740313] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.740456] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[09:37:37.740473] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.740486] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.740590] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[09:37:37.740775] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[09:37:37.740792] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.740800] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.740822] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.740835] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.740889] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:37:37.740934] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.740951] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:37:37.740961] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:37:37.741021] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 5 to the query Id 1[m
[36m[09:37:37.741102] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.741122] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.741138] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:37:37.741158] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.741211] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.741283] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.741302] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.741352] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.741365] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:37:37.741397] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(6) on execution node with id 5[m
[36m[09:37:37.741408] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.741420] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.741444] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.741455] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.741485] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.741495] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.741543] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.741554] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.741573] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.741640] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[09:37:37.741871] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.741892] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.741905] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[09:37:37.741914] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[09:37:37.742039] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[09:37:37.742090] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.742107] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.742149] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:37:37.742168] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.742183] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:37:37.742193] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:37:37.742249] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:37:37.742296] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.742314] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.742330] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:37:37.742349] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.742399] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.742463] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.742481] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.742547] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.742560] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:37:37.742592] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(18) on execution node with id 5[m
[36m[09:37:37.742604] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.742617] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.742641] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.742663] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.742689] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.742701] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.742738] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.742750] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.742769] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.742853] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[09:37:37.743081] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.743107] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.743119] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[09:37:37.743129] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[09:37:37.743232] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(6) as root operator.[m
[36m[09:37:37.743274] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.743305] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.743350] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[09:37:37.743368] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.743383] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[09:37:37.743393] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[09:37:37.743451] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[09:37:37.743491] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.743508] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.743523] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[09:37:37.743543] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.743589] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.743662] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:37:37.743684] [W] [thread 101850] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:37:37.743692] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.743705] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.743713] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.743764] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.743782] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.743872] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[09:37:37.743887] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.743898] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.743994] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[09:37:37.744162] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[09:37:37.744181] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.744189] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.744212] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.744224] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.744276] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:37:37.744303] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.744347] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:37:37.744361] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:37:37.744417] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[09:37:37.744471] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.744488] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.744503] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:37:37.744522] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.744573] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.744644] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.744662] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.744712] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.744724] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:37:37.744753] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(12) on execution node with id 8[m
[36m[09:37:37.744765] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.744777] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.744800] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.744812] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.744841] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.744852] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.744904] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.744916] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.744933] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.745001] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[09:37:37.745172] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.745194] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.745207] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[09:37:37.745216] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[09:37:37.745327] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[09:37:37.745374] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.745407] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.745444] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:37:37.745462] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.745477] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:37:37.745486] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:37:37.745536] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:37:37.745576] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.745593] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.745608] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:37:37.745627] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.745673] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.745736] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.745754] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.745803] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.745816] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:37:37.745847] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(19) on execution node with id 8[m
[36m[09:37:37.745858] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.745870] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.745891] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.745911] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.745937] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.745948] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.745984] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.745995] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.746024] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.746094] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[09:37:37.746283] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.746305] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.746317] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[09:37:37.746327] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[09:37:37.746425] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(12) as root operator.[m
[36m[09:37:37.746466] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.746482] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.746518] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[09:37:37.746535] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.746550] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[09:37:37.746559] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[09:37:37.746613] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[09:37:37.746652] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.746668] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.746684] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[09:37:37.746704] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.746747] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.746814] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:37:37.746837] [W] [thread 101850] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:37:37.746845] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.746858] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.746867] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.746914] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.746932] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.747020] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[09:37:37.747035] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.747047] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.747137] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[09:37:37.747322] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[09:37:37.747342] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.747350] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.747371] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.747382] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.747449] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:37:37.747481] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.747497] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:37:37.747506] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:37:37.747570] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[09:37:37.747622] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.747640] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.747655] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:37:37.747675] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.747729] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.747799] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.747817] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.747883] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.747896] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:37:37.747929] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(10) on execution node with id 7[m
[36m[09:37:37.747941] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.747954] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.747979] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.747991] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.748022] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.748033] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.748085] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.748096] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.748113] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.748182] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[09:37:37.748383] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.748409] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.748422] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[09:37:37.748431] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[09:37:37.748556] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[09:37:37.748606] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.748625] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.748666] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:37:37.748685] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.748701] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:37:37.748711] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:37:37.748769] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:37:37.748811] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.748829] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.748859] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:37:37.748883] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.748935] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.749012] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.749032] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.749086] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.749098] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:37:37.749129] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(20) on execution node with id 7[m
[36m[09:37:37.749140] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.749153] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.749189] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.749212] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.749239] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.749250] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.749290] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.749301] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.749319] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.749392] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[09:37:37.749582] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.749603] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.749616] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:37:37.749625] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[09:37:37.749721] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(10) as root operator.[m
[36m[09:37:37.749763] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.749779] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.749814] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[09:37:37.749832] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.749907] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[09:37:37.749919] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[09:37:37.749978] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[09:37:37.750021] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.750039] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.750054] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[09:37:37.750075] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.750158] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.750236] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:37:37.750261] [W] [thread 101850] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:37:37.750270] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.750283] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.750291] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.750340] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.750358] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.750453] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[09:37:37.750467] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.750479] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.750575] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[09:37:37.750747] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[09:37:37.750765] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.750773] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.750795] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.750806] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.750859] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:37:37.750889] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.750905] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:37:37.750915] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:37:37.750967] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[09:37:37.751016] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.751032] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.751061] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:37:37.751082] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.751137] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.751256] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.751276] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.751329] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.751341] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:37:37.751374] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(16) on execution node with id 10[m
[36m[09:37:37.751386] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.751400] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.751425] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.751438] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.751468] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.751479] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.751531] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.751543] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.751562] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.751662] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[09:37:37.751833] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.751859] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.751873] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[09:37:37.751883] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[09:37:37.752032] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[09:37:37.752087] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.752106] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.752143] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:37:37.752162] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.752178] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:37:37.752188] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:37:37.752243] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:37:37.752286] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.752303] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.752347] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:37:37.752375] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.752429] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.752511] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.752531] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.752582] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.752594] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:37:37.752626] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(21) on execution node with id 10[m
[36m[09:37:37.752638] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.752651] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.752673] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.752695] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.752723] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.752734] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.752774] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.752823] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.752845] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.752917] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[09:37:37.753112] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.753135] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.753150] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:37:37.753172] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[09:37:37.753277] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(16) as root operator.[m
[36m[09:37:37.753320] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.753336] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.753375] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[09:37:37.753403] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.753418] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[09:37:37.753428] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[09:37:37.753487] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[09:37:37.753568] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.753587] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.753603] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[09:37:37.753624] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.753671] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.753744] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[09:37:37.753770] [W] [thread 101850] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[09:37:37.753779] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.753792] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.753800] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.753853] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.753871] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.753969] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[09:37:37.753984] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.753997] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.754093] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[09:37:37.754263] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[09:37:37.754280] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.754288] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.754309] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.754321] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.754372] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:37:37.754400] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.754415] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:37:37.754425] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:37:37.754488] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[09:37:37.754540] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.754561] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.754624] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:37:37.754647] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.754699] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.754768] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.754797] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.754850] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.754864] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:37:37.754894] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 9[m
[36m[09:37:37.754906] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.754918] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.754942] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.754954] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.754984] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.754995] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.755053] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.755065] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.755083] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.755149] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[09:37:37.755319] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.755339] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.755352] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[09:37:37.755361] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[09:37:37.755475] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[09:37:37.755523] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.755539] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.755574] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:37:37.755591] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.755606] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:37:37.755615] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:37:37.755671] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:37:37.755711] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.755728] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.755743] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:37:37.755764] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.755810] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.755891] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[09:37:37.755912] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.755962] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.755974] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:37:37.756006] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(22) on execution node with id 9[m
[36m[09:37:37.756018] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.756031] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.756055] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.756076] [D] [thread 101850] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[09:37:37.756103] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.756126] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.756170] [D] [thread 101850] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[09:37:37.756181] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.756200] [D] [thread 101850] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[09:37:37.756272] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[09:37:37.756505] [D] [thread 101850] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[09:37:37.756530] [D] [thread 101850] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[09:37:37.756543] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:37:37.756552] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[09:37:37.756658] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[09:37:37.756700] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.756732] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.756775] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[09:37:37.756795] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.756810] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[09:37:37.756820] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[09:37:37.756905] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[09:37:37.756951] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.756969] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.756986] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[09:37:37.757007] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.757098] [D] [thread 101850] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[09:37:37.757182] [D] [thread 101850] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[09:37:37.757215] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.757314] [D] [thread 101850] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(4: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[09:37:37.757329] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[09:37:37.757342] [W] [thread 101850] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[09:37:37.757454] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[09:37:37.757635] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(4: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[09:37:37.757653] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.757661] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.757689] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.757748] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.757808] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:37:37.757841] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.757858] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[09:37:37.757868] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[09:37:37.757925] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[09:37:37.757976] [D] [thread 101850] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[09:37:37.757994] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[09:37:37.758009] [I] [thread 101850] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[09:37:37.758029] [D] [thread 101850] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[09:37:37.758051] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.758068] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.758076] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.758084] [D] [thread 101850] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[09:37:37.758101] [D] [thread 101850] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[09:37:37.758143] [I] [thread 101850] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[09:37:37.758167] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.758230] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[09:37:37.758271] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.758299] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[09:37:37.758310] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[09:37:37.758353] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.758509] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.758535] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.758557] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[09:37:37.758607] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.758678] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.758695] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.758719] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.758731] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.758738] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.758868] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.758951] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.758974] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:37:37.758997] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.759013] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.759041] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[09:37:37.759053] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[09:37:37.759199] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[09:37:37.759403] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(17) as root operator.[m
[36m[09:37:37.759483] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[32m[09:37:37.759746] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[09:37:37.759849] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.33:35535 1::23::0::0}) as new root of the plan.[m
[36m[09:37:37.759863] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.759871] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.759957] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 28[m
[36m[09:37:37.760082] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.760208] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.760223] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.760253] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.760267] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.760352] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:37:37.760391] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.760408] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[09:37:37.760418] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[09:37:37.760481] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[09:37:37.760536] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[09:37:37.760550] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[09:37:37.760561] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[09:37:37.760576] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.760609] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:37:37.760628] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.760703] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.760716] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.760731] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.760743] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.760855] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[09:37:37.760905] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.760921] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.761074] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:37:37.761104] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:37:37.761118] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[09:37:37.761128] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.761151] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:37:37.761181] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.761277] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[09:37:37.761316] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.761343] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[09:37:37.761354] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[09:37:37.761371] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.761491] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.761536] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.761571] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.761610] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.761676] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.761692] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.761716] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.761728] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.761735] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.761854] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.761928] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.761941] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:37:37.761970] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.761987] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.762015] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[09:37:37.762029] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[32m[09:37:37.762102] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 31[m
[36m[09:37:37.762265] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(18) as root operator.[m
[36m[09:37:37.762339] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:37:37.762383] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:37:37.762394] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[32m[09:37:37.762533] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[09:37:37.762618] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.32:43317 1::29::0::0}) as new root of the plan.[m
[36m[09:37:37.762632] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.762641] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.762771] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 34[m
[36m[09:37:37.762858] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.762977] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.762992] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.763021] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.763039] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.763100] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:37:37.763119] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.763134] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[09:37:37.763144] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[09:37:37.763207] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 2 already mapped to the query Id 1[m
[36m[09:37:37.763239] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[09:37:37.763251] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[09:37:37.763262] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[09:37:37.763271] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.763318] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[09:37:37.763336] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.763407] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.763420] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.763437] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.763449] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.763552] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[09:37:37.763600] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.763663] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.763839] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[09:37:37.763858] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[09:37:37.763871] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[09:37:37.763882] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.763897] [D] [thread 101850] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  2[m
[36m[09:37:37.763925] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.763971] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[09:37:37.764005] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.764033] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[09:37:37.764044] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[09:37:37.764061] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.764179] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.764230] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.764271] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[09:37:37.764312] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.764414] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.764433] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.764458] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.764470] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.764478] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.764552] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.764641] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.764664] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:37:37.764685] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.764701] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.764731] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[09:37:37.764744] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[32m[09:37:37.764821] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 37[m
[36m[09:37:37.764987] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(19) as root operator.[m
[36m[09:37:37.765065] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[32m[09:37:37.765244] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[09:37:37.765331] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.35:33527 1::35::0::0}) as new root of the plan.[m
[36m[09:37:37.765345] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.765353] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.765480] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 40[m
[36m[09:37:37.765563] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.765681] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.765693] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.765749] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.765765] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.765821] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:37:37.765854] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.765870] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[09:37:37.765880] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[09:37:37.765942] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[09:37:37.766008] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[09:37:37.766023] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[09:37:37.766035] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[09:37:37.766045] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.766077] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:37:37.766152] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.766217] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.766230] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.766245] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.766258] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.766373] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[09:37:37.766437] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.766454] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.766634] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:37:37.766654] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:37:37.766666] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[09:37:37.766676] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.766707] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:37:37.766736] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.766783] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[09:37:37.766818] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.766848] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:37:37.766859] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[09:37:37.766876] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.766995] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.767055] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.767098] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[09:37:37.767141] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.767207] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.767223] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.767247] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.767259] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.767266] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.767339] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.767409] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.767422] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:37:37.767441] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.767456] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.767484] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[09:37:37.767497] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[09:37:37.767567] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 43[m
[36m[09:37:37.767720] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(20) as root operator.[m
[36m[09:37:37.767793] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:37:37.767836] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:37:37.767849] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[32m[09:37:37.768015] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[09:37:37.768113] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.34:39243 1::41::0::0}) as new root of the plan.[m
[36m[09:37:37.768143] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.768152] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.768236] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 46[m
[36m[09:37:37.768312] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.768466] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.768480] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.768507] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.768564] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.768616] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:37:37.768644] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.768661] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[09:37:37.768671] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[09:37:37.768737] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 3 already mapped to the query Id 1[m
[36m[09:37:37.768772] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[09:37:37.768784] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[09:37:37.768795] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[09:37:37.768805] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.768845] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[09:37:37.768863] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.768917] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.768929] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.768944] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.768956] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.769059] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[09:37:37.769107] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.769122] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.769282] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[09:37:37.769300] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[09:37:37.769312] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[09:37:37.769321] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.769336] [D] [thread 101850] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  3[m
[36m[09:37:37.769363] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.769407] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[09:37:37.769443] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.769470] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:37:37.769490] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[09:37:37.769508] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.769630] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.769683] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.769724] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 4 source operators.[m
[36m[09:37:37.769766] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.769834] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.769850] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.769875] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.769887] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.769936] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.770015] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.770091] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.770104] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:37:37.770122] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.770139] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.770169] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[09:37:37.770182] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[32m[09:37:37.770258] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 49[m
[36m[09:37:37.770433] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(21) as root operator.[m
[36m[09:37:37.770507] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[32m[09:37:37.770733] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[09:37:37.770832] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.38:38899 1::47::0::0}) as new root of the plan.[m
[36m[09:37:37.770849] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.770916] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.771008] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 52[m
[36m[09:37:37.771086] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.771205] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.771220] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.771244] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.771258] [D] [thread 101850] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[09:37:37.771330] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:37:37.771367] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.771384] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:37:37.771394] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:37:37.771459] [D] [thread 101850] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[09:37:37.771511] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[09:37:37.771524] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[09:37:37.771536] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[09:37:37.771545] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.771583] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:37:37.771600] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.771658] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.771670] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.771684] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.771695] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.771799] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[09:37:37.771848] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.771863] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.772034] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:37:37.772053] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:37:37.772065] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[09:37:37.772074] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.772101] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:37:37.772133] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.772179] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[09:37:37.772215] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.772241] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:37:37.772252] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[09:37:37.772268] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.772421] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.772483] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.772528] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 5 source operators.[m
[36m[09:37:37.772572] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.772640] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.772710] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.772745] [D] [thread 101850] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[09:37:37.772757] [D] [thread 101850] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[09:37:37.772792] [D] [thread 101850] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[09:37:37.772872] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.772948] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.772961] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:37:37.772986] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.773002] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.773031] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[09:37:37.773044] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[32m[09:37:37.773162] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[09:37:37.773342] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(22) as root operator.[m
[36m[09:37:37.773417] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:37:37.773461] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:37:37.773473] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[32m[09:37:37.773605] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[09:37:37.773689] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.37:44595 1::53::0::0}) as new root of the plan.[m
[36m[09:37:37.773703] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.773711] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:37.773784] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[36m[09:37:37.773849] [D] [thread 101850] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.11:41971)}) as new root of the plan.[m
[36m[09:37:37.773958] [D] [thread 101850] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:37.773971] [D] [thread 101850] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:37.773994] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.774011] [D] [thread 101850] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[09:37:37.774058] [D] [thread 101850] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:37:37.774089] [D] [thread 101850] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[09:37:37.774107] [W] [thread 101850] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[09:37:37.774116] [D] [thread 101850] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[09:37:37.774183] [D] [thread 101850] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 4 already mapped to the query Id 1[m
[36m[09:37:37.774216] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[09:37:37.774228] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[09:37:37.774239] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[09:37:37.774248] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.774298] [D] [thread 101850] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[09:37:37.774317] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.774374] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.774387] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.774402] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.774415] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[09:37:37.774517] [I] [thread 101850] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[09:37:37.774564] [D] [thread 101850] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 4 exists in the query plan or not[m
[36m[09:37:37.774579] [D] [thread 101850] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 4 in the query plan[m
[36m[09:37:37.774746] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[09:37:37.774764] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[09:37:37.774776] [D] [thread 101850] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[09:37:37.774786] [D] [thread 101850] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[09:37:37.774800] [D] [thread 101850] [GlobalExecutionPlan.cpp:51] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Execution node is already a parent to the node with id  4[m
[36m[09:37:37.774858] [D] [thread 101850] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[09:37:37.774896] [D] [thread 101850] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[09:37:37.774906] [D] [thread 101850] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[09:37:37.774916] [D] [thread 101850] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[09:37:37.774934] [D] [thread 101850] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[09:37:37.774963] [D] [thread 101850] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[09:37:37.775025] [D] [thread 101850] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[09:37:37.775047] [D] [thread 101850] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:37:37.775116] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.775134] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.775372] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.775422] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.775459] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.775504] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.775529] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.776129] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.776460] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.776581] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.776695] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.776750] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.776769] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.776945] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.776989] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.777021] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.777062] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.777085] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.777613] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.777840] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.777932] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.778030] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.778076] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.778093] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.778250] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.778290] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.778320] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.778355] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.778383] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.778893] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.779121] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.779217] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.779316] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.779359] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.779376] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.779526] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.779564] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.779607] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.779646] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.779669] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.780191] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.780448] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.780568] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.780730] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.780781] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.780809] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.780979] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.781032] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.781065] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.781115] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.781141] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.781674] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.781910] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.782005] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.782113] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.782159] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.782178] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.782338] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.782376] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.782406] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.782443] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.782465] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.782979] [D] [thread 101850] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[32m[09:37:37.783220] [I] [thread 101850] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[09:37:37.783319] [I] [thread 101850] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.783418] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.783463] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.783480] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.783664] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.783732] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.783819] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[09:37:37.783865] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.783893] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.784080] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.784115] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.784130] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.784244] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.784276] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.784299] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.784351] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.784378] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.784507] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.784613] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.784642] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.784667] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.784691] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.784711] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.784811] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.784842] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.784857] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.784950] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.784977] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.784999] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.785022] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.785040] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.785146] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.785232] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.785257] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.785278] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.785300] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.785317] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.785413] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.785443] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.785458] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.785546] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.785573] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.785594] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.785617] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.785635] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.785762] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.785859] [D] [thread 101850] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[09:37:37.785886] [D] [thread 101850] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[09:37:37.785909] [D] [thread 101850] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[09:37:37.785934] [D] [thread 101850] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[09:37:37.785951] [D] [thread 101850] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[09:37:37.786100] [D] [thread 101850] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[09:37:37.786152] [D] [thread 101850] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[09:37:37.788075] [D] [thread 101850] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:7)
|  SINK(4: {FileSinkDescriptor()})
|    SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::26::0::0})
|    SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::32::0::0})
|    SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::38::0::0})
|    SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::44::0::0})
|    SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::50::0::0})
|    SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::56::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.33:35535 1::23::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.32:43317 1::29::0::0})
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.12:44539)})
|  |  |    CENTRALWINDOW(17)
|  |  |      WATERMARKASSIGNER(8)
|  |  |        SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:44539)})
|  |  |    CENTRALWINDOW(18)
|  |  |      WATERMARKASSIGNER(6)
|  |  |        SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:10)
|  |  SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.35:33527 1::35::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:11)
|  |  SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.34:39243 1::41::0::0})
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  |  SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.30:34059)})
|  |  |    CENTRALWINDOW(19)
|  |  |      WATERMARKASSIGNER(12)
|  |  |        SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:34059)})
|  |  |    CENTRALWINDOW(20)
|  |  |      WATERMARKASSIGNER(10)
|  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:12)
|  |  SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.38:38899 1::47::0::0})
|  | QuerySubPlan(queryId:1, querySubPlanId:13)
|  |  SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.11:41971)})
|  |    SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.37:44595 1::53::0::0})
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.31:37899)})
|  |  |    CENTRALWINDOW(21)
|  |  |      WATERMARKASSIGNER(16)
|  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  |  SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.31:37899)})
|  |  |    CENTRALWINDOW(22)
|  |  |      WATERMARKASSIGNER(14)
|  |  |        SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:37:37.788204] [D] [thread 101850] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[09:37:37.788235] [D] [thread 101850] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:37:37.788538] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.788582] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.788810] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.788828] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.788892] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.788905] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.788942] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.788954] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.788989] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789000] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789056] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789071] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789107] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789119] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789154] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789166] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789220] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789232] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789284] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789297] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789472] [D] [thread 101850] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[09:37:37.789504] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[09:37:37.789526] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.789539] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.789757] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:34901[m
[36m[09:37:37.789800] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:34901 queryId=1 querySubPlanId = 1[m
[36m[09:37:37.790079] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(25: {NetworkSinkDescriptor(partition=1::23::0::0;nodeLocation=tcp://192.168.2.12:44539)})
  CENTRALWINDOW(17)
    WATERMARKASSIGNER(8)
      SOURCE(7,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[09:37:37.790117] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.790394] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.794314] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.795173] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.795500] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.795645] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.796276] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.797404] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.797704] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.797811] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.797854] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.797918] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.798498] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.798853] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.799037] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.799157] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.799638] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.799726] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.800007] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.800380] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.800639] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.800957] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.801401] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[09:37:37.801650] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.802004] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.802477] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.802808] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.803047] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.803366] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.816793] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[09:37:37.816829] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.816848] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.816985] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:39417[m
[36m[09:37:37.817017] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:39417 queryId=1 querySubPlanId = 2[m
[36m[09:37:37.817276] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(31: {NetworkSinkDescriptor(partition=1::29::0::0;nodeLocation=tcp://192.168.2.12:44539)})
  CENTRALWINDOW(18)
    WATERMARKASSIGNER(6)
      SOURCE(5,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[09:37:37.817312] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.817462] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.817705] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.817865] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.818008] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.818131] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.818488] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.818603] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.818747] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.818827] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.818898] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:37.818866] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.819000] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.819327] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.819668] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.819846] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.819962] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.820383] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.820469] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.820716] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.821055] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.821306] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.821618] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.822024] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[09:37:37.822222] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.822567] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.822939] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.823260] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.823491] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.823806] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.859410] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[09:37:37.859469] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.859488] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.859616] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:46675[m
[36m[09:37:37.859648] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:46675 queryId=1 querySubPlanId = 3[m
[36m[09:37:37.859897] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(37: {NetworkSinkDescriptor(partition=1::35::0::0;nodeLocation=tcp://192.168.2.30:34059)})
  CENTRALWINDOW(19)
    WATERMARKASSIGNER(12)
      SOURCE(11,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[09:37:37.859932] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.860092] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.860407] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.860606] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.860772] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.860905] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.861325] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.861465] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.861613] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.861712] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.861747] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.861809] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.862119] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.862479] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.862676] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.862825] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.863227] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.863326] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.863562] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.863914] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.864183] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.864566] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.865004] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[09:37:37.865223] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.865580] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.865978] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.866322] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.866574] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.866908] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.875529] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[09:37:37.875615] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.875635] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.875753] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:38365[m
[36m[09:37:37.875783] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:38365 queryId=1 querySubPlanId = 4[m
[36m[09:37:37.875989] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(43: {NetworkSinkDescriptor(partition=1::41::0::0;nodeLocation=tcp://192.168.2.30:34059)})
  CENTRALWINDOW(20)
    WATERMARKASSIGNER(10)
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[09:37:37.876022] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.876171] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.876460] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.876628] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.876800] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.876958] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.877367] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.877508] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.877656] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.877758] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.877793] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.877855] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.878168] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.878523] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.878718] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.878862] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.879257] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.879358] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.879593] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.879953] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.880224] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.880593] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.881041] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[09:37:37.881283] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.881702] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.882135] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.882484] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.882732] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.883066] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.891499] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[09:37:37.891625] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.891646] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.891769] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:33517[m
[36m[09:37:37.891798] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:33517 queryId=1 querySubPlanId = 5[m
[36m[09:37:37.892007] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(49: {NetworkSinkDescriptor(partition=1::47::0::0;nodeLocation=tcp://192.168.2.31:37899)})
  CENTRALWINDOW(21)
    WATERMARKASSIGNER(16)
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[09:37:37.892067] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.892236] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.892541] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.892726] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.892880] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.893022] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.893412] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.893549] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.893692] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.893787] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.893822] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.893881] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.894189] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.894543] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.894738] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.894880] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.895256] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.895354] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.895589] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.895940] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.896203] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.896579] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.896999] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[09:37:37.897211] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.897566] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.897960] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.898300] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.898548] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.898880] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.907369] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[09:37:37.907450] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.907492] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.907610] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:46753[m
[36m[09:37:37.907639] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:46753 queryId=1 querySubPlanId = 6[m
[36m[09:37:37.907843] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(55: {NetworkSinkDescriptor(partition=1::53::0::0;nodeLocation=tcp://192.168.2.31:37899)})
  CENTRALWINDOW(22)
    WATERMARKASSIGNER(14)
      SOURCE(13,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[09:37:37.907935] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.908106] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.908402] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.908583] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.908739] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.908881] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.909271] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[09:37:37.909409] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.909553] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.909653] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.909689] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[09:37:37.909753] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.910064] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.910419] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.910609] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.910754] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.911144] [D] [thread 101850] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[09:37:37.911239] [D] [thread 101850] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[09:37:37.911470] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.911828] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.912090] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.912464] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.912888] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[09:37:37.913101] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.913452] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.913837] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.914175] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.914423] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[09:37:37.914759] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.923258] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[09:37:37.923343] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.923375] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.923495] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:38261[m
[36m[09:37:37.923525] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:38261 queryId=1 querySubPlanId = 7[m
[36m[09:37:37.923830] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(4: {FileSinkDescriptor()})
  SOURCE(26,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::26::0::0})
  SOURCE(32,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::32::0::0})
  SOURCE(38,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::38::0::0})
  SOURCE(44,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::44::0::0})
  SOURCE(50,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::50::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::56::0::0})
[m
[36m[09:37:37.923881] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.924028] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.924309] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.924547] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.924714] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.924856] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.925229] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::26::0::0}[m
[36m[09:37:37.925386] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.925542] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.925861] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.926014] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.926143] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.926278] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.926599] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::32::0::0}[m
[36m[09:37:37.926710] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.926850] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.927090] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.927235] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.927359] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.927493] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.927821] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::38::0::0}[m
[36m[09:37:37.927938] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.928077] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.928349] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.928504] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.928640] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.928777] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.929105] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::44::0::0}[m
[36m[09:37:37.929220] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.929362] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.929605] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.929748] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.929874] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.930014] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.930327] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::50::0::0}[m
[36m[09:37:37.930437] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.930574] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.930818] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.930963] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.931091] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.931229] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.931585] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::56::0::0}[m
[36m[09:37:37.931699] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.931838] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.932084] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.932232] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.932387] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.932539] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.940947] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[09:37:37.941034] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.941067] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.941196] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:44357[m
[36m[09:37:37.941232] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:44357 queryId=1 querySubPlanId = 8[m
[36m[09:37:37.941444] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(28: {NetworkSinkDescriptor(partition=1::26::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(23,,NetworkSourceDescriptor{tcp://192.168.2.33:35535 1::23::0::0})
[m
[36m[09:37:37.941481] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.941636] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.941908] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.942091] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.942256] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.942400] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.942764] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:35535 1::23::0::0}[m
[36m[09:37:37.942888] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.943042] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.943311] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.943463] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.943598] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.943742] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.949616] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:44357 queryId=1 querySubPlanId = 9[m
[36m[09:37:37.949890] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(34: {NetworkSinkDescriptor(partition=1::32::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(29,,NetworkSourceDescriptor{tcp://192.168.2.32:43317 1::29::0::0})
[m
[36m[09:37:37.949940] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.950103] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.950357] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.950538] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.950695] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.950839] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.951201] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:43317 1::29::0::0}[m
[36m[09:37:37.951324] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.951476] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.951742] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.951890] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.952022] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.952162] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.957877] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[09:37:37.957961] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.957993] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.958136] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:45253[m
[36m[09:37:37.958178] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:45253 queryId=1 querySubPlanId = 10[m
[36m[09:37:37.958401] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(40: {NetworkSinkDescriptor(partition=1::38::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(35,,NetworkSourceDescriptor{tcp://192.168.2.35:33527 1::35::0::0})
[m
[36m[09:37:37.958470] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.958684] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.959021] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.959251] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.959466] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.959656] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.960175] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:33527 1::35::0::0}[m
[36m[09:37:37.960376] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.960616] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.961106] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.961393] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.961662] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.961902] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.969649] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:45253 queryId=1 querySubPlanId = 11[m
[36m[09:37:37.970017] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(46: {NetworkSinkDescriptor(partition=1::44::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(41,,NetworkSourceDescriptor{tcp://192.168.2.34:39243 1::41::0::0})
[m
[36m[09:37:37.970084] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.970267] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.970539] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.970766] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.970966] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.971162] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.971634] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:39243 1::41::0::0}[m
[36m[09:37:37.971783] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.971976] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.972305] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.972539] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.972731] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.972910] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.978982] [D] [thread 101850] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[09:37:37.979063] [D] [thread 101850] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[09:37:37.979104] [D] [thread 101850] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[09:37:37.979219] [D] [thread 101850] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:36941[m
[36m[09:37:37.979252] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36941 queryId=1 querySubPlanId = 12[m
[36m[09:37:37.979444] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(52: {NetworkSinkDescriptor(partition=1::50::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(47,,NetworkSourceDescriptor{tcp://192.168.2.38:38899 1::47::0::0})
[m
[36m[09:37:37.979476] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.979626] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.979898] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.980108] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.980294] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.980504] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.980948] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:38899 1::47::0::0}[m
[36m[09:37:37.981101] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.981282] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.981618] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.981829] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.982015] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.982208] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.987966] [D] [thread 101850] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:36941 queryId=1 querySubPlanId = 13[m
[36m[09:37:37.988255] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(58: {NetworkSinkDescriptor(partition=1::56::0::0;nodeLocation=tcp://192.168.2.11:41971)})
  SOURCE(53,,NetworkSourceDescriptor{tcp://192.168.2.37:44595 1::53::0::0})
[m
[36m[09:37:37.988304] [D] [thread 101850] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[09:37:37.988522] [D] [thread 101850] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[09:37:37.988828] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.989046] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.989243] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.989436] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.989893] [D] [thread 101850] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:44595 1::53::0::0}[m
[36m[09:37:37.990069] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.990268] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.990546] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.990697] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.990824] [D] [thread 101850] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:37.990958] [D] [thread 101850] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[09:37:37.997039] [D] [thread 101850] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[09:37:38.078352] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:38.078958] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:37:39.001396] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[09:37:39.001631] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.002464] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.003185] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.004240] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.006030] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.006249] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.006829] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.007120] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[09:37:39.007227] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.007747] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.007846] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.008292] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.009902] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.010070] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.010606] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.010822] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[09:37:39.010944] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.011455] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.011550] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.011975] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.012950] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:39.013466] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:39.013727] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.013828] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.014337] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.014541] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[09:37:39.014604] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.015001] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.015058] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.015496] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.016983] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.017133] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.017579] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.017755] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 63[m
[36m[09:37:39.017828] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.018338] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.018516] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.019040] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.020744] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.020881] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.021304] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.021470] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 64[m
[36m[09:37:39.021539] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.021908] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.021971] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.022280] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.023595] [D] [thread 101862] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[09:37:39.023707] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.024115] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[09:37:39.024279] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 65[m
[36m[09:37:39.024364] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.024763] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.024825] [D] [thread 101862] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[09:37:39.025140] [D] [thread 101862] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[09:37:39.026900] [D] [thread 101862] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(59: {FileSinkDescriptor()})
  SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::26::0::0})
  SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::32::0::0})
  SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::38::0::0})
  SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::44::0::0})
  SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::50::0::0})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::56::0::0})
[m
[32m[09:37:39.026985] [I] [thread 101862] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 7 [m
[32m[09:37:39.027112] [I] [thread 101862] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
[36m[09:37:39.027412] [D] [thread 101862] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 7[m
Dumping queryPlan: [36m[09:37:39.027474] [D] [thread 101862] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-10 09:37:39 - 1. LogicalQueryPlan[m
SINK(59: {FileSinkDescriptor()})
  SOURCE(65,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::26::0::0})
  SOURCE(62,,NetworkSourceDescriptor{tcp://192.168.2.12:44539 1::32::0::0})
  SOURCE(64,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::38::0::0})
  SOURCE(61,,NetworkSourceDescriptor{tcp://192.168.2.30:34059 1::44::0::0})
  SOURCE(63,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::50::0::0})
  SOURCE(60,,NetworkSourceDescriptor{tcp://192.168.2.31:37899 1::56::0::0})

[32m[09:37:39.028126] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 66[m
[32m[09:37:39.028262] [I] [thread 101862] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:37:39.028281] [I] [thread 101862] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[09:37:39.028288] [I] [thread 101862] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:37:39.028309] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028351] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028369] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028380] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028390] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028399] [I] [thread 101862] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:37:39.028495] [I] [thread 101862] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.028990] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[09:37:39.029146] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[09:37:39.029164] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.029172] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[09:37:39.029249] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.029265] [D] [thread 101862] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[09:37:39.029313] [D] [thread 101862] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[09:37:39.029334] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:37:39.029471] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[09:37:39.029582] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:37:39.029608] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.029651] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.029660] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.029674] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.029768] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.029785] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:37:39.029857] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
Dumping queryPlan: [36m[09:37:39.029931] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[36m[09:37:39.029951] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.029992] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.030001] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.030013] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.030089] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.030158] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:37:39.030212] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[09:37:39.030287] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:37:39.030309] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.030352] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.030361] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.030372] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.030456] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.030472] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:37:39.030515] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[09:37:39.030576] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:37:39.030594] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.030636] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
Dumping pipelineQueryPlan: [32m[09:37:39.030645] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.030655] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.030730] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.030746] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[32m[09:37:39.030787] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
Dumping pipelineQueryPlan: PipelineQueryPlan: 
- queryId: 1, subPlanId: 7, no. pipelines: 7
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5, 6, 7, 8
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 6, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 7, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 8, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[09:37:39.030845] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:37:39.030863] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.030908] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.030917] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.030928] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.031019] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.031037] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[09:37:39.031094] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[09:37:39.031163] [D] [thread 101862] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[09:37:39.031189] [D] [thread 101862] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[09:37:39.031239] [I] [thread 101862] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[09:37:39.031248] [I] [thread 101862] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:37:39.031260] [I] [thread 101862] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[09:37:39.031338] [D] [thread 101862] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[09:37:39.031355] [D] [thread 101862] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[09:37:39.031491] [D] [thread 101862] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-7-2023-11-10 09:37:39 - 2. PhysicalQueryPlan[m
[36m[09:37:39.031734] [D] [thread 101862] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 7[m
[32m[09:37:39.032110] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 67[m
[36m[09:37:39.032352] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[09:37:39.032378] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.032387] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.032921] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 68[m
[36m[09:37:39.033117] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.033141] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.033150] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.033332] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 69[m
[36m[09:37:39.033492] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.033515] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.033524] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.033657] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 70[m
[36m[09:37:39.033776] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.033795] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.033803] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.033931] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 71[m
[36m[09:37:39.034036] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.034052] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.034059] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.034163] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 72[m
[36m[09:37:39.034246] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.034258] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.034265] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[09:37:39.034337] [I] [thread 101862] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 73[m
[36m[09:37:39.034408] [D] [thread 101862] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[09:37:39.034420] [D] [thread 101862] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[09:37:39.034427] [D] [thread 101862] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[09:37:39.034508] [D] [thread 101862] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-10 09:37:39 - 3. AfterPipelinedQueryPlan[m
[36m[09:37:39.035480] [D] [thread 101862] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-7-2023-11-10 09:37:39 - 4. AfterAddScanAndEmitPhase[m
[36m[09:37:39.035844] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::50::0::0[m
[32m[09:37:39.035947] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::50::0::0(threadId=0) Data[m
[36m[09:37:39.035958] [D] [thread 101862] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 7[m
[33m[1m[09:37:39.036091] [W] [thread 101859] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::50::0::0(threadId=0) NOT REGISTERED[m
[36m[09:37:39.036285] [D] [thread 101862] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  67[m
[32m[09:37:39.036383] [I] [thread 101862] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[33m[1m[09:37:39.036408] [W] [thread 101859] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::50::0::0[m
[36m[09:37:39.036727] [D] [thread 101862] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out[m
[33m[1m[09:37:39.036745] [W] [thread 101859] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::50::0::0[m
[32m[09:37:39.037455] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.038056] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::32::0::0[m
[36m[09:37:39.038123] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  26 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:37:39.038119] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::32::0::0(threadId=0) Data[m
2023-11-10 09:37:39.43 setup: queryId=1, querySubPlanId=7; 
[33m[1m[09:37:39.038182] [W] [thread 101859] [ExchangeProtocol.cpp:78] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::32::0::0(threadId=0) NOT REGISTERED[m
[33m[1m[09:37:39.038218] [W] [thread 101859] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::32::0::0[m
2023-11-10 09:37:39.44 start: queryId=1, querySubPlanId=7; 
[33m[1m[09:37:39.038329] [W] [thread 101859] [NodeEngine.cpp:439] [onServerError] Runtime: Unable to find the NES Partition 0:1::32::0::0[m
[32m[09:37:39.039107] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.039429] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  32 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:37:39.039819] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.040065] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  38 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:37:39.040458] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.040705] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  44 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:37:39.041025] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.041250] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  50 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[09:37:39.041535] [I] [thread 101862] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[09:37:39.041743] [D] [thread 101862] [DataSource.cpp:75] [DataSource] DataSource  56 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[09:37:39.042751] [D] [thread 101862] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 7[m
[36m[09:37:39.042987] [D] [thread 101862] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  7  as a singleton[m
[36m[09:37:39.043011] [D] [thread 101862] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=7[m
[36m[09:37:39.043094] [D] [thread 101862] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 6[m
[36m[09:37:39.043128] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  26  not found. Creating new element with with qep [m
[36m[09:37:39.043382] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  32  not found. Creating new element with with qep [m
[36m[09:37:39.043436] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  38  not found. Creating new element with with qep [m
[36m[09:37:39.043456] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  44  not found. Creating new element with with qep [m
[36m[09:37:39.043476] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  50  not found. Creating new element with with qep [m
[36m[09:37:39.043495] [D] [thread 101862] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  56  not found. Creating new element with with qep [m
[36m[09:37:39.043530] [D] [thread 101862] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 7  pair queryId= 1  subplanId= 7[m
[36m[09:37:39.043980] [D] [thread 101862] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=7[m
[36m[09:37:39.044129] [D] [thread 101862] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=7[m
[36m[09:37:39.044493] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::26::0::0 from 192.168.2.12[m
[36m[09:37:39.044776] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::26::0::0=1[m
[36m[09:37:39.044808] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54013710  started successfully[m
[36m[09:37:39.044856] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::32::0::0 from 192.168.2.12[m
[36m[09:37:39.044912] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::32::0::0=1[m
[36m[09:37:39.044930] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54018370  started successfully[m
[36m[09:37:39.044962] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::38::0::0 from 192.168.2.30[m
[36m[09:37:39.045000] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::38::0::0=1[m
[36m[09:37:39.045015] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54018730  started successfully[m
[36m[09:37:39.045043] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::44::0::0 from 192.168.2.30[m
[36m[09:37:39.045079] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::44::0::0=1[m
[36m[09:37:39.045092] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54018af0  started successfully[m
[36m[09:37:39.045135] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::50::0::0 from 192.168.2.31[m
[36m[09:37:39.045173] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::50::0::0=1[m
[36m[09:37:39.045189] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54019260  started successfully[m
[36m[09:37:39.045218] [D] [thread 101862] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::56::0::0 from 192.168.2.31[m
[36m[09:37:39.045253] [D] [thread 101862] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::56::0::0=1[m
[36m[09:37:39.045276] [D] [thread 101862] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff54019b90  started successfully[m
[36m[09:37:39.045329] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.045465] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.045828] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.046691] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::26::0::0[m
[36m[09:37:39.046845] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::26::0::0[m
[36m[09:37:39.047015] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.047103] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54013710  started successfully[m
[36m[09:37:39.047154] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.047228] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.047381] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.047688] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[09:37:39.047789] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[09:37:39.047925] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.047954] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54018370  started successfully[m
[36m[09:37:39.048044] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.048119] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.048244] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.048622] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::38::0::0[m
[36m[09:37:39.048936] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::38::0::0[m
[36m[09:37:39.049031] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::44::0::0[m
[32m[09:37:39.049085] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::44::0::0(threadId=0) Data[m
[36m[09:37:39.049097] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.049119] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54018730  started successfully[m
[36m[09:37:39.049155] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::44::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.049159] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.049233] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.049326] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::50::0::0[m
[36m[09:37:39.049352] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[32m[09:37:39.049366] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::50::0::0(threadId=0) Data[m
[36m[09:37:39.049412] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::50::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.049675] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::44::0::0[m
[36m[09:37:39.049993] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::44::0::0[m
[36m[09:37:39.050145] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.050168] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54018af0  started successfully[m
[36m[09:37:39.050179] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::32::0::0[m
[36m[09:37:39.050218] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[32m[09:37:39.050223] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::32::0::0(threadId=0) Data[m
[36m[09:37:39.050274] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::32::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.050284] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.050460] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.050830] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::50::0::0[m
[36m[09:37:39.050948] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::50::0::0[m
[36m[09:37:39.050999] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.051017] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54019260  started successfully[m
[36m[09:37:39.051047] [D] [thread 101862] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.051112] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.051211] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Initialize[m
[36m[09:37:39.051479] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::56::0::0[m
[36m[09:37:39.051569] [D] [thread 101862] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::56::0::0[m
[36m[09:37:39.051676] [D] [thread 101862] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0[m
[36m[09:37:39.051725] [D] [thread 101862] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff54019b90  started successfully[m
[36m[09:37:39.051779] [D] [thread 101862] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[09:37:39.052062] [D] [thread 101862] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  7  succeeded[m
[36m[09:37:39.052160] [D] [thread 101862] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[09:37:39.058961] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::38::0::0[m
[32m[09:37:39.059072] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::38::0::0(threadId=0) Data[m
[36m[09:37:39.059142] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::38::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.059960] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::56::0::0[m
[32m[09:37:39.060042] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::56::0::0(threadId=0) Data[m
[36m[09:37:39.060101] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::56::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.062442] [D] [thread 101859] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): ClientAnnouncement received for channel 0:1::26::0::0[m
[32m[09:37:39.062531] [I] [thread 101859] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::26::0::0(threadId=0) Data[m
[36m[09:37:39.062646] [D] [thread 101859] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::26::0::0(threadId=0) REGISTERED[m
[36m[09:37:39.505224] [D] [thread 101850] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[09:37:39.505343] [D] [thread 101850] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[09:37:39.505956] [D] [thread 101850] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[09:37:39.506183] [D] [thread 101850] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[09:37:39.506220] [D] [thread 101850] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[09:37:39.506401] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[09:37:39.506439] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:34901 queryId=1[m
[36m[09:37:39.511165] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[09:37:39.511252] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:39417 queryId=1[m
[36m[09:37:39.515585] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[09:37:39.515712] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:46675 queryId=1[m
[36m[09:37:39.519977] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[09:37:39.520064] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:38365 queryId=1[m
[36m[09:37:39.524402] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[09:37:39.524483] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:33517 queryId=1[m
[36m[09:37:39.528797] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[09:37:39.528878] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:46753 queryId=1[m
[36m[09:37:39.533222] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[09:37:39.533308] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:38261 queryId=1[m
[36m[09:37:39.537738] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[09:37:39.537833] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:44357 queryId=1[m
[36m[09:37:39.542235] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[09:37:39.542319] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:45253 queryId=1[m
[36m[09:37:39.546527] [D] [thread 101850] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[09:37:39.546612] [D] [thread 101850] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:36941 queryId=1[m
[36m[09:37:39.550775] [D] [thread 101850] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[09:37:39.609256] [D] [thread 101922] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[09:37:39.609362] [D] [thread 101922] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[09:37:39.609498] [D] [thread 101922] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  7   1[m
[36m[09:37:39.609646] [D] [thread 101922] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699609059609[m
[36m[09:37:39.609671] [D] [thread 101922] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  7  succeeded[m
[36m[09:37:39.609699] [D] [thread 101922] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[09:37:39.642159] [D] [thread 101850] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[09:37:39.642269] [D] [thread 101850] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[09:37:39.642977] [I] [thread 101850] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[09:37:39.643162] [D] [thread 101850] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[09:37:39.686825] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:39.687554] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:40.688543] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:41.367612] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:41.368274] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:41.369234] [D] [thread 101928] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:41.369358] [I] [thread 101928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:41.369380] [I] [thread 101928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:41.369562] [I] [thread 101928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:41.369577] [I] [thread 101928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:41.529875] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:41.530527] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:42.531846] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:43.214223] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:43.214948] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:43.215625] [D] [thread 101933] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:43.215715] [I] [thread 101933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:43.215732] [I] [thread 101933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:43.215849] [I] [thread 101933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:43.215863] [I] [thread 101933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:43.375818] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:43.376423] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:44.377713] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:45.091482] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:45.092006] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:45.092887] [D] [thread 101938] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:45.092985] [I] [thread 101938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:45.093003] [I] [thread 101938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:45.093119] [I] [thread 101938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:45.093133] [I] [thread 101938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:45.261334] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:45.261668] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:46.262886] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:46.995322] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:46.995646] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:46.996694] [D] [thread 101944] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:46.996797] [I] [thread 101944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:46.996815] [I] [thread 101944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:46.996933] [I] [thread 101944] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:46.996954] [I] [thread 101944] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:47.174086] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:47.174439] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:48.175798] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:48.934848] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:48.935176] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:48.936227] [D] [thread 101952] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:48.936363] [I] [thread 101952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:48.936384] [I] [thread 101952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:48.936502] [I] [thread 101952] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:48.936516] [I] [thread 101952] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:49.101626] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:49.101970] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:50.103217] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:50.758971] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:50.759298] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:50.760608] [D] [thread 101957] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:50.760736] [I] [thread 101957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:50.760758] [I] [thread 101957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:50.760897] [I] [thread 101957] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:50.760913] [I] [thread 101957] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:50.924961] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:50.925343] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:51.926529] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:52.927882] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:53.929242] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:54.058042] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:54.058643] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:54.059406] [D] [thread 101964] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:54.059500] [I] [thread 101964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:54.059518] [I] [thread 101964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:54.059634] [I] [thread 101964] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:54.059648] [I] [thread 101964] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:54.831379] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:54.831999] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:55.833317] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:56.834576] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:57.006720] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:57.007048] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:57.008119] [D] [thread 101970] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:57.008219] [I] [thread 101970] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:57.008237] [I] [thread 101970] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:57.008392] [I] [thread 101970] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:57.008421] [I] [thread 101970] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:57.210392] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:57.210765] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:58.211996] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:58.883676] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:58.884036] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:58.885010] [D] [thread 101976] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:37:58.885107] [I] [thread 101976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:58.885125] [I] [thread 101976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:37:58.885239] [I] [thread 101976] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:37:58.885252] [I] [thread 101976] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:37:59.050550] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:37:59.050909] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:00.052137] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:00.707247] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:00.707582] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:00.708590] [D] [thread 101982] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:00.708685] [I] [thread 101982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:00.708704] [I] [thread 101982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:00.708822] [I] [thread 101982] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:00.708837] [I] [thread 101982] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:00.873063] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:00.873403] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:01.874646] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:02.533182] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:02.533849] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:02.534582] [D] [thread 101988] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:02.534675] [I] [thread 101988] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:02.534693] [I] [thread 101988] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:02.534811] [I] [thread 101988] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:02.534825] [I] [thread 101988] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:02.690215] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:02.690666] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:03.692002] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:04.330263] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:04.330632] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:04.332296] [D] [thread 101993] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:04.332421] [I] [thread 101993] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:04.332440] [I] [thread 101993] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:04.332559] [I] [thread 101993] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:04.332574] [I] [thread 101993] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:04.493671] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:04.493992] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:05.495235] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:06.169396] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:06.169788] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:06.170923] [D] [thread 101998] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:06.171020] [I] [thread 101998] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:06.171038] [I] [thread 101998] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:06.171154] [I] [thread 101998] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:06.171167] [I] [thread 101998] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:06.339344] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:06.339732] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:07.341091] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:08.342537] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:09.282290] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:09.282662] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:09.283624] [D] [thread 102004] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:09.283722] [I] [thread 102004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:09.283740] [I] [thread 102004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:09.283855] [I] [thread 102004] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:09.283870] [I] [thread 102004] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:09.501878] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:09.502205] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:10.503466] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:11.162413] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:11.162771] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:11.163722] [D] [thread 102009] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:11.163816] [I] [thread 102009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:11.163835] [I] [thread 102009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:11.163951] [I] [thread 102009] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:11.163965] [I] [thread 102009] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:11.649582] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:11.649918] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:12.651112] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:13.652437] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:14.653789] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:14.813241] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:14.813585] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:14.814655] [D] [thread 102014] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:14.814757] [I] [thread 102014] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:14.814774] [I] [thread 102014] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:14.814892] [I] [thread 102014] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:14.814905] [I] [thread 102014] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:15.043269] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:15.043742] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:16.045011] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:16.757671] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:16.758342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:16.759025] [D] [thread 102019] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:16.759118] [I] [thread 102019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:16.759135] [I] [thread 102019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:16.759251] [I] [thread 102019] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:16.759264] [I] [thread 102019] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:16.927648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:16.927987] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:17.929239] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:18.606565] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:18.606886] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:18.607971] [D] [thread 102024] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:18.608073] [I] [thread 102024] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:18.608090] [I] [thread 102024] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:18.608208] [I] [thread 102024] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:18.608222] [I] [thread 102024] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:18.774966] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:18.775297] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:19.776522] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:20.430442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:20.430793] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:20.431895] [D] [thread 102029] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:20.431992] [I] [thread 102029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:20.432010] [I] [thread 102029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:20.432127] [I] [thread 102029] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:20.432141] [I] [thread 102029] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:20.600452] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:20.600792] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:21.602034] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:22.234069] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:22.234464] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:22.235476] [D] [thread 102034] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:22.235576] [I] [thread 102034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:22.235593] [I] [thread 102034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:22.235709] [I] [thread 102034] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:22.235762] [I] [thread 102034] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:22.394919] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:22.395352] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:23.396658] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:24.061729] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:24.062494] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:24.063331] [D] [thread 102039] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:24.063437] [I] [thread 102039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:24.063456] [I] [thread 102039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:24.063582] [I] [thread 102039] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:24.063599] [I] [thread 102039] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:24.211427] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:24.211763] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:25.212472] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:25.897056] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:25.897481] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:25.899127] [D] [thread 102044] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:25.899225] [I] [thread 102044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:25.899242] [I] [thread 102044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:25.899360] [I] [thread 102044] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:25.899373] [I] [thread 102044] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:26.069596] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:26.069953] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:27.071187] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:27.740929] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:27.741263] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:27.742901] [D] [thread 102049] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:27.742997] [I] [thread 102049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:27.743015] [I] [thread 102049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:27.743133] [I] [thread 102049] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:27.743147] [I] [thread 102049] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:27.900783] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:27.901135] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:28.902337] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:29.537489] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:29.537822] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:29.538897] [D] [thread 102054] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:29.538996] [I] [thread 102054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:29.539014] [I] [thread 102054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:29.539129] [I] [thread 102054] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:29.539143] [I] [thread 102054] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:29.705416] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:29.705743] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:30.706984] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:31.354665] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:31.355018] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:31.356193] [D] [thread 102059] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:31.356269] [I] [thread 102059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:31.356286] [I] [thread 102059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:31.356433] [I] [thread 102059] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:31.356449] [I] [thread 102059] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:31.502835] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:31.503188] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:32.504475] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:33.171690] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:33.173904] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,100,1699609059638,1699609113171
[m
[36m[09:38:33.174341] [D] [thread 101860] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699609113174[m
[36m[09:38:33.505769] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:33.743544] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:33.743647] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:38:33.744972] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,54,1699609059602,1699609113743
[m
[36m[09:38:34.507010] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:34.976771] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:34.976878] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:38:34.978069] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,63,1699609059583,1699609114976
[m
[36m[09:38:35.508239] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:35.510672] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:35.510976] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:35.512063] [D] [thread 102065] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:35.512163] [I] [thread 102065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:35.512181] [I] [thread 102065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:35.512297] [I] [thread 102065] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:35.512389] [I] [thread 102065] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:35.740539] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:35.741098] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:36.264588] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:36.264695] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:38:36.265875] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,24,1699609059592,1699609116264
[m
[36m[09:38:36.553197] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:36.553304] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:38:36.554516] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,47,1699609059564,1699609116553
[m
[36m[09:38:36.742339] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:37.401009] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:37.401644] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:37.402335] [D] [thread 102070] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:37.402463] [I] [thread 102070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:37.402482] [I] [thread 102070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:37.402601] [I] [thread 102070] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:37.402620] [I] [thread 102070] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:37.573507] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:37.574042] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:38.575330] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:39.146202] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:38:39.146284] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:38:39.147061] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10620000,10680000,13,1699609059620,1699609119146
[m
[36m[09:38:39.305346] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:39.305839] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:39.306668] [D] [thread 102075] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:39.306758] [I] [thread 102075] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:39.306776] [I] [thread 102075] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:39.306893] [I] [thread 102075] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:39.306907] [I] [thread 102075] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:39.469980] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:39.470453] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:40.471766] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:41.138175] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:41.138794] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:41.139591] [D] [thread 102080] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:41.139692] [I] [thread 102080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:41.139709] [I] [thread 102080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:41.139828] [I] [thread 102080] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:41.139843] [I] [thread 102080] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:41.299132] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:41.299590] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:42.300889] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:42.937589] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:42.938272] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:42.938961] [D] [thread 102085] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:42.939052] [I] [thread 102085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:42.939071] [I] [thread 102085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:42.939186] [I] [thread 102085] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:42.939200] [I] [thread 102085] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:43.101509] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:43.102047] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:44.103309] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:44.826007] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:44.826622] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:44.827651] [D] [thread 102090] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:44.827758] [I] [thread 102090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:44.827777] [I] [thread 102090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:44.827899] [I] [thread 102090] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:44.827916] [I] [thread 102090] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:45.010105] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:45.010711] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:46.011936] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:46.670306] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:46.670882] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:46.671692] [D] [thread 102096] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:46.671789] [I] [thread 102096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:46.671807] [I] [thread 102096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:46.671923] [I] [thread 102096] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:46.671937] [I] [thread 102096] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:46.836769] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:46.837388] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:47.838679] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:48.481103] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:48.481741] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:48.482511] [D] [thread 102101] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:48.482585] [I] [thread 102101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:48.482601] [I] [thread 102101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:48.482710] [I] [thread 102101] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:48.482722] [I] [thread 102101] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:48.630759] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:48.631276] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:49.632128] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:50.278597] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:50.279140] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:50.279976] [D] [thread 102106] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:50.280077] [I] [thread 102106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:50.280095] [I] [thread 102106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:50.280211] [I] [thread 102106] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:50.280225] [I] [thread 102106] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:50.446629] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:50.447141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:51.448477] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:52.121232] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:52.121695] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:52.122560] [D] [thread 102111] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:52.122653] [I] [thread 102111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:52.122671] [I] [thread 102111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:52.122786] [I] [thread 102111] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:52.122800] [I] [thread 102111] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:52.285242] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:52.285721] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:53.287008] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:54.004127] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:54.005350] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:54.005914] [D] [thread 102116] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:54.006021] [I] [thread 102116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:54.006040] [I] [thread 102116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:54.006166] [I] [thread 102116] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:54.006183] [I] [thread 102116] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:54.160164] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:54.160804] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:55.162112] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:55.858311] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:55.858718] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:55.860503] [D] [thread 102121] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:55.860595] [I] [thread 102121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:55.860615] [I] [thread 102121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:55.860735] [I] [thread 102121] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:55.860750] [I] [thread 102121] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:56.021343] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:56.021700] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:57.022923] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:57.680923] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:57.681282] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:57.682201] [D] [thread 102126] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:57.682333] [I] [thread 102126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:57.682352] [I] [thread 102126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:57.682469] [I] [thread 102126] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:57.682489] [I] [thread 102126] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:57.846679] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:57.847077] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:58.848307] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:59.498432] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:59.498822] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:59.499955] [D] [thread 102131] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:38:59.500030] [I] [thread 102131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:59.500046] [I] [thread 102131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:38:59.500153] [I] [thread 102131] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:38:59.500165] [I] [thread 102131] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:38:59.659931] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:38:59.660442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:00.661709] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:01.318287] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:01.318963] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:01.319672] [D] [thread 102136] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:01.319764] [I] [thread 102136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:01.319782] [I] [thread 102136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:01.319897] [I] [thread 102136] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:01.319910] [I] [thread 102136] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:01.481250] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:01.481819] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:02.483085] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:03.138176] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:03.138806] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:03.139564] [D] [thread 102141] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:03.139657] [I] [thread 102141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:03.139675] [I] [thread 102141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:03.139791] [I] [thread 102141] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:03.139805] [I] [thread 102141] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:03.296144] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:03.296702] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:04.298059] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:04.990475] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:04.990798] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:04.992208] [D] [thread 102146] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:04.992285] [I] [thread 102146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:04.992301] [I] [thread 102146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:04.992448] [I] [thread 102146] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:04.992462] [I] [thread 102146] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:05.193381] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:05.193708] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:06.194947] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:06.838235] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:06.838570] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:06.839549] [D] [thread 102151] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:06.839646] [I] [thread 102151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:06.839664] [I] [thread 102151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:06.839781] [I] [thread 102151] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:06.839795] [I] [thread 102151] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:07.010313] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:07.010673] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:08.011876] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:08.669713] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:08.670048] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:08.671018] [D] [thread 102156] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:08.671116] [I] [thread 102156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:08.671134] [I] [thread 102156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:08.671251] [I] [thread 102156] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:08.671264] [I] [thread 102156] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:08.834229] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:08.834638] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:09.835885] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:10.481411] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:10.481774] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:10.482732] [D] [thread 102161] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:10.482811] [I] [thread 102161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:10.482828] [I] [thread 102161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:10.482937] [I] [thread 102161] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:10.482950] [I] [thread 102161] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:10.629813] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:10.630176] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:11.631404] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:12.294083] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:12.294429] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:12.295587] [D] [thread 102166] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:12.295681] [I] [thread 102166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:12.295699] [I] [thread 102166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:12.295818] [I] [thread 102166] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:12.295832] [I] [thread 102166] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:12.458392] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:12.458759] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:13.460002] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:14.118911] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:14.119265] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:14.120364] [D] [thread 102171] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:14.120458] [I] [thread 102171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:14.120476] [I] [thread 102171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:14.120594] [I] [thread 102171] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:14.120652] [I] [thread 102171] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:14.278775] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:14.279115] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:15.280433] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:15.936896] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:15.937259] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:15.938520] [D] [thread 102176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:15.938783] [I] [thread 102176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:15.938891] [I] [thread 102176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:15.939092] [I] [thread 102176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:15.939181] [I] [thread 102176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:16.092595] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:16.092942] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:17.094133] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:17.733549] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:17.734147] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:17.734859] [D] [thread 102181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:17.734953] [I] [thread 102181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:17.734971] [I] [thread 102181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:17.735089] [I] [thread 102181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:17.735103] [I] [thread 102181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:17.930219] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:17.930755] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:18.932178] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:19.564736] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:19.565315] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:19.566035] [D] [thread 102186] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:19.566130] [I] [thread 102186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:19.566148] [I] [thread 102186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:19.566264] [I] [thread 102186] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:19.566278] [I] [thread 102186] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:19.720795] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:19.721299] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:20.722717] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:21.359462] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:21.360084] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:21.360864] [D] [thread 102191] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:21.360936] [I] [thread 102191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:21.360952] [I] [thread 102191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:21.361061] [I] [thread 102191] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:21.361073] [I] [thread 102191] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:21.509336] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:21.509965] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:22.511234] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:23.225777] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:23.226410] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:23.227167] [D] [thread 102196] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:23.227262] [I] [thread 102196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:23.227279] [I] [thread 102196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:23.227395] [I] [thread 102196] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:23.227408] [I] [thread 102196] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:23.391609] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:23.392183] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:24.392483] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:25.054330] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:25.054663] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:25.056281] [D] [thread 102201] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:25.056406] [I] [thread 102201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:25.056426] [I] [thread 102201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:25.056544] [I] [thread 102201] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:25.056557] [I] [thread 102201] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:25.211272] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:25.211657] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:26.212908] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:26.874041] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:26.874606] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:26.875408] [D] [thread 102206] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:26.875508] [I] [thread 102206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:26.875525] [I] [thread 102206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:26.875642] [I] [thread 102206] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:26.875655] [I] [thread 102206] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:27.037534] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:27.038000] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:28.039331] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:28.718778] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:28.719120] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:28.720925] [D] [thread 102211] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:28.721025] [I] [thread 102211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:28.721043] [I] [thread 102211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:28.721162] [I] [thread 102211] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:28.721176] [I] [thread 102211] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:28.882971] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:28.883294] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:29.884526] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:30.527033] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:30.527379] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:30.529028] [D] [thread 102216] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:30.529128] [I] [thread 102216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:30.529145] [I] [thread 102216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:30.529264] [I] [thread 102216] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:30.529278] [I] [thread 102216] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:30.692668] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:30.693050] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:31.694256] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:32.368898] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:32.369257] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:32.370573] [D] [thread 102221] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:32.370650] [I] [thread 102221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:32.370666] [I] [thread 102221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:32.370775] [I] [thread 102221] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:32.370787] [I] [thread 102221] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:32.526815] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:32.527170] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:33.528451] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:34.173746] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:34.174104] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:34.175059] [D] [thread 102226] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:34.175152] [I] [thread 102226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:34.175170] [I] [thread 102226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:34.175289] [I] [thread 102226] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:34.175303] [I] [thread 102226] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:34.334031] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:34.334456] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:35.335807] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:36.036168] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:36.036851] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:36.037643] [D] [thread 102231] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:36.037736] [I] [thread 102231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:36.037754] [I] [thread 102231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:36.037872] [I] [thread 102231] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:36.037884] [I] [thread 102231] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:36.194571] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:36.195078] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:37.196470] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:37.359977] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:37.360090] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:37.361174] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,100,1699609112968,1699609177360
[m
[36m[09:39:37.849452] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:37.850008] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:37.850877] [D] [thread 102236] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:37.850982] [I] [thread 102236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:37.851001] [I] [thread 102236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:37.851131] [I] [thread 102236] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:37.851161] [I] [thread 102236] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:38.006989] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:38.007328] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:39.008499] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:39.706648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:39.707049] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:39.708146] [D] [thread 102241] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:39.708243] [I] [thread 102241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:39.708260] [I] [thread 102241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:39.708407] [I] [thread 102241] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:39.708432] [I] [thread 102241] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:39.878722] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:39.879068] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:40.880383] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:41.533973] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:41.534308] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:41.535540] [D] [thread 102246] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:41.535653] [I] [thread 102246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:41.535675] [I] [thread 102246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:41.535803] [I] [thread 102246] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:41.535820] [I] [thread 102246] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:41.696885] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:41.697249] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:42.698681] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:43.357786] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:43.358138] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:43.359116] [D] [thread 102251] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:43.359194] [I] [thread 102251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:43.359210] [I] [thread 102251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:43.359320] [I] [thread 102251] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:43.359331] [I] [thread 102251] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:43.513586] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:43.513973] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:44.515218] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:45.165401] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:45.165726] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:45.166718] [D] [thread 102256] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:45.166812] [I] [thread 102256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:45.166832] [I] [thread 102256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:45.166949] [I] [thread 102256] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:45.166963] [I] [thread 102256] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:45.330194] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:45.330509] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:46.331725] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:46.888510] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:46.888603] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:46.889745] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,54,1699609113576,1699609186888
[m
[36m[09:39:47.023806] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:47.024146] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:47.025242] [D] [thread 102261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:47.025360] [I] [thread 102261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:47.025379] [I] [thread 102261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:47.025510] [I] [thread 102261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:47.025529] [I] [thread 102261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:47.185032] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:47.185385] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:48.155586] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:48.155660] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:48.156448] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,63,1699609114793,1699609188155
[m
[36m[09:39:48.186543] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:48.843788] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:48.844134] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:48.845137] [D] [thread 102267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:48.845234] [I] [thread 102267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:48.845252] [I] [thread 102267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:48.845370] [I] [thread 102267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:48.845384] [I] [thread 102267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:49.008949] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:49.009268] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:50.010454] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:50.661330] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:50.661664] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:50.662622] [D] [thread 102272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:50.662752] [I] [thread 102272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:50.662770] [I] [thread 102272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:50.662889] [I] [thread 102272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:50.662903] [I] [thread 102272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:50.845989] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:50.846332] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:51.440701] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:51.440809] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:51.441987] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,47,1699609116365,1699609191440
[m
[36m[09:39:51.847893] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:51.952571] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:51.952679] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:51.953864] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,24,1699609116083,1699609191952
[m
[36m[09:39:52.485910] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:52.486290] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:52.487410] [D] [thread 102277] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:52.487505] [I] [thread 102277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:52.487523] [I] [thread 102277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:52.487641] [I] [thread 102277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:52.487656] [I] [thread 102277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:52.647319] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:52.647719] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:53.648928] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:54.301513] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:54.301871] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:54.302828] [D] [thread 102282] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:54.302907] [I] [thread 102282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:54.302923] [I] [thread 102282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:54.303031] [I] [thread 102282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:54.303043] [I] [thread 102282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:54.461404] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:54.461733] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:55.462984] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:56.114709] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:56.115051] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:56.116018] [D] [thread 102287] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:56.116113] [I] [thread 102287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:56.116132] [I] [thread 102287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:56.116247] [I] [thread 102287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:56.116260] [I] [thread 102287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:56.295728] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:56.296087] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:57.297290] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:57.825463] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:39:57.825571] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:39:57.826755] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10680000,10740000,13,1699609118968,1699609197825
[m
[36m[09:39:57.964287] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:57.964658] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:57.966286] [D] [thread 102292] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:57.966382] [I] [thread 102292] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:57.966399] [I] [thread 102292] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:57.966517] [I] [thread 102292] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:57.966543] [I] [thread 102292] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:58.122603] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:58.123057] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:59.124414] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:59.769822] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:59.770451] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:59.771204] [D] [thread 102297] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:39:59.771297] [I] [thread 102297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:59.771314] [I] [thread 102297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:39:59.771432] [I] [thread 102297] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:39:59.771444] [I] [thread 102297] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:39:59.929382] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:39:59.929712] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:00.930973] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:01.624661] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:01.625314] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:01.626073] [D] [thread 102302] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:01.626166] [I] [thread 102302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:01.626184] [I] [thread 102302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:01.626300] [I] [thread 102302] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:01.626314] [I] [thread 102302] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:01.792287] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:01.792911] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:02.794163] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:03.477205] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:03.477766] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:03.478540] [D] [thread 102307] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:03.478635] [I] [thread 102307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:03.478653] [I] [thread 102307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:03.478770] [I] [thread 102307] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:03.478784] [I] [thread 102307] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:03.641637] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:03.642110] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:04.643460] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:05.333487] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:05.333824] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:05.335612] [D] [thread 102312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:05.335689] [I] [thread 102312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:05.335705] [I] [thread 102312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:05.335814] [I] [thread 102312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:05.335827] [I] [thread 102312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:05.498701] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:05.499061] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:06.500313] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:07.191545] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:07.191886] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:07.193127] [D] [thread 102317] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:07.193228] [I] [thread 102317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:07.193245] [I] [thread 102317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:07.193363] [I] [thread 102317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:07.193376] [I] [thread 102317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:07.359055] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:07.359417] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:08.360762] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:09.020755] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:09.021094] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:09.022262] [D] [thread 102322] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:09.022358] [I] [thread 102322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:09.022376] [I] [thread 102322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:09.022507] [I] [thread 102322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:09.022525] [I] [thread 102322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:09.180542] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:09.180894] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:10.182180] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:10.841287] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:10.841773] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:10.842616] [D] [thread 102327] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:10.842710] [I] [thread 102327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:10.842728] [I] [thread 102327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:10.842844] [I] [thread 102327] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:10.842857] [I] [thread 102327] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:11.004765] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:11.005246] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:12.006534] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:12.662265] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:12.662892] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:12.663641] [D] [thread 102332] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:12.663732] [I] [thread 102332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:12.663750] [I] [thread 102332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:12.663866] [I] [thread 102332] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:12.663879] [I] [thread 102332] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:12.810225] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:12.810565] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:13.811717] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:14.460193] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:14.460557] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:14.461637] [D] [thread 102337] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:14.461737] [I] [thread 102337] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:14.461754] [I] [thread 102337] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:14.461872] [I] [thread 102337] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:14.461891] [I] [thread 102337] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:14.632828] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:14.633418] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:15.634706] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:16.391059] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:16.391717] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:16.392421] [D] [thread 102342] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:16.392492] [I] [thread 102342] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:16.392508] [I] [thread 102342] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:16.392619] [I] [thread 102342] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:16.392631] [I] [thread 102342] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:16.554186] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:16.554811] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:17.556109] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:18.201682] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:18.202305] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:18.203297] [D] [thread 102347] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:18.203406] [I] [thread 102347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:18.203425] [I] [thread 102347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:18.203548] [I] [thread 102347] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:18.203564] [I] [thread 102347] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:18.365342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:18.365921] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:19.367211] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:20.074585] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:20.075191] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:20.076005] [D] [thread 102352] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:20.076096] [I] [thread 102352] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:20.076115] [I] [thread 102352] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:20.076232] [I] [thread 102352] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:20.076246] [I] [thread 102352] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:20.234897] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:20.235223] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:21.236509] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:21.892988] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:21.893567] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:21.894322] [D] [thread 102357] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:21.894418] [I] [thread 102357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:21.894435] [I] [thread 102357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:21.894551] [I] [thread 102357] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:21.894565] [I] [thread 102357] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:22.054710] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:22.055178] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:23.056509] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:23.805667] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:23.806320] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:23.806981] [D] [thread 102362] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:23.807075] [I] [thread 102362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:23.807093] [I] [thread 102362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:23.807211] [I] [thread 102362] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:23.807224] [I] [thread 102362] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:23.964373] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:23.964977] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:24.966197] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:25.614501] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:25.614978] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:25.615878] [D] [thread 102367] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:25.615974] [I] [thread 102367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:25.615992] [I] [thread 102367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:25.616109] [I] [thread 102367] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:25.616123] [I] [thread 102367] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:25.770754] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:25.771275] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:26.772517] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:27.443416] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:27.443738] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:27.444873] [D] [thread 102372] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:27.444954] [I] [thread 102372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:27.444970] [I] [thread 102372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:27.445080] [I] [thread 102372] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:27.445092] [I] [thread 102372] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:27.593116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:27.593442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:28.594700] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:29.262831] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:29.263186] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:29.264228] [D] [thread 102377] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:29.264366] [I] [thread 102377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:29.264384] [I] [thread 102377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:29.264504] [I] [thread 102377] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:29.264529] [I] [thread 102377] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:29.422876] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:29.423222] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:30.424490] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:31.083097] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:31.083451] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:31.085122] [D] [thread 102382] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:31.085221] [I] [thread 102382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:31.085238] [I] [thread 102382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:31.085356] [I] [thread 102382] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:31.085369] [I] [thread 102382] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:31.245071] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:31.245441] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:32.246750] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:32.912489] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:32.913049] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:32.913885] [D] [thread 102387] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:32.913980] [I] [thread 102387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:32.913998] [I] [thread 102387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:32.914116] [I] [thread 102387] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:32.914131] [I] [thread 102387] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:33.081455] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:33.081773] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:34.083033] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:34.722329] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:34.722683] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:34.723658] [D] [thread 102392] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:34.723755] [I] [thread 102392] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:34.723773] [I] [thread 102392] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:34.723891] [I] [thread 102392] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:34.723905] [I] [thread 102392] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:34.889242] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:34.889566] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:35.890909] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:36.537758] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:36.538461] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:36.539709] [D] [thread 102397] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:36.539834] [I] [thread 102397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:36.539853] [I] [thread 102397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:36.539981] [I] [thread 102397] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:36.539999] [I] [thread 102397] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:36.688394] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:40:36.688478] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:40:36.689389] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,100,1699609177219,1699609236688
[m
[36m[09:40:36.704659] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:36.705110] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:37.706291] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:38.365990] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:38.366350] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:38.368085] [D] [thread 102402] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:38.368164] [I] [thread 102402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:38.368181] [I] [thread 102402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:38.368290] [I] [thread 102402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:38.368302] [I] [thread 102402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:38.523699] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:38.524255] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:39.525648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:40.198490] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:40.198961] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:40.199839] [D] [thread 102407] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:40.199935] [I] [thread 102407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:40.199953] [I] [thread 102407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:40.200069] [I] [thread 102407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:40.200083] [I] [thread 102407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:40.362225] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:40.362785] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:41.364037] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:42.034953] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:42.035274] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:42.036581] [D] [thread 102412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:42.036698] [I] [thread 102412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:42.036722] [I] [thread 102412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:42.036855] [I] [thread 102412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:42.036877] [I] [thread 102412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:42.205305] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:42.205638] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:43.206885] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:43.871389] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:43.871723] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:43.872734] [D] [thread 102417] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:43.872830] [I] [thread 102417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:43.872848] [I] [thread 102417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:43.872965] [I] [thread 102417] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:43.872979] [I] [thread 102417] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:43.995314] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:43.995654] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:44.996860] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:45.721170] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:45.721492] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:45.722490] [D] [thread 102422] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:45.722586] [I] [thread 102422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:45.722603] [I] [thread 102422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:45.722721] [I] [thread 102422] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:45.722734] [I] [thread 102422] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:45.876782] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:45.877103] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:46.878330] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:47.570322] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:47.570701] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:47.571663] [D] [thread 102427] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:47.571757] [I] [thread 102427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:47.571774] [I] [thread 102427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:47.571891] [I] [thread 102427] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:47.571905] [I] [thread 102427] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:47.738022] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:47.738420] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:48.739679] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:49.375365] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:49.375728] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:49.376710] [D] [thread 102432] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:49.376788] [I] [thread 102432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:49.376804] [I] [thread 102432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:49.376912] [I] [thread 102432] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:49.376923] [I] [thread 102432] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:49.534339] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:49.534724] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:50.535959] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:51.183575] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:51.183913] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:51.185208] [D] [thread 102439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:51.185308] [I] [thread 102439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:51.185326] [I] [thread 102439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:51.185441] [I] [thread 102439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:51.185454] [I] [thread 102439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:51.360628] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:51.360963] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:52.362207] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:52.985920] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:52.986620] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:52.987329] [D] [thread 102445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:52.987419] [I] [thread 102445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:52.987437] [I] [thread 102445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:52.987554] [I] [thread 102445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:52.987566] [I] [thread 102445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:53.152525] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:53.153042] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:54.154306] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:54.830264] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:54.830611] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:54.832301] [D] [thread 102452] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:54.832427] [I] [thread 102452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:54.832446] [I] [thread 102452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:54.832564] [I] [thread 102452] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:54.832577] [I] [thread 102452] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:55.003582] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:55.003912] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:56.005153] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:56.637141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:56.637510] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:56.639137] [D] [thread 102457] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:56.639235] [I] [thread 102457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:56.639253] [I] [thread 102457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:56.639370] [I] [thread 102457] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:56.639384] [I] [thread 102457] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:56.798701] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:56.799076] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:57.800491] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:58.437673] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:58.438051] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:58.439770] [D] [thread 102462] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:40:58.439892] [I] [thread 102462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:58.439912] [I] [thread 102462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:40:58.440036] [I] [thread 102462] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:40:58.440063] [I] [thread 102462] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:40:58.599381] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:58.599725] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:40:59.600886] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:00.148630] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:00.148732] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:00.150216] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,63,1699609187986,1699609260148
[m
[36m[09:41:00.245049] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:00.245610] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:00.246400] [D] [thread 102467] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:00.246493] [I] [thread 102467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:00.246511] [I] [thread 102467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:00.246628] [I] [thread 102467] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:00.246642] [I] [thread 102467] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:00.402142] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:00.402673] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:01.226797] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:01.226874] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:01.227973] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,54,1699609186731,1699609261226
[m
[36m[09:41:01.403910] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:02.097845] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:02.098209] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:02.099859] [D] [thread 102472] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:02.099957] [I] [thread 102472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:02.099976] [I] [thread 102472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:02.100095] [I] [thread 102472] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:02.100108] [I] [thread 102472] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:02.262530] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:02.262892] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:03.264102] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:03.967186] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:03.967512] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:03.968628] [D] [thread 102477] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:03.968726] [I] [thread 102477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:03.968743] [I] [thread 102477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:03.968859] [I] [thread 102477] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:03.968881] [I] [thread 102477] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:04.130765] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:04.131107] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:05.117132] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:05.117237] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:05.118631] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,47,1699609191296,1699609265117
[m
[36m[09:41:05.132300] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:05.849516] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:05.849892] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:05.851041] [D] [thread 102482] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:05.851162] [I] [thread 102482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:05.851182] [I] [thread 102482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:05.851312] [I] [thread 102482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:05.851332] [I] [thread 102482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:06.032890] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:06.033281] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:07.034496] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:07.638665] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:07.638738] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:07.639606] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,24,1699609191811,1699609267638
[m
[36m[09:41:07.797872] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:07.798229] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:07.799858] [D] [thread 102488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:07.799955] [I] [thread 102488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:07.799973] [I] [thread 102488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:07.800090] [I] [thread 102488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:07.800104] [I] [thread 102488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:07.961047] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:07.961389] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:08.962599] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:09.616153] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:09.616795] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:09.617467] [D] [thread 102493] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:09.617560] [I] [thread 102493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:09.617578] [I] [thread 102493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:09.617694] [I] [thread 102493] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:09.617707] [I] [thread 102493] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:09.776792] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:09.777358] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:10.778669] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:11.424660] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:11.425190] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:11.425970] [D] [thread 102499] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:11.426045] [I] [thread 102499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:11.426062] [I] [thread 102499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:11.426169] [I] [thread 102499] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:11.426181] [I] [thread 102499] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:11.587267] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:11.587774] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:12.589000] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:13.289240] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:13.289854] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:13.290554] [D] [thread 102504] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:13.290648] [I] [thread 102504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:13.290666] [I] [thread 102504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:13.290782] [I] [thread 102504] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:13.290795] [I] [thread 102504] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:13.445617] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:13.445982] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:14.075889] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:14.075995] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:14.077430] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10740000,10800000,13,1699609197623,1699609274076
[m
[36m[09:41:14.447225] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:15.129667] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:15.130059] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:15.131175] [D] [thread 102509] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:15.131271] [I] [thread 102509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:15.131289] [I] [thread 102509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:15.131404] [I] [thread 102509] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:15.131417] [I] [thread 102509] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:15.293921] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:15.294261] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:16.295511] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:16.995733] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:16.996091] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:16.997183] [D] [thread 102514] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:16.997309] [I] [thread 102514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:16.997328] [I] [thread 102514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:16.997461] [I] [thread 102514] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:16.997484] [I] [thread 102514] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:17.154533] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:17.154851] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:18.155114] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:18.835225] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:18.835562] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:18.836604] [D] [thread 102519] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:18.836701] [I] [thread 102519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:18.836719] [I] [thread 102519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:18.836835] [I] [thread 102519] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:18.836848] [I] [thread 102519] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:18.995233] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:18.995619] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:19.996866] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:20.626314] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:20.626633] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:20.627838] [D] [thread 102526] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:20.627944] [I] [thread 102526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:20.627962] [I] [thread 102526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:20.628075] [I] [thread 102526] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:20.628087] [I] [thread 102526] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:20.786769] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:20.787105] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:21.788496] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:22.422127] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:22.422458] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:22.423585] [D] [thread 102531] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:22.423692] [I] [thread 102531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:22.423710] [I] [thread 102531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:22.423827] [I] [thread 102531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:22.423851] [I] [thread 102531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:22.584538] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:22.584897] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:23.586139] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:24.263351] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:24.263691] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:24.264889] [D] [thread 102536] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:24.264985] [I] [thread 102536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:24.265003] [I] [thread 102536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:24.265120] [I] [thread 102536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:24.265133] [I] [thread 102536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:24.421129] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:24.421493] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:25.422675] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:26.083548] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:26.083919] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:26.085026] [D] [thread 102541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:26.085148] [I] [thread 102541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:26.085167] [I] [thread 102541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:26.085291] [I] [thread 102541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:26.085309] [I] [thread 102541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:26.247154] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:26.247482] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:27.248640] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:27.921994] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:27.922342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:27.923410] [D] [thread 102546] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:27.923512] [I] [thread 102546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:27.923529] [I] [thread 102546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:27.923644] [I] [thread 102546] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:27.923699] [I] [thread 102546] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:28.078711] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:28.079063] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:29.080291] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:29.714146] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:29.714475] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:29.715463] [D] [thread 102551] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:29.715558] [I] [thread 102551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:29.715576] [I] [thread 102551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:29.715690] [I] [thread 102551] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:29.715704] [I] [thread 102551] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:29.880265] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:29.880618] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:30.881879] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:31.542224] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:31.542576] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:31.544381] [D] [thread 102556] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:31.544474] [I] [thread 102556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:31.544494] [I] [thread 102556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:31.544610] [I] [thread 102556] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:31.544623] [I] [thread 102556] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:31.704917] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:31.705284] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:32.706535] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:33.350160] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:33.350707] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:33.351507] [D] [thread 102561] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:33.351583] [I] [thread 102561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:33.351599] [I] [thread 102561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:33.351706] [I] [thread 102561] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:33.351718] [I] [thread 102561] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:33.507545] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:33.507906] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:34.508445] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:35.156630] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:35.156982] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:35.158034] [D] [thread 102566] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:35.158229] [I] [thread 102566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:35.158248] [I] [thread 102566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:35.158385] [I] [thread 102566] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:35.158421] [I] [thread 102566] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:35.323342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:35.324032] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:36.325348] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:36.974369] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:36.974934] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:36.975717] [D] [thread 102571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:36.975813] [I] [thread 102571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:36.975830] [I] [thread 102571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:36.975947] [I] [thread 102571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:36.975961] [I] [thread 102571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:37.151892] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:37.152378] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:38.153668] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:38.806009] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:38.806592] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:38.807479] [D] [thread 102576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:38.807582] [I] [thread 102576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:38.807600] [I] [thread 102576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:38.807825] [I] [thread 102576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:38.807857] [I] [thread 102576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:38.963925] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:38.964486] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:39.965714] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:40.603082] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:40.603655] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:40.604419] [D] [thread 102581] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:40.604514] [I] [thread 102581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:40.604532] [I] [thread 102581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:40.604650] [I] [thread 102581] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:40.604665] [I] [thread 102581] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:40.765917] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:40.766595] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:41.767867] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:42.418512] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:42.418852] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:42.420613] [D] [thread 102586] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:42.420708] [I] [thread 102586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:42.420726] [I] [thread 102586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:42.420843] [I] [thread 102586] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:42.420857] [I] [thread 102586] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:42.583722] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:42.584051] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:43.585209] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:44.272116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:44.272482] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:44.274137] [D] [thread 102591] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:44.274217] [I] [thread 102591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:44.274233] [I] [thread 102591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:44.274342] [I] [thread 102591] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:44.274354] [I] [thread 102591] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:44.444044] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:44.444459] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:45.445721] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:45.709915] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:41:45.709996] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:41:45.710972] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,100,1699609236546,1699609305710
[m
[36m[09:41:46.077911] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:46.078258] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:46.079588] [D] [thread 102596] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:46.079683] [I] [thread 102596] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:46.079701] [I] [thread 102596] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:46.079815] [I] [thread 102596] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:46.079828] [I] [thread 102596] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:46.266263] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:46.266820] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:47.268231] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:47.932637] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:47.933285] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:47.934251] [D] [thread 102601] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:47.934350] [I] [thread 102601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:47.934368] [I] [thread 102601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:47.934483] [I] [thread 102601] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:47.934498] [I] [thread 102601] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:48.092124] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:48.092486] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:49.093121] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:49.737917] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:49.738282] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:49.739445] [D] [thread 102606] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:49.739541] [I] [thread 102606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:49.739560] [I] [thread 102606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:49.739677] [I] [thread 102606] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:49.739691] [I] [thread 102606] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:49.919318] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:49.919667] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:50.920883] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:51.603158] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:51.603663] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:51.604581] [D] [thread 102611] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:51.604679] [I] [thread 102611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:51.604697] [I] [thread 102611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:51.604815] [I] [thread 102611] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:51.604829] [I] [thread 102611] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:51.769528] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:51.770003] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:52.771310] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:53.423374] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:53.424037] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:53.424817] [D] [thread 102616] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:53.424914] [I] [thread 102616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:53.424932] [I] [thread 102616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:53.425050] [I] [thread 102616] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:53.425063] [I] [thread 102616] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:53.583034] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:53.583590] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:54.584840] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:55.221110] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:55.221437] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:55.222546] [D] [thread 102621] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:55.222625] [I] [thread 102621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:55.222642] [I] [thread 102621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:55.222750] [I] [thread 102621] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:55.222761] [I] [thread 102621] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:55.382444] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:55.382842] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:56.384182] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:57.038194] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:57.038592] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:57.039644] [D] [thread 102626] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:57.039741] [I] [thread 102626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:57.039759] [I] [thread 102626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:57.039875] [I] [thread 102626] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:57.039889] [I] [thread 102626] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:57.220078] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:57.220462] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:58.221709] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:58.881096] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:58.881464] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:58.882417] [D] [thread 102631] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:41:58.882511] [I] [thread 102631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:58.882530] [I] [thread 102631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:41:58.882644] [I] [thread 102631] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:41:58.882658] [I] [thread 102631] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:41:59.044751] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:41:59.045125] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:00.046349] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:00.733765] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:00.734096] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:00.735242] [D] [thread 102636] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:00.735365] [I] [thread 102636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:00.735385] [I] [thread 102636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:00.735506] [I] [thread 102636] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:00.735535] [I] [thread 102636] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:00.897425] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:00.897773] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:01.898976] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:02.524063] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:02.524485] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:02.526085] [D] [thread 102642] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:02.526182] [I] [thread 102642] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:02.526200] [I] [thread 102642] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:02.526316] [I] [thread 102642] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:02.526329] [I] [thread 102642] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:02.701343] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:02.701895] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:03.703237] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:04.349365] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:04.349907] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:04.350748] [D] [thread 102647] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:04.350865] [I] [thread 102647] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:04.350887] [I] [thread 102647] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:04.351053] [I] [thread 102647] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:04.351076] [I] [thread 102647] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:04.513854] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:04.514380] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:05.515662] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:06.150364] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:06.151188] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:06.151893] [D] [thread 102652] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:06.151976] [I] [thread 102652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:06.151993] [I] [thread 102652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:06.152108] [I] [thread 102652] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:06.152122] [I] [thread 102652] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:06.318832] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:06.319289] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:07.320575] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:07.964411] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:07.965134] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:07.965811] [D] [thread 102657] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:07.965900] [I] [thread 102657] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:07.965918] [I] [thread 102657] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:07.966033] [I] [thread 102657] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:07.966047] [I] [thread 102657] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:08.123116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:08.123463] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:09.124680] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:09.732537] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:09.732645] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:09.733896] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,63,1699609259974,1699609329732
[m
[36m[09:42:09.779778] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:09.780134] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:09.781177] [D] [thread 102662] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:09.781274] [I] [thread 102662] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:09.781293] [I] [thread 102662] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:09.781409] [I] [thread 102662] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:09.781423] [I] [thread 102662] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:09.926694] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:09.927192] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:10.928446] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:11.574800] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:11.575498] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:11.576234] [D] [thread 102667] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:11.576307] [I] [thread 102667] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:11.576408] [I] [thread 102667] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:11.576526] [I] [thread 102667] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:11.576538] [I] [thread 102667] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:11.734513] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:11.735085] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:12.736439] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:13.386841] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:13.387179] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:13.389021] [D] [thread 102672] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:13.389147] [I] [thread 102672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:13.389166] [I] [thread 102672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:13.389290] [I] [thread 102672] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:13.389307] [I] [thread 102672] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:13.542187] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:13.542571] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:14.543741] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:15.188677] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:15.189018] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:15.190182] [D] [thread 102677] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:15.190284] [I] [thread 102677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:15.190302] [I] [thread 102677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:15.190418] [I] [thread 102677] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:15.190432] [I] [thread 102677] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:15.350732] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:15.351085] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:15.576726] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:15.576835] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:15.578231] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,54,1699609261046,1699609335576
[m
[36m[09:42:16.352302] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:16.981853] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:16.982171] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:16.983271] [D] [thread 102682] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:16.983351] [I] [thread 102682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:16.983367] [I] [thread 102682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:16.983476] [I] [thread 102682] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:16.983487] [I] [thread 102682] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:17.140290] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:17.140662] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:18.141902] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:18.777972] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:18.778323] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:18.779363] [D] [thread 102687] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:18.779463] [I] [thread 102687] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:18.779480] [I] [thread 102687] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:18.779597] [I] [thread 102687] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:18.779611] [I] [thread 102687] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:18.788196] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:18.788264] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:18.789085] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,47,1699609264939,1699609338788
[m
[36m[09:42:18.929154] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:18.929519] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:19.930741] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:20.558732] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:20.559087] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:20.560127] [D] [thread 102692] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:20.560228] [I] [thread 102692] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:20.560246] [I] [thread 102692] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:20.560391] [I] [thread 102692] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:20.560416] [I] [thread 102692] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:20.718952] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:20.719310] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:21.720515] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:22.377133] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:22.377484] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:22.378581] [D] [thread 102698] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:22.378680] [I] [thread 102698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:22.378698] [I] [thread 102698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:22.378817] [I] [thread 102698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:22.378831] [I] [thread 102698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:22.541327] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:22.541982] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:23.543360] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:24.191961] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:24.192346] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:24.193315] [D] [thread 102703] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:24.193424] [I] [thread 102703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:24.193442] [I] [thread 102703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:24.193574] [I] [thread 102703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:24.193591] [I] [thread 102703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:24.356893] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:24.357255] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:24.511771] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:24.511879] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:24.513435] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,24,1699609267506,1699609344511
[m
[36m[09:42:25.358464] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:26.011891] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:26.012233] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:26.013270] [D] [thread 102708] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:26.013393] [I] [thread 102708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:26.013413] [I] [thread 102708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:26.013539] [I] [thread 102708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:26.013556] [I] [thread 102708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:26.173409] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:26.173737] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:27.174899] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:27.861429] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:27.861764] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:27.862818] [D] [thread 102713] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:27.862917] [I] [thread 102713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:27.862934] [I] [thread 102713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:27.863051] [I] [thread 102713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:27.863112] [I] [thread 102713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:28.019951] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:28.020563] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:29.021855] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:29.680142] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:29.680502] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:29.681861] [D] [thread 102718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:29.681956] [I] [thread 102718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:29.681974] [I] [thread 102718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:29.682089] [I] [thread 102718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:29.682103] [I] [thread 102718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:29.875420] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:29.875749] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:30.877030] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:31.518701] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:31.519048] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:31.519985] [D] [thread 102723] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:31.520080] [I] [thread 102723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:31.520098] [I] [thread 102723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:31.520214] [I] [thread 102723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:31.520227] [I] [thread 102723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:31.531433] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:31.531512] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:31.532461] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10800000,10860000,13,1699609273904,1699609351531
[m
[36m[09:42:31.674697] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:31.675021] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:32.676283] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:33.365918] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:33.366314] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:33.367446] [D] [thread 102728] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:33.367544] [I] [thread 102728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:33.367562] [I] [thread 102728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:33.367679] [I] [thread 102728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:33.367692] [I] [thread 102728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:33.546577] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:33.546936] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:34.548199] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:35.184477] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:35.184838] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:35.186049] [D] [thread 102733] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:35.186146] [I] [thread 102733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:35.186164] [I] [thread 102733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:35.186281] [I] [thread 102733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:35.186295] [I] [thread 102733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:35.343946] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:35.344385] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:36.345595] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:36.998842] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:36.999211] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:37.000215] [D] [thread 102738] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:37.000311] [I] [thread 102738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:37.000360] [I] [thread 102738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:37.000483] [I] [thread 102738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:37.000497] [I] [thread 102738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:37.158625] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:37.158985] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:38.160247] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:38.821257] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:38.821633] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:38.823260] [D] [thread 102743] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:38.823356] [I] [thread 102743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:38.823375] [I] [thread 102743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:38.823493] [I] [thread 102743] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:38.823506] [I] [thread 102743] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:38.980831] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:38.981188] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:39.982423] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:40.633116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:40.633477] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:40.634463] [D] [thread 102748] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:40.634558] [I] [thread 102748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:40.634575] [I] [thread 102748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:40.634692] [I] [thread 102748] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:40.634706] [I] [thread 102748] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:40.794938] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:40.795488] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:41.796862] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:42.462799] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:42.463342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:42.464448] [D] [thread 102753] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:42.464545] [I] [thread 102753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:42.464563] [I] [thread 102753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:42.464681] [I] [thread 102753] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:42.464696] [I] [thread 102753] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:42.626959] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:42.627335] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:43.628583] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:44.305788] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:44.306115] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:44.307255] [D] [thread 102758] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:44.307361] [I] [thread 102758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:44.307378] [I] [thread 102758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:44.307498] [I] [thread 102758] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:44.307512] [I] [thread 102758] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:44.457212] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:44.457638] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:45.459022] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:46.109505] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:46.109833] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:46.111479] [D] [thread 102763] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:46.111578] [I] [thread 102763] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:46.111596] [I] [thread 102763] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:46.111712] [I] [thread 102763] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:46.111727] [I] [thread 102763] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:46.266573] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:46.266902] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:47.268121] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:47.926491] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:47.926847] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:47.928114] [D] [thread 102768] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:47.928233] [I] [thread 102768] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:47.928253] [I] [thread 102768] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:47.928455] [I] [thread 102768] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:47.928476] [I] [thread 102768] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:48.092729] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:48.093199] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:49.094415] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:49.873462] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:49.874102] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:49.874769] [D] [thread 102773] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:49.874862] [I] [thread 102773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:49.874879] [I] [thread 102773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:49.874996] [I] [thread 102773] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:49.875009] [I] [thread 102773] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:50.042766] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:50.043355] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:51.044611] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:51.761896] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:51.762227] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:51.763385] [D] [thread 102778] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:51.763500] [I] [thread 102778] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:51.763519] [I] [thread 102778] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:51.763649] [I] [thread 102778] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:51.763727] [I] [thread 102778] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:51.930431] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:51.930807] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:52.319568] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:42:52.319680] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:42:52.320991] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,100,1699609305525,1699609372319
[m
[36m[09:42:52.932041] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:53.601573] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:53.602165] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:53.602890] [D] [thread 102783] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:53.602984] [I] [thread 102783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:53.603002] [I] [thread 102783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:53.603118] [I] [thread 102783] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:53.603132] [I] [thread 102783] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:53.756604] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:53.757140] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:54.758399] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:55.408491] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:55.409163] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:55.409795] [D] [thread 102788] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:55.409861] [I] [thread 102788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:55.409878] [I] [thread 102788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:55.409988] [I] [thread 102788] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:55.410000] [I] [thread 102788] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:55.566556] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:55.567039] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:56.568391] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:57.227158] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:57.227495] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:57.229135] [D] [thread 102793] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:57.229266] [I] [thread 102793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:57.229285] [I] [thread 102793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:57.229401] [I] [thread 102793] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:57.229415] [I] [thread 102793] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:57.428864] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:57.429209] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:58.430450] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:59.085746] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:59.086105] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:59.087079] [D] [thread 102798] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:42:59.087172] [I] [thread 102798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:59.087190] [I] [thread 102798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:42:59.087307] [I] [thread 102798] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:42:59.087322] [I] [thread 102798] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:42:59.251683] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:42:59.252078] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:00.252451] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:00.918011] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:00.918336] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:00.919306] [D] [thread 102803] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:00.919399] [I] [thread 102803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:00.919418] [I] [thread 102803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:00.919533] [I] [thread 102803] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:00.919547] [I] [thread 102803] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:01.088725] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:01.089060] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:02.090325] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:02.758248] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:02.758875] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:02.759578] [D] [thread 102808] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:02.759672] [I] [thread 102808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:02.759690] [I] [thread 102808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:02.759808] [I] [thread 102808] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:02.759823] [I] [thread 102808] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:02.919774] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:02.920113] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:03.921394] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:04.579875] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:04.580280] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:04.581788] [D] [thread 102813] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:04.581886] [I] [thread 102813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:04.581904] [I] [thread 102813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:04.582023] [I] [thread 102813] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:04.582036] [I] [thread 102813] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:04.745458] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:04.745870] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:05.747106] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:06.409966] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:06.410321] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:06.411377] [D] [thread 102818] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:06.411469] [I] [thread 102818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:06.411487] [I] [thread 102818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:06.411598] [I] [thread 102818] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:06.411611] [I] [thread 102818] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:06.579673] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:06.580006] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:07.581222] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:08.262013] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:08.262340] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:08.263427] [D] [thread 102823] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:08.263527] [I] [thread 102823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:08.263545] [I] [thread 102823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:08.263660] [I] [thread 102823] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:08.263675] [I] [thread 102823] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:08.429531] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:08.430090] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:09.431401] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:10.089915] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:10.090562] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:10.091245] [D] [thread 102828] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:10.091338] [I] [thread 102828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:10.091356] [I] [thread 102828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:10.091472] [I] [thread 102828] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:10.091486] [I] [thread 102828] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:10.255475] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:10.255810] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:11.257061] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:11.985485] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:11.985836] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:11.986924] [D] [thread 102833] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:11.987025] [I] [thread 102833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:11.987043] [I] [thread 102833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:11.987160] [I] [thread 102833] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:11.987174] [I] [thread 102833] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:12.150222] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:12.150565] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:13.151787] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:13.784960] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:13.785279] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:13.786286] [D] [thread 102838] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:13.786382] [I] [thread 102838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:13.786399] [I] [thread 102838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:13.786519] [I] [thread 102838] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:13.786532] [I] [thread 102838] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:13.947276] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:13.947599] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:14.948957] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:15.593340] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:15.594012] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:15.595037] [D] [thread 102843] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:15.595142] [I] [thread 102843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:15.595161] [I] [thread 102843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:15.595290] [I] [thread 102843] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:15.595307] [I] [thread 102843] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:15.754179] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:15.754768] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:16.755997] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:17.421478] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:17.421838] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:17.422825] [D] [thread 102848] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:17.422898] [I] [thread 102848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:17.422914] [I] [thread 102848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:17.423021] [I] [thread 102848] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:17.423033] [I] [thread 102848] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:17.579260] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:17.579617] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:18.580990] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:19.221889] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:19.222278] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:19.223388] [D] [thread 102853] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:19.223484] [I] [thread 102853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:19.223503] [I] [thread 102853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:19.223619] [I] [thread 102853] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:19.223633] [I] [thread 102853] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:19.311218] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:43:19.311327] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:43:19.312730] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,63,1699609329557,1699609399311
[m
[36m[09:43:19.431245] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:19.431573] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:20.432722] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:21.074300] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:21.074653] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:21.075707] [D] [thread 102858] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:21.075808] [I] [thread 102858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:21.075826] [I] [thread 102858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:21.075944] [I] [thread 102858] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:21.075969] [I] [thread 102858] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:21.238774] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:21.239093] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:22.240309] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:22.902127] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:22.902512] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:22.903566] [D] [thread 102863] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:22.903669] [I] [thread 102863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:22.903687] [I] [thread 102863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:22.903805] [I] [thread 102863] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:22.903824] [I] [thread 102863] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:23.065906] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:23.066249] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:24.067597] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:24.719219] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:24.719547] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:24.720820] [D] [thread 102868] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:24.720986] [I] [thread 102868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:24.721010] [I] [thread 102868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:24.721219] [I] [thread 102868] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:24.721244] [I] [thread 102868] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:24.875085] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:24.875454] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:25.876608] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:26.502833] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:26.503442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:26.504149] [D] [thread 102873] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:26.504241] [I] [thread 102873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:26.504259] [I] [thread 102873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:26.504417] [I] [thread 102873] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:26.504437] [I] [thread 102873] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:26.663426] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:26.663823] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:27.665040] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:28.303410] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:28.303761] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:28.304865] [D] [thread 102879] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:28.304958] [I] [thread 102879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:28.304976] [I] [thread 102879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:28.305091] [I] [thread 102879] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:28.305104] [I] [thread 102879] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:28.465152] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:28.465488] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:28.710738] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:43:28.710846] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:43:28.712205] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,54,1699609335384,1699609408710
[m
[36m[09:43:29.466715] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:30.113554] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:30.113872] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:30.114951] [D] [thread 102884] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:30.115050] [I] [thread 102884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:30.115069] [I] [thread 102884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:30.115186] [I] [thread 102884] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:30.115199] [I] [thread 102884] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:30.276990] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:30.277319] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:31.278537] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:31.932566] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:31.933033] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:31.933859] [D] [thread 102890] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:31.933951] [I] [thread 102890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:31.933968] [I] [thread 102890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:31.934082] [I] [thread 102890] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:31.934097] [I] [thread 102890] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:32.090870] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:32.091399] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:33.092679] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:33.668961] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:43:33.669074] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:43:33.670476] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,47,1699609338590,1699609413669
[m
[36m[09:43:33.786723] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:33.787377] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:33.788067] [D] [thread 102895] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:33.788159] [I] [thread 102895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:33.788177] [I] [thread 102895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:33.788295] [I] [thread 102895] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:33.788308] [I] [thread 102895] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:33.949888] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:33.950403] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:34.951747] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:35.622567] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:35.623045] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:35.623880] [D] [thread 102902] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:35.623973] [I] [thread 102902] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:35.623990] [I] [thread 102902] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:35.624104] [I] [thread 102902] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:35.624117] [I] [thread 102902] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:35.782613] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:35.783153] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:36.784421] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:37.424790] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:37.425123] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:37.426339] [D] [thread 102908] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:37.426446] [I] [thread 102908] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:37.426465] [I] [thread 102908] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:37.426595] [I] [thread 102908] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:37.426625] [I] [thread 102908] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:37.585082] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:37.585636] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:38.586876] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:39.230068] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:39.230634] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:39.231368] [D] [thread 102913] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:39.231441] [I] [thread 102913] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:39.231456] [I] [thread 102913] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:39.231564] [I] [thread 102913] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:39.231576] [I] [thread 102913] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:39.392998] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:39.393519] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:40.193289] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:43:40.193406] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:43:40.194948] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,24,1699609344331,1699609420193
[m
[36m[09:43:40.394836] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:41.055103] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:41.055442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:41.057114] [D] [thread 102918] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:41.057212] [I] [thread 102918] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:41.057231] [I] [thread 102918] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:41.057347] [I] [thread 102918] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:41.057360] [I] [thread 102918] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:41.233543] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:41.233894] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:42.235368] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:42.875730] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:42.876280] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:42.877151] [D] [thread 102923] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:42.877248] [I] [thread 102923] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:42.877266] [I] [thread 102923] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:42.877381] [I] [thread 102923] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:42.877395] [I] [thread 102923] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:43.040118] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:43.040811] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:44.042110] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:44.695062] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:44.695654] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:44.696426] [D] [thread 102928] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:44.696519] [I] [thread 102928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:44.696538] [I] [thread 102928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:44.696655] [I] [thread 102928] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:44.696669] [I] [thread 102928] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:44.856355] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:44.856849] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:45.858073] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:46.511474] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:46.511800] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:46.512913] [D] [thread 102933] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:46.513011] [I] [thread 102933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:46.513029] [I] [thread 102933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:46.513149] [I] [thread 102933] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:46.513163] [I] [thread 102933] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:46.669096] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:46.669426] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:47.670670] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:48.322128] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:48.322515] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:48.323535] [D] [thread 102938] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:48.323634] [I] [thread 102938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:48.323651] [I] [thread 102938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:48.323767] [I] [thread 102938] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:48.323781] [I] [thread 102938] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:48.472128] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:48.472537] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:49.473801] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:50.130259] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:50.130604] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:50.131848] [D] [thread 102943] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:50.131936] [I] [thread 102943] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:50.131953] [I] [thread 102943] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:50.132063] [I] [thread 102943] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:50.132077] [I] [thread 102943] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:50.298139] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:50.298483] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:51.299649] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:51.415883] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:43:51.415991] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:43:51.417478] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10860000,10920000,13,1699609351379,1699609431416
[m
[36m[09:43:51.958860] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:51.959206] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:51.960227] [D] [thread 102948] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:51.960358] [I] [thread 102948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:51.960378] [I] [thread 102948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:51.960499] [I] [thread 102948] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:51.960523] [I] [thread 102948] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:52.119458] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:52.119815] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:53.121017] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:53.780932] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:53.781543] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:53.782263] [D] [thread 102953] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:53.782357] [I] [thread 102953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:53.782375] [I] [thread 102953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:53.782492] [I] [thread 102953] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:53.782505] [I] [thread 102953] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:53.949150] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:53.949722] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:54.951000] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:55.590118] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:55.590626] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:55.591522] [D] [thread 102958] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:55.591617] [I] [thread 102958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:55.591635] [I] [thread 102958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:55.591752] [I] [thread 102958] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:55.591766] [I] [thread 102958] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:55.758467] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:55.758926] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:56.760200] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:57.415030] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:57.415432] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:57.417096] [D] [thread 102963] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:57.417196] [I] [thread 102963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:57.417214] [I] [thread 102963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:57.417329] [I] [thread 102963] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:57.417343] [I] [thread 102963] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:57.582141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:57.582775] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:58.583110] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:59.327831] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:59.328165] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:59.329761] [D] [thread 102968] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:43:59.329885] [I] [thread 102968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:59.329904] [I] [thread 102968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:43:59.330026] [I] [thread 102968] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:43:59.330044] [I] [thread 102968] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:43:59.485863] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:43:59.486203] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:00.487380] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:01.158399] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:01.158781] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:01.159763] [D] [thread 102973] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:01.159854] [I] [thread 102973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:01.159871] [I] [thread 102973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:01.159983] [I] [thread 102973] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:01.159997] [I] [thread 102973] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:01.322856] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:01.323180] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:02.324430] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:02.564778] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:44:02.564890] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:44:02.566270] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,100,1699609372143,1699609442564
[m
[36m[09:44:03.051605] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:03.051967] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:03.052932] [D] [thread 102978] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:03.053029] [I] [thread 102978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:03.053048] [I] [thread 102978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:03.053161] [I] [thread 102978] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:03.053175] [I] [thread 102978] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:03.215988] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:03.216615] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:04.217963] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:04.942907] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:04.943532] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:04.944242] [D] [thread 102983] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:04.944368] [I] [thread 102983] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:04.944389] [I] [thread 102983] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:04.944510] [I] [thread 102983] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:04.944524] [I] [thread 102983] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:05.140369] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:05.140727] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:06.142036] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:06.814536] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:06.814893] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:06.816081] [D] [thread 102988] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:06.816178] [I] [thread 102988] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:06.816197] [I] [thread 102988] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:06.816312] [I] [thread 102988] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:06.816362] [I] [thread 102988] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:06.977738] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:06.978097] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:07.979358] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:08.621602] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:08.621944] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:08.622962] [D] [thread 102994] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:08.623087] [I] [thread 102994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:08.623106] [I] [thread 102994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:08.623230] [I] [thread 102994] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:08.623249] [I] [thread 102994] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:08.784733] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:08.785063] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:09.786239] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:10.464802] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:10.465185] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:10.466305] [D] [thread 102999] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:10.466402] [I] [thread 102999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:10.466420] [I] [thread 102999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:10.466535] [I] [thread 102999] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:10.466549] [I] [thread 102999] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:10.628877] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:10.629263] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:11.630629] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:12.286319] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:12.286662] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:12.287654] [D] [thread 103005] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:12.287729] [I] [thread 103005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:12.287745] [I] [thread 103005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:12.287854] [I] [thread 103005] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:12.287866] [I] [thread 103005] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:12.446707] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:12.447063] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:13.448387] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:14.098012] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:14.098357] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:14.099518] [D] [thread 103011] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:14.099614] [I] [thread 103011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:14.099633] [I] [thread 103011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:14.099749] [I] [thread 103011] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:14.099763] [I] [thread 103011] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:14.268366] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:14.268939] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:15.270216] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:15.919303] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:15.919639] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:15.920677] [D] [thread 103017] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:15.920773] [I] [thread 103017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:15.920791] [I] [thread 103017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:15.920908] [I] [thread 103017] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:15.920922] [I] [thread 103017] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:16.081561] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:16.081902] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:17.083121] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:17.849080] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:17.849766] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:17.850878] [D] [thread 103022] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:17.850995] [I] [thread 103022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:17.851014] [I] [thread 103022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:17.851149] [I] [thread 103022] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:17.851164] [I] [thread 103022] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:18.013726] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:18.014203] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:19.015478] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:19.666045] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:19.666433] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:19.668065] [D] [thread 103027] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:19.668164] [I] [thread 103027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:19.668181] [I] [thread 103027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:19.668296] [I] [thread 103027] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:19.668310] [I] [thread 103027] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:19.826812] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:19.827131] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:20.828422] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:21.483306] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:21.483624] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:21.484745] [D] [thread 103032] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:21.484848] [I] [thread 103032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:21.484866] [I] [thread 103032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:21.484982] [I] [thread 103032] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:21.485003] [I] [thread 103032] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:21.646885] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:21.647491] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:22.648802] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:23.292455] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:23.293096] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:23.293875] [D] [thread 103037] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:23.293948] [I] [thread 103037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:23.293964] [I] [thread 103037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:23.294073] [I] [thread 103037] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:23.294085] [I] [thread 103037] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:23.461692] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:23.462153] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:24.463429] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:25.130260] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:25.131012] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:25.131741] [D] [thread 103042] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:25.131836] [I] [thread 103042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:25.131854] [I] [thread 103042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:25.131969] [I] [thread 103042] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:25.131982] [I] [thread 103042] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:25.283194] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:25.283705] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:26.284915] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:26.944495] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:26.944811] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:26.945940] [D] [thread 103047] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:26.946068] [I] [thread 103047] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:26.946087] [I] [thread 103047] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:26.946214] [I] [thread 103047] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:26.946230] [I] [thread 103047] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:27.102386] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:27.102746] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:27.689895] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:44:27.690001] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:44:27.691412] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,63,1699609399156,1699609467690
[m
[36m[09:44:28.103935] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:28.754449] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:28.754884] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:28.755882] [D] [thread 103052] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:28.755978] [I] [thread 103052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:28.755996] [I] [thread 103052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:28.756112] [I] [thread 103052] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:28.756126] [I] [thread 103052] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:28.921575] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:28.921944] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:29.923198] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:30.565498] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:30.565888] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:30.567051] [D] [thread 103057] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:30.567147] [I] [thread 103057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:30.567165] [I] [thread 103057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:30.567282] [I] [thread 103057] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:30.567297] [I] [thread 103057] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:30.730116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:30.730479] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:31.731711] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:32.383484] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:32.383814] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:32.384834] [D] [thread 103062] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:32.384932] [I] [thread 103062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:32.384950] [I] [thread 103062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:32.385065] [I] [thread 103062] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:32.385080] [I] [thread 103062] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:32.556355] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:32.556694] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:33.557944] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:34.222916] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:34.223255] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:34.224517] [D] [thread 103067] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:34.224594] [I] [thread 103067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:34.224610] [I] [thread 103067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:34.224718] [I] [thread 103067] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:34.224730] [I] [thread 103067] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:34.388896] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:34.389537] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:35.390831] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:36.038143] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:36.038656] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:36.039501] [D] [thread 103072] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:36.039595] [I] [thread 103072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:36.039613] [I] [thread 103072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:36.039728] [I] [thread 103072] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:36.039741] [I] [thread 103072] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:36.195027] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:36.195559] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:37.196853] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:37.886745] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:37.887344] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:37.888055] [D] [thread 103077] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:37.888149] [I] [thread 103077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:37.888166] [I] [thread 103077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:37.888282] [I] [thread 103077] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:37.888296] [I] [thread 103077] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:38.045113] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:38.045594] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:39.046910] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:39.684734] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:39.685456] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:39.686322] [D] [thread 103082] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:39.686607] [I] [thread 103082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:39.686756] [I] [thread 103082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:39.686965] [I] [thread 103082] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:39.686990] [I] [thread 103082] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:39.850770] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:39.851312] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:40.651302] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:44:40.651408] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:44:40.652849] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,54,1699609408572,1699609480651
[m
[36m[09:44:40.852522] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:41.531356] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:41.531944] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:41.532750] [D] [thread 103087] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:41.532846] [I] [thread 103087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:41.532865] [I] [thread 103087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:41.532981] [I] [thread 103087] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:41.532995] [I] [thread 103087] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:41.690775] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:41.691290] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:42.692586] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:43.355535] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:43.356147] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:43.357006] [D] [thread 103092] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:43.357176] [I] [thread 103092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:43.357198] [I] [thread 103092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:43.357327] [I] [thread 103092] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:43.357346] [I] [thread 103092] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:43.518892] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:43.519259] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:44.520503] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:45.176760] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:45.177111] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:45.178140] [D] [thread 103097] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:45.178220] [I] [thread 103097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:45.178236] [I] [thread 103097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:45.178345] [I] [thread 103097] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:45.178358] [I] [thread 103097] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:45.342321] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:45.342704] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:46.343951] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:47.033652] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:47.034016] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:47.034984] [D] [thread 103102] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:47.035084] [I] [thread 103102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:47.035103] [I] [thread 103102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:47.035222] [I] [thread 103102] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:47.035246] [I] [thread 103102] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:47.198440] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:47.198809] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:48.200106] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:48.552784] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:44:48.552893] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:44:48.554300] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,47,1699609413498,1699609488552
[m
[36m[09:44:48.933230] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:48.933566] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:48.934702] [D] [thread 103107] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:48.934934] [I] [thread 103107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:48.934957] [I] [thread 103107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:48.935082] [I] [thread 103107] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:48.935096] [I] [thread 103107] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:49.097996] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:49.098361] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:50.099859] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:50.737454] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:50.737803] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:50.738893] [D] [thread 103112] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:50.738990] [I] [thread 103112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:50.739008] [I] [thread 103112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:50.739128] [I] [thread 103112] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:50.739141] [I] [thread 103112] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:50.949435] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:50.949787] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:51.951007] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:52.622345] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:52.622740] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:52.623687] [D] [thread 103117] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:52.623786] [I] [thread 103117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:52.623804] [I] [thread 103117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:52.623919] [I] [thread 103117] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:52.623943] [I] [thread 103117] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:52.778515] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:52.778978] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:53.780286] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:54.430919] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:54.431465] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:54.432306] [D] [thread 103122] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:54.432435] [I] [thread 103122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:54.432453] [I] [thread 103122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:54.432571] [I] [thread 103122] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:54.432585] [I] [thread 103122] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:54.604818] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:54.605168] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:55.606415] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:56.250035] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:56.250388] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:56.251392] [D] [thread 103127] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:56.251470] [I] [thread 103127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:56.251487] [I] [thread 103127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:56.251595] [I] [thread 103127] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:56.251608] [I] [thread 103127] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:56.411581] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:56.411912] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:57.082638] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:44:57.082734] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:44:57.083943] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,24,1699609420039,1699609497082
[m
[36m[09:44:57.413160] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:58.110820] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:58.111156] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:58.112160] [D] [thread 103132] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:58.112278] [I] [thread 103132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:58.112298] [I] [thread 103132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:58.112461] [I] [thread 103132] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:58.112482] [I] [thread 103132] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:44:58.269700] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:58.270033] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:59.271205] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:59.931563] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:59.932044] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:44:59.932949] [D] [thread 103137] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:44:59.933048] [I] [thread 103137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:59.933065] [I] [thread 103137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:44:59.933182] [I] [thread 103137] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:44:59.933196] [I] [thread 103137] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:00.090746] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:00.091294] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:01.092599] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:01.758352] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:01.759071] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:01.759832] [D] [thread 103143] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:01.759931] [I] [thread 103143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:01.759948] [I] [thread 103143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:01.760064] [I] [thread 103143] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:01.760079] [I] [thread 103143] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:01.921866] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:01.922318] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:02.923623] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:03.578529] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:03.579147] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:03.579916] [D] [thread 103148] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:03.580010] [I] [thread 103148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:03.580027] [I] [thread 103148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:03.580144] [I] [thread 103148] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:03.580157] [I] [thread 103148] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:03.741523] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:03.742152] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:04.743585] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:05.250730] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:45:05.250837] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:45:05.252219] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10920000,10980000,13,1699609431228,1699609505250
[m
[36m[09:45:05.470273] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:05.470658] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:05.472423] [D] [thread 103153] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:05.472517] [I] [thread 103153] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:05.472537] [I] [thread 103153] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:05.472654] [I] [thread 103153] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:05.472667] [I] [thread 103153] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:05.534746] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:45:05.534855] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:45:05.536205] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,100,1699609442362,1699609505534
[m
[36m[09:45:05.669271] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:05.669626] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:06.670898] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:07.355803] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:07.356165] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:07.357196] [D] [thread 103158] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:07.357312] [I] [thread 103158] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:07.357330] [I] [thread 103158] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:07.357446] [I] [thread 103158] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:07.357461] [I] [thread 103158] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:07.517474] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:07.517806] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:08.518977] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:09.161087] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:09.161427] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:09.162428] [D] [thread 103163] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:09.162524] [I] [thread 103163] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:09.162542] [I] [thread 103163] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:09.162658] [I] [thread 103163] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:09.162671] [I] [thread 103163] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:09.325518] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:09.326125] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:10.327451] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:11.009617] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:11.010091] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:11.010954] [D] [thread 103169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:11.011050] [I] [thread 103169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:11.011068] [I] [thread 103169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:11.011185] [I] [thread 103169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:11.011199] [I] [thread 103169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:11.185776] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:11.186305] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:12.187636] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:12.837617] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:12.838261] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:12.838999] [D] [thread 103176] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:12.839094] [I] [thread 103176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:12.839111] [I] [thread 103176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:12.839228] [I] [thread 103176] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:12.839241] [I] [thread 103176] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:13.005117] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:13.005679] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:14.006951] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:14.662745] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:14.663246] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:14.664110] [D] [thread 103183] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:14.664203] [I] [thread 103183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:14.664221] [I] [thread 103183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:14.664370] [I] [thread 103183] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:14.664388] [I] [thread 103183] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:14.823640] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:14.824180] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:15.825485] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:16.461090] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:16.461764] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:16.462477] [D] [thread 103188] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:16.462571] [I] [thread 103188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:16.462589] [I] [thread 103188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:16.462715] [I] [thread 103188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:16.462732] [I] [thread 103188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:16.632538] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:16.633088] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:17.634318] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:18.314386] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:18.315016] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:18.315719] [D] [thread 103194] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:18.315789] [I] [thread 103194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:18.315805] [I] [thread 103194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:18.315913] [I] [thread 103194] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:18.315926] [I] [thread 103194] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:18.472771] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:18.473303] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:19.474568] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:20.177244] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:20.177923] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:20.178698] [D] [thread 103199] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:20.178793] [I] [thread 103199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:20.178810] [I] [thread 103199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:20.178926] [I] [thread 103199] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:20.178942] [I] [thread 103199] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:20.334393] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:20.335030] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:21.336382] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:21.970120] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:21.970643] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:21.971424] [D] [thread 103204] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:21.971517] [I] [thread 103204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:21.971535] [I] [thread 103204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:21.971652] [I] [thread 103204] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:21.971666] [I] [thread 103204] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:22.149442] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:22.150084] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:23.151425] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:23.789708] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:23.790362] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:23.791078] [D] [thread 103209] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:23.791174] [I] [thread 103209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:23.791192] [I] [thread 103209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:23.791309] [I] [thread 103209] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:23.791323] [I] [thread 103209] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:23.951042] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:23.951645] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:24.952931] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:25.581624] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:25.582221] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:25.582984] [D] [thread 103214] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:25.583079] [I] [thread 103214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:25.583096] [I] [thread 103214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:25.583212] [I] [thread 103214] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:25.583225] [I] [thread 103214] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:25.740015] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:25.741151] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:26.742444] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:27.375602] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:27.376174] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:27.377044] [D] [thread 103219] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:27.377147] [I] [thread 103219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:27.377166] [I] [thread 103219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:27.377283] [I] [thread 103219] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:27.377297] [I] [thread 103219] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:27.545942] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:27.546387] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:28.547918] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:29.234503] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:29.235223] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:29.236120] [D] [thread 103224] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:29.236229] [I] [thread 103224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:29.236246] [I] [thread 103224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:29.236459] [I] [thread 103224] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:29.236484] [I] [thread 103224] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:29.395514] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:29.396126] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:30.396498] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:31.033820] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:31.034359] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:31.035162] [D] [thread 103230] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:31.035258] [I] [thread 103230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:31.035276] [I] [thread 103230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:31.035391] [I] [thread 103230] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:31.035405] [I] [thread 103230] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:31.197093] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:31.197426] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:32.198613] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:32.865591] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:32.866200] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:32.866919] [D] [thread 103237] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:32.867013] [I] [thread 103237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:32.867030] [I] [thread 103237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:32.867147] [I] [thread 103237] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:32.867162] [I] [thread 103237] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:33.023260] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:33.023759] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:34.025083] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:34.747548] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:34.748145] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:34.749033] [D] [thread 103242] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:34.749136] [I] [thread 103242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:34.749154] [I] [thread 103242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:34.749271] [I] [thread 103242] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:34.749284] [I] [thread 103242] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:34.909068] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:34.909408] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:35.910685] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:36.573960] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:36.574605] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:36.575348] [D] [thread 103248] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:36.575442] [I] [thread 103248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:36.575460] [I] [thread 103248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:36.575578] [I] [thread 103248] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:36.575591] [I] [thread 103248] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:36.733116] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:36.733467] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:37.734710] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:38.390697] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:38.391391] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:38.392426] [D] [thread 103254] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:38.392545] [I] [thread 103254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:38.392565] [I] [thread 103254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:38.392697] [I] [thread 103254] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:38.392715] [I] [thread 103254] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:38.469040] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:45:38.469120] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:45:38.470180] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,63,1699609467509,1699609538469
[m
[36m[09:45:38.609564] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:38.610025] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:39.611295] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:40.271113] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:40.271776] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:40.272571] [D] [thread 103261] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:40.272645] [I] [thread 103261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:40.272661] [I] [thread 103261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:40.272770] [I] [thread 103261] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:40.272782] [I] [thread 103261] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:40.430582] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:40.431143] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:41.432438] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:42.066305] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:42.066768] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:42.067588] [D] [thread 103268] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:42.067683] [I] [thread 103268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:42.067701] [I] [thread 103268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:42.067820] [I] [thread 103268] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:42.067833] [I] [thread 103268] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:42.227003] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:42.227409] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:43.228658] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:43.886577] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:43.886907] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:43.887920] [D] [thread 103275] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:43.888014] [I] [thread 103275] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:43.888031] [I] [thread 103275] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:43.888147] [I] [thread 103275] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:43.888161] [I] [thread 103275] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:44.050540] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:44.050867] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:45.052113] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:45.713037] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:45.713375] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:45.714585] [D] [thread 103281] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:45.714681] [I] [thread 103281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:45.714700] [I] [thread 103281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:45.714817] [I] [thread 103281] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:45.714830] [I] [thread 103281] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:45.925426] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:45.925755] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:46.927001] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:47.573913] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:47.574468] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:47.575521] [D] [thread 103287] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:47.575630] [I] [thread 103287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:47.575648] [I] [thread 103287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:47.575770] [I] [thread 103287] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:47.575786] [I] [thread 103287] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:47.759573] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:47.760119] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:48.760462] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:49.389567] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:49.390218] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:49.390994] [D] [thread 103293] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:49.391085] [I] [thread 103293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:49.391104] [I] [thread 103293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:49.391220] [I] [thread 103293] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:49.391234] [I] [thread 103293] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:49.556842] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:49.557362] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:50.558648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:51.187028] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:51.187636] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:51.188468] [D] [thread 103299] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:51.188538] [I] [thread 103299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:51.188554] [I] [thread 103299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:51.188664] [I] [thread 103299] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:51.188676] [I] [thread 103299] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:51.342648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:51.342975] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:52.344229] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:53.104370] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:53.104729] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:53.105744] [D] [thread 103304] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:53.105840] [I] [thread 103304] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:53.105858] [I] [thread 103304] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:53.105972] [I] [thread 103304] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:53.105986] [I] [thread 103304] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:53.276693] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:53.277050] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:53.779154] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:45:53.779233] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:45:53.780144] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,54,1699609480498,1699609553779
[m
[36m[09:45:54.278294] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:54.969964] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:54.970314] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:54.971374] [D] [thread 103312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:54.971476] [I] [thread 103312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:54.971495] [I] [thread 103312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:54.971611] [I] [thread 103312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:54.971624] [I] [thread 103312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:55.142821] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:55.143154] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:56.144525] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:56.810192] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:56.810949] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:56.811777] [D] [thread 103318] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:56.811883] [I] [thread 103318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:56.811903] [I] [thread 103318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:56.812029] [I] [thread 103318] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:56.812046] [I] [thread 103318] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:56.969785] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:56.970266] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:57.971462] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:58.652806] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:58.653411] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:58.654112] [D] [thread 103324] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:45:58.654205] [I] [thread 103324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:58.654222] [I] [thread 103324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:45:58.654340] [I] [thread 103324] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:45:58.654354] [I] [thread 103324] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:45:58.806418] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:58.806956] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:45:59.808277] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:00.436897] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:00.437318] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:00.438241] [D] [thread 103331] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:00.438339] [I] [thread 103331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:00.438358] [I] [thread 103331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:00.438472] [I] [thread 103331] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:00.438485] [I] [thread 103331] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:00.593749] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:00.594218] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:01.595500] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:02.193700] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:02.194282] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:02.195044] [D] [thread 103338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:02.195137] [I] [thread 103338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:02.195155] [I] [thread 103338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:02.195272] [I] [thread 103338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:02.195286] [I] [thread 103338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:02.349140] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:02.349471] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:03.350700] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:03.448582] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:46:03.448669] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:46:03.449699] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,47,1699609488404,1699609563448
[m
[36m[09:46:04.014644] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:04.014991] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:04.016690] [D] [thread 103344] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:04.016787] [I] [thread 103344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:04.016806] [I] [thread 103344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:04.016922] [I] [thread 103344] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:04.016936] [I] [thread 103344] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:04.175000] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:04.175335] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:05.176521] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:06.035660] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:06.036019] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:06.037050] [D] [thread 103350] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:06.037171] [I] [thread 103350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:06.037191] [I] [thread 103350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:06.037317] [I] [thread 103350] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:06.037338] [I] [thread 103350] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:06.194739] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:06.195103] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:07.196280] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:07.846577] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:07.846937] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:07.847934] [D] [thread 103356] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:07.848032] [I] [thread 103356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:07.848050] [I] [thread 103356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:07.848168] [I] [thread 103356] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:07.848229] [I] [thread 103356] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:08.005347] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:08.005716] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:09.006956] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:09.669580] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:09.669918] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:09.670879] [D] [thread 103364] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:09.670975] [I] [thread 103364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:09.670993] [I] [thread 103364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:09.671108] [I] [thread 103364] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:09.671121] [I] [thread 103364] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:09.725256] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:46:09.725363] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:46:09.726749] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,100,1699609505341,1699609569725
[m
[36m[09:46:09.866358] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:09.866769] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:10.868051] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:11.552786] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:11.553143] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:11.554195] [D] [thread 103371] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:11.554295] [I] [thread 103371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:11.554313] [I] [thread 103371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:11.554430] [I] [thread 103371] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:11.554444] [I] [thread 103371] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:11.709760] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:11.710097] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:12.711328] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:12.755091] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:46:12.755192] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:46:12.756653] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,24,1699609496930,1699609572755
[m
[36m[09:46:13.409989] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:13.410576] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:13.411369] [D] [thread 103378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:13.411467] [I] [thread 103378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:13.411485] [I] [thread 103378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:13.411602] [I] [thread 103378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:13.411618] [I] [thread 103378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:13.568127] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:13.568631] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:14.570058] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:15.216432] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:15.216744] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:15.218646] [D] [thread 103383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:15.218779] [I] [thread 103383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:15.218801] [I] [thread 103383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:15.218935] [I] [thread 103383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:15.218957] [I] [thread 103383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:15.368973] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:15.369617] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:16.370208] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:17.005692] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:17.006027] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:17.006998] [D] [thread 103390] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:17.007095] [I] [thread 103390] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:17.007113] [I] [thread 103390] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:17.007229] [I] [thread 103390] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:17.007244] [I] [thread 103390] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:17.166372] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:17.166779] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:18.168030] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:18.829224] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:18.829545] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:18.830621] [D] [thread 103396] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:18.830720] [I] [thread 103396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:18.830739] [I] [thread 103396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:18.830856] [I] [thread 103396] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:18.830869] [I] [thread 103396] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:18.990283] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:18.990627] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:19.991850] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:20.661049] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:20.661523] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:20.662392] [D] [thread 103402] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:20.662467] [I] [thread 103402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:20.662484] [I] [thread 103402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:20.662592] [I] [thread 103402] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:20.662604] [I] [thread 103402] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:20.825134] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:20.825646] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:21.503412] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:46:21.503524] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:46:21.504916] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 10980000,11040000,13,1699609505083,1699609581503
[m
[36m[09:46:21.826895] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:22.472188] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:22.472834] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:22.473588] [D] [thread 103407] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:22.473683] [I] [thread 103407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:22.473701] [I] [thread 103407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:22.473817] [I] [thread 103407] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:22.473830] [I] [thread 103407] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:22.637395] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:22.637732] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:23.638964] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:24.321160] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:24.321491] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:24.322606] [D] [thread 103412] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:24.322706] [I] [thread 103412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:24.322724] [I] [thread 103412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:24.322841] [I] [thread 103412] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:24.322856] [I] [thread 103412] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:24.478795] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:24.479310] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:25.480570] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:26.152655] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:26.153238] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:26.154063] [D] [thread 103419] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:26.154139] [I] [thread 103419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:26.154155] [I] [thread 103419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:26.154262] [I] [thread 103419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:26.154274] [I] [thread 103419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:26.335576] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:26.336042] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:27.337337] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:27.983425] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:27.983755] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:27.984940] [D] [thread 103425] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:27.985064] [I] [thread 103425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:27.985082] [I] [thread 103425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:27.985208] [I] [thread 103425] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:27.985226] [I] [thread 103425] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:28.153447] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:28.153796] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:29.154972] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:29.810193] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:29.810559] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:29.811525] [D] [thread 103430] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:29.811620] [I] [thread 103430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:29.811638] [I] [thread 103430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:29.811752] [I] [thread 103430] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:29.811766] [I] [thread 103430] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:29.967896] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:29.968225] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:30.969449] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:31.612984] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:31.613319] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:31.614285] [D] [thread 103435] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:31.614359] [I] [thread 103435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:31.614376] [I] [thread 103435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:31.614484] [I] [thread 103435] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:31.614496] [I] [thread 103435] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:31.794428] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:31.794783] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:32.796030] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:33.426893] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:33.427228] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:33.428298] [D] [thread 103440] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:33.428421] [I] [thread 103440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:33.428439] [I] [thread 103440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:33.428555] [I] [thread 103440] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:33.428569] [I] [thread 103440] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:33.598693] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:33.599056] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:34.600469] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:35.230749] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:35.231087] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:35.232293] [D] [thread 103445] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:35.232423] [I] [thread 103445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:35.232442] [I] [thread 103445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:35.232562] [I] [thread 103445] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:35.232575] [I] [thread 103445] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:35.387365] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:35.387696] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:36.388929] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:37.026848] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:37.027211] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:37.028248] [D] [thread 103450] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:37.028356] [I] [thread 103450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:37.028375] [I] [thread 103450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:37.028485] [I] [thread 103450] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:37.028498] [I] [thread 103450] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:37.183847] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:37.184191] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:38.185367] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:38.820306] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:38.820680] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:38.821789] [D] [thread 103455] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:38.821884] [I] [thread 103455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:38.821902] [I] [thread 103455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:38.822021] [I] [thread 103455] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:38.822035] [I] [thread 103455] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:38.982648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:38.982982] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:39.984228] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:40.601864] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:40.602196] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:40.603451] [D] [thread 103460] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:40.603561] [I] [thread 103460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:40.603580] [I] [thread 103460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:40.603696] [I] [thread 103460] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:40.603711] [I] [thread 103460] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:40.761796] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:40.762135] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:41.763328] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:42.390500] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:42.390811] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:42.391850] [D] [thread 103465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:42.391932] [I] [thread 103465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:42.391947] [I] [thread 103465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:42.392057] [I] [thread 103465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:42.392069] [I] [thread 103465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:42.548824] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:42.549178] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:43.550398] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:44.221040] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:44.221377] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:44.223091] [D] [thread 103470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:44.223190] [I] [thread 103470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:44.223208] [I] [thread 103470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:44.223324] [I] [thread 103470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:44.223356] [I] [thread 103470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:44.389131] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:44.389487] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:44.464632] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:46:44.464742] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:46:44.466089] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,63,1699609538270,1699609604464
[m
[36m[09:46:45.390743] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:46.133118] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:46.133720] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:46.134410] [D] [thread 103475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:46.134505] [I] [thread 103475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:46.134523] [I] [thread 103475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:46.134640] [I] [thread 103475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:46.134654] [I] [thread 103475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:46.298136] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:46.298476] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:47.299699] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:48.063197] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:48.063528] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:48.064704] [D] [thread 103480] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:48.064801] [I] [thread 103480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:48.064818] [I] [thread 103480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:48.064934] [I] [thread 103480] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:48.064948] [I] [thread 103480] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:48.225661] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:48.225997] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:49.227252] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:50.228578] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:51.229919] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:52.231193] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:53.232520] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:54.233848] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:55.235148] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:56.066474] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:56.066849] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:56.068597] [D] [thread 103485] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:46:56.068696] [I] [thread 103485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:56.068714] [I] [thread 103485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:46:56.068830] [I] [thread 103485] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:46:56.068845] [I] [thread 103485] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:46:57.068117] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:58.069369] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:58.603215] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:58.603574] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:46:59.604651] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:00.605956] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:01.191046] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:01.191363] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:01.192522] [D] [thread 103490] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:01.192617] [I] [thread 103490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:01.192636] [I] [thread 103490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:01.192756] [I] [thread 103490] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:01.192781] [I] [thread 103490] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:01.419821] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:01.420195] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:02.421447] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:03.009835] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:47:03.009940] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:47:03.011337] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11100000,11160000,100,1699609569546,1699609623010
[m
[36m[09:47:03.369199] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:03.369557] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:03.370556] [D] [thread 103495] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:03.370689] [I] [thread 103495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:03.370707] [I] [thread 103495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:03.370826] [I] [thread 103495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:03.370840] [I] [thread 103495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:03.574667] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:03.574989] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:04.576221] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:05.526064] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:05.526436] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:05.527355] [D] [thread 103500] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:05.527452] [I] [thread 103500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:05.527470] [I] [thread 103500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:05.527585] [I] [thread 103500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:05.527598] [I] [thread 103500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:05.734646] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:05.734988] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:06.736208] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:06.922811] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:47:06.922902] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:47:06.924038] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,54,1699609553647,1699609626922
[m
[36m[09:47:07.720913] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:07.721275] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:07.722877] [D] [thread 103505] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:07.722978] [I] [thread 103505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:07.722996] [I] [thread 103505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:07.723112] [I] [thread 103505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:07.723126] [I] [thread 103505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:07.926155] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:07.926478] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:08.927827] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:09.928514] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:09.941452] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:09.941789] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:09.943395] [D] [thread 103510] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:09.943488] [I] [thread 103510] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:09.943506] [I] [thread 103510] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:09.943624] [I] [thread 103510] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:09.943638] [I] [thread 103510] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:10.178141] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:10.178536] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:11.179808] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:12.181177] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:12.222480] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:12.222818] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:12.224450] [D] [thread 103515] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:12.224543] [I] [thread 103515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:12.224562] [I] [thread 103515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:12.224678] [I] [thread 103515] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:12.224691] [I] [thread 103515] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:12.433087] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:12.433434] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:13.434650] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:14.435934] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:14.455845] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:14.456185] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:14.457280] [D] [thread 103520] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:14.457382] [I] [thread 103520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:14.457399] [I] [thread 103520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:14.457517] [I] [thread 103520] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:14.457531] [I] [thread 103520] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:14.658359] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:14.658746] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:15.659980] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:16.637902] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:16.638258] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:16.639360] [D] [thread 103525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:16.639456] [I] [thread 103525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:16.639474] [I] [thread 103525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:16.639593] [I] [thread 103525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:16.639606] [I] [thread 103525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:16.854172] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:16.854515] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:17.115510] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:47:17.115615] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:47:17.117034] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,47,1699609563306,1699609637115
[m
[36m[09:47:17.855747] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:18.804998] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:18.805322] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:18.806406] [D] [thread 103530] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:18.806507] [I] [thread 103530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:18.806525] [I] [thread 103530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:18.806641] [I] [thread 103530] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:18.806655] [I] [thread 103530] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:19.004540] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:19.004889] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:20.006134] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:21.007342] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:22.008604] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:22.206361] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:22.206739] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:22.208398] [D] [thread 103536] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:22.208496] [I] [thread 103536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:22.208515] [I] [thread 103536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:22.208634] [I] [thread 103536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:22.208655] [I] [thread 103536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:22.410567] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:22.410928] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:23.412181] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:24.413438] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:24.430444] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:24.430801] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:24.431957] [D] [thread 103541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:24.432073] [I] [thread 103541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:24.432093] [I] [thread 103541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:24.432224] [I] [thread 103541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:24.432240] [I] [thread 103541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:24.635184] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:24.635543] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:25.636745] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:26.586732] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:26.587055] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:26.588120] [D] [thread 103547] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:26.588215] [I] [thread 103547] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:26.588233] [I] [thread 103547] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:26.588388] [I] [thread 103547] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:26.588408] [I] [thread 103547] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:26.807351] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:26.807887] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:27.232220] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:47:27.232371] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:47:27.233662] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,24,1699609572565,1699609647232
[m
[36m[09:47:27.809143] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:28.701832] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:28.702395] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:28.703159] [D] [thread 103552] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:28.703254] [I] [thread 103552] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:28.703271] [I] [thread 103552] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:28.703388] [I] [thread 103552] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:28.703402] [I] [thread 103552] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:28.878656] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:28.879122] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:29.880411] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:30.549234] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:30.549582] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:30.551200] [D] [thread 103558] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:30.551298] [I] [thread 103558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:30.551315] [I] [thread 103558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:30.551432] [I] [thread 103558] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:30.551445] [I] [thread 103558] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:30.718446] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:30.718771] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:31.719972] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:32.358409] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:32.358763] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:32.359755] [D] [thread 103564] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:32.359852] [I] [thread 103564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:32.359870] [I] [thread 103564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:32.359985] [I] [thread 103564] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:32.359998] [I] [thread 103564] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:32.515198] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:32.515541] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:33.516793] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:34.149776] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:34.150108] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:34.151342] [D] [thread 103571] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:34.151431] [I] [thread 103571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:34.151448] [I] [thread 103571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:34.151562] [I] [thread 103571] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:34.151577] [I] [thread 103571] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:34.305819] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:34.306148] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:35.307369] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:35.958486] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:35.958836] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:35.959941] [D] [thread 103576] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:35.960049] [I] [thread 103576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:35.960066] [I] [thread 103576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:35.960185] [I] [thread 103576] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:35.960212] [I] [thread 103576] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:36.126949] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:36.127436] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:37.128648] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:37.760138] [D] [thread 101860] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[09:47:37.760254] [D] [thread 101860] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[09:47:37.761585] [D] [thread 101860] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/bottomUpDebsThreeLevel_tumbling_1_32000_200.out following content 11040000,11100000,13,1699609581303,1699609657760
[m
[36m[09:47:37.786779] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:37.787118] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:37.788853] [D] [thread 103582] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:37.788950] [I] [thread 103582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:37.788968] [I] [thread 103582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:37.789086] [I] [thread 103582] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:37.789101] [I] [thread 103582] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:37.949168] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:37.949502] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:38.950861] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.650493] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.650826] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.651901] [D] [thread 103588] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[09:47:39.652004] [I] [thread 103588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:39.652021] [I] [thread 103588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[09:47:39.652139] [I] [thread 103588] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[09:47:39.652153] [I] [thread 103588] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[09:47:39.818051] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.818407] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.979263] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[09:47:39.979621] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[09:47:39.980636] [I] [thread 103593] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[09:47:39.980725] [D] [thread 103593] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[09:47:39.980861] [I] [thread 103593] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[09:47:39.980878] [I] [thread 103593] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[09:47:39.980922] [I] [thread 101850] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[09:47:39.980973] [I] [thread 101850] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[09:47:39.980993] [I] [thread 101850] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[09:47:39.981040] [I] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[09:47:39.981055] [D] [thread 101850] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[09:47:39.981103] [D] [thread 101850] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[09:47:39.981267] [D] [thread 101850] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(4: {FileSinkDescriptor()}) as root operator.[m
[36m[09:47:39.981751] [D] [thread 101850] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[09:47:39.981807] [D] [thread 101850] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[09:47:39.981888] [D] [thread 101850] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[09:47:39.981905] [D] [thread 101850] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[09:47:39.981913] [D] [thread 101850] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[09:47:39.981941] [D] [thread 101850] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[09:47:39.981960] [D] [thread 101850] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[09:47:39.981990] [D] [thread 101850] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[09:47:39.982002] [D] [thread 101850] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[09:47:39.982136] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:34901[m
[36m[09:47:39.982167] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:34901 queryId=1[m
[36m[09:47:39.987472] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:39417[m
[36m[09:47:39.987562] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:39417 queryId=1[m
[36m[09:47:39.991885] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:46675[m
[36m[09:47:39.992013] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:46675 queryId=1[m
[36m[09:47:39.996395] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:38365[m
[36m[09:47:39.996471] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:38365 queryId=1[m
[36m[09:47:40.000771] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:33517[m
[36m[09:47:40.000853] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:33517 queryId=1[m
[36m[09:47:40.005178] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:46753[m
[36m[09:47:40.005261] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:46753 queryId=1[m
[36m[09:47:40.009525] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:38261[m
[36m[09:47:40.009609] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:38261 queryId=1[m
[36m[09:47:40.014113] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:44357[m
[36m[09:47:40.014204] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:44357 queryId=1[m
[36m[09:47:40.018526] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:45253[m
[36m[09:47:40.018612] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:45253 queryId=1[m
[36m[09:47:40.022856] [D] [thread 101850] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:36941[m
[36m[09:47:40.022944] [D] [thread 101850] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:36941 queryId=1[m
[36m[09:47:40.027146] [D] [thread 101850] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[09:47:40.227463] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.227663] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::26::0::0(threadId=0)[m
[32m[09:47:40.227820] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::26::0::0; newCnt(1)[m
[36m[09:47:40.227889] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::26::0::0, counter is at 1.[m
[36m[09:47:40.228020] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.228076] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:40.231502] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.231750] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::32::0::0(threadId=0)[m
[32m[09:47:40.231867] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(1)[m
[36m[09:47:40.231914] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::32::0::0, counter is at 1.[m
[36m[09:47:40.231986] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.232029] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:40.316014] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.316155] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::44::0::0(threadId=0)[m
[32m[09:47:40.316244] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::44::0::0; newCnt(1)[m
[36m[09:47:40.316282] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::44::0::0, counter is at 1.[m
[36m[09:47:40.316382] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.316421] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:40.463853] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.464039] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::38::0::0(threadId=0)[m
[32m[09:47:40.464164] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::38::0::0; newCnt(1)[m
[36m[09:47:40.464222] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::38::0::0, counter is at 1.[m
[36m[09:47:40.464305] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.464406] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[09:47:40.525694] [E] [thread 103569] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::35::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaab995213f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff95c84d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaab9952af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9faf42ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9f90cf23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cb3207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff963346e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cc57e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cc6773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaab995213f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffff95c84d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaab9952af7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9faf42ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9f90cf23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cb3207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff963346e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cc57e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff97cc6773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[09:47:40.545035] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.545284] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::50::0::0(threadId=0)[m
[32m[09:47:40.545390] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::50::0::0; newCnt(1)[m
[36m[09:47:40.545438] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::50::0::0, counter is at 1.[m
[36m[09:47:40.545524] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.545556] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:40.776145] [D] [thread 101859] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:41971): EndOfStream received for channel [m
[36m[09:47:40.776373] [D] [thread 101859] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::56::0::0(threadId=0)[m
[32m[09:47:40.776498] [I] [thread 101859] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::56::0::0; newCnt(1)[m
[36m[09:47:40.776547] [D] [thread 101859] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::56::0::0, counter is at 1.[m
[36m[09:47:40.776629] [D] [thread 101859] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[09:47:40.776689] [W] [thread 101859] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:40.980858] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[09:47:41.046368] [E] [thread 103594] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::23::0::0 is still alive: 1:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3e4026f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff92921d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3e40c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c80041f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c619053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949bd6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff93035b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949cfca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949d0c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3e4026f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff92921d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaae3e40c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c80041f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c619053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949bd6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff93035b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949cfca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff949d0c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[09:47:41.571108] [D] [thread 101862] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[09:47:41.571222] [D] [thread 101862] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[09:47:41.571306] [D] [thread 101862] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  7  type= HardStop[m
[36m[09:47:41.571345] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:41.571404] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.571538] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.571858] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 26 is notifying completion: HardStop[m
[36m[09:47:41.571903] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::26::0::0[m
[36m[09:47:41.571945] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 26 is terminated; tokens left = 7[m
[36m[09:47:41.571978] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 26 terminationType=HardStop[m
[36m[09:47:41.572049] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::26::0::0 Thread 0[m
[36m[09:47:41.572077] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.572084] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::26::0::0[m
[36m[09:47:41.572104] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::26::0::0[m
[36m[09:47:41.572126] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::26::0::0[m
[32m[09:47:41.572182] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::26::0::0; newCnt(0)[m
[36m[09:47:41.572186] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.572496] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=26 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.572535] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.572555] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:26 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.572580] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:41.572616] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.572726] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.572929] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 32 is notifying completion: HardStop[m
[36m[09:47:41.572972] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 32 is terminated; tokens left = 6[m
[36m[09:47:41.572980] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::32::0::0[m
[36m[09:47:41.572996] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 32 terminationType=HardStop[m
[36m[09:47:41.573031] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::32::0::0 Thread 0[m
[36m[09:47:41.573054] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::32::0::0[m
[36m[09:47:41.573055] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.573070] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::32::0::0[m
[36m[09:47:41.573103] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::32::0::0[m
[36m[09:47:41.573147] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[32m[09:47:41.573149] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::32::0::0; newCnt(0)[m
[36m[09:47:41.573328] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=32 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.573366] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.573380] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:32 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.573404] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:41.573438] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.573515] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.573693] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 38 is notifying completion: HardStop[m
[36m[09:47:41.573728] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 38 is terminated; tokens left = 5[m
[36m[09:47:41.573739] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::38::0::0[m
[36m[09:47:41.573751] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 38 terminationType=HardStop[m
[36m[09:47:41.573787] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::38::0::0 Thread 0[m
[36m[09:47:41.573806] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.573809] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::38::0::0[m
[36m[09:47:41.573839] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::38::0::0[m
[36m[09:47:41.573867] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::38::0::0[m
[36m[09:47:41.573892] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[32m[09:47:41.573914] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::38::0::0; newCnt(0)[m
[36m[09:47:41.574042] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=38 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.574083] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.574086] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:38 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.574122] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:41.574156] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.574230] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.574414] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 44 is notifying completion: HardStop[m
[36m[09:47:41.574449] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 44 is terminated; tokens left = 4[m
[36m[09:47:41.574449] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::44::0::0[m
[36m[09:47:41.574474] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 44 terminationType=HardStop[m
[36m[09:47:41.574494] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::44::0::0 Thread 0[m
[36m[09:47:41.574516] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::44::0::0[m
[36m[09:47:41.574533] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::44::0::0[m
[36m[09:47:41.574542] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.574550] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::44::0::0[m
[32m[09:47:41.574593] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::44::0::0; newCnt(0)[m
[36m[09:47:41.574631] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.574813] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=44 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.574867] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:44 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.574890] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0[m
[36m[09:47:41.574923] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.574923] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.575023] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.575190] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 50 is notifying completion: HardStop[m
[36m[09:47:41.575227] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 50 is terminated; tokens left = 3[m
[36m[09:47:41.575226] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::50::0::0[m
[36m[09:47:41.575250] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 50 terminationType=HardStop[m
[36m[09:47:41.575273] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::50::0::0 Thread 0[m
[36m[09:47:41.575296] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::50::0::0[m
[36m[09:47:41.575302] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.575312] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::50::0::0[m
[36m[09:47:41.575345] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::50::0::0[m
[36m[09:47:41.575382] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[32m[09:47:41.575390] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::50::0::0; newCnt(0)[m
[36m[09:47:41.575521] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=50 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.575556] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.575562] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:50 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.575584] [D] [thread 101862] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0[m
2023-11-[36m[09:47:41.575612] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
10 09:47:41.577 postReconfigurationCallback: queryId=1, querySubPlanId=7; queryId=1 subPlanId=7 processedTasks=49 processedTuple=49 processedBuffers=49 processedWatermarks=0 latencyAVG=1699609375661 queueSizeAVG=0 availableGlobalBufferAVG=895 availableFixedBufferAVG=0
[36m[09:47:41.575702] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[09:47:41.575876] [D] [thread 101862] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 7 Source 56 is notifying completion: HardStop[m
[36m[09:47:41.575911] [D] [thread 101862] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 7 Source 56 is terminated; tokens left = 2[m
[36m[09:47:41.575917] [D] [thread 101860] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::56::0::0[m
[36m[09:47:41.575934] [D] [thread 101862] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 56 terminationType=HardStop[m
[36m[09:47:41.575958] [D] [thread 101860] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::56::0::0 Thread 0[m
[36m[09:47:41.575981] [D] [thread 101860] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::56::0::0[m
[36m[09:47:41.575986] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.575997] [D] [thread 101860] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::56::0::0[m
[36m[09:47:41.576015] [D] [thread 101860] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::56::0::0[m
[32m[09:47:41.576058] [I] [thread 101860] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::56::0::0; newCnt(0)[m
[36m[09:47:41.576063] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.576200] [D] [thread 101862] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=56 reconfType=HardEndOfStream queryId=1 querySubPlanId=7 threadPool->getNumberOfThreads()=1[m
[36m[09:47:41.576237] [D] [thread 101860] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[09:47:41.576244] [D] [thread 101862] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:56 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[09:47:41.576523] [D] [thread 101860] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 7 Sink FileSink() is terminated; tokens left = 1[m
[36m[09:47:41.576594] [D] [thread 101860] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.576724] [D] [thread 101860] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=false type HardEndOfStream[m
[36m[09:47:41.576956] [D] [thread 101860] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[09:47:41.577436] [D] [thread 101860] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=7[m
[36m[09:47:41.577472] [D] [thread 101860] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=7[m
[36m[09:47:41.577487] [D] [thread 101860] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-7 is marked as stopped now[m
[36m[09:47:41.577678] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[09:47:41.577856] [D] [thread 101862] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 7 blocking=true type Destroy[m
[36m[09:47:41.578306] [D] [thread 101862] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  7[m
[36m[09:47:41.578433] [D] [thread 101862] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 7 was successful[m
[36m[09:47:41.578460] [D] [thread 101862] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  7  succeeded[m
[36m[09:47:41.578479] [D] [thread 101862] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[1m[41m[09:47:41.585092] [C] [thread 101850] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[09:47:41.585266] [I] [thread 101850] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[09:47:41.585283] [I] [thread 101850] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[09:47:41.585352] [W] [thread 101850] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[09:47:41.585362] [I] [thread 101850] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[09:47:41.585370] [W] [thread 101850] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[31m[1m[09:47:41.663274] [E] [thread 101866] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:47:41.664204] [W] [thread 101866] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:44357 went dead so we remove it[m
[32m[09:47:41.664394] [I] [thread 101866] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[32m[09:47:41.664420] [I] [thread 101866] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:47:41.664450] [I] [thread 101866] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:47:41.664458] [I] [thread 101866] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:47:41.664472] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:47:41.664483] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:47:41.664526] [D] [thread 101866] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:47:41.669374] [E] [thread 101866] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:47:41.670266] [W] [thread 101866] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:45253 went dead so we remove it[m
[32m[09:47:41.670412] [I] [thread 101866] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[32m[09:47:41.670436] [I] [thread 101866] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:47:41.670464] [I] [thread 101866] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:47:41.670472] [I] [thread 101866] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:47:41.670483] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:47:41.670504] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:47:41.670529] [D] [thread 101866] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[09:47:41.675458] [E] [thread 101866] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[09:47:41.676480] [W] [thread 101866] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:36941 went dead so we remove it[m
[32m[09:47:41.676625] [I] [thread 101866] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[32m[09:47:41.676650] [I] [thread 101866] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[09:47:41.676673] [I] [thread 101866] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[09:47:41.676681] [I] [thread 101866] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[09:47:41.676699] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[09:47:41.676750] [I] [thread 101866] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[09:47:41.676779] [D] [thread 101866] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[09:47:41.982276] [D] [thread 101865] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
