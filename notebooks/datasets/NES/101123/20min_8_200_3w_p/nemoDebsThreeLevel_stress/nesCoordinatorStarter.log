
███╗░░██╗███████╗██████╗░██╗░░░██╗██╗░░░░░░█████╗░░██████╗████████╗██████╗░███████╗░█████╗░███╗░░░███╗
████╗░██║██╔════╝██╔══██╗██║░░░██║██║░░░░░██╔══██╗██╔════╝╚══██╔══╝██╔══██╗██╔════╝██╔══██╗████╗░████║
██╔██╗██║█████╗░░██████╦╝██║░░░██║██║░░░░░███████║╚█████╗░░░░██║░░░██████╔╝█████╗░░███████║██╔████╔██║
██║╚████║██╔══╝░░██╔══██╗██║░░░██║██║░░░░░██╔══██║░╚═══██╗░░░██║░░░██╔══██╗██╔══╝░░██╔══██║██║╚██╔╝██║
██║░╚███║███████╗██████╦╝╚██████╔╝███████╗██║░░██║██████╔╝░░░██║░░░██║░░██║███████╗██║░░██║██║░╚═╝░██║
╚═╝░░╚══╝╚══════╝╚═════╝░░╚═════╝░╚══════╝╚═╝░░╚═╝╚═════╝░░░░╚═╝░░░╚═╝░░╚═╝╚══════╝╚═╝░░╚═╝╚═╝░░░░░╚═╝

▒█▀▀█ █▀▀█ █▀▀█ █▀▀█ █▀▀▄ ░▀░ █▀▀▄ █▀▀█ ▀▀█▀▀ █▀▀█ █▀▀█ 
▒█░░░ █░░█ █░░█ █▄▄▀ █░░█ ▀█▀ █░░█ █▄▄█ ░░█░░ █░░█ █▄▄▀ 
▒█▄▄█ ▀▀▀▀ ▀▀▀▀ ▀░▀▀ ▀▀▀░ ▀▀▀ ▀░░▀ ▀░░▀ ░░▀░░ ▀▀▀▀ ▀░▀▀ v0.5.215-SNAPSHOT
[32m[17:40:17.751116] [I] [thread 155999] [nesCoordinatorStarter.cpp:48] [main] start coordinator with Name: restIp
Description: NES ip of the REST server.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: coordinatorIp
Description: RPC IP address of NES Coordinator.
Value: 192.168.2.11
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the Coordinator
Value: 4000
Default Value: 4000

Name: restPort
Description: Port exposed for rest endpoints
Value: 8081
Default Value: 8081

Name: dataPort
Description: Data server port of the Coordinator
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_DEBUG
Default Value: LOG_INFO

Name: enableQueryReconfiguration
Description: Enable reconfiguration of running query plans. (Default: false)
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 

Name: workerId
Description: Worker id.
Value: 0
Default Value: 0

Name: localWorkerIp
Description: Worker IP.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: coordinatorIp
Description: Server IP of the NES Coordinator to which the NES Worker should connect.
Value: 127.0.0.1
Default Value: 127.0.0.1

Name: rpcPort
Description: RPC server port of the NES Worker.
Value: 0
Default Value: 0

Name: dataPort
Description: Data port of the NES Worker.
Value: 0
Default Value: 0

Name: coordinatorPort
Description: RPC server Port of the NES Coordinator to which the NES Worker should connect. Needs to be set and needs to be the same as rpcPort in Coordinator.
Value: 4000
Default Value: 4000

Name: numberOfSlots
Description: Number of computing slots for the NES Worker.
Value: 65535
Default Value: 65535

Name: numWorkerThreads
Description: Number of worker threads.
Value: 4
Default Value: 1

Name: numberOfBuffersInGlobalBufferManager
Description: Number buffers in global buffer pool.
Value: 1024
Default Value: 1024

Name: numberOfBuffersPerWorker
Description: Number buffers in task local buffer pool.
Value: 128
Default Value: 128

Name: numberOfBuffersInSourceLocalBufferPool
Description: Number buffers in source local buffer pool.
Value: 64
Default Value: 64

Name: bufferSizeInBytes
Description: BufferSizeInBytes.
Value: 32000
Default Value: 4096

Name: parentId
Description: Parent ID of this node.
Value: 0
Default Value: 0

Name: logLevel
Description: The log level (LOG_NONE, LOG_WARNING, LOG_DEBUG, LOG_INFO, LOG_TRACE)
Value: LOG_INFO
Default Value: LOG_INFO

Name: sourcePinList
Description: comma separated list of where to map the sources
Value: 
Default Value: 

Name: workerPinList
Description: comma separated list of where to map the worker
Value: 
Default Value: 

Name: queuePinList
Description: comma separated list of where to map the worker on the queue
Value: 
Default Value: 

Name: numaAwareness
Description: Enable Numa-Aware execution
Value: 0
Default Value: 0

Name: enableMonitoring
Description: Enable monitoring
Value: 0
Default Value: 0

Name: monitoringWaitTime
Description: Sampling period of metrics (ms).
Value: 1000
Default Value: 1000

Name: queryCompilerType
Description: Indicates the type for the query compiler [DEFAULT_QUERY_COMPILER|NAUTILUS_QUERY_COMPILER].
Value: NAUTILUS_QUERY_COMPILER
Default Value: DEFAULT_QUERY_COMPILER

Name: compilationStrategy
Description: Indicates the optimization strategy for the query compiler [FAST|DEBUG|OPTIMIZE|PROXY_INLINING].
Value: OPTIMIZE
Default Value: OPTIMIZE

Name: pipeliningStrategy
Description: Indicates the pipelining strategy for the query compiler [OPERATOR_FUSION|OPERATOR_AT_A_TIME].
Value: OPERATOR_FUSION
Default Value: OPERATOR_FUSION

Name: queryCompilerNautilusBackendConfig
Description: Indicates the nautilus backend for the nautilus query compiler [MLIR_COMPILER|INTERPRETER|BC_INTERPRETER|FLOUNDER_COMPILER].
Value: MLIR_COMPILER
Default Value: MLIR_COMPILER

Name: outputBufferOptimizationLevel
Description: Indicates the OutputBufferAllocationStrategy [ALL|NO|ONLY_INPLACE_OPERATIONS_NO_FALLBACK,|REUSE_INPUT_BUFFER_AND_OMIT_OVERFLOW_CHECK_NO_FALLBACK,|REUSE_INPUT_BUFFER_NO_FALLBACK|OMIT_OVERFLOW_CHECK_NO_FALLBACK]. 
Value: ALL
Default Value: ALL

Name: windowingStrategy
Description: Indicates the windowingStrategy [LEGACY|SLICING|BUCKETING]. 
Value: LEGACY
Default Value: LEGACY

Name: useCompilationCache
Description: Enable use compilation caching
Value: 0
Default Value: 0

Name: numberOfPartitions
Description: Partitions in the hash table
Value: 1
Default Value: 1

Name: pageSize
Description: Page size of hash table
Value: 131072
Default Value: 131072

Name: preAllocPageCnt
Description: Page count of pre allocated pages in each bucket hash table
Value: 1
Default Value: 1

Name: cudaSdkPath
Description: Path to CUDA SDK.
Value: /usr/local/cuda
Default Value: /usr/local/cuda

Name: maxHashTableSize
Description: Maximum size of hash table
Value: 2097152
Default Value: 2097152

Name: joinStrategy
Description: Indicates the windowingStrategy[HASH_JOIN_LOCAL|HASH_JOIN_GLOBAL_LOCKING|HASH_JOIN_GLOBAL_LOCK_FREE|NESTED_LOOP_JOIN]. 
Value: NESTED_LOOP_JOIN
Default Value: NESTED_LOOP_JOIN


Name: physicalSources
Description: Physical sources


Name: nodeSpatialType
Description: specifies if the worker has no known location or if it is a fixed location node or mobile node
Value: NO_LOCATION
Default Value: NO_LOCATION

Name: locationBufferSize
Description: The amount of past locations to be recorded in order to predict the future trajectory
Value: 30
Default Value: 30

Name: locationBufferSaveRate
Description: Determines after how many location updates a new location will be inserted in the location buffer
Value: 4
Default Value: 4

Name: pathDistanceDelta
Description: when deviating further than delta meters from the current predicted path, an update of the prediction will be triggered
Value: 20
Default Value: 20

Name: nodeInfoDownloadRadius
Description: The radius in meters in which nodes will be downloaded
Value: 10000
Default Value: 10000

Name: nodeIndexUpdateThreshold
Description: Trigger download of new node info when the device is less than threshold away from the boundary of the area covered by the current info
Value: 2000
Default Value: 2000

Name: defaultCoverageRadius
Description: The coverage in meters each field node is assumed to have
Value: 1000
Default Value: 1000

Name: pathPredictionLength
Description: The Length of the predicted path to be computed
Value: 10000
Default Value: 10000

Name: speedDifferenceThresholdFactor
Description: The factor by which the speed needs to change to trigger a recalculation of reconnect predictions
Value: 1e-05
Default Value: 1e-05

Name: sendDevicePositionUpdateThreshold
Description: The distance in meters after which the device will report it's new position in meters
Value: 100
Default Value: 100

Name: pushPositionUpdates
Description: determines if position updates should be sent to the coordinator
Value: 1
Default Value: 1

Name: mobilityHandlerUpdateInterval
Description: the time which the thread running at the worker mobility handler will sleep after each iteration
Value: 10000
Default Value: 10000

Name: locationProviderType
Description: the kind of interface which the  mobile worker gets its geolocation info from
Value: BASE
Default Value: BASE

Name: locationProviderConfig
Description: the configuration data for the location interface
Value: 
Default Value: 

Name: locationProviderSimulatedStartTime
Description: The start time to be simulated if device movement is simulated
Value: 0
Default Value: 0


Name: numberOfQueues
Description: Number of processing queues.
Value: 1
Default Value: 1

Name: numberOfThreadsPerQueue
Description: Number of threads per processing queue.
Value: 0
Default Value: 0

Name: numberOfBuffersPerEpoch
Description: Number of tuple buffers allowed in one epoch.
Value: 100
Default Value: 100

Name: queryManagerMode
Description: Which mode the query manager is running in. (Dynamic, Static, NumaAware, Invalid)
Value: Dynamic
Default Value: Dynamic

Name: enableSourceSharing
Description: Enable source sharing
Value: 0
Default Value: 0

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: configPath
Description: Path to configuration file.
Value: 
Default Value: 


Name: workerConfigPath
Description: Path to a configuration file for the internal worker.
Value: 
Default Value: 

Name: queryBatchSize
Description: The number of queryIdAndCatalogEntryMapping to be processed together
Value: 1
Default Value: 1

Name: queryMergerRule
Description: The rule to be used for performing query merging
Value: DefaultQueryMergerRule
Default Value: DefaultQueryMergerRule

Name: memoryLayoutPolicy
Description: selects the memory layout selection policy can be [FORCE_ROW_LAYOUT|FORCE_COLUMN_LAYOUT]
Value: FORCE_ROW_LAYOUT
Default Value: FORCE_ROW_LAYOUT

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: performDistributedWindowOptimization
Description: Enables the distribution of window aggregations.
Value: 1
Default Value: 1

Name: distributedWindowChildThreshold
Description: Threshold for the distribution of window aggregations.
Value: 1
Default Value: 2

Name: distributedWindowCombinerThreshold
Description: Threshold for the insertion of pre-aggregation operators.
Value: 1
Default Value: 4

Name: performOnlySourceOperatorExpansion
Description: Perform only source operator duplication when applying Logical Source Expansion Rewrite Rule. (Default: false)
Value: 0
Default Value: 0

Name: advanceSemanticValidation
Description: Perform advance semantic validation on the incoming queryIdAndCatalogEntryMapping. (Default: false)
Value: 0
Default Value: 0

Name: enableNemoPlacement
Description: Enables NEMO distributed window rule to use central windows instead of the distributed windows. (Default: false)
Value: 1
Default Value: 0


Name: logicalSources
Description: Logical Sources

Name: healthCheckWaitTime
Description: Number of seconds to wait between health checks
Value: 1
Default Value: 1

Name: restServerCorsAllowedOrigin
Description: The allowed origins to be set in the header of the responses to rest requests
Value: 
Default Value: 

[m
[32m[17:40:17.751298] [I] [thread 155999] [nesCoordinatorStarter.cpp:50] [main] creating coordinator[m
[36m[17:40:17.751526] [D] [thread 155999] [NesCoordinator.cpp:81] [NesCoordinator] NesCoordinator() restIp=192.168.2.11 restPort=8081 rpcIp=192.168.2.11 rpcPort=4000[m
[36m[17:40:17.752659] [D] [thread 155999] [ExecutablePath.cpp:80] [loadRuntimePathConfig] Detected a build dir as a execution location[m
[32m[17:40:17.753112] [I] [thread 155999] [ExecutablePath.cpp:113] [loadRuntimePathConfig] RuntimePathConfig: 
clangBinaryPath: /home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16
includePaths: 
	/home/ubuntu/git/nebulastream/build/include/nebulastream
libPaths:
	/home/ubuntu/git/nebulastream/build/nes-common/
	/home/ubuntu/git/nebulastream/build/nes-runtime/
	/home/ubuntu/git/nebulastream/build/nes-core/
	/home/ubuntu/git/nebulastream/build/nes-data-types/[m
[36m[17:40:17.754154] [D] [thread 155999] [SourceCatalog.cpp:41] [SourceCatalog] SourceCatalog: construct source catalog[m
[36m[17:40:17.754235] [D] [thread 155999] [SourceCatalog.cpp:31] [addDefaultSources] Sourcecatalog addDefaultSources[m
[36m[17:40:17.755006] [D] [thread 155999] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source default_logical already exist.[m
[36m[17:40:17.755131] [D] [thread 155999] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source default_logical[m
[36m[17:40:17.755252] [D] [thread 155999] [SourceCatalog.cpp:43] [SourceCatalog] SourceCatalog: construct source catalog successfully[m
[36m[17:40:17.755672] [D] [thread 155999] [SourceCatalogService.cpp:30] [SourceCatalogService] SourceCatalogService()[m
[36m[17:40:17.755827] [D] [thread 155999] [TopologyManagerService.cpp:36] [TopologyManagerService] TopologyManagerService()[m
[36m[17:40:17.808618] [D] [thread 155999] [RequestProcessorService.cpp:62] [RequestProcessorService] QueryRequestProcessorService()[m
[36m[17:40:17.808707] [D] [thread 155999] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:40:17.809195] [D] [thread 155999] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:40:17.809672] [D] [thread 155999] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[17:40:17.810072] [D] [thread 155999] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[17:40:17.810388] [D] [thread 155999] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[17:40:17.810588] [D] [thread 155999] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[17:40:17.811038] [D] [thread 155999] [BinaryOperatorSortRule.cpp:28] [BinaryOperatorSortRule] BinaryOperatorSortRule()[m
[36m[17:40:17.812271] [D] [thread 155999] [DistributedWindowRule.cpp:36] [DistributedWindowRule] Create DistributedWindowRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[17:40:17.812379] [D] [thread 155999] [NemoWindowPinningRule.cpp:45] [NemoWindowPinningRule] Create NemoWindowPinningRule with distributedWindowChildThreshold: 1 distributedWindowCombinerThreshold: 1[m
[36m[17:40:17.812696] [D] [thread 155999] [SignatureInferencePhase.cpp:26] [SignatureInferencePhase] SignatureInferencePhase()[m
[36m[17:40:17.813057] [D] [thread 155999] [QueryPlacementPhase.cpp:39] [QueryPlacementPhase] QueryPlacementPhase()[m
[36m[17:40:17.813353] [D] [thread 155999] [QueryUndeploymentPhase.cpp:35] [QueryUndeploymentPhase] QueryUndeploymentPhase()[m
[36m[17:40:17.814410] [D] [thread 155999] [QueryService.cpp:56] [QueryService] QueryService()[m
[36m[17:40:17.814992] [D] [thread 155999] [MonitoringService.cpp:37] [MonitoringService] MonitoringService: Initializing with monitoring= false[m
[36m[17:40:17.815187] [D] [thread 155999] [LatestEntriesMetricStore.cpp:23] [LatestEntriesMetricStore] LatestEntriesMetricStore: Init NewestMetricStore[m
[36m[17:40:17.815520] [D] [thread 155999] [MonitoringManager.cpp:70] [MonitoringManager] MonitoringManager: Init with monitoring= false , storage= NewestEntry [m
[33m[1m[17:40:17.815634] [W] [thread 155999] [MonitoringManager.cpp:194] [registerLogicalMonitoringStreams] MonitoringManager: Monitoring is disabled, registering of logical monitoring streams not possible.[m
[32m[17:40:17.815692] [I] [thread 155999] [nesCoordinatorStarter.cpp:53] [main] Starting Coordinator[m
[36m[17:40:17.815721] [D] [thread 155999] [NesCoordinator.cpp:159] [startCoordinator] NesCoordinator start[m
[36m[17:40:17.816169] [D] [thread 155999] [NesCoordinator.cpp:174] [startCoordinator] NesCoordinator: startCoordinatorRPCServer: Building GRPC Server[m
[32m[17:40:17.816187] [I] [thread 156007] [NesCoordinator.cpp:169] [operator()] NesCoordinator: started queryRequestProcessor[m
[36m[17:40:17.816232] [D] [thread 156007] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[17:40:17.816607] [D] [thread 156008] [NesCoordinator.cpp:180] [operator()] NesCoordinator: buildAndStartGRPCServer[m
[36m[17:40:17.823648] [D] [thread 156008] [NesCoordinator.cpp:354] [buildAndStartGRPCServer] NesCoordinator: buildAndStartGRPCServerServer listening on address=192.168.2.11:4000[m
[36m[17:40:17.823681] [D] [thread 155999] [NesCoordinator.cpp:185] [startCoordinator] NesCoordinator:buildAndStartGRPCServer: ready[m
[36m[17:40:17.823716] [D] [thread 155999] [NesCoordinator.cpp:187] [startCoordinator] NesCoordinator: Register Logical sources[m
[36m[17:40:17.823816] [D] [thread 155999] [NesCoordinator.cpp:192] [startCoordinator] NesCoordinator: Finished Registering Logical source[m
[36m[17:40:17.823826] [D] [thread 155999] [NesCoordinator.cpp:195] [startCoordinator] NesCoordinator::startCoordinator: start nes worker[m
[36m[17:40:17.824655] [D] [thread 155999] [NesWorker.cpp:65] [NesWorker] NesWorker: constructed[m
[36m[17:40:17.824846] [D] [thread 155999] [NesWorker.cpp:138] [start] NesWorker: start with blocking false workerId=0 coordinatorIp=192.168.2.11 coordinatorPort=4000 localWorkerIp=192.168.2.11 localWorkerRpcPort=0 localWorkerZmqPort=0 windowStrategy=LEGACY[m
[36m[17:40:17.824882] [D] [thread 155999] [NesWorker.cpp:140] [start] NesWorker::start: start Runtime[m
[36m[17:40:17.824931] [D] [thread 155999] [NesWorker.cpp:147] [start] NesWorker: MonitoringAgent configured with monitoring=false[m
[36m[17:40:17.825297] [D] [thread 155999] [MonitoringPlan.cpp:21] [MonitoringPlan] MonitoringPlan: Init with metrics of size 4[m
[36m[17:40:17.825390] [D] [thread 155999] [MonitoringCatalog.cpp:36] [defaultCatalog] MonitoringCatalog: Init default catalog[m
[32m[17:40:17.825551] [I] [thread 155999] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:40:17.826324] [I] [thread 155999] [CpuCollector.cpp:29] [CpuCollector] CpuCollector: Init CpuCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) coreNum:INTEGER(64 bits) user:INTEGER(64 bits) nice:INTEGER(64 bits) system:INTEGER(64 bits) idle:INTEGER(64 bits) iowait:INTEGER(64 bits) irq:INTEGER(64 bits) softirq:INTEGER(64 bits) steal:INTEGER(64 bits) guest:INTEGER(64 bits) guestnice:INTEGER(64 bits)[m
[32m[17:40:17.826404] [I] [thread 155999] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:40:17.826772] [I] [thread 155999] [DiskCollector.cpp:30] [DiskCollector] DiskCollector: Init DiskCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) F_BSIZE:INTEGER(64 bits) F_FRSIZE:INTEGER(64 bits) F_BLOCKS:INTEGER(64 bits) F_BFREE:INTEGER(64 bits) F_BAVAIL:INTEGER(64 bits)[m
[32m[17:40:17.826833] [I] [thread 155999] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:40:17.827481] [I] [thread 155999] [MemoryCollector.cpp:29] [MemoryCollector] MemoryCollector: Init MemoryCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) TOTAL_RAM:INTEGER(64 bits) TOTAL_SWAP:INTEGER(64 bits) FREE_RAM:INTEGER(64 bits) SHARED_RAM:INTEGER(64 bits) BUFFER_RAM:INTEGER(64 bits) FREE_SWAP:INTEGER(64 bits) TOTAL_HIGH:INTEGER(64 bits) FREE_HIGH:INTEGER(64 bits) PROCS:INTEGER(64 bits) MEM_UNIT:INTEGER(64 bits) LOADS_1MIN:INTEGER(64 bits) LOADS_5MIN:INTEGER(64 bits) LOADS_15MIN:INTEGER(64 bits)[m
[32m[17:40:17.827542] [I] [thread 155999] [SystemResourcesReaderFactory.cpp:25] [getSystemResourcesReader] SystemResourcesReaderFactory: Linux detected, return LinuxSystemResourcesReader[m
[32m[17:40:17.828611] [I] [thread 155999] [NetworkCollector.cpp:30] [NetworkCollector] NetworkCollector: Init NetworkCollector with schema node_id:INTEGER(64 bits) timestamp:INTEGER(64 bits) name:INTEGER(64 bits) rBytes:INTEGER(64 bits) rPackets:INTEGER(64 bits) rErrs:INTEGER(64 bits) rDrop:INTEGER(64 bits) rFifo:INTEGER(64 bits) rFrame:INTEGER(64 bits) rCompressed:INTEGER(64 bits) rMulticast:INTEGER(64 bits) tBytes:INTEGER(64 bits) tPackets:INTEGER(64 bits) tErrs:INTEGER(64 bits) tDrop:INTEGER(64 bits) tFifo:INTEGER(64 bits) tColls:INTEGER(64 bits) tCarrier:INTEGER(64 bits) tCompressed:INTEGER(64 bits)[m
[36m[17:40:17.829023] [D] [thread 155999] [MonitoringCatalog.cpp:28] [MonitoringCatalog] MonitoringCatalog: Init with collector map of size 4[m
[36m[17:40:17.829366] [D] [thread 155999] [MonitoringAgent.cpp:43] [MonitoringAgent] MonitoringAgent: Init with monitoring plan MonitoringPlan:disk(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True);memory(True);network(True);runtimeMetrics(True);staticMetrics(True); and enabled=false[m
[33m[1m[17:40:17.829457] [W] [thread 155999] [MonitoringAgent.cpp:117] [addMonitoringStreams] MonitoringAgent: Monitoring is disabled, registering of physical monitoring streams not possible.[m
[36m[17:40:17.841903] [D] [thread 155999] [BufferManager.cpp:107] [initialize] NES memory allocation requires 32768000 out of 3975450624 available bytes[m
[36m[17:40:17.854304] [D] [thread 155999] [BufferManager.cpp:160] [initialize] BufferManager configuration bufferSize=32000 numOfBuffers=1024[m
[36m[17:40:17.903625] [D] [thread 155999] [QueryManager.cpp:78] [DynamicQueryManager] QueryManger: use dynamic mode with numThreads= 4[m
[33m[1m[17:40:17.904057] [W] [thread 155999] [NodeEngineBuilder.cpp:291] [createQueryCompilationOptions] The LEGACY window strategy is not supported by Nautilus. Switch to SLICING![m
[36m[17:40:17.904189] [D] [thread 155999] [DefaultPhaseFactory.cpp:55] [createLowerLogicalQueryPlanPhase] Create default lower logical plan phase[m
[36m[17:40:17.904447] [D] [thread 155999] [DefaultPhaseFactory.cpp:79] [createLowerToExecutableQueryPlanPhase] Create lower to executable query plan phase[m
[36m[17:40:17.904572] [D] [thread 155999] [DefaultPhaseFactory.cpp:42] [createPipeliningPhase] Create pipelining phase with fuse policy[m
[36m[17:40:17.904643] [D] [thread 155999] [DefaultPhaseFactory.cpp:61] [createAddScanAndEmitPhase] Create add scan and emit phase[m
[36m[17:40:17.904968] [D] [thread 155999] [NodeEngineBuilder.cpp:238] [build] Creating default OpenCLManager[m
[36m[17:40:17.905078] [D] [thread 155999] [OpenCLManager.cpp:230] [OpenCLManager] OpenCL support was disabled at build time[m
[36m[17:40:17.905461] [D] [thread 155999] [ExchangeProtocol.cpp:30] [ExchangeProtocol] ExchangeProtocol: Initializing ExchangeProtocol()[m
[36m[17:40:17.905684] [D] [thread 155999] [ZmqServer.cpp:69] [ZmqServer] ZmqServer(192.168.2.11:0) Creating ZmqServer()[m
[36m[17:40:17.905811] [D] [thread 155999] [ZmqServer.cpp:78] [start] ZmqServer(192.168.2.11:0): Starting server..[m
[36m[17:40:17.908310] [D] [thread 156013] [ZmqServer.cpp:156] [routerLoop] ZmqServer(192.168.2.11:0):  Trying to bind on tcp://192.168.2.11:0[m
[36m[17:40:17.909989] [D] [thread 156013] [ZmqServer.cpp:161] [routerLoop] ZmqServer(192.168.2.11:0):  Created socket on 192.168.2.11: 0[m
[36m[17:40:17.910145] [D] [thread 156013] [ZmqServer.cpp:176] [routerLoop] ZmqServer: Created socket on 192.168.2.11: 34443[m
[36m[17:40:17.911336] [D] [thread 156017] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #1 on 192.168.2.11: 34443[m
[36m[17:40:17.911336] [D] [thread 156016] [ZmqServer.cpp:254] [messageHandlerEventLoop] Created Zmq Handler Thread #0 on 192.168.2.11: 34443[m
[32m[17:40:17.911463] [I] [thread 155999] [NetworkManager.cpp:36] [NetworkManager] NetworkManager: Server started successfully on tcp://192.168.2.11:34443[m
[36m[17:40:17.911561] [D] [thread 155999] [QueryManager.cpp:140] [startThreadPool] startThreadPool: setup thread pool for nodeEngineId= 1699757791  with numThreads= 4[m
[36m[17:40:17.911835] [D] [thread 155999] [ThreadPool.cpp:108] [start] Threadpool: Spawning 4 threads[m
[36m[17:40:17.913309] [D] [thread 155999] [ThreadPool.cpp:152] [start] Threadpool: start return from start[m
[36m[17:40:17.913390] [D] [thread 155999] [NodeEngine.cpp:78] [NodeEngine] NodeEngine(): thread pool successfully started[m
[36m[17:40:17.913385] [D] [thread 156021] [ThreadPool.cpp:147] [operator()] worker 3 with workerId 0 pins to queue 0[m
[36m[17:40:17.913384] [D] [thread 156018] [ThreadPool.cpp:147] [operator()] worker 0 with workerId 1 pins to queue 0[m
[36m[17:40:17.913588] [D] [thread 155999] [NesWorker.cpp:156] [start] NesWorker: Node engine started successfully[m
[36m[17:40:17.913625] [D] [thread 155999] [NesWorker.cpp:164] [start] NesWorker: request startWorkerRPCServer for accepting messages for address=192.168.2.11:0: 0[m
[36m[17:40:17.913678] [D] [thread 156021] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=1024 requested buffers=128[m
[36m[17:40:17.913385] [D] [thread 156020] [ThreadPool.cpp:147] [operator()] worker 2 with workerId 2 pins to queue 0[m
[36m[17:40:17.914144] [D] [thread 156022] [NesWorker.cpp:176] [operator()] NesWorker: buildAndStartGRPCServer[m
[36m[17:40:17.914411] [D] [thread 156019] [ThreadPool.cpp:147] [operator()] worker 1 with workerId 3 pins to queue 0[m
[36m[17:40:17.914643] [D] [thread 156018] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=896 requested buffers=128[m
[36m[17:40:17.914699] [D] [thread 156022] [WorkerRPCServer.cpp:38] [WorkerRPCServer] WorkerRPCServer::WorkerRPCServer()[m
[36m[17:40:17.915403] [D] [thread 156020] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=768 requested buffers=128[m
[36m[17:40:17.916228] [D] [thread 156019] [BufferManager.cpp:367] [createLocalBufferPool] availableBuffers.size()=640 requested buffers=128[m
[36m[17:40:17.918083] [D] [thread 156022] [NesWorker.cpp:117] [buildAndStartGRPCServer] NesWorker: buildAndStartGRPCServer Server listening on address 192.168.2.11:0: 42211[m
[36m[17:40:17.918123] [D] [thread 155999] [NesWorker.cpp:184] [start] NesWorker: startWorkerRPCServer ready for accepting messages for address=192.168.2.11:42211: 42211[m
[36m[17:40:17.918148] [D] [thread 155999] [NesWorker.cpp:187] [start] NesWorker: start with connect[m
[36m[17:40:17.918185] [D] [thread 155999] [NesWorker.cpp:306] [connect] NesWorker::connect() Registering worker with coordinator at 192.168.2.11:4000[m
[36m[17:40:17.918292] [D] [thread 155999] [CoordinatorRPCClient.cpp:152] [CoordinatorRPCClient] CoordinatorRPCClient(): creating channels to address =192.168.2.11:4000[m
[36m[17:40:17.920649] [D] [thread 156022] [CallData.cpp:36] [proceed] RequestInSyncInCreate=[m
[36m[17:40:17.920969] [D] [thread 155999] [CoordinatorRPCClient.cpp:156] [CoordinatorRPCClient] CoordinatorRPCClient::connecting: channel successfully created[m
[33m[1m[17:40:17.921997] [W] [thread 155999] [MonitoringAgent.cpp:96] [getRegistrationMetrics] MonitoringAgent: Metrics disabled. Return empty metric object for registration.[m
[36m[17:40:17.922055] [D] [thread 155999] [RegistrationMetrics.cpp:32] [RegistrationMetrics] RegistrationMetrics: Default ctor[m
[36m[17:40:17.924068] [D] [thread 155999] [CoordinatorRPCClient.cpp:387] [registerWorker] CoordinatorRPCClient::RegisterNodeRequest request=address: "192.168.2.11"
grpcPort: 42211
dataPort: 34443
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:17.937188] [D] [thread 156009] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.11"
grpcPort: 42211
dataPort: 34443
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:17.937477] [D] [thread 156009] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.11"
grpcPort: 42211
dataPort: 34443
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:17.937592] [D] [thread 156009] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[33m[1m[17:40:17.937626] [W] [thread 156009] [Topology.cpp:280] [toString] Topology: No root node found[m
[36m[17:40:17.937639] [D] [thread 156009] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:17.937650] [D] [thread 156009] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:17.937689] [D] [thread 156009] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 1 and resources 65535[m
[36m[17:40:17.937883] [D] [thread 156009] [TopologyManagerService.cpp:99] [registerWorker] TopologyManagerService::registerWorker: tree is empty so this becomes new root[m
[32m[17:40:17.937969] [I] [thread 156009] [Topology.cpp:356] [setAsRoot] Topology: Setting physical node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0] as root to the topology.[m
[36m[17:40:17.938089] [D] [thread 156009] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:17.938357] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:17.938471] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:17.938507] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:17.938546] [D] [thread 156009] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:17.938557] [D] [thread 156009] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:17.938592] [D] [thread 156009] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:17.939868] [D] [thread 156009] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=1[m
[36m[17:40:17.941632] [D] [thread 155999] [NesWorker.cpp:334] [connect] NesWorker::connect() Worker registered successfully and got id=1[m
[36m[17:40:17.941711] [D] [thread 155999] [NesWorker.cpp:341] [connect] NesWorker::connect() Persisting workerId=1 in yaml file for the first time.[m
[36m[17:40:17.941819] [D] [thread 155999] [NesWorker.cpp:347] [connect] NesWorker::connect() Persisted workerId=1 successfully in yaml file.[m
[36m[17:40:17.941833] [D] [thread 155999] [NesWorker.cpp:362] [connect] NesWorker::registerWorker rpc register success with id 1[m
[36m[17:40:17.975328] [D] [thread 155999] [NesWorker.cpp:368] [connect] NesWorker start health check[m
[36m[17:40:17.975511] [D] [thread 155999] [WorkerHealthCheckService.cpp:39] [startHealthCheck] WorkerHealthCheckService::startHealthCheck worker id= 1[m
[36m[17:40:17.975527] [D] [thread 155999] [WorkerHealthCheckService.cpp:41] [startHealthCheck] start health checking on worker[m
[36m[17:40:17.976031] [D] [thread 155999] [NesWorker.cpp:247] [start] NesWorker: started, return[m
[36m[17:40:17.976203] [D] [thread 155999] [NesCoordinator.cpp:210] [startCoordinator] NesCoordinator starting rest server[m
[36m[17:40:17.976864] [D] [thread 155999] [NesCoordinator.cpp:239] [startCoordinator] NesCoordinator::startCoordinatorRESTServer: ready[m
[32m[17:40:17.976946] [I] [thread 156026] [RestServer.cpp:64] [start] Starting Oatpp Server on 192.168.2.11:8081[m
[32m[17:40:17.993500] [I] [thread 156026] [RestServer.cpp:166] [run] NebulaStream REST Server listening on port 8081[m
[36m[17:40:17.993640] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:18.007746] [D] [thread 155999] [NesCoordinator.cpp:244] [startCoordinator] NesCoordinator start health check[m
[36m[17:40:18.007896] [D] [thread 155999] [CoordinatortHealthCheckService.cpp:34] [startHealthCheck] CoordinatorHealthCheckService::startHealthCheck[m
[36m[17:40:18.007909] [D] [thread 155999] [CoordinatortHealthCheckService.cpp:36] [startHealthCheck] start health checking on coordinator[m
[36m[17:40:18.008382] [D] [thread 155999] [NesCoordinator.cpp:248] [startCoordinator] NesCoordinator started, join now and waiting for work[m
[36m[17:40:18.994926] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:19.996256] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:20.997588] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:21.504136] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:21.505526] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:21.507469] [D] [thread 156029] [SourceCatalogController.hpp:125] [addLogicalSource] SourceCatalogController: addLogicalSource: REST received request to add new Logical Source.[m
[36m[17:40:21.510230] [D] [thread 156029] [SourceCatalogController.hpp:144] [addLogicalSource] SourceCatalogController: addLogicalSource: Try to add new Logical Source debs and Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[17:40:21.510349] [D] [thread 156029] [SourceCatalogService.cpp:92] [registerLogicalSource] SourceCatalogService::registerLogicalSource: register logical source=debs schema= Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));[m
[36m[17:40:21.510455] [D] [thread 156029] [QueryParsingService.cpp:53] [createSchemaFromCode] QueryParsingService : generated code= #include <API/Schema.hpp>
#include <Common/DataTypes/DataTypeFactory.hpp>
namespace NES{
Schema createSchema(){
return Schema::create()->addField(createField("sid",BasicType::UINT64))->addField(createField("ts",BasicType::UINT64))->addField(createField("x",BasicType::INT64))->addField(createField("y",BasicType::INT64))->addField(createField("z",BasicType::INT64))->addField(createField("absolute_v",BasicType::UINT64))->addField(createField("absolute_a",BasicType::UINT64))->addField(createField("vx",BasicType::INT64))->addField(createField("vy",BasicType::INT64))->addField(createField("vz",BasicType::INT64))->addField(createField("ax",BasicType::INT64))->addField(createField("ay",BasicType::INT64))->addField(createField("az",BasicType::INT64));;}
}
[m
[36m[17:40:21.512397] [D] [thread 156030] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_17-40-21_8333442.cpp[m
[36m[17:40:21.513355] [D] [thread 156030] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[17:40:21.513994] [D] [thread 156030] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DFMT_HEADER_ONLY -DNES_COMPILE_TIME_LOG_LEVEL=6 -I/home/ubuntu/git/nebulastream/build/include/nebulastream -L/home/ubuntu/git/nebulastream/build/nes-core/ -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -shared -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -Wparentheses-equality -fpic -fno-trigraphs -o/tmp/query_13-11-2023_17-40-21_8333442.so -std=c++20 -stdlib=libstdc++ /tmp/query_13-11-2023_17-40-21_8333442.cpp'[m
[36m[17:40:22.506789] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:23.223618] [I] [thread 156030] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 1711.388215ms[m
[36m[17:40:23.225370] [D] [thread 156029] [SourceCatalog.cpp:49] [addLogicalSource] SourceCatalog: schema successfully created[m
[36m[17:40:23.225467] [D] [thread 156029] [SourceCatalog.cpp:56] [addLogicalSource] SourceCatalog: Check if logical source debs already exist.[m
[36m[17:40:23.225499] [D] [thread 156029] [SourceCatalog.cpp:59] [addLogicalSource] SourceCatalog: add logical source debs[m
[36m[17:40:23.225553] [D] [thread 156029] [SourceCatalogController.hpp:146] [addLogicalSource] SourceCatalogController: addLogicalSource: Successfully added new logical Source ? true[m
[36m[17:40:23.475401] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.475988] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:23.476890] [I] [thread 156036] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:23.478263] [I] [thread 156036] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:23.780851] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:23.781323] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:23.782237] [I] [thread 156037] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:23.782937] [I] [thread 156037] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:23.950273] [D] [thread 156024] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.12"
grpcPort: 34521
dataPort: 34237
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:23.950534] [D] [thread 156024] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.12"
grpcPort: 34521
dataPort: 34237
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:23.950612] [D] [thread 156024] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:23.950861] [D] [thread 156024] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:23.950938] [D] [thread 156024] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:23.951087] [D] [thread 156024] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 2 and resources 65535[m
[36m[17:40:23.951402] [D] [thread 156024] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:23.951712] [I] [thread 156024] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:23.952147] [I] [thread 156024] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:23.952521] [D] [thread 156024] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 2[m
[36m[17:40:23.953032] [D] [thread 156024] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:23.953428] [D] [thread 156024] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:23.953639] [I] [thread 156024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:40:23.953681] [D] [thread 156024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:40:23.953734] [D] [thread 156024] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:23.953759] [D] [thread 156024] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:23.953785] [D] [thread 156024] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:23.954890] [D] [thread 156024] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=2[m
[36m[17:40:24.782611] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:25.783905] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:26.785179] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.627910] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:27.628370] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:27.628951] [I] [thread 156038] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:27.629612] [I] [thread 156038] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:27.771509] [D] [thread 156024] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.30"
grpcPort: 43523
dataPort: 37615
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:27.771780] [D] [thread 156024] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.30"
grpcPort: 43523
dataPort: 37615
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:27.771862] [D] [thread 156024] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:27.772132] [D] [thread 156024] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:27.772162] [D] [thread 156024] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:27.772220] [D] [thread 156024] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 3 and resources 65535[m
[36m[17:40:27.772458] [D] [thread 156024] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:27.772552] [I] [thread 156024] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:27.772697] [I] [thread 156024] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:27.772804] [D] [thread 156024] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 3[m
[36m[17:40:27.772909] [D] [thread 156024] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:27.773215] [D] [thread 156024] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:27.773283] [I] [thread 156024] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:40:27.773315] [D] [thread 156024] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:40:27.773359] [D] [thread 156024] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:27.773383] [D] [thread 156024] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:27.773409] [D] [thread 156024] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:27.773996] [D] [thread 156024] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=3[m
[36m[17:40:28.629683] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:29.630905] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:30.632175] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:31.415689] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:31.416165] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:31.416781] [I] [thread 156040] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:31.417816] [I] [thread 156040] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:31.564605] [D] [thread 156009] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.31"
grpcPort: 43375
dataPort: 40725
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:31.564871] [D] [thread 156009] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.31"
grpcPort: 43375
dataPort: 40725
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:31.564947] [D] [thread 156009] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:31.565270] [D] [thread 156009] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:31.565300] [D] [thread 156009] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:31.565360] [D] [thread 156009] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 4 and resources 65535[m
[36m[17:40:31.565516] [D] [thread 156009] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:31.565603] [I] [thread 156009] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:31.565741] [I] [thread 156009] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:31.565831] [D] [thread 156009] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 4[m
[36m[17:40:31.565935] [D] [thread 156009] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:31.566202] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:31.566260] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:40:31.566290] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:40:31.566332] [D] [thread 156009] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:31.566386] [D] [thread 156009] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:31.566415] [D] [thread 156009] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:31.567006] [D] [thread 156009] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=4[m
[36m[17:40:32.417446] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:33.418761] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:34.420074] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:35.155912] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:35.156288] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:35.156803] [I] [thread 156041] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:35.158012] [I] [thread 156041] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:35.317068] [D] [thread 156009] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.32"
grpcPort: 42327
dataPort: 35209
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:35.317332] [D] [thread 156009] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.32"
grpcPort: 42327
dataPort: 35209
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:35.317406] [D] [thread 156009] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:35.317772] [D] [thread 156009] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:35.317803] [D] [thread 156009] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:35.317863] [D] [thread 156009] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 5 and resources 65535[m
[36m[17:40:35.318022] [D] [thread 156009] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:35.318108] [I] [thread 156009] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:35.318247] [I] [thread 156009] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:35.318330] [D] [thread 156009] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 5[m
[36m[17:40:35.318434] [D] [thread 156009] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:35.318746] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:35.318807] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:35.318839] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:40:35.318900] [D] [thread 156009] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:35.318926] [D] [thread 156009] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:35.318952] [D] [thread 156009] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:35.319548] [D] [thread 156009] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=5[m
[36m[17:40:35.356675] [D] [thread 156009] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 5
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream4"
  logicalSourceName: "debs"
}
[m
[32m[17:40:35.356813] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:35.356859] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:40:35.357004] [D] [thread 156009] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 5 physical source= test_stream4 logical source= debs[m
[36m[17:40:35.357542] [D] [thread 156009] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:35.357628] [D] [thread 156009] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream4[m
[36m[17:40:35.357960] [D] [thread 156009] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream4 does not exist, try to add[m
[36m[17:40:35.358034] [D] [thread 156009] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:35.358159] [D] [thread 156009] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=5 successful added[m
[36m[17:40:35.358202] [D] [thread 156009] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:35.362355] [D] [thread 156009] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 5
oldParent: 1
newParent: 2
[m
[36m[17:40:35.362467] [D] [thread 156009] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 5  parentId= 1[m
[32m[17:40:35.362493] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:35.362517] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:40:35.362541] [D] [thread 156009] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  5  exists[m
[32m[17:40:35.362554] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:35.362568] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:35.362583] [D] [thread 156009] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:35.362658] [D] [thread 156009] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:35.362783] [I] [thread 156009] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:35.362835] [D] [thread 156009] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:35.362855] [D] [thread 156009] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:35.362881] [D] [thread 156009] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 5  parentId= 2[m
[32m[17:40:35.362897] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:35.362932] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[36m[17:40:35.362953] [D] [thread 156009] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 5 exists[m
[32m[17:40:35.362966] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:40:35.362980] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:40:35.362995] [D] [thread 156009] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[17:40:35.363088] [I] [thread 156009] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[17:40:35.363136] [D] [thread 156009] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:35.363375] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:35.363399] [D] [thread 156009] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:36.157494] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:37.158854] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.160266] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.927581] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:38.928043] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:38.928952] [I] [thread 156043] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:38.930266] [I] [thread 156043] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:39.074786] [D] [thread 156042] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.33"
grpcPort: 34405
dataPort: 40285
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:39.075056] [D] [thread 156042] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.33"
grpcPort: 34405
dataPort: 40285
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:39.075138] [D] [thread 156042] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:39.075543] [D] [thread 156042] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:39.075574] [D] [thread 156042] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:39.075634] [D] [thread 156042] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 6 and resources 65535[m
[36m[17:40:39.075792] [D] [thread 156042] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:39.075877] [I] [thread 156042] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:39.076020] [I] [thread 156042] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:39.076103] [D] [thread 156042] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 6[m
[36m[17:40:39.076204] [D] [thread 156042] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:39.076637] [D] [thread 156042] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:39.076709] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:39.076742] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:40:39.076786] [D] [thread 156042] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:39.076811] [D] [thread 156042] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:39.076838] [D] [thread 156042] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:39.077435] [D] [thread 156042] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=6[m
[36m[17:40:39.112945] [D] [thread 156042] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 6
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream5"
  logicalSourceName: "debs"
}
[m
[32m[17:40:39.113050] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:39.113086] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:40:39.113160] [D] [thread 156042] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 6 physical source= test_stream5 logical source= debs[m
[36m[17:40:39.113335] [D] [thread 156042] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:39.113374] [D] [thread 156042] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream5[m
[36m[17:40:39.113468] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:40:39.113512] [D] [thread 156042] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream5 does not exist, try to add[m
[36m[17:40:39.113536] [D] [thread 156042] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:39.113597] [D] [thread 156042] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=6 successful added[m
[36m[17:40:39.113618] [D] [thread 156042] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:39.117220] [D] [thread 156042] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 6
oldParent: 1
newParent: 2
[m
[36m[17:40:39.117324] [D] [thread 156042] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 6  parentId= 1[m
[32m[17:40:39.117352] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:39.117379] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:40:39.117405] [D] [thread 156042] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  6  exists[m
[32m[17:40:39.117419] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:39.117435] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:39.117452] [D] [thread 156042] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:39.117522] [D] [thread 156042] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:39.117655] [I] [thread 156042] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:39.117690] [D] [thread 156042] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:39.117725] [D] [thread 156042] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:39.117748] [D] [thread 156042] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 6  parentId= 2[m
[32m[17:40:39.117765] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:39.117783] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[36m[17:40:39.117803] [D] [thread 156042] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 6 exists[m
[32m[17:40:39.117818] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 2[m
[36m[17:40:39.117833] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 2[m
[36m[17:40:39.117851] [D] [thread 156042] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  2  exists[m
[32m[17:40:39.117953] [I] [thread 156042] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0][m
[36m[17:40:39.118004] [D] [thread 156042] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:39.118297] [D] [thread 156042] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:39.118325] [D] [thread 156042] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:39.928567] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:40.929892] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:41.931169] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:42.706932] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:42.707582] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:42.708177] [I] [thread 156044] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:42.710138] [I] [thread 156044] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:42.850168] [D] [thread 156042] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.34"
grpcPort: 44581
dataPort: 37055
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:42.850335] [D] [thread 156042] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.34"
grpcPort: 44581
dataPort: 37055
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:42.850381] [D] [thread 156042] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:42.850651] [D] [thread 156042] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:42.850685] [D] [thread 156042] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:42.850727] [D] [thread 156042] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 7 and resources 65535[m
[36m[17:40:42.850815] [D] [thread 156042] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:42.850856] [I] [thread 156042] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:42.850925] [I] [thread 156042] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:42.850974] [D] [thread 156042] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 7[m
[36m[17:40:42.851038] [D] [thread 156042] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:42.851222] [D] [thread 156042] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:42.851289] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:42.851311] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:40:42.851337] [D] [thread 156042] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:42.851347] [D] [thread 156042] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:42.851360] [D] [thread 156042] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:42.851783] [D] [thread 156042] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=7[m
[36m[17:40:42.886760] [D] [thread 156042] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 7
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream6"
  logicalSourceName: "debs"
}
[m
[32m[17:40:42.886849] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:42.886876] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:40:42.886937] [D] [thread 156042] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 7 physical source= test_stream6 logical source= debs[m
[36m[17:40:42.887086] [D] [thread 156042] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:42.887118] [D] [thread 156042] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream6[m
[36m[17:40:42.887170] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:40:42.887199] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:40:42.887222] [D] [thread 156042] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream6 does not exist, try to add[m
[36m[17:40:42.887241] [D] [thread 156042] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:42.887276] [D] [thread 156042] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=7 successful added[m
[36m[17:40:42.887291] [D] [thread 156042] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:42.890725] [D] [thread 156009] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 7
oldParent: 1
newParent: 3
[m
[36m[17:40:42.890812] [D] [thread 156009] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 7  parentId= 1[m
[32m[17:40:42.890837] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:42.890860] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:40:42.890880] [D] [thread 156009] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  7  exists[m
[32m[17:40:42.890891] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:42.890902] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:42.890915] [D] [thread 156009] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:42.890974] [D] [thread 156009] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:42.891094] [I] [thread 156009] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:42.891122] [D] [thread 156009] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:42.891139] [D] [thread 156009] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:42.891167] [D] [thread 156009] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 7  parentId= 3[m
[32m[17:40:42.891181] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:42.891196] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[36m[17:40:42.891211] [D] [thread 156009] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 7 exists[m
[32m[17:40:42.891221] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:40:42.891244] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:40:42.891260] [D] [thread 156009] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[17:40:42.891335] [I] [thread 156009] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:40:42.891375] [D] [thread 156009] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:42.891642] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:42.891662] [D] [thread 156009] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:43.708934] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:44.710235] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:45.711556] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:46.571256] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:46.571907] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:46.572568] [I] [thread 156045] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:46.574700] [I] [thread 156045] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:46.715417] [D] [thread 156009] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.35"
grpcPort: 42211
dataPort: 46055
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:46.715682] [D] [thread 156009] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.35"
grpcPort: 42211
dataPort: 46055
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:46.715762] [D] [thread 156009] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:46.716264] [D] [thread 156009] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:46.716388] [D] [thread 156009] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:46.716468] [D] [thread 156009] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 8 and resources 65535[m
[36m[17:40:46.716639] [D] [thread 156009] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:46.716726] [I] [thread 156009] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:46.716868] [I] [thread 156009] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:46.716952] [D] [thread 156009] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 8[m
[36m[17:40:46.717054] [D] [thread 156009] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:46.717508] [D] [thread 156009] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:46.717571] [I] [thread 156009] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:46.717602] [D] [thread 156009] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:40:46.717646] [D] [thread 156009] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:46.717670] [D] [thread 156009] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:46.717697] [D] [thread 156009] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:46.718289] [D] [thread 156009] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=8[m
[36m[17:40:46.754039] [D] [thread 156042] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 8
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream7"
  logicalSourceName: "debs"
}
[m
[32m[17:40:46.754136] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:46.754182] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:40:46.754269] [D] [thread 156042] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 8 physical source= test_stream7 logical source= debs[m
[36m[17:40:46.754477] [D] [thread 156042] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:46.754527] [D] [thread 156042] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream7[m
[36m[17:40:46.754607] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:40:46.754688] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:40:46.754719] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:40:46.754754] [D] [thread 156042] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream7 does not exist, try to add[m
[36m[17:40:46.754868] [D] [thread 156042] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:46.754946] [D] [thread 156042] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=8 successful added[m
[36m[17:40:46.754974] [D] [thread 156042] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:46.761365] [D] [thread 156046] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 8
oldParent: 1
newParent: 3
[m
[36m[17:40:46.761498] [D] [thread 156046] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 8  parentId= 1[m
[32m[17:40:46.761533] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:46.761568] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:40:46.761600] [D] [thread 156046] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  8  exists[m
[32m[17:40:46.761620] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:46.761641] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:46.761664] [D] [thread 156046] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:46.761751] [D] [thread 156046] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:46.761922] [I] [thread 156046] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:46.761953] [D] [thread 156046] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:46.761969] [D] [thread 156046] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:46.761983] [D] [thread 156046] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 8  parentId= 3[m
[32m[17:40:46.761995] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:46.762008] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[36m[17:40:46.762036] [D] [thread 156046] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 8 exists[m
[32m[17:40:46.762047] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 3[m
[36m[17:40:46.762058] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 3[m
[36m[17:40:46.762148] [D] [thread 156046] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  3  exists[m
[32m[17:40:46.762241] [I] [thread 156046] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0][m
[36m[17:40:46.762281] [D] [thread 156046] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:46.762543] [D] [thread 156046] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:46.762563] [D] [thread 156046] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:47.573259] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:48.574579] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:49.575837] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.567173] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:50.567941] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:50.568564] [I] [thread 156047] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:50.570928] [I] [thread 156047] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:50.707450] [D] [thread 156042] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.37"
grpcPort: 44917
dataPort: 33759
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:50.707629] [D] [thread 156042] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.37"
grpcPort: 44917
dataPort: 33759
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:50.707683] [D] [thread 156042] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:50.708009] [D] [thread 156042] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:50.708052] [D] [thread 156042] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:50.708108] [D] [thread 156042] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 9 and resources 65535[m
[36m[17:40:50.708232] [D] [thread 156042] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:50.708284] [I] [thread 156042] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:50.708405] [I] [thread 156042] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:50.708473] [D] [thread 156042] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 9[m
[36m[17:40:50.736395] [D] [thread 156042] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:50.736808] [D] [thread 156042] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:50.736921] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:50.736946] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:40:50.736981] [D] [thread 156042] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:50.736992] [D] [thread 156042] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:50.737009] [D] [thread 156042] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:50.737456] [D] [thread 156042] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=9[m
[36m[17:40:50.775394] [D] [thread 156042] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 9
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream8"
  logicalSourceName: "debs"
}
[m
[32m[17:40:50.775482] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:50.775512] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:40:50.775577] [D] [thread 156042] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 9 physical source= test_stream8 logical source= debs[m
[36m[17:40:50.775748] [D] [thread 156042] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:50.775798] [D] [thread 156042] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream8[m
[36m[17:40:50.775876] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:40:50.775911] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:40:50.775938] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:40:50.775966] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[17:40:50.776001] [D] [thread 156042] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream8 does not exist, try to add[m
[36m[17:40:50.776032] [D] [thread 156042] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:50.776086] [D] [thread 156042] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=9 successful added[m
[36m[17:40:50.776112] [D] [thread 156042] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:50.780413] [D] [thread 156046] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 9
oldParent: 1
newParent: 4
[m
[36m[17:40:50.780537] [D] [thread 156046] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 9  parentId= 1[m
[32m[17:40:50.780577] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:50.780612] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:40:50.780646] [D] [thread 156046] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  9  exists[m
[32m[17:40:50.780666] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:50.780688] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:50.780711] [D] [thread 156046] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:50.780797] [D] [thread 156046] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:50.780962] [I] [thread 156046] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:50.781008] [D] [thread 156046] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:50.781035] [D] [thread 156046] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:50.781061] [D] [thread 156046] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 9  parentId= 4[m
[32m[17:40:50.781083] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:50.781108] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[36m[17:40:50.781135] [D] [thread 156046] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 9 exists[m
[32m[17:40:50.781155] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:40:50.781176] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:40:50.781199] [D] [thread 156046] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[17:40:50.781319] [I] [thread 156046] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[17:40:50.781381] [D] [thread 156046] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:50.781898] [D] [thread 156046] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:50.781959] [D] [thread 156046] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:51.568548] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:52.569824] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:53.571142] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.504724] [D] [thread 156042] [CoordinatorRPCServer.cpp:50] [RegisterWorker] Received worker registration request address: "192.168.2.38"
grpcPort: 37991
dataPort: 36047
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:54.504936] [D] [thread 156042] [CoordinatorRPCServer.cpp:65] [RegisterWorker] TopologyManagerService::RegisterNode: request =address: "192.168.2.38"
grpcPort: 37991
dataPort: 36047
numberOfSlots: 65535
registrationMetrics {
}
[m
[36m[17:40:54.505002] [D] [thread 156042] [TopologyManagerService.cpp:52] [registerWorker] TopologyManagerService::registerWorker: topology before insert[m
[36m[17:40:54.505462] [D] [thread 156042] [TopologyManagerService.cpp:53] [registerWorker] [m
[36m[17:40:54.505513] [D] [thread 156042] [TopologyManagerService.cpp:87] [registerWorker] TopologyManagerService::registerWorker: register node[m
[36m[17:40:54.505570] [D] [thread 156042] [TopologyNode.cpp:43] [create] TopologyNode: Creating node with ID 10 and resources 65535[m
[36m[17:40:54.505745] [D] [thread 156042] [TopologyManagerService.cpp:102] [registerWorker] TopologyManagerService::registerWorker: add link to the root node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[32m[17:40:54.505831] [I] [thread 156042] [Topology.cpp:36] [addNewTopologyNodeAsChild] Topology: Adding New Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] to the catalog of nodes.[m
[32m[17:40:54.505943] [I] [thread 156042] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:54.506010] [D] [thread 156042] [AbstractHealthCheckService.cpp:48] [addNodeToHealthCheck] HealthCheckService: adding node with id 10[m
[36m[17:40:54.506095] [D] [thread 156042] [TopologyManagerService.cpp:111] [registerWorker] TopologyManagerService::registerWorker: topology after insert = [m
[36m[17:40:54.506530] [D] [thread 156042] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[32m[17:40:54.506616] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:54.506649] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:40:54.506687] [D] [thread 156042] [TopologyManagerService.cpp:317] [addGeoLocation] added node is a non field node[m
[36m[17:40:54.506706] [D] [thread 156042] [TopologyManagerService.cpp:322] [addGeoLocation] added node is a non mobile node[m
[36m[17:40:54.506727] [D] [thread 156042] [RegistrationMetrics.cpp:47] [RegistrationMetrics] RegistrationMetrics: Creating from serializable object.[m
[36m[17:40:54.507233] [D] [thread 156042] [CoordinatorRPCServer.cpp:85] [RegisterWorker] CoordinatorRPCServer::RegisterNode: success id=10[m
[36m[17:40:54.543204] [D] [thread 156042] [CoordinatorRPCServer.cpp:121] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource: request =workerId: 10
physicalSources {
  sourceType: "CSV_SOURCE"
  physicalSourceName: "test_stream9"
  logicalSourceName: "debs"
}
[m
[32m[17:40:54.543301] [I] [thread 156042] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:54.543335] [D] [thread 156042] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:40:54.543403] [D] [thread 156042] [SourceCatalogService.cpp:51] [registerPhysicalSource] SourceCatalogService::RegisterPhysicalSource: try to register physical node id 10 physical source= test_stream9 logical source= debs[m
[36m[17:40:54.543567] [D] [thread 156042] [SourceCatalog.cpp:89] [addPhysicalSource] SourceCatalog: search for logical source in addPhysicalSource() debs[m
[36m[17:40:54.543605] [D] [thread 156042] [SourceCatalog.cpp:100] [addPhysicalSource] SourceCatalog: logical source debs exists try to add physical source test_stream9[m
[36m[17:40:54.543664] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=5 phyStr=test_stream4[m
[36m[17:40:54.543687] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=6 phyStr=test_stream5[m
[36m[17:40:54.543705] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=7 phyStr=test_stream6[m
[36m[17:40:54.543723] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=8 phyStr=test_stream7[m
[36m[17:40:54.543759] [D] [thread 156042] [SourceCatalog.cpp:110] [addPhysicalSource] test node id=9 phyStr=test_stream8[m
[36m[17:40:54.543786] [D] [thread 156042] [SourceCatalog.cpp:123] [addPhysicalSource] SourceCatalog: physical source  test_stream9 does not exist, try to add[m
[36m[17:40:54.543810] [D] [thread 156042] [SourceCatalog.cpp:127] [addPhysicalSource] SourceCatalog: Logical source already exists, add new physical entry[m
[36m[17:40:54.543835] [D] [thread 156042] [SourceCatalog.cpp:136] [addPhysicalSource] SourceCatalog: physical source with id=10 successful added[m
[36m[17:40:54.543851] [D] [thread 156042] [CoordinatorRPCServer.cpp:133] [RegisterPhysicalSource] CoordinatorRPCServer::RegisterPhysicalSource Succeed[m
[36m[17:40:54.547940] [D] [thread 156046] [CoordinatorRPCServer.cpp:205] [ReplaceParent] CoordinatorRPCServer::ReplaceParent: request = childId: 10
oldParent: 1
newParent: 4
[m
[36m[17:40:54.548043] [D] [thread 156046] [TopologyManagerService.cpp:186] [removeParent] TopologyManagerService::removeParent: childId= 10  parentId= 1[m
[32m[17:40:54.548068] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:54.548094] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:40:54.548117] [D] [thread 156046] [TopologyManagerService.cpp:193] [removeParent] TopologyManagerService::removeParent: source node  10  exists[m
[32m[17:40:54.548131] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:54.548144] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[36m[17:40:54.548161] [D] [thread 156046] [TopologyManagerService.cpp:201] [removeParent] TopologyManagerService::AddParent: sensorParent node  1  exists[m
[36m[17:40:54.548226] [D] [thread 156046] [TopologyManagerService.cpp:218] [removeParent] TopologyManagerService::removeParent: nodes connected[m
[32m[17:40:54.548402] [I] [thread 156046] [Topology.cpp:363] [removeNodeAsChild] Topology: Removing node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0][m
[36m[17:40:54.548444] [D] [thread 156046] [TopologyManagerService.cpp:225] [removeParent] TopologyManagerService::removeParent: successful[m
[36m[17:40:54.548465] [D] [thread 156046] [CoordinatorRPCServer.cpp:209] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success removeParent[m
[36m[17:40:54.548485] [D] [thread 156046] [TopologyManagerService.cpp:147] [addParent] TopologyManagerService::addParent: childId= 10  parentId= 4[m
[32m[17:40:54.548501] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:54.548519] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[36m[17:40:54.548537] [D] [thread 156046] [TopologyManagerService.cpp:159] [addParent] TopologyManagerService::AddParent: source node 10 exists[m
[32m[17:40:54.548569] [I] [thread 156046] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 4[m
[36m[17:40:54.548587] [D] [thread 156046] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 4[m
[36m[17:40:54.548604] [D] [thread 156046] [TopologyManagerService.cpp:166] [addParent] TopologyManagerService::AddParent: sensorParent node  4  exists[m
[32m[17:40:54.548704] [I] [thread 156046] [Topology.cpp:39] [addNewTopologyNodeAsChild] Topology: Adding Node PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0] as child to the node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0][m
[36m[17:40:54.548753] [D] [thread 156046] [TopologyManagerService.cpp:177] [addParent] TopologyManagerService::AddParent: created link successfully new topology is=[m
[36m[17:40:54.549186] [D] [thread 156046] [Topology.cpp:317] [print] Topology print:
PhysicalNode[id=1, ip=192.168.2.11, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=10, ip=192.168.2.38, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=9, ip=192.168.2.37, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=8, ip=192.168.2.35, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=0]
|--PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=6, ip=192.168.2.33, resourceCapacity=65535, usedResource=0]
|  |--PhysicalNode[id=5, ip=192.168.2.32, resourceCapacity=65535, usedResource=0]
[m
[36m[17:40:54.549221] [D] [thread 156046] [CoordinatorRPCServer.cpp:212] [ReplaceParent] CoordinatorRPCServer::ReplaceParent success addParent topo=[m
[36m[17:40:54.572459] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.803441] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:54.804147] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:54.804620] [I] [thread 156049] [TopologyManagerService.cpp:246] [getTopologyAsJson] TopologyController: getting topology as JSON[m
[32m[17:40:54.807480] [I] [thread 156049] [TopologyManagerService.cpp:295] [getTopologyAsJson] TopologyController: no more topology node to add[m
[36m[17:40:55.805424] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.374243] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.374918] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.530928] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.531275] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:56.532642] [D] [thread 156055] [QueryController.hpp:223] [submitQuery] QueryController: handlePost -execute-query: Params: userQuery= Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(20))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out","CSV_FORMAT","APPEND", true));, strategyName= BottomUp, faultTolerance= NONE, lineage= NONE[m
[32m[17:40:56.532737] [I] [thread 156055] [QueryService.cpp:69] [validateAndQueueAddQueryRequest] QueryService: Validating and registering the user query.[m
[32m[17:40:56.532754] [I] [thread 156055] [QueryService.cpp:73] [validateAndQueueAddQueryRequest] QueryService: check validation of a query.[m
[36m[17:40:56.532787] [D] [thread 156055] [SyntacticQueryValidation.cpp:40] [validate] SyntacticQueryValidation: parse C++ query from query string.[m
[36m[17:40:56.532857] [D] [thread 156055] [QueryParsingService.cpp:94] [createQueryFromCodeString]  QueryParsingService: source name = "debs"[m
[36m[17:40:56.532900] [D] [thread 156055] [QueryParsingService.cpp:100] [createQueryFromCodeString] QueryParsingService: parsed query = return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(20))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out","CSV_FORMAT","APPEND", true));[m
[36m[17:40:56.532921] [D] [thread 156055] [QueryParsingService.cpp:104] [createQueryFromCodeString] QueryParsingService: query code
#include <API/QueryAPI.hpp>
namespace NES{
Query createQuery(){
return Query::from("debs").project(Attribute("sid"), Attribute("ts"), Attribute("absolute_v")).window(TumblingWindow::of(EventTime(Attribute("ts")), Minutes(20))).byKey(Attribute("sid")).apply(Min(Attribute("absolute_v"))).sink(FileSinkDescriptor::create("/home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out","CSV_FORMAT","APPEND", true));
}
}
[m
[36m[17:40:56.533822] [D] [thread 156056] [File.cpp:27] [createFile] Create File to file:///tmp/query_13-11-2023_17-40-56_6405266.cpp[m
[36m[17:40:56.534243] [D] [thread 156056] [CPPCompilerFlags.cpp:35] [addSharedLibraryFlag] Compile as shared library.[m
[36m[17:40:56.534302] [D] [thread 156056] [CPPCompilerFlags.cpp:64] [enableProfilingFlags] Compilation Time tracing is activated open: chrome://tracing/[m
[36m[17:40:56.534547] [D] [thread 156056] [CPPCompiler.cpp:127] [compile] Compiler: compile with: '/home/ubuntu/git/nebulastream/build/nes-llvm-16-v2/clang/bin/clang-16 -DNES_COMPILE_TIME_LOG_LEVEL=6 -fno-trigraphs -fpic -Wparentheses-equality -L/home/ubuntu/git/nebulastream/build/nes-runtime/ -std=c++20 -stdlib=libstdc++ -shared -L/home/ubuntu/git/nebulastream/build/nes-data-types/ -ftime-trace -L/home/ubuntu/git/nebulastream/build/nes-common/ -L/home/ubuntu/git/nebulastream/build/nes-core/ -o/tmp/query_13-11-2023_17-40-56_6405266.so -I/home/ubuntu/git/nebulastream/build/include/nebulastream -DFMT_HEADER_ONLY /tmp/query_13-11-2023_17-40-56_6405266.cpp'[m
[36m[17:40:57.532484] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:40:58.533719] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:59.508173] [I] [thread 156056] [CPPCompiler.cpp:166] [compile] [CPPCompiler] Compilation time: 2974.41347ms[m
[36m[17:40:59.508672] [D] [thread 156055] [Query.cpp:231] [from] Query: create new Query with source debs[m
[36m[17:40:59.508758] [D] [thread 156055] [QueryPlanBuilder.cpp:43] [createQueryPlan] QueryPlanBuilder: create query plan for input source  debs[m
[32m[17:40:59.509273] [I] [thread 156055] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.510097] [D] [thread 156055] [Query.cpp:237] [project] Query: add projection to query[m
[36m[17:40:59.510198] [D] [thread 156055] [QueryPlanBuilder.cpp:51] [addProjection] QueryPlanBuilder: add projection operator to query plan[m
[32m[17:40:59.510308] [I] [thread 156055] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.510556] [D] [thread 156055] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PROJECTION(2, schema=) as new root of the plan.[m
[36m[17:40:59.510827] [D] [thread 156055] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.510920] [D] [thread 156055] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.511829] [D] [thread 156055] [WindowedQuery.cpp:122] [windowByKey] Query: add keyed window operator[m
[36m[17:40:59.512422] [D] [thread 156055] [WindowedQuery.cpp:142] [windowByKey] add default watermark strategy as non is provided[m
[32m[17:40:59.512882] [I] [thread 156055] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.513039] [D] [thread 156055] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WATERMARKASSIGNER(3) as new root of the plan.[m
[36m[17:40:59.513200] [D] [thread 156055] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.513290] [D] [thread 156055] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:40:59.513897] [I] [thread 156055] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[36m[17:40:59.514096] [D] [thread 156055] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator WINDOW AGGREGATION(OP-4, Min;) as new root of the plan.[m
[36m[17:40:59.514334] [D] [thread 156055] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.514372] [D] [thread 156055] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.514629] [D] [thread 156055] [Query.cpp:353] [sink] Query: add sink operator to query[m
[32m[17:40:59.514849] [I] [thread 156055] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[17:40:59.515055] [D] [thread 156055] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[17:40:59.515273] [D] [thread 156055] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.515312] [D] [thread 156055] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.516434] [D] [thread 156055] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.516660] [D] [thread 156055] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.516828] [D] [thread 156055] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.517117] [D] [thread 156055] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.517230] [D] [thread 156055] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.517268] [D] [thread 156055] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.517391] [D] [thread 156055] [TypeInferencePhase.cpp:32] [TypeInferencePhase] TypeInferencePhase()[m
[36m[17:40:59.517441] [D] [thread 156055] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.517624] [D] [thread 156055] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.517718] [D] [thread 156055] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.518440] [D] [thread 156055] [TypeInferencePhase.cpp:76] [execute] TypeInferencePhase: update source descriptor for source debs with schema: debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.518494] [D] [thread 156055] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.518604] [D] [thread 156055] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.519557] [D] [thread 156055] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.520075] [D] [thread 156055] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.520752] [D] [thread 156055] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[17:40:59.521401] [I] [thread 156055] [QueryCatalog.cpp:55] [createNewEntry] QueryCatalog: Creating query catalog entry for query with id 1[m
[32m[17:40:59.522208] [I] [thread 156055] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : RunQueryRequest { QueryId: 1, QueryPlan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
, QueryPlacementStrategy: BottomUp}[m
[32m[17:40:59.522284] [I] [thread 156055] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[17:40:59.522340] [I] [thread 156007] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[17:40:59.522450] [I] [thread 156007] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[17:40:59.522484] [I] [thread 156007] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[17:40:59.522735] [I] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:150] [processAddQueryRequest] QueryProcessingService: Request received for optimizing and deploying of the query 1[m
[36m[17:40:59.522871] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:156] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[17:40:59.522906] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.522987] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.523040] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.523095] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.523137] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.523871] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.524263] [D] [thread 156007] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.524751] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.524824] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:160] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[17:40:59.524848] [D] [thread 156007] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[17:40:59.525092] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:164] [processAddQueryRequest] QueryProcessingService: Performing Query rewrite phase for query:  1[m
[32m[17:40:59.525139] [I] [thread 156007] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:40:59.525352] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[17:40:59.525698] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:40:59.526049] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:40:59.526292] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:40:59.526555] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.526892] [D] [thread 156007] [RenameSourceToProjectOperatorRule.cpp:27] [apply] RenameSourceToProjectOperatorRule: Convert all Rename Source operator to the project operator[m
[36m[17:40:59.527302] [D] [thread 156007] [ProjectBeforeUnionOperatorRule.cpp:32] [apply] Before applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.527615] [D] [thread 156007] [ProjectBeforeUnionOperatorRule.cpp:52] [apply] After applying ProjectBeforeUnionOperatorRule to the query plan: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[17:40:59.527821] [I] [thread 156007] [FilterSplitUpRule.cpp:30] [apply] Applying FilterSplitUpRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.527995] [D] [thread 156007] [FilterSplitUpRule.cpp:38] [apply] FilterSplitUpRule: Sort all filter nodes in increasing order of the operator id[m
[32m[17:40:59.528067] [I] [thread 156007] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:40:59.528187] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[17:40:59.528450] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:40:59.528752] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:40:59.528984] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:40:59.529229] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.529508] [D] [thread 156007] [FilterSplitUpRule.cpp:46] [apply] FilterSplitUpRule: Iterate over all the filter operators to split them[m
[32m[17:40:59.529803] [I] [thread 156007] [FilterPushDownRule.cpp:50] [apply] Applying FilterPushDownRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.529880] [D] [thread 156007] [FilterPushDownRule.cpp:58] [apply] FilterPushDownRule: Sort all filter nodes in increasing order of the operator id[m
[32m[17:40:59.529894] [I] [thread 156007] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:40:59.529989] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[17:40:59.530127] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 4[m
[32m[17:40:59.530394] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[32m[17:40:59.530626] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[32m[17:40:59.530873] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.531142] [D] [thread 156007] [FilterPushDownRule.cpp:66] [apply] FilterPushDownRule: Iterate over all the filter operators to push them down in the query plan[m
[32m[17:40:59.531359] [I] [thread 156007] [FilterPushDownRule.cpp:71] [apply] FilterPushDownRule: Return the updated query plan SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[32m[17:40:59.531573] [I] [thread 156007] [FilterMergeRule.cpp:27] [apply] Applying FilterMergeRule to query SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.531739] [D] [thread 156007] [FilterMergeRule.cpp:30] [apply] FilterMergeRule: Identified 0 filter nodes in the query plan[m
[36m[17:40:59.531929] [D] [thread 156007] [FilterMergeRule.cpp:31] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.532101] [D] [thread 156007] [FilterMergeRule.cpp:77] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.532248] [D] [thread 156007] [PredicateReorderingRule.cpp:28] [apply] PredicateReorderingRule: Identified 0 filter nodes in the query plan[m
[36m[17:40:59.532491] [D] [thread 156007] [PredicateReorderingRule.cpp:29] [apply] Query before applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.532676] [D] [thread 156007] [PredicateReorderingRule.cpp:87] [apply] Query after applying the rule: SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.532802] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.532858] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.532899] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.532944] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.532981] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.533656] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.534042] [D] [thread 156007] [WindowLogicalOperatorNode.cpp:70] [inferSchema] WindowLogicalOperatorNode: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.534433] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[32m[17:40:59.534507] [I] [thread 156007] [SignatureInferencePhase.cpp:59] [execute] Skipping signature creation[m
[32m[17:40:59.534740] [I] [thread 156007] [LogicalSourceExpansionRule.cpp:49] [apply] LogicalSourceExpansionRule: Plan before
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(3)
      PROJECTION(2, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(1,debs,LogicalSourceDescriptor(debs, ))
[m
[36m[17:40:59.534775] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.534849] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.534897] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.534920] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:40:59.535566] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.535657] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.535762] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.535786] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.535838] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.535915] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.535962] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.536366] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:40:59.536936] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.537018] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.537103] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.537128] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.537175] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.537238] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.537271] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.537591] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:40:59.537928] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.538115] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.538212] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.538231] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.538290] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.538361] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.538401] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.538756] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:40:59.539104] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.539172] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.539242] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.539258] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.539299] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.539355] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.539386] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.539749] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:40:59.540076] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.540143] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.540208] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.540223] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.540262] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.540313] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.540406] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.540715] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[32m[17:40:59.541054] [I] [thread 156007] [OperatorNode.cpp:46] [duplicate] OperatorNode: Create copy of the operator[m
[32m[17:40:59.541117] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 1[m
[36m[17:40:59.541181] [D] [thread 156007] [OperatorNode.cpp:49] [duplicate] OperatorNode: copy all parents[m
[36m[17:40:59.541196] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.541235] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 2[m
[36m[17:40:59.541289] [D] [thread 156007] [OperatorNode.cpp:66] [getDuplicateOfParent] OperatorNode: create copy of the input operator[m
[32m[17:40:59.541318] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 3[m
[36m[17:40:59.541590] [D] [thread 156007] [OperatorNode.cpp:56] [duplicate] OperatorNode: copy all children[m
[36m[17:40:59.542387] [D] [thread 156007] [LogicalSourceExpansionRule.cpp:151] [apply] LogicalSourceExpansionRule: Plan after
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[32m[17:40:59.542505] [I] [thread 156007] [DistributedJoinRule.cpp:31] [apply] DistributeJoinRule: Apply DistributeJoinRule.[m
[36m[17:40:59.542945] [D] [thread 156007] [DistributedJoinRule.cpp:32] [apply] DistributeJoinRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.543252] [D] [thread 156007] [DistributedJoinRule.cpp:55] [apply] DistributeJoinRule::apply: no join operator in query[m
[36m[17:40:59.543746] [D] [thread 156007] [DistributedJoinRule.cpp:58] [apply] DistributeJoinRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.543811] [D] [thread 156007] [NemoWindowPinningRule.cpp:58] [apply] NemoWindowPinningRule: Apply NemoWindowPinningRule.[m
[36m[17:40:59.544252] [D] [thread 156007] [NemoWindowPinningRule.cpp:59] [apply] NemoWindowPinningRule::apply: plan before replace
SINK(5: {FileSinkDescriptor()})
  WINDOW AGGREGATION(OP-4, Min;)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.544652] [D] [thread 156007] [NemoWindowPinningRule.cpp:68] [apply] NemoWindowPinningRule::apply: found 1 window operators[m
[36m[17:40:59.544740] [D] [thread 156007] [NemoWindowPinningRule.cpp:70] [apply] NemoWindowPinningRule::apply: window operator WINDOW AGGREGATION(OP-4, Min;)[m
[36m[17:40:59.544787] [D] [thread 156007] [NemoWindowPinningRule.cpp:99] [pinWindowOperators] NemoWindowPinningRule::apply: introduce new distributed window operator for window WINDOW AGGREGATION(OP-4, Min;)[m
[32m[17:40:59.544912] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:59.544941] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[17:40:59.545315] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:59.545359] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[17:40:59.545529] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:59.545560] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[17:40:59.545684] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:59.545699] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[17:40:59.545782] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:59.545795] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[17:40:59.545873] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:59.545886] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[17:40:59.546372] [I] [thread 156007] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:40:59.546447] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546459] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546469] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546477] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546486] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546494] [I] [thread 156007] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:40:59.546503] [I] [thread 156007] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:40:59.546513] [I] [thread 156007] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:40:59.546531] [I] [thread 156007] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:40:59.546659] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[17:40:59.546909] [D] [thread 156007] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(24) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[17:40:59.547138] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[17:40:59.547306] [D] [thread 156007] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(25) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[32m[17:40:59.547513] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[17:40:59.547635] [D] [thread 156007] [NemoWindowPinningRule.cpp:112] [pinWindowOperators] NemoWindowPinningRule::apply: newNode=CENTRALWINDOW(26) old node=WINDOW AGGREGATION(OP-4, Min;)[m
[36m[17:40:59.548286] [D] [thread 156007] [NemoWindowPinningRule.cpp:121] [pinWindowOperators] DistributedWindowRule: Plan after
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.548851] [D] [thread 156007] [NemoWindowPinningRule.cpp:87] [apply] NemoWindowPinningRule::apply: plan after replace
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.549102] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.549211] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.549276] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 6 source operators.[m
[36m[17:40:59.549328] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.549364] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.549935] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.550659] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.550950] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.551170] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.551277] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.551821] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.552516] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.552823] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.553026] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.553136] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.553658] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.554340] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.554610] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.554803] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.554912] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.555039] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.555843] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:196] [processAddQueryRequest] QueryProcessingService: Performing query choose memory layout phase:  1[m
[36m[17:40:59.555898] [D] [thread 156007] [MemoryLayoutSelectionPhase.cpp:28] [execute] Select Row Layout[m
[36m[17:40:59.556286] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:203] [processAddQueryRequest] QueryProcessingService: Performing Query type inference phase for query:  1[m
[36m[17:40:59.556445] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:207] [processAddQueryRequest] QueryProcessingService: Applying Query Merger Rules as Query Merging is enabled.[m
[36m[17:40:59.556469] [D] [thread 156007] [QueryMergerPhase.cpp:72] [execute] QueryMergerPhase: Executing query merger phase.[m
[32m[17:40:59.556528] [I] [thread 156007] [GlobalQueryPlan.cpp:173] [createNewSharedQueryPlan] Create new shared query plan[m
[32m[17:40:59.556571] [I] [thread 156007] [QueryPlan.cpp:221] [copy] QueryPlan: make copy of this query plan[m
[32m[17:40:59.556690] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[32m[17:40:59.556865] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[32m[17:40:59.557169] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[32m[17:40:59.557390] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[32m[17:40:59.557612] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[32m[17:40:59.557782] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[32m[17:40:59.557929] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[32m[17:40:59.558066] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[32m[17:40:59.558269] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[32m[17:40:59.558416] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[32m[17:40:59.558616] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[32m[17:40:59.558841] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[32m[17:40:59.559029] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[32m[17:40:59.559265] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[32m[17:40:59.559451] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[32m[17:40:59.559634] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[32m[17:40:59.559849] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[32m[17:40:59.560126] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[32m[17:40:59.560393] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[32m[17:40:59.560636] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[32m[17:40:59.560852] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[32m[17:40:59.561090] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[17:40:59.561784] [D] [thread 156007] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[17:40:59.561838] [D] [thread 156007] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[17:40:59.561939] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.561982] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562040] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562062] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562085] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562104] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562123] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562142] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562162] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562181] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562200] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562219] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562240] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562259] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562278] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562315] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562335] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562346] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.562374] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562386] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.562418] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562430] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.562449] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562460] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.562476] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562487] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.562505] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.562517] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.563738] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[17:40:59.563767] [D] [thread 156007] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[17:40:59.563834] [D] [thread 156007] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[17:40:59.563854] [D] [thread 156007] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[17:40:59.563862] [D] [thread 156007] [RequestProcessorService.cpp:111] [start] QueryProcessingService: Shared Query Plan is new.[m
[36m[17:40:59.563872] [D] [thread 156007] [RequestProcessorService.cpp:115] [start] QueryProcessingService: Performing Operator placement for shared query plan[m
[32m[17:40:59.563896] [I] [thread 156007] [QueryPlacementPhase.cpp:54] [execute] QueryPlacementPhase: Perform query placement phase for shared query plan 1[m
[36m[17:40:59.564749] [D] [thread 156007] [QueryPlacementPhase.cpp:70] [execute] QueryPlacementPhase: Perform query placement for query plan
SINK(5: {FileSinkDescriptor()})
  CENTRALWINDOW(24)
    WATERMARKASSIGNER(8)
      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
    WATERMARKASSIGNER(11)
      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
  CENTRALWINDOW(25)
    WATERMARKASSIGNER(14)
      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
    WATERMARKASSIGNER(17)
      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
  CENTRALWINDOW(26)
    WATERMARKASSIGNER(20)
      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
    WATERMARKASSIGNER(23)
      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.564784] [D] [thread 156007] [QueryPlan.cpp:120] [getLeafOperators] QueryPlan: Get all leaf nodes in the query plan.[m
[36m[17:40:59.564797] [D] [thread 156007] [QueryPlan.cpp:124] [getLeafOperators] QueryPlan: Iterate over all root nodes to find the operator.[m
[36m[17:40:59.564853] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564891] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564912] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564931] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564951] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564970] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.564989] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565010] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565029] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565048] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565067] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565086] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565107] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565127] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565164] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565185] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565205] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565217] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565247] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565268] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565296] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565308] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565327] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565339] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565355] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565366] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565385] [D] [thread 156007] [QueryPlan.cpp:133] [getLeafOperators] QueryPlan: Inserting operator in collection of already visited node.[m
[36m[17:40:59.565397] [D] [thread 156007] [QueryPlan.cpp:136] [getLeafOperators] QueryPlan: Found leaf node. Adding to the collection of leaf nodes.[m
[36m[17:40:59.565601] [D] [thread 156007] [BottomUpStrategy.cpp:50] [updateGlobalExecutionPlan] Perform placement of the pinned and all their downstream operators.[m
[32m[17:40:59.565646] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 5[m
[36m[17:40:59.565665] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 5[m
[32m[17:40:59.565751] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 6[m
[36m[17:40:59.565764] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 6[m
[32m[17:40:59.565800] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 7[m
[36m[17:40:59.565812] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 7[m
[32m[17:40:59.565833] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 8[m
[36m[17:40:59.565843] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 8[m
[32m[17:40:59.565864] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 9[m
[36m[17:40:59.565874] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 9[m
[32m[17:40:59.565891] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 10[m
[36m[17:40:59.565901] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 10[m
[32m[17:40:59.565924] [I] [thread 156007] [Topology.cpp:345] [findNodeWithId] Topology: Finding a physical node with id 1[m
[36m[17:40:59.565945] [D] [thread 156007] [Topology.cpp:347] [findNodeWithId] Topology: Found a physical node with id 1[m
[32m[17:40:59.566022] [I] [thread 156007] [Topology.cpp:73] [findPathBetween] Topology: Finding path between set of start and destination nodes[m
[36m[17:40:59.566244] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.566406] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.566515] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.566601] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.566765] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.566824] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.566880] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.566974] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567105] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.567162] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567217] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567281] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567383] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.567433] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567487] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567572] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567680] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.567732] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567785] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567847] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.567945] [D] [thread 156007] [Topology.cpp:232] [find] Topology: found the destination node[m
[36m[17:40:59.567993] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568064] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568132] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[32m[17:40:59.568180] [I] [thread 156007] [Topology.cpp:98] [mergeSubGraphs] Topology: Merge 6 sub-graphs to create a single sub-graph[m
[36m[17:40:59.568189] [D] [thread 156007] [Topology.cpp:100] [mergeSubGraphs] Topology: Compute a map storing number of times a node occurred in different sub-graphs[m
[36m[17:40:59.568558] [D] [thread 156007] [Topology.cpp:120] [mergeSubGraphs] Topology: Iterate over each sub-graph and compute a single merged sub-graph[m
[36m[17:40:59.568578] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.568667] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568681] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.568714] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:40:59.568787] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568893] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568929] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.568973] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.568983] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.569003] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:40:59.569053] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569128] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.569178] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569189] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.569209] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[36m[17:40:59.569260] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569310] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.569368] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569379] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.569392] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:40:59.569433] [W] [thread 156007] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:40:59.569447] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.569489] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569500] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.569520] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:40:59.569559] [W] [thread 156007] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:40:59.569573] [D] [thread 156007] [Topology.cpp:125] [mergeSubGraphs] Topology: Check if the node already present in the new merged graph and add a copy of the node if not present[m
[36m[17:40:59.569618] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 0 of 65535[m
[36m[17:40:59.569630] [D] [thread 156007] [Topology.cpp:128] [mergeSubGraphs] Topology: Add the start node to the list of start nodes for the new merged graph[m
[36m[17:40:59.569643] [D] [thread 156007] [Topology.cpp:132] [mergeSubGraphs] Topology: Iterate over the ancestry of the start node and add the eligible nodes to new merged graph[m
[33m[1m[17:40:59.569681] [W] [thread 156007] [Node.cpp:101] [addParent] Node: the node is already part of its parents so ignore add parent operation.[m
[36m[17:40:59.569754] [D] [thread 156007] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[17:40:59.569766] [D] [thread 156007] [Node.cpp:435] [getAllRootNodes] Node: Iterating over all parents to find more root nodes[m
[36m[17:40:59.569773] [D] [thread 156007] [Node.cpp:422] [getAllRootNodes] Node: Get all root nodes for this node[m
[36m[17:40:59.569779] [D] [thread 156007] [Node.cpp:426] [getAllRootNodes] Node: Inserting this node to the collection[m
[36m[17:40:59.569797] [D] [thread 156007] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[17:40:59.569816] [D] [thread 156007] [Node.cpp:438] [getAllRootNodes] Node: inserting parent nodes into the collection of parent nodes[m
[36m[17:40:59.569840] [D] [thread 156007] [Node.cpp:443] [getAllRootNodes] Node: Found 1 leaf nodes[m
[36m[17:40:59.570003] [D] [thread 156007] [BottomUpStrategy.cpp:74] [pinOperators] BottomUpStrategy: Get the all source operators for performing the placement.[m
[36m[17:40:59.570073] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) placement.[m
[36m[17:40:59.570137] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))[m
[36m[17:40:59.570169] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570278] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.570295] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570369] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(8)[m
[36m[17:40:59.570384] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570425] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[17:40:59.570439] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.570468] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[17:40:59.570518] [W] [thread 156007] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[17:40:59.570536] [W] [thread 156007] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[17:40:59.570572] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) placement.[m
[36m[17:40:59.570617] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))[m
[36m[17:40:59.570633] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570712] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.570728] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570775] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(11)[m
[36m[17:40:59.570790] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.570827] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(24)[m
[36m[17:40:59.570840] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.570852] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.570899] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.570935] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.570947] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.571090] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[17:40:59.571122] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.571134] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.571185] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.571208] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.571218] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.571329] [D] [thread 156007] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:40:59.571371] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) placement.[m
[36m[17:40:59.571404] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))[m
[36m[17:40:59.571431] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.571513] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.571539] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.571604] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(14)[m
[36m[17:40:59.571620] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.571659] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[17:40:59.571674] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.571686] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[17:40:59.571727] [W] [thread 156007] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[17:40:59.571744] [W] [thread 156007] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[17:40:59.571775] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) placement.[m
[36m[17:40:59.571809] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))[m
[36m[17:40:59.571824] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.571900] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.571915] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.571959] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(17)[m
[36m[17:40:59.571978] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.572017] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(25)[m
[36m[17:40:59.572031] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.572042] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.572084] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.572105] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.572116] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.572237] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[17:40:59.572256] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.572266] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.572314] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.572362] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.572372] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.572502] [D] [thread 156007] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:40:59.572551] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) placement.[m
[36m[17:40:59.572586] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))[m
[36m[17:40:59.572602] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.572687] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.572704] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.572764] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(20)[m
[36m[17:40:59.572790] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.572832] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[17:40:59.572847] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.572859] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[33m[1m[17:40:59.572899] [W] [thread 156007] [BasePlacementStrategy.cpp:676] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: unable to find topology for child operator.[m
[33m[1m[17:40:59.572915] [W] [thread 156007] [BottomUpStrategy.cpp:125] [identifyPinningLocation] BottomUpStrategy: No topology node isOperatorAPinnedDownStreamOperator where child operators are placed.[m
[36m[17:40:59.572945] [D] [thread 156007] [BottomUpStrategy.cpp:77] [pinOperators] BottomUpStrategy: Get the topology node for source operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) placement.[m
[36m[17:40:59.572979] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))[m
[36m[17:40:59.572999] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.573078] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))[m
[36m[17:40:59.573103] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.573152] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place WATERMARKASSIGNER(23)[m
[36m[17:40:59.573167] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.573204] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place CENTRALWINDOW(26)[m
[36m[17:40:59.573219] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.573230] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.573273] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.573296] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.573306] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.573430] [D] [thread 156007] [BottomUpStrategy.cpp:116] [identifyPinningLocation] BottomUpStrategy: Place SINK(5: {FileSinkDescriptor()})[m
[36m[17:40:59.573449] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.573460] [D] [thread 156007] [BasePlacementStrategy.cpp:672] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: Get topology nodes with children operators[m
[36m[17:40:59.573507] [D] [thread 156007] [BasePlacementStrategy.cpp:683] [getTopologyNodesForChildrenOperators] BasePlacementStrategy: returning list of topology nodes where children operators are placed[m
[36m[17:40:59.573525] [D] [thread 156007] [Topology.cpp:391] [findCommonAncestor] Topology: find common node for a set of topology nodes.[m
[36m[17:40:59.573534] [D] [thread 156007] [Topology.cpp:408] [findCommonAncestor] Topology: Selecting a start node to identify the common ancestor.[m
[36m[17:40:59.573667] [D] [thread 156007] [BottomUpStrategy.cpp:197] [identifyPinningLocation] BottomUpStrategy: Found pinned downstream operator. Skipping placement of further operators.[m
[36m[17:40:59.573681] [D] [thread 156007] [BottomUpStrategy.cpp:103] [pinOperators] BottomUpStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.573693] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.573746] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.573782] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.574008] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) on execution node with id 5[m
[36m[17:40:59.574028] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.574073] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.574271] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 6[m
[36m[17:40:59.574463] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as new root of the plan.[m
[36m[17:40:59.574479] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.574534] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.574565] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.574578] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.574712] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:40:59.574796] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.574834] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:40:59.574846] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:40:59.574937] [D] [thread 156007] [GlobalExecutionPlan.cpp:188] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Query Id 1 does not exists adding a new entry with execution node 5[m
[36m[17:40:59.575116] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.575140] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.575166] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:40:59.575196] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.575256] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.575399] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.575419] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.575467] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.575479] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:40:59.575552] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 5[m
[36m[17:40:59.575565] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.575582] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.575615] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.575627] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.575662] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.575674] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.575746] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.575758] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.575790] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.575897] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 7[m
[36m[17:40:59.576081] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.576101] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.576117] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 6 exists in the query plan or not[m
[36m[17:40:59.576127] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 6 in the query plan[m
[36m[17:40:59.576299] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4)) as root operator.[m
[36m[17:40:59.576400] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.576421] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.576462] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:40:59.576481] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.576495] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:40:59.576504] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:40:59.576613] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:40:59.576673] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.576690] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.576707] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:40:59.576727] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.576778] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.576849] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.576867] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.576914] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.576926] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:40:59.576955] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(8) on execution node with id 5[m
[36m[17:40:59.576965] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.576977] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.576998] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.577023] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.577048] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.577059] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.577144] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.577159] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.577180] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.577249] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 8[m
[36m[17:40:59.577421] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.577440] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.577453] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[17:40:59.577462] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 7 in the query plan[m
[36m[17:40:59.577635] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.577711] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.577728] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.577764] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  5[m
[36m[17:40:59.577781] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.577795] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 5 already scheduled[m
[36m[17:40:59.577803] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 5 to the query Id index.[m
[36m[17:40:59.577858] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 5 already mapped to the query Id 1[m
[36m[17:40:59.577895] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.577912] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.577927] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 5[m
[36m[17:40:59.577946] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.577991] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.578054] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:40:59.578073] [W] [thread 156007] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:40:59.578081] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.578094] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.578101] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.578151] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.578168] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.578255] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) on execution node with id 6[m
[36m[17:40:59.578269] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.578281] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.578371] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 9[m
[36m[17:40:59.578535] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as new root of the plan.[m
[36m[17:40:59.578553] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.578561] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.578583] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.578594] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.578648] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:40:59.578674] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.578688] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:40:59.578696] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:40:59.578754] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 6 to the query Id 1[m
[36m[17:40:59.578851] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.578871] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.578886] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:40:59.578904] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.578953] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.579080] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.579100] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.579140] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.579152] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:40:59.579216] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 6[m
[36m[17:40:59.579228] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.579241] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.579264] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.579276] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.579318] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.579331] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.579381] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.579439] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.579462] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.579552] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 10[m
[36m[17:40:59.579719] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.579737] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.579749] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 9 exists in the query plan or not[m
[36m[17:40:59.579758] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 9 in the query plan[m
[36m[17:40:59.579957] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5)) as root operator.[m
[36m[17:40:59.580007] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.580023] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.580063] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:40:59.580082] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.580095] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:40:59.580104] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:40:59.580159] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[17:40:59.580198] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.580214] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.580230] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:40:59.580250] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.580295] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.580407] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.580431] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.580480] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.580492] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:40:59.580523] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(11) on execution node with id 6[m
[36m[17:40:59.580535] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.580547] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.580569] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.580592] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.580616] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.580627] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.580710] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.580722] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.580740] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.580808] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 11[m
[36m[17:40:59.580982] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.581003] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.581016] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[17:40:59.581025] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 10 in the query plan[m
[36m[17:40:59.581200] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.581275] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.581291] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.581329] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  6[m
[36m[17:40:59.581346] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.581359] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 6 already scheduled[m
[36m[17:40:59.581368] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 6 to the query Id index.[m
[36m[17:40:59.581424] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 6 already mapped to the query Id 1[m
[36m[17:40:59.581467] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.581484] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.581499] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 6[m
[36m[17:40:59.581519] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.581566] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.581628] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.581651] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.581733] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(24) on execution node with id 2[m
[36m[17:40:59.581805] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.581820] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.581934] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 24[m
[36m[17:40:59.582133] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(24) as new root of the plan.[m
[36m[17:40:59.582150] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.582157] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.582179] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.582191] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.582243] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:40:59.582275] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.582290] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 2 already scheduled[m
[36m[17:40:59.582299] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 2 to the query Id index.[m
[36m[17:40:59.582351] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 2 to the query Id 1[m
[36m[17:40:59.582452] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.582470] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.582485] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 2[m
[36m[17:40:59.582505] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.582554] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.582626] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:40:59.582658] [W] [thread 156007] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:40:59.582667] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.582680] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.582688] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.582695] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.582750] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.582767] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.582854] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) on execution node with id 7[m
[36m[17:40:59.582868] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.582879] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.582965] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 12[m
[36m[17:40:59.583125] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as new root of the plan.[m
[36m[17:40:59.583141] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.583149] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.583168] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.583179] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.583227] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:40:59.583253] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.583267] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:40:59.583276] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:40:59.583326] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 7 to the query Id 1[m
[36m[17:40:59.583378] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.583395] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.583410] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:40:59.583429] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.583475] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.583591] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.583611] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.583651] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.583663] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:40:59.583726] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 7[m
[36m[17:40:59.583738] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.583750] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.583773] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.583785] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.583815] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.583825] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.583872] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.583882] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.583899] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.584002] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 13[m
[36m[17:40:59.584164] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.584183] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.584196] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 12 exists in the query plan or not[m
[36m[17:40:59.584205] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 12 in the query plan[m
[36m[17:40:59.584419] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6)) as root operator.[m
[36m[17:40:59.584473] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.584491] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.584532] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:40:59.584550] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.584564] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:40:59.584573] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:40:59.584631] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[17:40:59.584673] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.584691] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.584707] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:40:59.584727] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.584774] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.584840] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.584858] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.584903] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.584915] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:40:59.584944] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(14) on execution node with id 7[m
[36m[17:40:59.584954] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.584965] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.584984] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.585003] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.585025] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.585088] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.585181] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.585193] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.585213] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.585282] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 14[m
[36m[17:40:59.585457] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.585475] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.585487] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[17:40:59.585496] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 13 in the query plan[m
[36m[17:40:59.585688] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.585764] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.585781] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.585818] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  7[m
[36m[17:40:59.585845] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.585860] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 7 already scheduled[m
[36m[17:40:59.585869] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 7 to the query Id index.[m
[36m[17:40:59.585922] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 7 already mapped to the query Id 1[m
[36m[17:40:59.585962] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.585978] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.585993] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 7[m
[36m[17:40:59.586012] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.586058] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.586122] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:40:59.586142] [W] [thread 156007] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:40:59.586150] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.586174] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.586183] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.586234] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.586251] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.586350] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) on execution node with id 8[m
[36m[17:40:59.586373] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.586385] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.586477] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 15[m
[36m[17:40:59.586644] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as new root of the plan.[m
[36m[17:40:59.586660] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.586667] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.586688] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.586710] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.586761] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:40:59.586789] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.586804] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:40:59.586813] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:40:59.586865] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 8 to the query Id 1[m
[36m[17:40:59.586926] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.586944] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.586959] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:40:59.586978] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.587074] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.587208] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.587229] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.587269] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.587281] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:40:59.587394] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 8[m
[36m[17:40:59.587409] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.587422] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.587448] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.587459] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.587491] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.587501] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.587553] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.587564] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.587581] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.587670] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 16[m
[36m[17:40:59.587840] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.587871] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.587885] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 15 exists in the query plan or not[m
[36m[17:40:59.587894] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 15 in the query plan[m
[36m[17:40:59.588063] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7)) as root operator.[m
[36m[17:40:59.588114] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.588139] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.588179] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:40:59.588197] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.588211] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:40:59.588220] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:40:59.588275] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[17:40:59.588342] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.588364] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.588380] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:40:59.588401] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.588453] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.588533] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.588552] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.588600] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.588612] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:40:59.588641] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(17) on execution node with id 8[m
[36m[17:40:59.588652] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.588664] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.588685] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.588707] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.588785] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.588799] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.588889] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.588900] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.588920] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.588989] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 17[m
[36m[17:40:59.589161] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.589179] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.589191] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[17:40:59.589200] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 16 in the query plan[m
[36m[17:40:59.589380] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.589457] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.589472] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.589510] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  8[m
[36m[17:40:59.589528] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.589542] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 8 already scheduled[m
[36m[17:40:59.589551] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 8 to the query Id index.[m
[36m[17:40:59.589605] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 8 already mapped to the query Id 1[m
[36m[17:40:59.589648] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.589665] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.589679] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 8[m
[36m[17:40:59.589712] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.589756] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.589821] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.589845] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.589957] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(25) on execution node with id 3[m
[36m[17:40:59.589971] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.589983] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.590105] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 25[m
[36m[17:40:59.590298] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(25) as new root of the plan.[m
[36m[17:40:59.590315] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.590323] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.590344] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.590356] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.590411] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:40:59.590456] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.590473] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 3 already scheduled[m
[36m[17:40:59.590482] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 3 to the query Id index.[m
[36m[17:40:59.590539] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 3 to the query Id 1[m
[36m[17:40:59.590592] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.590611] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.590625] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 3[m
[36m[17:40:59.590645] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.590697] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.590770] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:40:59.590791] [W] [thread 156007] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:40:59.590799] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.590812] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.590880] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.590889] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.590952] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.590973] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.591072] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) on execution node with id 9[m
[36m[17:40:59.591086] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.591099] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.591194] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 18[m
[36m[17:40:59.591369] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as new root of the plan.[m
[36m[17:40:59.591385] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.591405] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.591427] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.591438] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.591491] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:40:59.591520] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.591535] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:40:59.591544] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:40:59.591600] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 9 to the query Id 1[m
[36m[17:40:59.591650] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.591667] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.591682] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:40:59.591700] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.591753] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.591877] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.591897] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.591937] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.591957] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:40:59.592080] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 9[m
[36m[17:40:59.592093] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.592106] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.592131] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.592142] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.592173] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.592184] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.592232] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.592295] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.592344] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.592440] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 19[m
[36m[17:40:59.592621] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.592641] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.592654] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 18 exists in the query plan or not[m
[36m[17:40:59.592663] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 18 in the query plan[m
[36m[17:40:59.592869] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8)) as root operator.[m
[36m[17:40:59.592921] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.592938] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.592980] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:40:59.593000] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.593014] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:40:59.593038] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:40:59.593101] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[17:40:59.593148] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.593201] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.593219] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:40:59.593240] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.593291] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.593366] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.593384] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.593433] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.593445] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:40:59.593476] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(20) on execution node with id 9[m
[36m[17:40:59.593522] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.593537] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.593563] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.593585] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.593612] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.593622] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.593725] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.593738] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.593759] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.593832] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 20[m
[36m[17:40:59.594013] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.594034] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.594046] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[17:40:59.594067] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 19 in the query plan[m
[36m[17:40:59.594254] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.594330] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.594346] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.594383] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  9[m
[36m[17:40:59.594402] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.594416] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 9 already scheduled[m
[36m[17:40:59.594424] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 9 to the query Id index.[m
[36m[17:40:59.594481] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 9 already mapped to the query Id 1[m
[36m[17:40:59.594523] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.594539] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.594554] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 9[m
[36m[17:40:59.594575] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.594636] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.594706] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[33m[1m[17:40:59.594726] [W] [thread 156007] [BasePlacementStrategy.cpp:170] [placePinnedOperators] BasePlacementStrategy: Upstream operators are not placed yet. Skipping the placement.[m
[36m[17:40:59.594733] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.594746] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.594754] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.594803] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.594822] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.594914] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) on execution node with id 10[m
[36m[17:40:59.594928] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.594940] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.595036] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 21[m
[36m[17:40:59.595206] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as new root of the plan.[m
[36m[17:40:59.595222] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.595230] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.595251] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.595262] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.595313] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:40:59.595341] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.595355] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:40:59.595364] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:40:59.595419] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 10 to the query Id 1[m
[36m[17:40:59.595470] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.595487] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.595502] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:40:59.595522] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.595568] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.595689] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.595711] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.595751] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.595762] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:40:59.595827] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) on execution node with id 10[m
[36m[17:40:59.595849] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.595862] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.595886] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.595898] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.595927] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.595943] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.595995] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.596005] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.596023] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.596102] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 22[m
[36m[17:40:59.596260] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.596369] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.596386] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 21 exists in the query plan or not[m
[36m[17:40:59.596396] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 21 in the query plan[m
[36m[17:40:59.596578] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9)) as root operator.[m
[36m[17:40:59.596627] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.596643] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.596682] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:40:59.596701] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.596715] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:40:59.596724] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:40:59.596780] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[17:40:59.596821] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.596838] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.596853] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:40:59.596875] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.596919] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.596982] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children false or has multiple parent false[m
[36m[17:40:59.597001] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.597052] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.597065] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:40:59.597097] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator WATERMARKASSIGNER(23) on execution node with id 10[m
[36m[17:40:59.597109] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.597122] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.597148] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.597172] [D] [thread 156007] [QueryPlan.cpp:157] [hasOperatorWithId] QueryPlan: Unable to find operator with matching Id[m
[36m[17:40:59.597213] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.597227] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.597332] [D] [thread 156007] [ExecutionNode.cpp:124] [updateQuerySubPlans] ExecutionNode: Updating the query sub plan with id :1 to the collection of query sub plans[m
[36m[17:40:59.597344] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.597367] [D] [thread 156007] [ExecutionNode.cpp:127] [updateQuerySubPlans] ExecutionNode: Updated the query sub plan with id : 1 to the collection of query sub plans[m
[32m[17:40:59.597447] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 23[m
[36m[17:40:59.597658] [D] [thread 156007] [QueryPlan.cpp:145] [hasOperatorWithId] QueryPlan: Checking if the operator exists in the query plan or not[m
[36m[17:40:59.597700] [D] [thread 156007] [QueryPlan.cpp:148] [hasOperatorWithId] QueryPlan: Found operator 1 in the query plan[m
[36m[17:40:59.597714] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[17:40:59.597724] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 22 in the query plan[m
[36m[17:40:59.597944] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)) as root operator.[m
[36m[17:40:59.598035] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.598057] [D] [thread 156007] [ExecutionNode.cpp:111] [addNewQuerySubPlan] ExecutionNode: Adding a new entry to the collection of query sub plans after assigning the id :  1[m
[36m[17:40:59.598108] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  10[m
[36m[17:40:59.598131] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.598146] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 10 already scheduled[m
[36m[17:40:59.598155] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 10 to the query Id index.[m
[36m[17:40:59.598222] [D] [thread 156007] [GlobalExecutionPlan.cpp:200] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Skipping as execution node 10 already mapped to the query Id 1[m
[36m[17:40:59.598335] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.598358] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.598376] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 10[m
[36m[17:40:59.598399] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.598466] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.598561] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.598593] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.598738] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator CENTRALWINDOW(26) on execution node with id 4[m
[36m[17:40:59.598757] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.598770] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.598886] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 26[m
[36m[17:40:59.599129] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator CENTRALWINDOW(26) as new root of the plan.[m
[36m[17:40:59.599151] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.599159] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.599185] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.599198] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.599260] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:40:59.599298] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.599315] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 4 already scheduled[m
[36m[17:40:59.599324] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 4 to the query Id index.[m
[36m[17:40:59.599399] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 4 to the query Id 1[m
[36m[17:40:59.599457] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.599475] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.599491] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 4[m
[36m[17:40:59.599513] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.599573] [D] [thread 156007] [BasePlacementStrategy.cpp:134] [placePinnedOperators] BasePlacementStrategy: Place all pinned upstream operators.[m
[36m[17:40:59.599655] [D] [thread 156007] [OperatorNode.cpp:37] [hasMultipleChildrenOrParents] OperatorNode: has multiple children true or has multiple parent false[m
[36m[17:40:59.599682] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.599804] [D] [thread 156007] [BasePlacementStrategy.cpp:693] [getCandidateQueryPlanForOperator] BasePlacementStrategy: Get candidate query plan for the operator SINK(5: {FileSinkDescriptor()}) on execution node with id 1[m
[36m[17:40:59.599821] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[33m[1m[17:40:59.599833] [W] [thread 156007] [ExecutionNode.cpp:42] [getQuerySubPlans] ExecutionNode : Unable to find query sub plan with id 1[m
[32m[17:40:59.599932] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 5[m
[36m[17:40:59.600116] [D] [thread 156007] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator SINK(5: {FileSinkDescriptor()}) as new root of the plan.[m
[36m[17:40:59.600133] [D] [thread 156007] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:40:59.600141] [D] [thread 156007] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:40:59.600162] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.600172] [D] [thread 156007] [ExecutionNode.cpp:116] [addNewQuerySubPlan] ExecutionNode: Creating a new entry of query sub plans and assigning to the id :  1[m
[36m[17:40:59.600224] [D] [thread 156007] [GlobalExecutionPlan.cpp:81] [addExecutionNode] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:40:59.600249] [D] [thread 156007] [GlobalExecutionPlan.cpp:169] [scheduleExecutionNode] GlobalExecutionPlan: Schedule execution node for deployment[m
[33m[1m[17:40:59.600263] [W] [thread 156007] [GlobalExecutionPlan.cpp:175] [scheduleExecutionNode] GlobalExecutionPlan: Execution node 1 already scheduled[m
[36m[17:40:59.600272] [D] [thread 156007] [GlobalExecutionPlan.cpp:181] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Mapping execution node 1 to the query Id index.[m
[36m[17:40:59.600374] [D] [thread 156007] [GlobalExecutionPlan.cpp:194] [mapExecutionNodeToQueryId] GlobalExecutionPlan: Adding execution node 1 to the query Id 1[m
[36m[17:40:59.600436] [D] [thread 156007] [BasePlacementStrategy.cpp:239] [placePinnedOperators] BasePlacementStrategy: Reducing the node remaining CPU capacity by 1[m
[36m[17:40:59.600452] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[32m[17:40:59.600468] [I] [thread 156007] [Topology.cpp:369] [reduceResources] Topology: Reduce 1 resources from node with id 1[m
[36m[17:40:59.600530] [D] [thread 156007] [TopologyNode.cpp:67] [reduceResources] TopologyNode: Reducing resources 1 of 65535[m
[36m[17:40:59.600556] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.600578] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.600587] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.600595] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.600604] [D] [thread 156007] [BasePlacementStrategy.cpp:268] [placePinnedOperators] BasePlacementStrategy: Finished placing query operators into the global execution plan[m
[36m[17:40:59.600620] [D] [thread 156007] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[32m[17:40:59.600664] [I] [thread 156007] [BasePlacementStrategy.cpp:361] [addNetworkSourceAndSinkOperators] [m
[36m[17:40:59.600690] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.600755] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 7 exists in the query plan or not[m
[36m[17:40:59.600798] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.600826] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[17:40:59.600838] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[36m[17:40:59.600856] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.601018] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.601044] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.601065] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[17:40:59.601112] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.601197] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.601215] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.601222] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.601339] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.601422] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.601434] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:40:59.601456] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.601471] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.601502] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 8 exists in the query plan or not[m
[36m[17:40:59.601515] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 8 in the query plan[m
[32m[17:40:59.601682] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 29[m
[36m[17:40:59.601874] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(8) as root operator.[m
[36m[17:40:59.601956] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.601998] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.602010] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:40:59.602027] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.602040] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.602223] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 27[m
[36m[17:40:59.602274] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[17:40:59.602286] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[17:40:59.602437] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 5 exists[m
[36m[17:40:59.602454] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  5[m
[36m[17:40:59.602467] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  5[m
[36m[17:40:59.602481] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.602509] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:40:59.602539] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.602589] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 10 exists in the query plan or not[m
[36m[17:40:59.602625] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.602650] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[17:40:59.602661] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[36m[17:40:59.602677] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.602794] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.602838] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.602872] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.602911] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.602972] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.602987] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.602994] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.603057] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.603125] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.603137] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:40:59.603154] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.603168] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.603195] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 11 exists in the query plan or not[m
[36m[17:40:59.603208] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 11 in the query plan[m
[32m[17:40:59.603276] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 32[m
[36m[17:40:59.603422] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(11) as root operator.[m
[36m[17:40:59.603487] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.603529] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.603540] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:40:59.603556] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.603567] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.603665] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 30[m
[36m[17:40:59.603704] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[17:40:59.603716] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[36m[17:40:59.603845] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 6 exists[m
[36m[17:40:59.603861] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  6[m
[36m[17:40:59.603872] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  6[m
[36m[17:40:59.603883] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.603924] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  2[m
[36m[17:40:59.603983] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.604122] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.604143] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.604161] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[17:40:59.604193] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.604245] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.604261] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.604267] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.604366] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.604455] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.604468] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:40:59.604505] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.604521] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.604555] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 24 exists in the query plan or not[m
[36m[17:40:59.604569] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 24 in the query plan[m
[32m[17:40:59.604652] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 35[m
[36m[17:40:59.604849] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(24) as root operator.[m
[36m[17:40:59.604960] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.605017] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.605029] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:40:59.605050] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.605066] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.605237] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 33[m
[36m[17:40:59.605301] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[17:40:59.605316] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[17:40:59.605518] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 2 exists[m
[36m[17:40:59.605543] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  2[m
[36m[17:40:59.605557] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  2[m
[36m[17:40:59.605584] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.605617] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:40:59.605653] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.605709] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 13 exists in the query plan or not[m
[36m[17:40:59.605753] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.605783] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[17:40:59.605796] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[36m[17:40:59.605815] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.605950] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.605975] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.605995] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[17:40:59.606031] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.606099] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.606114] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.606120] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.606188] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.606265] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.606278] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:40:59.606296] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.606313] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.606343] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 14 exists in the query plan or not[m
[36m[17:40:59.606355] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 14 in the query plan[m
[32m[17:40:59.606428] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 38[m
[36m[17:40:59.606587] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(14) as root operator.[m
[36m[17:40:59.606662] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.606705] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.606716] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:40:59.606732] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.606745] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.606850] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 36[m
[36m[17:40:59.606890] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[17:40:59.606903] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[17:40:59.607058] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 7 exists[m
[36m[17:40:59.607075] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  7[m
[36m[17:40:59.607087] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  7[m
[36m[17:40:59.607097] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.607123] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:40:59.607153] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.607195] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 16 exists in the query plan or not[m
[36m[17:40:59.607230] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.607255] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[17:40:59.607266] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[36m[17:40:59.607283] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.607395] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.607436] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.607469] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.607504] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.607561] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.607577] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.607593] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.607657] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.607726] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.607739] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:40:59.607756] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.607771] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.607798] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 17 exists in the query plan or not[m
[36m[17:40:59.607810] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 17 in the query plan[m
[32m[17:40:59.607921] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 41[m
[36m[17:40:59.608081] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(17) as root operator.[m
[36m[17:40:59.608156] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.608198] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.608209] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:40:59.608225] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.608237] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.608383] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 39[m
[36m[17:40:59.608431] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[17:40:59.608445] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[36m[17:40:59.608600] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 8 exists[m
[36m[17:40:59.608619] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  8[m
[36m[17:40:59.608631] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  8[m
[36m[17:40:59.608641] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.608671] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  3[m
[36m[17:40:59.608707] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.608838] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.608879] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.608910] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.608946] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.608999] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.609013] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.609019] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.609080] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.609146] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.609159] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:40:59.609174] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.609189] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.609217] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 25 exists in the query plan or not[m
[36m[17:40:59.609229] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 25 in the query plan[m
[32m[17:40:59.609297] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 44[m
[36m[17:40:59.609447] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(25) as root operator.[m
[36m[17:40:59.609515] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.609557] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.609568] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:40:59.609584] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.609597] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.609693] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 42[m
[36m[17:40:59.609730] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[17:40:59.609743] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[17:40:59.609877] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 3 exists[m
[36m[17:40:59.609893] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  3[m
[36m[17:40:59.609905] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  3[m
[36m[17:40:59.609914] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.609943] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:40:59.609973] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.610039] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 19 exists in the query plan or not[m
[36m[17:40:59.610078] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.610106] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[17:40:59.610118] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[36m[17:40:59.610134] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.610249] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.610269] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.610287] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 0 source operators.[m
[36m[17:40:59.610320] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.610380] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.610396] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.610402] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.610463] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.610529] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.610541] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:40:59.610557] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.610572] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.610602] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 20 exists in the query plan or not[m
[36m[17:40:59.610613] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 20 in the query plan[m
[32m[17:40:59.610679] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 47[m
[36m[17:40:59.610878] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(20) as root operator.[m
[36m[17:40:59.610955] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.610996] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.611008] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:40:59.611024] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.611037] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.611141] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 45[m
[36m[17:40:59.611181] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[17:40:59.611202] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[17:40:59.611329] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 9 exists[m
[36m[17:40:59.611346] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  9[m
[36m[17:40:59.611359] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  9[m
[36m[17:40:59.611368] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.611393] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:40:59.611421] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.611484] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 22 exists in the query plan or not[m
[36m[17:40:59.611522] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.611548] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[17:40:59.611559] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[36m[17:40:59.611576] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.611708] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.611751] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.611784] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.611822] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.611884] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.611899] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.611905] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.611983] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.612055] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.612067] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:40:59.612084] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.612099] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.612128] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 23 exists in the query plan or not[m
[36m[17:40:59.612140] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 23 in the query plan[m
[32m[17:40:59.612208] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 50[m
[36m[17:40:59.612393] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator WATERMARKASSIGNER(23) as root operator.[m
[36m[17:40:59.612471] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.612516] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.612528] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:40:59.612545] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.612558] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.612666] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 48[m
[36m[17:40:59.612707] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[17:40:59.612728] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[36m[17:40:59.612866] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 10 exists[m
[36m[17:40:59.612882] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  10[m
[36m[17:40:59.612894] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  10[m
[36m[17:40:59.612903] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.612933] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  4[m
[36m[17:40:59.612969] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.613103] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.613149] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.613188] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[17:40:59.613224] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.613276] [D] [thread 156007] [Topology.cpp:545] [findNodesBetween] Topology: iterate over parent of the source node and find path between its parent and destination nodes.[m
[36m[17:40:59.613290] [D] [thread 156007] [Topology.cpp:534] [findNodesBetween] Topology: Find topology nodes between source and destination nodes.[m
[36m[17:40:59.613296] [D] [thread 156007] [Topology.cpp:536] [findNodesBetween] Topology: Both source and destination are same node.[m
[36m[17:40:59.613357] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.613435] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.613449] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:40:59.613465] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.613490] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.613519] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 26 exists in the query plan or not[m
[36m[17:40:59.613531] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 26 in the query plan[m
[32m[17:40:59.613599] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 53[m
[36m[17:40:59.613750] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator CENTRALWINDOW(26) as root operator.[m
[36m[17:40:59.613819] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.613858] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.613869] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:40:59.613885] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.613897] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[32m[17:40:59.614037] [I] [thread 156007] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 51[m
[36m[17:40:59.614083] [D] [thread 156007] [QueryPlan.cpp:162] [getOperatorWithId] QueryPlan: Checking if the operator with id 5 exists in the query plan or not[m
[36m[17:40:59.614098] [D] [thread 156007] [QueryPlan.cpp:165] [getOperatorWithId] QueryPlan: Found operator 5 in the query plan[m
[36m[17:40:59.614246] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 4 exists[m
[36m[17:40:59.614263] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  4[m
[36m[17:40:59.614274] [D] [thread 156007] [GlobalExecutionPlan.cpp:49] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Adding Execution node as parent to the execution node with id  4[m
[36m[17:40:59.614285] [D] [thread 156007] [Node.cpp:387] [containAsParent] Node: Checking if the input node is contained in the parent list[m
[36m[17:40:59.614316] [D] [thread 156007] [GlobalExecutionPlan.cpp:56] [addExecutionNodeAsParentTo] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:40:59.614369] [D] [thread 156007] [GlobalExecutionPlan.cpp:154] [getRootNodes] GlobalExecutionPlan: Get root nodes of the execution plan[m
[36m[17:40:59.614405] [D] [thread 156007] [GlobalExecutionPlan.cpp:33] [checkIfExecutionNodeIsARoot] GlobalExecutionPlan: Checking if Execution node with id 1 is a root node[m
[36m[17:40:59.614416] [D] [thread 156007] [GlobalExecutionPlan.cpp:28] [checkIfExecutionNodeExists] GlobalExecutionPlan: Checking if Execution node with id 1 exists[m
[36m[17:40:59.614425] [D] [thread 156007] [GlobalExecutionPlan.cpp:39] [getExecutionNodeByNodeId] GlobalExecutionPlan: Returning execution node with id  1[m
[36m[17:40:59.614451] [D] [thread 156007] [GlobalExecutionPlan.cpp:68] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node as root node[m
[36m[17:40:59.614474] [D] [thread 156007] [GlobalExecutionPlan.cpp:72] [addExecutionNodeAsRoot] GlobalExecutionPlan: Added Execution node with id  1[m
[36m[17:40:59.614533] [D] [thread 156007] [BasePlacementStrategy.cpp:337] [runTypeInferencePhase] BasePlacementStrategy: Run type inference phase for all the query sub plans to be deployed.[m
[36m[17:40:59.614557] [D] [thread 156007] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:40:59.614581] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.614596] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.614825] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.614873] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.614978] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.615026] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.615056] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.615694] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.615980] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.616028] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.616044] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.616206] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.616245] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.616274] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.616311] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.616368] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.616968] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.617236] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.617279] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.617295] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.617450] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.617496] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.617532] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[17:40:59.617566] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.617586] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.617785] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.618007] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.618113] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.618216] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.618259] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.618275] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.618422] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.618458] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.618485] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.618520] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.618541] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.619122] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.619386] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.619427] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.619442] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.619652] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.619693] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.619724] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.619761] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.619782] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.620396] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.620703] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.620752] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.620769] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.620935] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.620979] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.621014] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[17:40:59.621049] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.621070] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.621256] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.621469] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.621560] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.621657] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.621699] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.621715] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.621917] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.621961] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.621991] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.622030] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.622052] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.622607] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.622917] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.622963] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.622979] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.623128] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.623165] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.623192] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 1 source operators.[m
[36m[17:40:59.623230] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.623251] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.623828] [D] [thread 156007] [ProjectionLogicalOperatorNode.cpp:54] [inferSchema] proj input=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)  outputSchema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits) this proj=PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits))[m
[36m[17:40:59.624089] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.624128] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.624144] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.624279] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.624343] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.624379] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 2 source operators.[m
[36m[17:40:59.624414] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.624437] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.624627] [D] [thread 156007] [CentralWindowOperator.cpp:70] [inferSchema] SliceCreationOperator: TypeInferencePhase: infer types for window operator with input schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:40:59.624841] [I] [thread 156007] [CentralWindowOperator.cpp:112] [inferSchema] Add the following field to the output schema of the NonKeyedWindow debs$absolute_v[m
[32m[17:40:59.624933] [I] [thread 156007] [CentralWindowOperator.cpp:116] [inferSchema] The final output schema is debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.625031] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.625088] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.625105] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.625253] [D] [thread 156007] [QueryPlan.cpp:56] [getSourceOperators] QueryPlan: Get all source operators by traversing all the root nodes.[m
[36m[17:40:59.625297] [D] [thread 156007] [QueryPlan.cpp:60] [getSourceOperators] QueryPlan: insert all source operators to the collection[m
[36m[17:40:59.625332] [D] [thread 156007] [QueryPlan.cpp:63] [getSourceOperators] QueryPlan: Found 3 source operators.[m
[36m[17:40:59.625422] [D] [thread 156007] [QueryPlan.cpp:69] [getSinkOperators] QueryPlan: Get all sink operators by traversing all the root nodes.[m
[36m[17:40:59.625448] [D] [thread 156007] [QueryPlan.cpp:75] [getSinkOperators] QueryPlan: Found 1 sink operators.[m
[36m[17:40:59.625595] [D] [thread 156007] [TypeInferencePhase.cpp:90] [execute] TypeInferencePhase: we inferred all schemas[m
[36m[17:40:59.625644] [D] [thread 156007] [GlobalExecutionPlan.cpp:159] [getAsString] GlobalExecutionPlan: Get Execution plan as string[m
[36m[17:40:59.627544] [D] [thread 156007] [QueryPlacementPhase.cpp:140] [execute] QueryPlacementPhase: Update Global Execution Plan:
ExecutionNode(id:1, ip:192.168.2.11, topologyId:1)
| QuerySubPlan(queryId:1, querySubPlanId:10)
|  SINK(5: {FileSinkDescriptor()})
|    SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:34237 1::33::0::0})
|    SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:37615 1::42::0::0})
|    SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:40725 1::51::0::0})
|--ExecutionNode(id:2, ip:192.168.2.12, topologyId:2)
|  | QuerySubPlan(queryId:1, querySubPlanId:3)
|  |  SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:34443)})
|  |    CENTRALWINDOW(24)
|  |      SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:35209 1::27::0::0})
|  |      SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:40285 1::30::0::0})
|  |--ExecutionNode(id:5, ip:192.168.2.32, topologyId:5)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:1)
|  |  |  SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:34237)})
|  |  |    WATERMARKASSIGNER(8)
|  |  |      PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
|  |--ExecutionNode(id:6, ip:192.168.2.33, topologyId:6)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:2)
|  |  |  SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:34237)})
|  |  |    WATERMARKASSIGNER(11)
|  |  |      PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
|--ExecutionNode(id:3, ip:192.168.2.30, topologyId:3)
|  | QuerySubPlan(queryId:1, querySubPlanId:6)
|  |  SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:34443)})
|  |    CENTRALWINDOW(25)
|  |      SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:37055 1::36::0::0})
|  |      SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:46055 1::39::0::0})
|  |--ExecutionNode(id:7, ip:192.168.2.34, topologyId:7)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:4)
|  |  |  SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:37615)})
|  |  |    WATERMARKASSIGNER(14)
|  |  |      PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
|  |--ExecutionNode(id:8, ip:192.168.2.35, topologyId:8)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:5)
|  |  |  SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:37615)})
|  |  |    WATERMARKASSIGNER(17)
|  |  |      PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
|--ExecutionNode(id:4, ip:192.168.2.31, topologyId:4)
|  | QuerySubPlan(queryId:1, querySubPlanId:9)
|  |  SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:34443)})
|  |    CENTRALWINDOW(26)
|  |      SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:33759 1::45::0::0})
|  |      SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:36047 1::48::0::0})
|  |--ExecutionNode(id:9, ip:192.168.2.37, topologyId:9)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:7)
|  |  |  SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:40725)})
|  |  |    WATERMARKASSIGNER(20)
|  |  |      PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
|  |--ExecutionNode(id:10, ip:192.168.2.38, topologyId:10)
|  |  | QuerySubPlan(queryId:1, querySubPlanId:8)
|  |  |  SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:40725)})
|  |  |    WATERMARKASSIGNER(23)
|  |  |      PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
|  |  |        SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.627676] [D] [thread 156007] [QueryDeploymentPhase.cpp:54] [execute] QueryDeploymentPhase: deploy the query[m
[36m[17:40:59.627707] [D] [thread 156007] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:40:59.627976] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628000] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628215] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628232] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628292] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628304] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628382] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628399] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628439] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628450] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628483] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628494] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628526] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628582] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628627] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628638] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628676] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628688] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628722] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628733] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.628889] [D] [thread 156007] [QueryDeploymentPhase.cpp:106] [deployQuery] QueryDeploymentPhase::deployQuery queryId= 1[m
[36m[17:40:59.628920] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=5[m
[36m[17:40:59.628929] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.628939] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.629157] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.32:42327[m
[36m[17:40:59.629199] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.32:42327 queryId=1 querySubPlanId = 1[m
[36m[17:40:59.629504] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(29: {NetworkSinkDescriptor(partition=1::27::0::0;nodeLocation=tcp://192.168.2.12:34237)})
  WATERMARKASSIGNER(8)
    PROJECTION(7, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(6,debs,LogicalSourceDescriptor(debs, test_stream4))
[m
[36m[17:40:59.629541] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.629800] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.633674] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.634529] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.634834] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.634963] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.635586] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.636708] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.637010] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.637150] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.637276] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.637370] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.637796] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.637920] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.637955] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.638014] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.638043] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.638098] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.638337] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.638657] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.638813] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.638913] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.639320] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream4)[m
[36m[17:40:59.639563] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.639906] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.640411] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.640766] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.641004] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.641320] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.653212] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=6[m
[36m[17:40:59.653247] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.653264] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.653399] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.33:34405[m
[36m[17:40:59.653428] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.33:34405 queryId=1 querySubPlanId = 2[m
[36m[17:40:59.653686] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(32: {NetworkSinkDescriptor(partition=1::30::0::0;nodeLocation=tcp://192.168.2.12:34237)})
  WATERMARKASSIGNER(11)
    PROJECTION(10, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(9,debs,LogicalSourceDescriptor(debs, test_stream5))
[m
[36m[17:40:59.653726] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.653993] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.654225] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.654366] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.654494] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.654594] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.654936] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.655017] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.655163] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.655275] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.655381] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.655473] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.655793] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.655900] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.655934] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.655993] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.656022] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.656076] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.656387] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.656719] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.656883] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.656983] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.657347] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream5)[m
[36m[17:40:59.657526] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.657850] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.658213] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.658529] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.658755] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.659067] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.667470] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=2[m
[36m[17:40:59.667504] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.667523] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.667648] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.12:34521[m
[36m[17:40:59.667679] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.12:34521 queryId=1 querySubPlanId = 3[m
[36m[17:40:59.667904] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(35: {NetworkSinkDescriptor(partition=1::33::0::0;nodeLocation=tcp://192.168.2.11:34443)})
  CENTRALWINDOW(24)
    SOURCE(27,,NetworkSourceDescriptor{tcp://192.168.2.32:35209 1::27::0::0})
    SOURCE(30,,NetworkSourceDescriptor{tcp://192.168.2.33:40285 1::30::0::0})
[m
[36m[17:40:59.667941] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.668092] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.668354] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.668527] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.668689] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.668860] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.669275] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.669406] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.669675] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.669771] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.669811] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.669871] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.670291] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.670421] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.670552] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.670670] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.671002] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.32:35209 1::27::0::0}[m
[36m[17:40:59.671126] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.671276] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.671567] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.671677] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.671845] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.671954] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.672275] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.33:40285 1::30::0::0}[m
[36m[17:40:59.672427] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.672565] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.672789] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.672893] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.672987] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.673078] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.680503] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=7[m
[36m[17:40:59.680537] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.680555] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.680680] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.34:44581[m
[36m[17:40:59.680717] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.34:44581 queryId=1 querySubPlanId = 4[m
[36m[17:40:59.680975] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(38: {NetworkSinkDescriptor(partition=1::36::0::0;nodeLocation=tcp://192.168.2.30:37615)})
  WATERMARKASSIGNER(14)
    PROJECTION(13, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(12,debs,LogicalSourceDescriptor(debs, test_stream6))
[m
[36m[17:40:59.681012] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.681167] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.681388] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.681526] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.681656] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.681754] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.682090] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.682172] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.682316] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.682427] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.682537] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.682631] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.682946] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.683059] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.683095] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.683155] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.683185] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.683241] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.683460] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.683782] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.683944] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.684046] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.684450] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream6)[m
[36m[17:40:59.684632] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.684971] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.685343] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.685649] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.685869] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.686180] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.694899] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=8[m
[36m[17:40:59.694934] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.694963] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.695089] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.35:42211[m
[36m[17:40:59.695119] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.35:42211 queryId=1 querySubPlanId = 5[m
[36m[17:40:59.695377] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(41: {NetworkSinkDescriptor(partition=1::39::0::0;nodeLocation=tcp://192.168.2.30:37615)})
  WATERMARKASSIGNER(17)
    PROJECTION(16, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(15,debs,LogicalSourceDescriptor(debs, test_stream7))
[m
[36m[17:40:59.695415] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.695565] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.695844] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.695989] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.696117] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.696215] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.696620] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.696705] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.696868] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.696985] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.697096] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.697189] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.697506] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.697611] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.697646] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.697705] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.697735] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.697847] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.698065] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.698386] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.698546] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.698650] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.699014] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream7)[m
[36m[17:40:59.699192] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.699515] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.699882] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.700210] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.700498] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.700833] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.709557] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=3[m
[36m[17:40:59.709591] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.709609] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.709733] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.30:43523[m
[36m[17:40:59.709767] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.30:43523 queryId=1 querySubPlanId = 6[m
[36m[17:40:59.709995] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(44: {NetworkSinkDescriptor(partition=1::42::0::0;nodeLocation=tcp://192.168.2.11:34443)})
  CENTRALWINDOW(25)
    SOURCE(36,,NetworkSourceDescriptor{tcp://192.168.2.34:37055 1::36::0::0})
    SOURCE(39,,NetworkSourceDescriptor{tcp://192.168.2.35:46055 1::39::0::0})
[m
[36m[17:40:59.710031] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.710182] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.710423] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.710583] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.710724] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.710842] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.711211] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.711329] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.711495] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.711628] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.711665] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.711787] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.712012] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.712121] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.712244] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.712410] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.712765] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.34:37055 1::36::0::0}[m
[36m[17:40:59.712855] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.712978] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.713195] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.713302] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.713396] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.713491] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.713776] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.35:46055 1::39::0::0}[m
[36m[17:40:59.713859] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.713974] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.714165] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.714268] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.714380] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.714473] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.721841] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=9[m
[36m[17:40:59.721891] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.721909] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.722033] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.37:44917[m
[36m[17:40:59.722062] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.37:44917 queryId=1 querySubPlanId = 7[m
[36m[17:40:59.722315] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(47: {NetworkSinkDescriptor(partition=1::45::0::0;nodeLocation=tcp://192.168.2.31:40725)})
  WATERMARKASSIGNER(20)
    PROJECTION(19, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(18,debs,LogicalSourceDescriptor(debs, test_stream8))
[m
[36m[17:40:59.722352] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.722505] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.722724] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.722860] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.722986] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.723084] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.723429] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.723514] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.723663] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.723781] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.723888] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.723980] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.724307] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.724456] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.724492] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.724550] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.724580] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.724638] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.724853] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.725188] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.725358] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.725457] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.725820] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream8)[m
[36m[17:40:59.726005] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.726338] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.726696] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.727015] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.727237] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.727536] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.736161] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=10[m
[36m[17:40:59.736241] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.736262] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.736443] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.38:37991[m
[36m[17:40:59.736505] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.38:37991 queryId=1 querySubPlanId = 8[m
[36m[17:40:59.736765] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(50: {NetworkSinkDescriptor(partition=1::48::0::0;nodeLocation=tcp://192.168.2.31:40725)})
  WATERMARKASSIGNER(23)
    PROJECTION(22, schema=debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits))
      SOURCE(21,debs,LogicalSourceDescriptor(debs, test_stream9))
[m
[36m[17:40:59.736802] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.736954] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.737177] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.737333] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.737467] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.737606] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.737968] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[Undefined])[m
[36m[17:40:59.738071] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.738219] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.738341] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.738454] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.738551] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.738886] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.739019] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.739064] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$ts[INTEGER(64 bits)])[m
[36m[17:40:59.739129] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.739157] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.739215] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.739427] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.739763] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.739940] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.740067] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.740487] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =LogicalSourceDescriptor(debs, test_stream9)[m
[36m[17:40:59.740688] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.741040] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.741433] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.741775] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.742019] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$x:INTEGER(64 bits) debs$y:INTEGER(64 bits) debs$z:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits) debs$absolute_a:INTEGER(64 bits) debs$vx:INTEGER(64 bits) debs$vy:INTEGER(64 bits) debs$vz:INTEGER(64 bits) debs$ax:INTEGER(64 bits) debs$ay:INTEGER(64 bits) debs$az:INTEGER(64 bits)[m
[36m[17:40:59.742351] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.750139] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=4[m
[36m[17:40:59.750261] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.750284] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.750405] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.31:43375[m
[36m[17:40:59.750468] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.31:43375 queryId=1 querySubPlanId = 9[m
[36m[17:40:59.750698] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(53: {NetworkSinkDescriptor(partition=1::51::0::0;nodeLocation=tcp://192.168.2.11:34443)})
  CENTRALWINDOW(26)
    SOURCE(45,,NetworkSourceDescriptor{tcp://192.168.2.37:33759 1::45::0::0})
    SOURCE(48,,NetworkSourceDescriptor{tcp://192.168.2.38:36047 1::48::0::0})
[m
[36m[17:40:59.750746] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.750901] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.751133] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.751324] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.751487] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.751628] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.752035] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$sid[INTEGER(64 bits)])[m
[36m[17:40:59.752175] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.752364] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.752469] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.752504] [D] [thread 156007] [ExpressionSerializationUtil.cpp:66] [serializeExpression] ExpressionSerializationUtil:: serialize expression FieldAccessNode(debs$absolute_v[INTEGER(64 bits)])[m
[36m[17:40:59.752563] [D] [thread 156007] [ExpressionSerializationUtil.cpp:165] [serializeExpression] ExpressionSerializationUtil:: serialize expression node to type.googleapis.com/NES.SerializableExpression.FieldAccessExpression[m
[36m[17:40:59.752792] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.752906] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.753030] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.753146] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.753502] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.37:33759 1::45::0::0}[m
[36m[17:40:59.753611] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.753734] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.753993] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.754127] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.754233] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.754327] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.754659] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.38:36047 1::48::0::0}[m
[36m[17:40:59.754763] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.754880] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.755110] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.755233] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.755335] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$sid:INTEGER(64 bits) debs$ts:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.755458] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.762042] [D] [thread 156007] [QueryDeploymentPhase.cpp:109] [deployQuery] QueryDeploymentPhase::registerQueryInNodeEngine serialize id=1[m
[36m[17:40:59.762123] [D] [thread 156007] [ExecutionNode.cpp:33] [hasQuerySubPlans] ExecutionNode : Checking if a query sub plan exists with id  1[m
[36m[17:40:59.762144] [D] [thread 156007] [ExecutionNode.cpp:39] [getQuerySubPlans] ExecutionNode : Found query sub plan with id  1[m
[36m[17:40:59.762257] [D] [thread 156007] [QueryDeploymentPhase.cpp:123] [deployQuery] QueryDeploymentPhase:deployQuery: 1 to 192.168.2.11:42211[m
[36m[17:40:59.762286] [D] [thread 156007] [WorkerRPCClient.cpp:68] [registerQueryAsync] WorkerRPCClient::registerQueryAsync address=192.168.2.11:42211 queryId=1 querySubPlanId = 10[m
[36m[17:40:59.762515] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:31] [serializeQueryPlan] QueryPlanSerializationUtil: serializing query plan SINK(5: {FileSinkDescriptor()})
  SOURCE(33,,NetworkSourceDescriptor{tcp://192.168.2.12:34237 1::33::0::0})
  SOURCE(42,,NetworkSourceDescriptor{tcp://192.168.2.30:37615 1::42::0::0})
  SOURCE(51,,NetworkSourceDescriptor{tcp://192.168.2.31:40725 1::51::0::0})
[m
[36m[17:40:59.762550] [D] [thread 156007] [QueryPlanSerializationUtil.cpp:33] [serializeQueryPlan] QueryPlanSerializationUtil: serializing the operator chain for each root operator independently[m
[36m[17:40:59.762683] [D] [thread 156007] [OperatorSerializationUtil.cpp:1541] [serializeSinkDescriptor] OperatorSerializationUtil:: serialized SinkDescriptor [m
[36m[17:40:59.762967] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.763126] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.763271] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.763423] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.763782] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.12:34237 1::33::0::0}[m
[36m[17:40:59.763899] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.764040] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.764304] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.764503] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.764639] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.764779] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.765103] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.30:37615 1::42::0::0}[m
[36m[17:40:59.765215] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.765355] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.765605] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.765757] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.765874] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.765991] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.766331] [D] [thread 156007] [OperatorSerializationUtil.cpp:1083] [serializeSourceDescriptor] OperatorSerializationUtil:: serialize to SourceDescriptor with =NetworkSourceDescriptor{tcp://192.168.2.31:40725 1::51::0::0}[m
[36m[17:40:59.766441] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.766583] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.766844] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.767008] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.767140] [D] [thread 156007] [SchemaSerializationUtil.cpp:26] [serializeSchema] SchemaSerializationUtil:: serialize schema debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:40:59.767276] [D] [thread 156007] [SchemaSerializationUtil.cpp:38] [serializeSchema] SchemaSerializationUtil:: serialize schema Row Layout[m
[36m[17:40:59.774477] [D] [thread 156007] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Register for 10 queues[m
[36m[17:41:00.067018] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:00.067418] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.068587] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.205163] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.205552] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.372275] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:01.372688] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:02.373880] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:02.566513] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:02.566886] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:41:02.939093] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 54[m
[36m[17:41:02.939249] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.939781] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.939865] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.940240] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.941650] [D] [thread 156023] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:41:02.941785] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.942223] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:41:02.942444] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 55[m
[36m[17:41:02.942523] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.942946] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.943012] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.943361] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.944845] [D] [thread 156023] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:41:02.944958] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.945378] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:41:02.945544] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 56[m
[36m[17:41:02.945618] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.946014] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.946077] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.946420] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.947834] [D] [thread 156023] [OperatorSerializationUtil.cpp:1449] [deserializeSourceDescriptor] OperatorSerializationUtil:: de-serialized SourceDescriptor as NetworkSourceDescriptor[m
[36m[17:41:02.948060] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.948555] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[32m[17:41:02.948720] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 57[m
[36m[17:41:02.948797] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.949203] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.949267] [D] [thread 156023] [SchemaSerializationUtil.cpp:49] [deserializeSchema] SchemaSerializationUtil:: deserialize schema [m
[36m[17:41:02.949734] [D] [thread 156023] [SchemaSerializationUtil.cpp:62] [deserializeSchema] SchemaSerializationUtil:: deserialized row Layout[m
[36m[17:41:02.951216] [D] [thread 156023] [WorkerRPCServer.cpp:45] [RegisterQuery] WorkerRPCServer::RegisterQuery: got request for queryId: 1 plan=SINK(54: {FileSinkDescriptor()})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:34237 1::33::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.30:37615 1::42::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.31:40725 1::51::0::0})
[m
[32m[17:41:02.951305] [I] [thread 156023] [NodeEngine.cpp:112] [registerQueryInNodeEngine] Creating ExecutableQueryPlan for 1 10 [m
[32m[17:41:02.951429] [I] [thread 156023] [NautilusQueryCompiler.cpp:59] [compileQuery] Compile Query with Nautilus[m
Dumping queryPlan: [36m[17:41:02.951732] [D] [thread 156023] [NautilusQueryCompiler.cpp:70] [compileQuery] compile query with id: 1 subPlanId: 10[m
[36m[17:41:02.951775] [D] [thread 156023] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-13 17:41:02 - 1. LogicalQueryPlan[m
SINK(54: {FileSinkDescriptor()})
  SOURCE(57,,NetworkSourceDescriptor{tcp://192.168.2.12:34237 1::33::0::0})
  SOURCE(56,,NetworkSourceDescriptor{tcp://192.168.2.30:37615 1::42::0::0})
  SOURCE(55,,NetworkSourceDescriptor{tcp://192.168.2.31:40725 1::51::0::0})

[32m[17:41:02.952413] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 58[m
[32m[17:41:02.952543] [I] [thread 156023] [Node.cpp:164] [insertBetweenThisAndChildNodes] Node: Create temporary copy of this nodes parents.[m
[32m[17:41:02.952561] [I] [thread 156023] [Node.cpp:167] [insertBetweenThisAndChildNodes] Node: Remove all childs of this node.[m
[32m[17:41:02.952569] [I] [thread 156023] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:41:02.952588] [I] [thread 156023] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:41:02.952609] [I] [thread 156023] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:41:02.952618] [I] [thread 156023] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:41:02.952705] [I] [thread 156023] [Node.cpp:175] [insertBetweenThisAndChildNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:41:02.952987] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[17:41:02.953137] [D] [thread 156023] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[32m[17:41:02.953154] [I] [thread 156023] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:41:02.953160] [I] [thread 156023] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[36m[17:41:02.953236] [D] [thread 156023] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:41:02.953249] [D] [thread 156023] [Node.cpp:363] [removeAndJoinParentAndChildren] Node: Add child of this node as child of this node's parent[m
[36m[17:41:02.953290] [D] [thread 156023] [Node.cpp:366] [removeAndJoinParentAndChildren] Node: remove this node as parent of the child[m
[36m[17:41:02.953310] [D] [thread 156023] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:41:02.953440] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[17:41:02.953547] [D] [thread 156023] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:41:02.953570] [D] [thread 156023] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
Dumping queryPlan: [32m[17:41:02.953609] [I] [thread 156023] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
PhysicalSinkOperator
  PhysicalMultiplexOperator
    PhysicalSourceOperator
    PhysicalSourceOperator
    PhysicalSourceOperator

[32m[17:41:02.953618] [I] [thread 156023] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:41:02.953631] [I] [thread 156023] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:41:02.953719] [D] [thread 156023] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:41:02.953735] [D] [thread 156023] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:41:02.953784] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[17:41:02.953846] [D] [thread 156023] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:41:02.953861] [D] [thread 156023] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:41:02.953951] [I] [thread 156023] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
[32m[17:41:02.953961] [I] [thread 156023] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:41:02.953970] [I] [thread 156023] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[36m[17:41:02.954048] [D] [thread 156023] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
[36m[17:41:02.954063] [D] [thread 156023] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[32m[17:41:02.954107] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[17:41:02.954170] [D] [thread 156023] [Node.cpp:126] [insertBetweenThisAndParentNodes] Node: Create temporary copy of this nodes parents.[m
[36m[17:41:02.954246] [D] [thread 156023] [Node.cpp:133] [insertBetweenThisAndParentNodes] Node: Add copy of this nodes parent as parent to the input node.[m
[32m[17:41:02.954290] [I] [thread 156023] [Node.cpp:142] [insertBetweenThisAndParentNodes] Node: Remove all parents of this node.[m
Dumping pipelineQueryPlan: [32m[17:41:02.954299] [I] [thread 156023] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:41:02.954308] [I] [thread 156023] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 10, no. pipelines: 4
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[17:41:02.954385] [D] [thread 156023] [Node.cpp:356] [removeAndJoinParentAndChildren] Node: Joining parents with children[m
Dumping pipelineQueryPlan: [36m[17:41:02.954400] [D] [thread 156023] [Node.cpp:370] [removeAndJoinParentAndChildren] Node: remove this node as child of this node's parents[m
[36m[17:41:02.954518] [D] [thread 156023] [DumpContext.cpp:48] [dump] Dump query plan - QueryCompilation-1-10-2023-11-13 17:41:02 - 2. PhysicalQueryPlan[m
PipelineQueryPlan: 
- queryId: 1, subPlanId: 10, no. pipelines: 4
- pipeline: - Id: 1, Type: SinkPipelineType, Successors: , Predecessors: 3, 4, 5
- Queryplan: PhysicalSinkOperator

- pipeline: - Id: 3, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 4, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator

- pipeline: - Id: 5, Type: SourcePipelineType, Successors: 1, Predecessors: 
- Queryplan: PhysicalSourceOperator


[36m[17:41:02.954704] [D] [thread 156023] [DefaultPipeliningPhase.cpp:42] [apply] Pipeline: query id: 1 - 10[m
[32m[17:41:02.955060] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 59[m
[36m[17:41:02.955266] [D] [thread 156023] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSinkOperator as new root of the plan.[m
[36m[17:41:02.955284] [D] [thread 156023] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:41:02.955291] [D] [thread 156023] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:41:02.955751] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 60[m
[36m[17:41:02.955892] [D] [thread 156023] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:41:02.955907] [D] [thread 156023] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:41:02.955914] [D] [thread 156023] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:41:02.956033] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 61[m
[36m[17:41:02.956117] [D] [thread 156023] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:41:02.956129] [D] [thread 156023] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:41:02.956136] [D] [thread 156023] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[32m[17:41:02.956218] [I] [thread 156023] [OperatorNode.cpp:26] [OperatorNode] Creating Operator 62[m
[36m[17:41:02.956294] [D] [thread 156023] [QueryPlan.cpp:80] [appendOperatorAsNewRoot] QueryPlan: Appending operator PhysicalSourceOperator as new root of the plan.[m
[36m[17:41:02.956307] [D] [thread 156023] [QueryPlan.cpp:87] [appendOperatorAsNewRoot] QueryPlan: Clearing current root operators.[m
[36m[17:41:02.956314] [D] [thread 156023] [QueryPlan.cpp:89] [appendOperatorAsNewRoot] QueryPlan: Pushing input operator node as new root.[m
[36m[17:41:02.956431] [D] [thread 156023] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-13 17:41:02 - 3. AfterPipelinedQueryPlan[m
[36m[17:41:02.956831] [D] [thread 156023] [DumpContext.cpp:55] [dump] Dump pipelined query plan - QueryCompilation-1-10-2023-11-13 17:41:02 - 4. AfterAddScanAndEmitPhase[m
[36m[17:41:02.957110] [D] [thread 156023] [NautilusCompilationPhase.cpp:38] [apply] Generate code for query plan 1 - 10[m
[36m[17:41:02.957396] [D] [thread 156023] [ConvertLogicalToPhysicalSink.cpp:43] [createDataSink] Convert sink  59[m
[32m[17:41:02.957459] [I] [thread 156023] [ConvertLogicalToPhysicalSink.cpp:157] [createDataSink] ConvertLogicalToPhysicalSink: Creating file sink for format=CSV_FORMAT[m
[36m[17:41:02.957790] [D] [thread 156023] [FileSink.cpp:56] [FileSink] FileSink: open file= /home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out[m
[32m[17:41:02.958451] [I] [thread 156023] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:41:02.959092] [D] [thread 156023] [DataSource.cpp:75] [DataSource] DataSource  33 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:41:02.960033] [I] [thread 156023] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:41:02.960401] [D] [thread 156023] [DataSource.cpp:75] [DataSource] DataSource  42 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[32m[17:41:02.960819] [I] [thread 156023] [ConvertLogicalToPhysicalSource.cpp:205] [createDataSource] ConvertLogicalToPhysicalSource: Creating network source[m
[36m[17:41:02.961093] [D] [thread 156023] [DataSource.cpp:75] [DataSource] DataSource  51 : Init Data Source with schema  debs$start:INTEGER(64 bits) debs$end:INTEGER(64 bits) debs$sid:INTEGER(64 bits) debs$absolute_v:INTEGER(64 bits)[m
[36m[17:41:02.962078] [D] [thread 156023] [NodeEngine.cpp:131] [registerQueryInNodeEngine] Runtime: registerQueryInNodeEngine query with queryId= 1 querySubPlanId = 10[m
[36m[17:41:02.962274] [D] [thread 156023] [NodeEngine.cpp:137] [registerQueryInNodeEngine] Runtime: register of QEP  10  as a singleton[m
[36m[17:41:02.962298] [D] [thread 156023] [QueryManagerLifecycle.cpp:38] [registerQuery] AbstractQueryManager::registerQueryInNodeEngine: query 1 subquery=10[m
[36m[17:41:02.962344] [D] [thread 156023] [QueryManagerLifecycle.cpp:48] [registerQuery] AbstractQueryManager: resolving sources for query  1  with sources= 3[m
[36m[17:41:02.962378] [D] [thread 156023] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  33  not found. Creating new element with with qep [m
[36m[17:41:02.962615] [D] [thread 156023] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  42  not found. Creating new element with with qep [m
[36m[17:41:02.962664] [D] [thread 156023] [QueryManagerLifecycle.cpp:54] [registerQuery] AbstractQueryManager: Source  51  not found. Creating new element with with qep [m
[36m[17:41:02.962699] [D] [thread 156023] [QueryManagerLifecycle.cpp:68] [registerQuery] queryToStatisticsMap add for= 10  pair queryId= 1  subplanId= 10[m
2023-11-13 17:41:02.962 setup: queryId=1, querySubPlanId=10; 
2023-11-13 17:41:02.963 start: queryId=1, querySubPlanId=10; 
[36m[17:41:02.963111] [D] [thread 156023] [ExecutableQueryPlan.cpp:126] [setup] QueryExecutionPlan: setup queryId=1 querySubPlanId=10[m
[36m[17:41:02.963245] [D] [thread 156023] [ExecutableQueryPlan.cpp:144] [start] QueryExecutionPlan: start query=1 subplan=10[m
[36m[17:41:02.963546] [D] [thread 156023] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::33::0::0 from 192.168.2.12[m
[36m[17:41:02.963867] [D] [thread 156023] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::33::0::0=1[m
[36m[17:41:02.963913] [D] [thread 156023] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff580101c0  started successfully[m
[36m[17:41:02.963963] [D] [thread 156023] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::42::0::0 from 192.168.2.30[m
[36m[17:41:02.964017] [D] [thread 156023] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::42::0::0=1[m
[36m[17:41:02.964040] [D] [thread 156023] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff58010400  started successfully[m
[36m[17:41:02.964074] [D] [thread 156023] [NetworkManager.cpp:79] [registerSubpartitionConsumer] NetworkManager: Registering SubpartitionConsumer: 1::51::0::0 from 192.168.2.31[m
[36m[17:41:02.964114] [D] [thread 156023] [PartitionManager.cpp:81] [registerSubpartitionConsumer] PartitionManager: Registering Subpartition Consumer 1::51::0::0=1[m
[36m[17:41:02.964127] [D] [thread 156023] [QueryManagerLifecycle.cpp:133] [registerQuery] AbstractQueryManager: network source  0xffff580107c0  started successfully[m
[36m[17:41:02.964182] [D] [thread 156023] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.964305] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.964694] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.965549] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:41:02.965581] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:41:02.965549] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:41:02.965549] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:41:02.965793] [D] [thread 156023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[17:41:02.965872] [D] [thread 156023] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.965890] [D] [thread 156023] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff580101c0  started successfully[m
[36m[17:41:02.965919] [D] [thread 156023] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.965989] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.966130] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.966629] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:41:02.966681] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:41:02.966799] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:41:02.966941] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:41:02.967054] [D] [thread 156023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[17:41:02.967111] [D] [thread 156023] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.967127] [D] [thread 156023] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff58010400  started successfully[m
[36m[17:41:02.967156] [D] [thread 156023] [NetworkSource.cpp:79] [start] NetworkSource: start called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.967219] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.967347] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Initialize[m
[36m[17:41:02.967840] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:41:02.967840] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:41:02.967840] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:41:02.967960] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:41:02.968034] [D] [thread 156023] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[17:41:02.968082] [D] [thread 156023] [NetworkSource.cpp:106] [start] NetworkSource: start completed on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[17:41:02.968098] [D] [thread 156023] [QueryManagerLifecycle.cpp:145] [registerQuery] AbstractQueryManager: network source  0xffff580107c0  started successfully[m
[36m[17:41:02.968142] [D] [thread 156023] [QueryManagerLifecycle.cpp:158] [registerQuery] AbstractQueryManager: start sink  FileSink()[m
[36m[17:41:02.968455] [D] [thread 156023] [NodeEngine.cpp:144] [registerQueryInNodeEngine] Runtime: register of subqep  10  succeeded[m
[36m[17:41:02.968686] [D] [thread 156023] [WorkerRPCServer.cpp:54] [RegisterQuery] WorkerRPCServer::RegisterQuery: success[m
[36m[17:41:03.377910] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 1:1::51::0::0[m
[32m[17:41:03.378147] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=1) Data[m
[36m[17:41:03.378298] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=1) REGISTERED[m
[36m[17:41:03.380199] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 3:1::51::0::0[m
[36m[17:41:03.380205] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 0:1::51::0::0[m
[32m[17:41:03.380404] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=0) Data[m
[32m[17:41:03.380404] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=3) Data[m
[36m[17:41:03.380535] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=0) REGISTERED[m
[36m[17:41:03.380545] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=3) REGISTERED[m
[36m[17:41:03.383020] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 2:1::51::0::0[m
[32m[17:41:03.383142] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::51::0::0(threadId=2) Data[m
[36m[17:41:03.383216] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::51::0::0(threadId=2) REGISTERED[m
[36m[17:41:03.387157] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 1:1::42::0::0[m
[32m[17:41:03.387422] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=1) Data[m
[36m[17:41:03.387508] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=1) REGISTERED[m
[36m[17:41:03.387743] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 0:1::42::0::0[m
[32m[17:41:03.387806] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=0) Data[m
[36m[17:41:03.387868] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=0) REGISTERED[m
[36m[17:41:03.389415] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 2:1::42::0::0[m
[36m[17:41:03.389415] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 3:1::42::0::0[m
[32m[17:41:03.389541] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=2) Data[m
[32m[17:41:03.389541] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::42::0::0(threadId=3) Data[m
[36m[17:41:03.389636] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=2) REGISTERED[m
[36m[17:41:03.389641] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::42::0::0(threadId=3) REGISTERED[m
[36m[17:41:03.396009] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 2:1::33::0::0[m
[32m[17:41:03.396135] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=2) Data[m
[36m[17:41:03.396216] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=2) REGISTERED[m
[36m[17:41:03.396824] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 0:1::33::0::0[m
[32m[17:41:03.396916] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=0) Data[m
[36m[17:41:03.396985] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=0) REGISTERED[m
[36m[17:41:03.397779] [D] [thread 156016] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 1:1::33::0::0[m
[32m[17:41:03.397859] [I] [thread 156016] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=1) Data[m
[36m[17:41:03.397929] [D] [thread 156016] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=1) REGISTERED[m
[36m[17:41:03.399314] [D] [thread 156017] [ZmqServer.cpp:279] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): ClientAnnouncement received for channel 3:1::33::0::0[m
[32m[17:41:03.399423] [I] [thread 156017] [ExchangeProtocol.cpp:41] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for 1::33::0::0(threadId=3) Data[m
[36m[17:41:03.399494] [D] [thread 156017] [ExchangeProtocol.cpp:52] [onClientAnnouncement] ExchangeProtocol: ClientAnnouncement received for DataChannel 1::33::0::0(threadId=3) REGISTERED[m
[36m[17:41:03.568175] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.858221] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:03.859020] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:04.860296] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.006855] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.007444] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:05.171666] [D] [thread 156007] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Register succeed[m
[36m[17:41:05.171779] [D] [thread 156007] [QueryDeploymentPhase.cpp:215] [deployQuery] QueryDeploymentPhase: Finished deploying execution plan for query with Id 1 [m
[36m[17:41:05.172296] [D] [thread 156007] [QueryDeploymentPhase.cpp:94] [execute] QueryDeploymentPhase: deployment for shared query 1 successful[m
[36m[17:41:05.172503] [D] [thread 156007] [QueryDeploymentPhase.cpp:101] [execute] QueryService: start query[m
[36m[17:41:05.172539] [D] [thread 156007] [QueryDeploymentPhase.cpp:219] [startQuery] QueryDeploymentPhase::startQuery queryId= 1[m
[36m[17:41:05.172697] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=5 and IP=192.168.2.32[m
[36m[17:41:05.172739] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.32:42327 queryId=1[m
[36m[17:41:05.177437] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=6 and IP=192.168.2.33[m
[36m[17:41:05.177520] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.33:34405 queryId=1[m
[36m[17:41:05.181826] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=2 and IP=192.168.2.12[m
[36m[17:41:05.181912] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.12:34521 queryId=1[m
[36m[17:41:05.186239] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=7 and IP=192.168.2.34[m
[36m[17:41:05.186366] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.34:44581 queryId=1[m
[36m[17:41:05.190636] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=8 and IP=192.168.2.35[m
[36m[17:41:05.190724] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.35:42211 queryId=1[m
[36m[17:41:05.195021] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=3 and IP=192.168.2.30[m
[36m[17:41:05.195107] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.30:43523 queryId=1[m
[36m[17:41:05.199415] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=9 and IP=192.168.2.37[m
[36m[17:41:05.199502] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.37:44917 queryId=1[m
[36m[17:41:05.203753] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=10 and IP=192.168.2.38[m
[36m[17:41:05.203841] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.38:37991 queryId=1[m
[36m[17:41:05.208072] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=4 and IP=192.168.2.31[m
[36m[17:41:05.208198] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.31:43375 queryId=1[m
[36m[17:41:05.212461] [D] [thread 156007] [QueryDeploymentPhase.cpp:230] [startQuery] QueryDeploymentPhase::startQuery at execution node with id=1 and IP=192.168.2.11[m
[36m[17:41:05.212541] [D] [thread 156007] [WorkerRPCClient.cpp:223] [startQueryAsync] WorkerRPCClient::startQueryAsync address=192.168.2.11:42211 queryId=1[m
[36m[17:41:05.217027] [D] [thread 156007] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Start for 10 queues[m
[36m[17:41:05.305774] [D] [thread 156075] [WorkerRPCServer.cpp:77] [StartQuery] WorkerRPCServer::StartQuery: got request for 1[m
[36m[17:41:05.305913] [D] [thread 156075] [NodeEngine.cpp:158] [startQuery] Runtime: startQuery= 1[m
[36m[17:41:05.306091] [D] [thread 156075] [QueryManagerLifecycle.cpp:183] [startQuery] AbstractQueryManager::startQuery: query id  10   1[m
[36m[17:41:05.306278] [D] [thread 156075] [QueryStatistics.cpp:48] [setTimestampQueryStart] QueryStatistics::setTimestampQueryStart called with  1699897265306[m
[36m[17:41:05.306312] [D] [thread 156075] [NodeEngine.cpp:170] [startQuery] Runtime: start of QEP  10  succeeded[m
[36m[17:41:05.306347] [D] [thread 156075] [WorkerRPCServer.cpp:80] [StartQuery] WorkerRPCServer::StartQuery: success[m
[36m[17:41:05.383880] [D] [thread 156007] [WorkerRPCClient.cpp:146] [checkAsyncResult] checkAsyncResult for mode=Start succeed[m
[36m[17:41:05.384021] [D] [thread 156007] [QueryDeploymentPhase.cpp:238] [startQuery] QueryDeploymentPhase: Finished starting execution plan for query with Id 1[m
[32m[17:41:05.385214] [I] [thread 156007] [GlobalQueryPlan.cpp:124] [removeFailedOrStoppedSharedQueryPlans] GlobalQueryPlan: remove empty metadata information.[m
[36m[17:41:05.385479] [D] [thread 156007] [RequestProcessorService.cpp:82] [start] QueryRequestProcessorService: Waiting for new query request trigger[m
[36m[17:41:06.008739] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:06.173447] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:06.174003] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:07.175319] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.176517] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.189221] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.189583] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.190770] [D] [thread 156084] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:08.191004] [I] [thread 156084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:08.191030] [I] [thread 156084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:08.191304] [I] [thread 156084] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:08.191341] [I] [thread 156084] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:08.406690] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:08.407178] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:09.408583] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.409835] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.462979] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.463701] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.464508] [D] [thread 156091] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:10.464622] [I] [thread 156091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:10.464644] [I] [thread 156091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:10.464771] [I] [thread 156091] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:10.464798] [I] [thread 156091] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:10.634760] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:10.635292] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:11.636465] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.637727] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.706564] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.706941] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.707942] [D] [thread 156098] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:12.708052] [I] [thread 156098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:12.708070] [I] [thread 156098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:12.708187] [I] [thread 156098] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:12.708200] [I] [thread 156098] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:12.908048] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:12.908447] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:13.909647] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.910900] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.917548] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.917886] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:14.918869] [D] [thread 156103] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:14.918965] [I] [thread 156103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:14.918983] [I] [thread 156103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:14.919100] [I] [thread 156103] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:14.919115] [I] [thread 156103] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:15.130337] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:15.130712] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:16.131932] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:17.121081] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:17.121442] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:17.122579] [D] [thread 156108] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:17.122773] [I] [thread 156108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:17.122842] [I] [thread 156108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:17.123048] [I] [thread 156108] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:17.123117] [I] [thread 156108] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:17.291089] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:17.291451] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:18.292822] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.294062] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.315340] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.315702] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.317417] [D] [thread 156113] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:19.317516] [I] [thread 156113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:19.317535] [I] [thread 156113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:19.317654] [I] [thread 156113] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:19.317670] [I] [thread 156113] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:19.534111] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:19.534482] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:20.535762] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.536548] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.577054] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.577382] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.578578] [D] [thread 156118] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:21.578672] [I] [thread 156118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:21.578690] [I] [thread 156118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:21.578807] [I] [thread 156118] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:21.578819] [I] [thread 156118] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:21.726582] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:21.726915] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:22.728158] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.716485] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.716821] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.717787] [D] [thread 156123] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:23.717880] [I] [thread 156123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:23.717898] [I] [thread 156123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:23.718015] [I] [thread 156123] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:23.718031] [I] [thread 156123] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:23.937054] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:23.937384] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:24.938612] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.940049] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.964666] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.965026] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:25.966567] [D] [thread 156128] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:25.966661] [I] [thread 156128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:25.966678] [I] [thread 156128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:25.966797] [I] [thread 156128] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:25.966813] [I] [thread 156128] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:26.182325] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:26.182722] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:27.183986] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.153766] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.154106] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.155276] [D] [thread 156133] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:28.155371] [I] [thread 156133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:28.155388] [I] [thread 156133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:28.155505] [I] [thread 156133] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:28.155518] [I] [thread 156133] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:28.325054] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:28.325396] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:29.326611] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.286881] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.287236] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.288475] [D] [thread 156139] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:30.288583] [I] [thread 156139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:30.288602] [I] [thread 156139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:30.288729] [I] [thread 156139] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:30.288759] [I] [thread 156139] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:30.501521] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:30.501877] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:31.503069] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.504522] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.542598] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.542915] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.543897] [D] [thread 156144] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:32.543993] [I] [thread 156144] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:32.544011] [I] [thread 156144] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:32.544129] [I] [thread 156144] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:32.544145] [I] [thread 156144] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:32.744347] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:32.744678] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:33.745854] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.747140] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.885959] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.886506] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:34.887887] [D] [thread 156149] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:34.888005] [I] [thread 156149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:34.888023] [I] [thread 156149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:34.888145] [I] [thread 156149] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:34.888160] [I] [thread 156149] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:35.056074] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:35.056585] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:36.057758] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.059053] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.062674] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.062994] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.064660] [D] [thread 156154] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:37.064752] [I] [thread 156154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:37.064769] [I] [thread 156154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:37.064886] [I] [thread 156154] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:37.064898] [I] [thread 156154] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:37.277864] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:37.278187] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:38.279403] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.280626] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.281795] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.282090] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.283155] [D] [thread 156159] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:39.283252] [I] [thread 156159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:39.283270] [I] [thread 156159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:39.283388] [I] [thread 156159] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:39.283401] [I] [thread 156159] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:39.484473] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:39.484853] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:40.486220] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.487533] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.509396] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.509750] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.510781] [D] [thread 156164] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:41.510875] [I] [thread 156164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:41.510892] [I] [thread 156164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:41.511007] [I] [thread 156164] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:41.511020] [I] [thread 156164] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:41.769400] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:41.769716] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:42.771031] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:43.772282] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:43.807100] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:43.807632] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:43.808469] [D] [thread 156169] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:43.808558] [I] [thread 156169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:43.808578] [I] [thread 156169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:43.808693] [I] [thread 156169] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:43.808706] [I] [thread 156169] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:44.002234] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:44.002794] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:45.004099] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.005472] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.062898] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.063452] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.064250] [D] [thread 156175] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:46.064372] [I] [thread 156175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:46.064393] [I] [thread 156175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:46.064510] [I] [thread 156175] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:46.064525] [I] [thread 156175] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:46.233526] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:46.234137] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:47.235506] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.233436] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.234026] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.234757] [D] [thread 156181] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:48.234851] [I] [thread 156181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:48.234870] [I] [thread 156181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:48.234988] [I] [thread 156181] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:48.235001] [I] [thread 156181] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:48.502513] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:48.503132] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:49.504421] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.461861] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.462563] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.463260] [D] [thread 156188] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:50.463352] [I] [thread 156188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:50.463369] [I] [thread 156188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:50.463485] [I] [thread 156188] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:50.463498] [I] [thread 156188] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:50.681170] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:50.681500] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:51.682856] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.684165] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.720243] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.720923] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.721687] [D] [thread 156195] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:52.721778] [I] [thread 156195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:52.721794] [I] [thread 156195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:52.721909] [I] [thread 156195] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:52.721925] [I] [thread 156195] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:52.921701] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:52.922235] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:53.923549] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:54.901936] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:54.902287] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:54.903887] [D] [thread 156203] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:54.903982] [I] [thread 156203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:54.903999] [I] [thread 156203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:54.904116] [I] [thread 156203] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:54.904129] [I] [thread 156203] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:55.115979] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:55.116304] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:56.117599] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.107095] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.107469] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.108679] [D] [thread 156208] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:57.108770] [I] [thread 156208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:57.108788] [I] [thread 156208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:57.108905] [I] [thread 156208] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:57.108918] [I] [thread 156208] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:57.312032] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:57.312414] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:58.313708] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.314961] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.330735] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.331215] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.332358] [D] [thread 156213] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:41:59.332467] [I] [thread 156213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:59.332488] [I] [thread 156213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:41:59.332620] [I] [thread 156213] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:41:59.332640] [I] [thread 156213] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:41:59.544544] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:41:59.544886] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:00.546072] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:01.529223] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:01.529567] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:01.530690] [D] [thread 156218] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:01.530787] [I] [thread 156218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:01.530804] [I] [thread 156218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:01.530921] [I] [thread 156218] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:01.530933] [I] [thread 156218] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:01.734040] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:01.734649] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:02.735911] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:03.737176] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:03.885122] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:03.885454] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:03.886635] [D] [thread 156223] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:03.886764] [I] [thread 156223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:03.886783] [I] [thread 156223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:03.886900] [I] [thread 156223] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:03.886919] [I] [thread 156223] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:04.053216] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:04.053571] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:05.054786] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.056049] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.058301] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.058679] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.059798] [D] [thread 156228] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:06.059893] [I] [thread 156228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:06.059910] [I] [thread 156228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:06.060025] [I] [thread 156228] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:06.060037] [I] [thread 156228] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:06.284429] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:06.284768] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:07.286014] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.287346] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.315400] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.315748] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.316834] [D] [thread 156233] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:08.316935] [I] [thread 156233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:08.316952] [I] [thread 156233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:08.317070] [I] [thread 156233] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:08.317083] [I] [thread 156233] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:08.526034] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:08.526492] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:09.527788] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.529098] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.569981] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.570595] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.571374] [D] [thread 156238] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:10.571464] [I] [thread 156238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:10.571481] [I] [thread 156238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:10.571598] [I] [thread 156238] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:10.571610] [I] [thread 156238] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:10.743201] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:10.743530] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:11.744762] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:12.746028] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:12.807076] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:12.807655] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:12.808482] [D] [thread 156244] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:12.808571] [I] [thread 156244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:12.808590] [I] [thread 156244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:12.808707] [I] [thread 156244] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:12.808722] [I] [thread 156244] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:13.002181] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:13.002638] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:14.003990] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.004504] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.018370] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.019044] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.019767] [D] [thread 156250] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:15.019858] [I] [thread 156250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:15.019875] [I] [thread 156250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:15.019991] [I] [thread 156250] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:15.020003] [I] [thread 156250] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:15.193630] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:15.194014] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:16.195266] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.169652] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.170000] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.171075] [D] [thread 156257] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:17.171172] [I] [thread 156257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:17.171190] [I] [thread 156257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:17.171306] [I] [thread 156257] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:17.171319] [I] [thread 156257] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:17.389416] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:17.389785] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:18.391039] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.392437] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.533494] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.533868] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.534979] [D] [thread 156262] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:19.535072] [I] [thread 156262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:19.535089] [I] [thread 156262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:19.535205] [I] [thread 156262] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:19.535220] [I] [thread 156262] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:19.800022] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:19.800417] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:20.801656] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.802868] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.823551] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.823903] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.825074] [D] [thread 156267] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:21.825172] [I] [thread 156267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:21.825189] [I] [thread 156267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:21.825306] [I] [thread 156267] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:21.825321] [I] [thread 156267] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:21.994296] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:21.994683] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:22.995919] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:23.997191] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.003435] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.003785] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.004876] [D] [thread 156272] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:24.004976] [I] [thread 156272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:24.004993] [I] [thread 156272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:24.005109] [I] [thread 156272] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:24.005132] [I] [thread 156272] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:24.218266] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:24.218665] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:25.219926] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.221180] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.363025] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.363357] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.364636] [D] [thread 156277] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:26.364733] [I] [thread 156277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:26.364750] [I] [thread 156277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:26.364866] [I] [thread 156277] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:26.364881] [I] [thread 156277] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:26.534735] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:26.535078] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:27.536396] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.537656] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.542362] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.542679] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.543814] [D] [thread 156282] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:28.543912] [I] [thread 156282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:28.543930] [I] [thread 156282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:28.544048] [I] [thread 156282] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:28.544063] [I] [thread 156282] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:28.749350] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:28.749680] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:29.750883] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.202464] [D] [thread 156021] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[17:42:30.205630] [D] [thread 156021] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out following content 9600000,10800000,63,1699897265381,1699897350202
9600000,10800000,54,1699897265297,1699897350202
[m
[36m[17:42:30.206126] [D] [thread 156021] [QueryStatistics.cpp:54] [setTimestampFirstProcessedTask] QueryStatistics::setTimestampFirstProcessedTask called with  1699897350206[m
[36m[17:42:30.752169] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.764351] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.764942] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.765745] [D] [thread 156288] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:30.765841] [I] [thread 156288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:30.765859] [I] [thread 156288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:30.765972] [I] [thread 156288] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:30.765987] [I] [thread 156288] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:30.975078] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:30.975570] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:31.976522] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:32.977798] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.006046] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.006695] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.007390] [D] [thread 156294] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:33.007480] [I] [thread 156294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:33.007497] [I] [thread 156294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:33.007613] [I] [thread 156294] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:33.007626] [I] [thread 156294] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:33.214820] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.215426] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:33.605004] [D] [thread 156018] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[17:42:33.605101] [D] [thread 156018] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[17:42:33.606981] [D] [thread 156018] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out following content 9600000,10800000,47,1699897265273,1699897353605
9600000,10800000,24,1699897265257,1699897353605
[m
[36m[17:42:34.216460] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.116858] [D] [thread 156020] [FileSink.cpp:112] [writeDataToFile] FileSink: getSchema medium FileSink() format CSV_FORMAT mode APPEND[m
[36m[17:42:35.116963] [D] [thread 156020] [FileSink.cpp:126] [writeDataToFile] FileSink::getData: schema already written[m
[36m[17:42:35.118626] [D] [thread 156020] [FileSink.cpp:130] [writeDataToFile] FileSink::getData: writing to file /home/ubuntu/nemoDebsThreeLevel_tumbling_1_20Min_8.out following content 9600000,10800000,100,1699897265358,1699897355117
9600000,10800000,13,1699897265337,1699897355117
[m
[36m[17:42:35.151280] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.151848] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.152709] [D] [thread 156300] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:35.152802] [I] [thread 156300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:35.152820] [I] [thread 156300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:35.152936] [I] [thread 156300] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:35.152949] [I] [thread 156300] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:35.363698] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:35.364026] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:36.365262] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.366611] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.378396] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.378755] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.379828] [D] [thread 156305] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:37.379925] [I] [thread 156305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:37.379943] [I] [thread 156305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:37.380061] [I] [thread 156305] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:37.380074] [I] [thread 156305] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:37.590680] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:37.591037] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:38.592474] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.593788] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.621443] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.621761] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.622799] [D] [thread 156312] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:39.622895] [I] [thread 156312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:39.622912] [I] [thread 156312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:39.623030] [I] [thread 156312] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:39.623054] [I] [thread 156312] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:39.841943] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:39.842284] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:40.843506] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:41.844785] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:41.868956] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:41.869511] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:41.870270] [D] [thread 156317] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:41.870363] [I] [thread 156317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:41.870380] [I] [thread 156317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:41.870495] [I] [thread 156317] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:41.870507] [I] [thread 156317] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:42.134574] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:42.135094] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:43.136488] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.137742] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.154419] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.155068] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.155833] [D] [thread 156322] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:44.155924] [I] [thread 156322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:44.155942] [I] [thread 156322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:44.156156] [I] [thread 156322] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:44.156179] [I] [thread 156322] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:44.362381] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:44.362929] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:45.364215] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:46.343057] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:46.343698] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:46.344393] [D] [thread 156328] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:46.344482] [I] [thread 156328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:46.344501] [I] [thread 156328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:46.344619] [I] [thread 156328] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:46.344634] [I] [thread 156328] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:46.570743] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:46.571302] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:47.572610] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.573922] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.593719] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.594336] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.595070] [D] [thread 156333] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:48.595165] [I] [thread 156333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:48.595182] [I] [thread 156333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:48.595301] [I] [thread 156333] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:48.595314] [I] [thread 156333] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:48.767037] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:48.767369] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:49.768631] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:50.769962] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:50.826108] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:50.826807] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:50.827521] [D] [thread 156338] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:50.827613] [I] [thread 156338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:50.827630] [I] [thread 156338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:50.827747] [I] [thread 156338] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:50.827760] [I] [thread 156338] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:51.019813] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:51.020432] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:52.021656] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:52.980196] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:52.980777] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:52.981612] [D] [thread 156343] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:52.981706] [I] [thread 156343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:52.981724] [I] [thread 156343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:52.981840] [I] [thread 156343] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:52.981853] [I] [thread 156343] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:53.186743] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:53.187272] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:54.188608] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:55.157864] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:55.158662] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:55.159437] [D] [thread 156348] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:55.159536] [I] [thread 156348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:55.159553] [I] [thread 156348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:55.159669] [I] [thread 156348] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:55.159682] [I] [thread 156348] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:55.428859] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:55.429441] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:56.430706] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.431965] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.439139] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.439470] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.441224] [D] [thread 156353] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:57.441322] [I] [thread 156353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:57.441340] [I] [thread 156353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:57.441457] [I] [thread 156353] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:57.441469] [I] [thread 156353] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:57.658082] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:57.658444] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:58.659623] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.660525] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.670144] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.670824] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.671538] [D] [thread 156358] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:42:59.671624] [I] [thread 156358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:59.671641] [I] [thread 156358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:42:59.671758] [I] [thread 156358] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:42:59.671774] [I] [thread 156358] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:42:59.887302] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:42:59.887882] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:00.889162] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:01.890473] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:01.898158] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:01.898809] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:01.899548] [D] [thread 156363] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:01.899637] [I] [thread 156363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:01.899655] [I] [thread 156363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:01.899771] [I] [thread 156363] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:01.899784] [I] [thread 156363] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:02.119641] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:02.119966] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:03.121187] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.122453] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.136789] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.137101] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.138121] [D] [thread 156368] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:04.138216] [I] [thread 156368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:04.138234] [I] [thread 156368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:04.138350] [I] [thread 156368] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:04.138366] [I] [thread 156368] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:04.340373] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:04.340702] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:05.341937] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.343281] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.354078] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.354448] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.356146] [D] [thread 156373] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:06.356238] [I] [thread 156373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:06.356255] [I] [thread 156373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:06.356403] [I] [thread 156373] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:06.356419] [I] [thread 156373] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:06.619779] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:06.620112] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:07.621323] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.622679] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.693468] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.694047] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.694799] [D] [thread 156378] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:08.694892] [I] [thread 156378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:08.694910] [I] [thread 156378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:08.695028] [I] [thread 156378] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:08.695041] [I] [thread 156378] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:08.873448] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:08.873782] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:09.875027] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:10.876278] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:10.943256] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:10.943574] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:10.944662] [D] [thread 156383] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:10.944755] [I] [thread 156383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:10.944772] [I] [thread 156383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:10.944890] [I] [thread 156383] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:10.944916] [I] [thread 156383] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:11.143890] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:11.144221] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:12.145519] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.146784] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.207136] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.207469] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.208568] [D] [thread 156388] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:13.208668] [I] [thread 156388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:13.208687] [I] [thread 156388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:13.208803] [I] [thread 156388] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:13.208820] [I] [thread 156388] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:13.385576] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:13.385931] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:14.387286] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.388565] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.453791] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.454152] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.455268] [D] [thread 156393] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:15.455362] [I] [thread 156393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:15.455379] [I] [thread 156393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:15.455495] [I] [thread 156393] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:15.455510] [I] [thread 156393] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:15.665007] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:15.665367] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:16.666600] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:17.667958] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:17.811449] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:17.811800] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:17.812798] [D] [thread 156398] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:17.812892] [I] [thread 156398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:17.812909] [I] [thread 156398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:17.813024] [I] [thread 156398] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:17.813038] [I] [thread 156398] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:18.025751] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:18.026115] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:19.027325] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:20.028691] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:20.169776] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:20.170125] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:20.171116] [D] [thread 156403] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:20.171211] [I] [thread 156403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:20.171229] [I] [thread 156403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:20.171345] [I] [thread 156403] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:20.171360] [I] [thread 156403] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:20.326379] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:20.327042] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:21.328399] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:22.329685] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:22.338680] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:22.339001] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:22.340055] [D] [thread 156408] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:22.340145] [I] [thread 156408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:22.340163] [I] [thread 156408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:22.340279] [I] [thread 156408] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:22.340291] [I] [thread 156408] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:22.558604] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:22.558924] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:23.560203] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:24.561493] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:24.595053] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:24.595371] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:24.596455] [D] [thread 156413] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:24.596552] [I] [thread 156413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:24.596571] [I] [thread 156413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:24.596688] [I] [thread 156413] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:24.596711] [I] [thread 156413] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:24.765898] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:24.766253] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:25.767492] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:26.750979] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:26.751372] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:26.752467] [D] [thread 156419] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:26.752583] [I] [thread 156419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:26.752603] [I] [thread 156419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:26.752741] [I] [thread 156419] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:26.752765] [I] [thread 156419] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:26.954446] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:26.954835] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:27.956105] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:28.956472] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:29.093694] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:29.094030] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:29.095164] [D] [thread 156424] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:29.095262] [I] [thread 156424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:29.095281] [I] [thread 156424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:29.095398] [I] [thread 156424] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:29.095411] [I] [thread 156424] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:29.249484] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:29.249842] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:30.251104] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:31.230036] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:31.230495] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:31.231506] [D] [thread 156429] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:31.231601] [I] [thread 156429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:31.231619] [I] [thread 156429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:31.231734] [I] [thread 156429] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:31.231747] [I] [thread 156429] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:31.498731] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:31.499066] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:32.500252] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:33.474292] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:33.474892] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:33.475671] [D] [thread 156434] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:33.475762] [I] [thread 156434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:33.475779] [I] [thread 156434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:33.475895] [I] [thread 156434] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:33.475908] [I] [thread 156434] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:33.642206] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:33.642544] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:34.643894] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:35.644578] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:35.669644] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:35.670213] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:35.670984] [D] [thread 156439] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:35.671074] [I] [thread 156439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:35.671092] [I] [thread 156439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:35.671208] [I] [thread 156439] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:35.671222] [I] [thread 156439] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:35.890111] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:35.890678] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:36.891957] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:37.893242] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:38.046119] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:38.046739] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:38.047430] [D] [thread 156444] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:38.047521] [I] [thread 156444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:38.047538] [I] [thread 156444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:38.047652] [I] [thread 156444] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:38.047668] [I] [thread 156444] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:38.221803] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:38.222365] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:39.223681] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:40.224981] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:40.287522] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:40.288153] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:40.288864] [D] [thread 156449] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:40.288963] [I] [thread 156449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:40.288980] [I] [thread 156449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:40.289098] [I] [thread 156449] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:40.289110] [I] [thread 156449] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:40.493070] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:40.493657] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:41.494943] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:42.496240] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:42.562473] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:42.563000] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:42.563907] [D] [thread 156454] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:42.564022] [I] [thread 156454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:42.564042] [I] [thread 156454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:42.564171] [I] [thread 156454] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:42.564197] [I] [thread 156454] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:42.762119] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:42.762716] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:43.764088] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:44.734333] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:44.734700] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:44.735829] [D] [thread 156459] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:44.735923] [I] [thread 156459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:44.735941] [I] [thread 156459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:44.736056] [I] [thread 156459] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:44.736071] [I] [thread 156459] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:45.001316] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:45.001658] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:46.002906] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:47.004212] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:47.011133] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:47.011479] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:47.012524] [D] [thread 156465] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:47.012622] [I] [thread 156465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:47.012642] [I] [thread 156465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:47.012762] [I] [thread 156465] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:47.012815] [I] [thread 156465] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:47.189745] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:47.190095] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:48.191331] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:49.192651] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:49.335583] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:49.335937] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:49.337009] [D] [thread 156470] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:49.337104] [I] [thread 156470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:49.337122] [I] [thread 156470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:49.337237] [I] [thread 156470] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:49.337250] [I] [thread 156470] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:49.547316] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:49.547688] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:50.549007] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:51.550296] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:51.589061] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:51.589406] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:51.590397] [D] [thread 156475] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:51.590526] [I] [thread 156475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:51.590545] [I] [thread 156475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:51.590663] [I] [thread 156475] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:51.590678] [I] [thread 156475] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:51.786455] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:51.786809] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:52.788056] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:53.789335] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:53.803066] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:53.803415] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:53.804549] [D] [thread 156482] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:53.804644] [I] [thread 156482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:53.804662] [I] [thread 156482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:53.804781] [I] [thread 156482] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:53.804794] [I] [thread 156482] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:53.977807] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:53.978263] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:54.979668] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:55.980501] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:55.987680] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:55.988187] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:55.989056] [D] [thread 156488] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:55.989151] [I] [thread 156488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:55.989168] [I] [thread 156488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:55.989285] [I] [thread 156488] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:55.989298] [I] [thread 156488] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:56.223442] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:56.224011] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:57.225306] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:58.203601] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:58.203941] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:58.205701] [D] [thread 156495] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:43:58.205799] [I] [thread 156495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:58.205816] [I] [thread 156495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:43:58.205934] [I] [thread 156495] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:43:58.205947] [I] [thread 156495] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:43:58.413982] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:58.414318] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:43:59.415586] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:00.392788] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:00.393136] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:00.394149] [D] [thread 156500] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:00.394232] [I] [thread 156500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:00.394247] [I] [thread 156500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:00.394556] [I] [thread 156500] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:00.394584] [I] [thread 156500] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:00.586329] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:00.586770] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:01.587963] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:02.574145] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:02.574524] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:02.575489] [D] [thread 156505] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:02.575584] [I] [thread 156505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:02.575602] [I] [thread 156505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:02.575718] [I] [thread 156505] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:02.575733] [I] [thread 156505] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:02.841320] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:02.841705] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:03.843015] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:04.844275] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:04.849688] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:04.850004] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:04.850988] [D] [thread 156511] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:04.851081] [I] [thread 156511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:04.851099] [I] [thread 156511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:04.851213] [I] [thread 156511] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:04.851226] [I] [thread 156511] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:05.106967] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:05.107302] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:06.108511] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:07.109939] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:07.253859] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:07.254459] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:07.255183] [D] [thread 156518] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:07.255277] [I] [thread 156518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:07.255294] [I] [thread 156518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:07.255413] [I] [thread 156518] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:07.255425] [I] [thread 156518] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:07.464090] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:07.464442] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:08.465691] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:09.466982] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:09.533186] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:09.533507] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:09.534475] [D] [thread 156525] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:09.534570] [I] [thread 156525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:09.534588] [I] [thread 156525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:09.534703] [I] [thread 156525] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:09.534718] [I] [thread 156525] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:09.723842] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:09.724173] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:10.725420] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:11.726681] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:11.743870] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:11.744269] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:11.746066] [D] [thread 156531] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:11.746162] [I] [thread 156531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:11.746179] [I] [thread 156531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:11.746295] [I] [thread 156531] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:11.746311] [I] [thread 156531] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:11.971923] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:11.972254] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:12.973509] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:13.974803] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:13.985699] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:13.986044] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:13.987017] [D] [thread 156536] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:13.987110] [I] [thread 156536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:13.987128] [I] [thread 156536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:13.987247] [I] [thread 156536] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:13.987259] [I] [thread 156536] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:14.197855] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:14.198212] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:15.199440] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:16.187508] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:16.187840] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:16.188926] [D] [thread 156541] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:16.189027] [I] [thread 156541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:16.189047] [I] [thread 156541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:16.189164] [I] [thread 156541] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:16.189220] [I] [thread 156541] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:16.388049] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:16.388640] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:17.390034] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:18.391318] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:18.408819] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:18.409147] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:18.410751] [D] [thread 156547] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:18.410843] [I] [thread 156547] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:18.410860] [I] [thread 156547] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:18.410975] [I] [thread 156547] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:18.410990] [I] [thread 156547] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:18.686400] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:18.686765] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:19.688018] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:20.689323] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:20.722434] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:20.722816] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:20.724397] [D] [thread 156552] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:20.724488] [I] [thread 156552] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:20.724507] [I] [thread 156552] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:20.724624] [I] [thread 156552] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:20.724639] [I] [thread 156552] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:20.941804] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:20.942151] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:21.943365] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:22.944510] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:22.957851] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:22.958164] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:22.959167] [D] [thread 156557] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:22.959261] [I] [thread 156557] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:22.959281] [I] [thread 156557] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:22.959397] [I] [thread 156557] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:22.959413] [I] [thread 156557] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:23.173320] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:23.173651] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:24.174868] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:25.176091] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:25.233017] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:25.233398] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:25.234492] [D] [thread 156563] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:25.234586] [I] [thread 156563] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:25.234603] [I] [thread 156563] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:25.234721] [I] [thread 156563] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:25.234736] [I] [thread 156563] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:25.432832] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:25.433160] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:26.434400] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:27.435752] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:27.471221] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:27.471557] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:27.472663] [D] [thread 156569] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:27.472761] [I] [thread 156569] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:27.472779] [I] [thread 156569] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:27.472895] [I] [thread 156569] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:27.472917] [I] [thread 156569] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:27.666154] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:27.666542] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:28.667794] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:29.668530] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:29.686574] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:29.687088] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:29.687933] [D] [thread 156574] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:29.688028] [I] [thread 156574] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:29.688045] [I] [thread 156574] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:29.688162] [I] [thread 156574] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:29.688174] [I] [thread 156574] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:29.898032] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:29.898630] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:30.899870] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:31.895787] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:31.896109] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:31.897947] [D] [thread 156579] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:31.898055] [I] [thread 156579] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:31.898074] [I] [thread 156579] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:31.898205] [I] [thread 156579] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:31.898231] [I] [thread 156579] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:32.175515] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:32.176029] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:33.177373] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:34.178681] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:34.209664] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:34.209998] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:34.210982] [D] [thread 156584] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:34.211085] [I] [thread 156584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:34.211102] [I] [thread 156584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:34.211216] [I] [thread 156584] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:34.211244] [I] [thread 156584] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:34.384079] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:34.384440] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:35.385630] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:36.386829] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:36.387002] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:36.387280] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:36.388503] [D] [thread 156589] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:36.388594] [I] [thread 156589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:36.388611] [I] [thread 156589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:36.388727] [I] [thread 156589] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:36.388740] [I] [thread 156589] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:36.615868] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:36.616451] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:37.617715] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:38.619097] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:38.718407] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:38.719082] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:38.719839] [D] [thread 156594] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:38.719929] [I] [thread 156594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:38.719947] [I] [thread 156594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:38.720063] [I] [thread 156594] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:38.720076] [I] [thread 156594] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:38.935595] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:38.936444] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:39.937707] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:40.930719] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:40.931323] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:40.932117] [D] [thread 156599] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:40.932208] [I] [thread 156599] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:40.932225] [I] [thread 156599] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:40.932369] [I] [thread 156599] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:40.932385] [I] [thread 156599] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:41.105926] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:41.106515] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:42.107791] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:43.109089] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:43.171885] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:43.172439] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:43.173234] [D] [thread 156605] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:43.173326] [I] [thread 156605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:43.173343] [I] [thread 156605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:43.173458] [I] [thread 156605] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:43.173473] [I] [thread 156605] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:43.362109] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:43.362624] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:44.363885] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:45.357549] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:45.357951] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:45.359553] [D] [thread 156612] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:45.359648] [I] [thread 156612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:45.359666] [I] [thread 156612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:45.359786] [I] [thread 156612] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:45.359799] [I] [thread 156612] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:45.578610] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:45.578970] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:46.580379] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:47.581674] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:47.635316] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:47.635648] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:47.636629] [D] [thread 156617] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:47.636723] [I] [thread 156617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:47.636740] [I] [thread 156617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:47.636854] [I] [thread 156617] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:47.636866] [I] [thread 156617] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:47.841989] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:47.842329] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:48.843575] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:49.844870] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:49.889900] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:49.890275] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:49.891934] [D] [thread 156622] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:49.892029] [I] [thread 156622] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:49.892046] [I] [thread 156622] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:49.892163] [I] [thread 156622] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:49.892175] [I] [thread 156622] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:50.074239] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:50.074633] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:51.075874] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:52.076561] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:52.098024] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:52.098601] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:52.099338] [D] [thread 156628] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:52.099430] [I] [thread 156628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:52.099447] [I] [thread 156628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:52.099564] [I] [thread 156628] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:52.099577] [I] [thread 156628] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:52.317151] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:52.317713] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:53.319081] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:54.291822] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:54.292440] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:54.293237] [D] [thread 156634] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:54.293331] [I] [thread 156634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:54.293349] [I] [thread 156634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:54.293465] [I] [thread 156634] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:54.293477] [I] [thread 156634] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:54.513227] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:54.513717] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:55.514995] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:56.516385] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:56.549486] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:56.549818] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:56.551227] [D] [thread 156640] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:56.551319] [I] [thread 156640] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:56.551336] [I] [thread 156640] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:56.551451] [I] [thread 156640] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:56.551482] [I] [thread 156640] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:56.770139] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:56.770538] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:57.771780] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:58.772461] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:58.912860] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:58.913216] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:58.914177] [D] [thread 156645] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:44:58.914270] [I] [thread 156645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:58.914287] [I] [thread 156645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:44:58.914402] [I] [thread 156645] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:44:58.914414] [I] [thread 156645] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:44:59.127349] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:44:59.127691] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:00.128932] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:01.130206] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:01.274721] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:01.275332] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:01.276073] [D] [thread 156650] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:01.276165] [I] [thread 156650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:01.276183] [I] [thread 156650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:01.276301] [I] [thread 156650] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:01.276314] [I] [thread 156650] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:01.450848] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:01.451448] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:02.452698] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:03.421948] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:03.422629] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:03.423636] [D] [thread 156655] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:03.423730] [I] [thread 156655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:03.423748] [I] [thread 156655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:03.423860] [I] [thread 156655] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:03.423876] [I] [thread 156655] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:03.626420] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:03.626964] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:04.628246] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:05.629551] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:05.648031] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:05.648690] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:05.649394] [D] [thread 156660] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:05.649484] [I] [thread 156660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:05.649501] [I] [thread 156660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:05.649619] [I] [thread 156660] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:05.649631] [I] [thread 156660] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:05.915515] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:05.916059] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:06.917300] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:07.918569] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:08.059237] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:08.059927] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:08.060809] [D] [thread 156665] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:08.060926] [I] [thread 156665] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:08.060945] [I] [thread 156665] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:08.061099] [I] [thread 156665] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:08.061119] [I] [thread 156665] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:08.259052] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:08.259664] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:09.260468] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:10.261697] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:10.274806] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:10.275354] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:10.276156] [D] [thread 156671] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:10.276248] [I] [thread 156671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:10.276266] [I] [thread 156671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:10.276421] [I] [thread 156671] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:10.276438] [I] [thread 156671] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:10.442098] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:10.443197] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:11.444509] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:12.387290] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:12.387829] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:12.388689] [D] [thread 156676] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:12.388784] [I] [thread 156676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:12.388801] [I] [thread 156676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:12.388915] [I] [thread 156676] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:12.388928] [I] [thread 156676] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:12.602950] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:12.603280] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:13.604434] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:14.605629] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:14.607028] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:14.607362] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:14.608477] [D] [thread 156681] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:14.608569] [I] [thread 156681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:14.608588] [I] [thread 156681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:14.608705] [I] [thread 156681] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:14.608718] [I] [thread 156681] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:14.830403] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:14.830782] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:15.832023] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:16.822034] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:16.822552] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:16.823358] [D] [thread 156686] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:16.823450] [I] [thread 156686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:16.823469] [I] [thread 156686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:16.823585] [I] [thread 156686] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:16.823601] [I] [thread 156686] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:17.042296] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:17.042903] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:18.044163] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:19.045420] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:19.051038] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:19.051355] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:19.052464] [D] [thread 156691] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:19.052561] [I] [thread 156691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:19.052580] [I] [thread 156691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:19.052697] [I] [thread 156691] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:19.052723] [I] [thread 156691] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:19.269828] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:19.270169] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:20.271404] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:21.272721] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:21.310218] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:21.310797] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:21.311511] [D] [thread 156698] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:21.311602] [I] [thread 156698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:21.311619] [I] [thread 156698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:21.311737] [I] [thread 156698] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:21.311749] [I] [thread 156698] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:21.467792] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:21.468307] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:22.469704] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:23.410140] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:23.410758] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:23.411436] [D] [thread 156703] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:23.411502] [I] [thread 156703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:23.411517] [I] [thread 156703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:23.411624] [I] [thread 156703] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:23.411635] [I] [thread 156703] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:23.630464] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:23.631061] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:24.632394] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:25.633621] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:25.637306] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:25.637888] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:25.638764] [D] [thread 156708] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:25.638958] [I] [thread 156708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:25.638984] [I] [thread 156708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:25.639100] [I] [thread 156708] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:25.639118] [I] [thread 156708] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:25.857341] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:25.857916] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:26.859205] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:27.860463] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:27.888776] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:27.889424] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:27.890634] [D] [thread 156713] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:27.890890] [I] [thread 156713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:27.890918] [I] [thread 156713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:27.891152] [I] [thread 156713] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:27.891225] [I] [thread 156713] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:28.105208] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:28.105804] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:29.107086] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:30.108310] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:30.123234] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:30.123560] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:30.124938] [D] [thread 156718] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:30.125043] [I] [thread 156718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:30.125063] [I] [thread 156718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:30.125178] [I] [thread 156718] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:30.125239] [I] [thread 156718] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:30.345570] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:30.345898] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:31.347055] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:32.348370] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:32.402602] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:32.402982] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:32.404103] [D] [thread 156723] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:32.404198] [I] [thread 156723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:32.404215] [I] [thread 156723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:32.404365] [I] [thread 156723] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:32.404382] [I] [thread 156723] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:32.591282] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:32.591656] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:33.593040] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:34.590493] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:34.591076] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:34.592672] [D] [thread 156728] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:34.592745] [I] [thread 156728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:34.592760] [I] [thread 156728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:34.592868] [I] [thread 156728] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:34.592878] [I] [thread 156728] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:34.806089] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:34.806446] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:35.807662] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:36.802286] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:36.802645] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:36.803689] [D] [thread 156733] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:36.803787] [I] [thread 156733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:36.803805] [I] [thread 156733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:36.803921] [I] [thread 156733] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:36.803949] [I] [thread 156733] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:37.020746] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:37.021070] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:38.022302] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:39.023548] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:39.024859] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:39.025401] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:39.026167] [D] [thread 156738] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:39.026258] [I] [thread 156738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:39.026276] [I] [thread 156738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:39.026390] [I] [thread 156738] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:39.026405] [I] [thread 156738] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:39.245437] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:39.245977] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:40.247256] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:41.248528] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:41.295687] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:41.296292] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:41.297162] [D] [thread 156745] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:41.297262] [I] [thread 156745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:41.297279] [I] [thread 156745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:41.297394] [I] [thread 156745] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:41.297407] [I] [thread 156745] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:41.489643] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:41.490154] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:42.491418] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:43.492677] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:43.506693] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:43.507256] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:43.508117] [D] [thread 156750] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:43.508208] [I] [thread 156750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:43.508225] [I] [thread 156750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:43.508371] [I] [thread 156750] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:43.508389] [I] [thread 156750] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:43.681192] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:43.681762] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:44.683051] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:45.684440] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:45.713772] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:45.714110] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:45.715090] [D] [thread 156755] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:45.715180] [I] [thread 156755] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:45.715198] [I] [thread 156755] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:45.715312] [I] [thread 156755] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:45.715325] [I] [thread 156755] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:45.902685] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:45.903056] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:46.904345] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:47.905588] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:47.913696] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:47.914082] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:47.915697] [D] [thread 156760] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:47.915793] [I] [thread 156760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:47.915810] [I] [thread 156760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:47.915928] [I] [thread 156760] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:47.915941] [I] [thread 156760] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:48.134396] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:48.134722] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:49.136076] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:50.137310] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:50.137928] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:50.138231] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:50.139358] [D] [thread 156765] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:50.139454] [I] [thread 156765] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:50.139472] [I] [thread 156765] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:50.139588] [I] [thread 156765] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:50.139645] [I] [thread 156765] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:50.405321] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:50.405681] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:51.406950] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:52.408262] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:52.429935] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:52.430247] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:52.431381] [D] [thread 156771] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:52.431479] [I] [thread 156771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:52.431497] [I] [thread 156771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:52.431611] [I] [thread 156771] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:52.431635] [I] [thread 156771] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:52.647941] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:52.648296] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:53.649615] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:54.635610] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:54.636271] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:54.637603] [D] [thread 156777] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:54.637715] [I] [thread 156777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:54.637733] [I] [thread 156777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:54.637855] [I] [thread 156777] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:54.637869] [I] [thread 156777] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:54.837582] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:54.838134] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:55.839429] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:56.840643] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:56.941290] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:56.941601] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:56.943190] [D] [thread 156782] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:56.943311] [I] [thread 156782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:56.943330] [I] [thread 156782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:56.943456] [I] [thread 156782] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:56.943472] [I] [thread 156782] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:57.166774] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:57.167104] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:58.168316] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:59.169611] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:59.313955] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:59.314342] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:59.315563] [D] [thread 156787] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:45:59.315684] [I] [thread 156787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:59.315703] [I] [thread 156787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:45:59.315842] [I] [thread 156787] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:45:59.315856] [I] [thread 156787] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:45:59.472804] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:45:59.473213] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:00.474436] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:01.475874] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:01.511351] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:01.511704] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:01.513581] [D] [thread 156792] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:46:01.513689] [I] [thread 156792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:01.513707] [I] [thread 156792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:46:01.513821] [I] [thread 156792] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:01.513834] [I] [thread 156792] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:46:01.702137] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:01.702476] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:02.703681] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:03.704930] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:03.711337] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:03.711659] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:03.712769] [D] [thread 156797] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:46:03.712867] [I] [thread 156797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:03.712884] [I] [thread 156797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:46:03.713000] [I] [thread 156797] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:03.713022] [I] [thread 156797] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:46:03.933756] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:03.934132] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:04.935351] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:05.936589] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:05.941312] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:05.941666] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:05.942669] [D] [thread 156802] [QueryCatalogController.hpp:160] [getNumberOfProducedBuffers] getNumberOfProducedBuffers called[m
[32m[17:46:05.942766] [I] [thread 156802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:05.942784] [I] [thread 156802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[32m[17:46:05.942901] [I] [thread 156802] [NesCoordinator.cpp:360] [getQueryStatistics] NesCoordinator: Get query statistics for query Id 1[m
[32m[17:46:05.942916] [I] [thread 156802] [NodeEngine.cpp:471] [getQueryStatistics] QueryManager: Get query statistics for query 1[m
[36m[17:46:06.149757] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:06.150124] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:06.320937] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[36m[17:46:06.321298] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[32m[17:46:06.322318] [I] [thread 156806] [QueryCatalogService.cpp:65] [checkAndMarkForHardStop] QueryCatalogService: Handle hard stop request.[m
[36m[17:46:06.322452] [D] [thread 156806] [QueryCatalogService.cpp:83] [checkAndMarkForHardStop] QueryCatalog: Changing query status to Mark query for stop.[m
[32m[17:46:06.322590] [I] [thread 156806] [RequestQueue.cpp:25] [add] QueryRequestQueue: Adding a new query request : StopQueryRequest { QueryId: 1}[m
[32m[17:46:06.322608] [I] [thread 156806] [RequestQueue.cpp:28] [add] QueryCatalog: Marking that new request is available to be scheduled[m
[32m[17:46:06.322682] [I] [thread 156007] [RequestQueue.cpp:41] [getNextBatch] QueryRequestQueue: Fetching Queries to Schedule[m
[32m[17:46:06.322734] [I] [thread 156007] [RequestQueue.cpp:52] [getNextBatch] QueryRequestQueue: Optimizing 1 queryIdAndCatalogEntryMapping.[m
[32m[17:46:06.322762] [I] [thread 156007] [RequestProcessorService.cpp:91] [start] QueryProcessingService: Calling GlobalQueryPlanUpdatePhase[m
[32m[17:46:06.322808] [I] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:133] [processStopQueryRequest] QueryProcessingService: Request received for stopping the query 1[m
[36m[17:46:06.322822] [D] [thread 156007] [GlobalQueryPlan.cpp:45] [removeQuery] GlobalQueryPlan: Removing query information from the meta data[m
[36m[17:46:06.322868] [D] [thread 156007] [SharedQueryPlan.cpp:194] [removeQuery] SharedQueryPlan: Remove the Query Id 1 and associated Global Query Nodes with sink operators.[m
[36m[17:46:06.323024] [D] [thread 156007] [QueryPlan.cpp:191] [removeAsRootOperator] QueryPlan: removing operator SINK(5: {FileSinkDescriptor()}) as root operator.[m
[36m[17:46:06.323498] [D] [thread 156007] [GlobalQueryPlanUpdatePhase.cpp:123] [execute] GlobalQueryPlanUpdatePhase: Successfully updated global query plan[m
[36m[17:46:06.323556] [D] [thread 156007] [GlobalQueryPlan.cpp:88] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Get the shared query plans to deploy.[m
[36m[17:46:06.323647] [D] [thread 156007] [GlobalQueryPlan.cpp:97] [getSharedQueryPlansToDeploy] GlobalQueryPlan: Found 1 Shared Query plan to be deployed.[m
[36m[17:46:06.323665] [D] [thread 156007] [RequestProcessorService.cpp:106] [start] QueryProcessingService: Updating Query Plan with global query id : 1[m
[36m[17:46:06.323673] [D] [thread 156007] [RequestProcessorService.cpp:162] [start] QueryProcessingService: Shared Query Plan is empty and an older version is already running.[m
[36m[17:46:06.323706] [D] [thread 156007] [QueryUndeploymentPhase.cpp:44] [execute] QueryUndeploymentPhase::stopAndUndeployQuery : queryId= 1[m
[36m[17:46:06.323726] [D] [thread 156007] [GlobalExecutionPlan.cpp:132] [getExecutionNodesByQueryId] GlobalExecutionPlan: Returning vector of Execution nodes for the query with id  1[m
[36m[17:46:06.323756] [D] [thread 156007] [QueryUndeploymentPhase.cpp:54] [execute] QueryUndeploymentPhase:removeQuery: stop query[m
[36m[17:46:06.323768] [D] [thread 156007] [QueryUndeploymentPhase.cpp:80] [stopQuery] QueryUndeploymentPhase:markQueryForStop queryId= 1[m
[36m[17:46:06.323893] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=5 and IP=192.168.2.32:42327[m
[36m[17:46:06.323918] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.32:42327 queryId=1[m
[36m[17:46:06.329358] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=6 and IP=192.168.2.33:34405[m
[36m[17:46:06.329445] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.33:34405 queryId=1[m
[36m[17:46:06.333765] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=2 and IP=192.168.2.12:34521[m
[36m[17:46:06.333892] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.12:34521 queryId=1[m
[36m[17:46:06.338160] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=7 and IP=192.168.2.34:44581[m
[36m[17:46:06.338245] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.34:44581 queryId=1[m
[36m[17:46:06.342508] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=8 and IP=192.168.2.35:42211[m
[36m[17:46:06.342593] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.35:42211 queryId=1[m
[36m[17:46:06.346909] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=3 and IP=192.168.2.30:43523[m
[36m[17:46:06.346996] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.30:43523 queryId=1[m
[36m[17:46:06.351296] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=9 and IP=192.168.2.37:44917[m
[36m[17:46:06.351382] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.37:44917 queryId=1[m
[36m[17:46:06.355629] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=10 and IP=192.168.2.38:37991[m
[36m[17:46:06.355759] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.38:37991 queryId=1[m
[36m[17:46:06.360001] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=4 and IP=192.168.2.31:43375[m
[36m[17:46:06.360086] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.31:43375 queryId=1[m
[36m[17:46:06.364399] [D] [thread 156007] [QueryUndeploymentPhase.cpp:93] [stopQuery] QueryUndeploymentPhase::markQueryForStop at execution node with id=1 and IP=192.168.2.11:42211[m
[36m[17:46:06.364476] [D] [thread 156007] [WorkerRPCClient.cpp:278] [stopQueryAsync] WorkerRPCClient::stopQueryAsync address=192.168.2.11:42211 queryId=1[m
[36m[17:46:06.368919] [D] [thread 156007] [WorkerRPCClient.cpp:104] [checkAsyncResult] start checkAsyncResult for mode=Stop for 10 queues[m
[36m[17:46:06.663444] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.663448] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.663608] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=1)[m
[36m[17:46:06.663609] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=2)[m
[32m[17:46:06.663785] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(4)[m
[36m[17:46:06.663880] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=1) but there is still some active subpartition: 4[m
[36m[17:46:06.663941] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.663987] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=0)[m
[32m[17:46:06.664062] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(3)[m
[36m[17:46:06.664114] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=0) but there is still some active subpartition: 3[m
[32m[17:46:06.665624] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(2)[m
[36m[17:46:06.665720] [D] [thread 156016] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::33::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[17:46:06.665793] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.665835] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::33::0::0(threadId=3)[m
[32m[17:46:06.665906] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(1)[m
[36m[17:46:06.665939] [D] [thread 156016] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::33::0::0, counter is at 1.[m
[36m[17:46:06.666029] [D] [thread 156016] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[17:46:06.666066] [W] [thread 156016] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[17:46:06.669620] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.669642] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.669723] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=1)[m
[36m[17:46:06.669724] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=2)[m
[32m[17:46:06.669824] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(4)[m
[32m[17:46:06.669919] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(3)[m
[36m[17:46:06.669999] [D] [thread 156016] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=1) but there is still some active subpartition: 3[m
[36m[17:46:06.670007] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=2) but there is still some active subpartition: 3[m
[36m[17:46:06.670066] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.670109] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=0)[m
[32m[17:46:06.670159] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(2)[m
[36m[17:46:06.670208] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::42::0::0(threadId=0) but there is still some active subpartition: 2[m
[36m[17:46:06.671480] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:06.671559] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::42::0::0(threadId=3)[m
[32m[17:46:06.671635] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(1)[m
[36m[17:46:06.671672] [D] [thread 156016] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::42::0::0, counter is at 1.[m
[36m[17:46:06.671733] [D] [thread 156016] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[17:46:06.671764] [W] [thread 156016] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[31m[1m[17:46:07.087424] [E] [thread 156668] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 3 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::39::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaac25af13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffac108d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaac25afaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5f782ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5d90f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae137207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffac7b86e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae1497e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae14a773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "./nesWorker", at 0xaaaac25af13f, in 
#7    Object "/lib/aarch64-linux-gnu/libc.so.6", at 0xffffac108d4f, in __libc_start_main
#6    Object "./nesWorker", at 0xaaaac25afaf7, in 
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5f782ef, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb5d90f23, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae137207, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffac7b86e7, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae1497e7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffae14a773, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[17:46:07.319360] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:07.319589] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=1)[m
[32m[17:46:07.319732] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(4)[m
[36m[17:46:07.319824] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=1) but there is still some active subpartition: 4[m
[36m[17:46:07.320037] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:07.320121] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=3)[m
[32m[17:46:07.320212] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(3)[m
[36m[17:46:07.320291] [D] [thread 156016] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=3) but there is still some active subpartition: 3[m
[36m[17:46:07.320783] [D] [thread 156017] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:07.320886] [D] [thread 156017] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=2)[m
[32m[17:46:07.320966] [I] [thread 156017] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(2)[m
[36m[17:46:07.321006] [D] [thread 156017] [ExchangeProtocol.cpp:125] [onEndOfStream] ExchangeProtocol: EndOfStream message received on data channel from 1::51::0::0(threadId=2) but there is still some active subpartition: 2[m
[36m[17:46:07.321132] [D] [thread 156016] [ZmqServer.cpp:404] [messageHandlerEventLoop] ZmqServer(192.168.2.11:34443): EndOfStream received for channel [m
[36m[17:46:07.321185] [D] [thread 156016] [ExchangeProtocol.cpp:111] [onEndOfStream] ExchangeProtocol: EndOfStream message received from 1::51::0::0(threadId=0)[m
[32m[17:46:07.321246] [I] [thread 156016] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(1)[m
[36m[17:46:07.321266] [D] [thread 156016] [PartitionManager.cpp:101] [unregisterSubpartitionConsumer] PartitionManager: Consumer 1::51::0::0, counter is at 1.[m
[36m[17:46:07.321315] [D] [thread 156016] [NetworkSource.cpp:260] [onEndOfStream] Going to inject eos for query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 terminationType=HardStop[m
[33m[1m[17:46:07.321336] [W] [thread 156016] [NetworkSource.cpp:264] [onEndOfStream] Ignoring forceful EoS on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[17:46:07.322473] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[17:46:07.342406] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:07.343511] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43523 went dead so we remove it[m
[32m[17:46:07.343674] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[32m[17:46:07.343702] [I] [thread 156027] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:46:07.343734] [I] [thread 156027] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:46:07.343742] [I] [thread 156027] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:46:07.343767] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:46:07.343777] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:46:07.343823] [D] [thread 156027] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:46:07.494302] [E] [thread 156696] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 2 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::30::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaacd37926f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffab035d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaacd379c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4f1441f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4d2d053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0d16c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffab749b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0e3ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0e4c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaacd37926f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffffab035d4f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaacd379c27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4f1441f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffffb4d2d053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0d16c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffffab749b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0e3ca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffffad0e4c33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[36m[17:46:07.612038] [D] [thread 156023] [WorkerRPCServer.cpp:90] [StopQuery] WorkerRPCServer::StopQuery: got request for 1[m
[36m[17:46:07.612187] [D] [thread 156023] [NodeEngine.cpp:250] [stopQuery] Runtime:stopQuery for qep= 1  termination= HardStop[m
[36m[17:46:07.612305] [D] [thread 156023] [QueryManagerLifecycle.cpp:312] [stopQuery] AbstractQueryManager::stopQuery: query sub-plan id  10  type= HardStop[m
[36m[17:46:07.612413] [D] [thread 156023] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0[m
[36m[17:46:07.612502] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.612677] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.613191] [D] [thread 156023] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 33 is notifying completion: HardStop[m
[36m[17:46:07.613404] [D] [thread 156023] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 33 is terminated; tokens left = 4[m
[36m[17:46:07.613470] [D] [thread 156023] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 33 terminationType=HardStop[m
[36m[17:46:07.613482] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:46:07.613613] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.613647] [D] [thread 156020] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 2[m
[36m[17:46:07.613794] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.613853] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:46:07.613917] [D] [thread 156021] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 0[m
[36m[17:46:07.614088] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:46:07.614151] [D] [thread 156018] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 1[m
[36m[17:46:07.614184] [D] [thread 156023] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=33 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[17:46:07.614262] [D] [thread 156023] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:33 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:46:07.614303] [D] [thread 156023] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0[m
[36m[17:46:07.614352] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::33::0::0[m
[36m[17:46:07.614356] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.614422] [D] [thread 156019] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::33::0::0 Thread 3[m
[36m[17:46:07.614466] [D] [thread 156019] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::33::0::0[m
[36m[17:46:07.614498] [D] [thread 156019] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::33::0::0[m
[36m[17:46:07.614513] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.614537] [D] [thread 156019] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::33::0::0[m
[32m[17:46:07.614618] [I] [thread 156019] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::33::0::0; newCnt(0)[m
[36m[17:46:07.614826] [D] [thread 156023] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 42 is notifying completion: HardStop[m
[36m[17:46:07.614886] [D] [thread 156023] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 42 is terminated; tokens left = 3[m
[36m[17:46:07.614925] [D] [thread 156023] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 42 terminationType=HardStop[m
[36m[17:46:07.615016] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.615146] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.615384] [D] [thread 156023] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=42 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[17:46:07.615456] [D] [thread 156023] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:42 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:46:07.615480] [D] [thread 156019] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[17:46:07.615494] [D] [thread 156023] [NetworkSource.cpp:132] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0[m
[36m[17:46:07.615539] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.615745] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 18446744073709551615 blocking=false type HardEndOfStream[m
[36m[17:46:07.615852] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
2023-11-13 17:46:07.620 postReconfigurationCallback: queryId=1, querySubPlanId=10; queryId=1 subPlanId=10 processedTasks=3 processedTuple=6 processedBuffers=3 processedWatermarks=0 latencyAVG=1699897352977 queueSizeAVG=0 availableGlobalBufferAVG=511 availableFixedBufferAVG=0
[36m[17:46:07.615930] [D] [thread 156019] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 3[m
[36m[17:46:07.616031] [D] [thread 156023] [ExecutableQueryPlan.cpp:293] [notifySourceCompletion] QEP 10 Source 51 is notifying completion: HardStop[m
[36m[17:46:07.616079] [D] [thread 156023] [ExecutableQueryPlan.cpp:301] [notifySourceCompletion] QEP 10 Source 51 is terminated; tokens left = 2[m
[36m[17:46:07.616119] [D] [thread 156023] [QueryManagerLifecycle.cpp:546] [addEndOfStream] AbstractQueryManager: AbstractQueryManager::addEndOfStream for source operator 51 terminationType=HardStop[m
[36m[17:46:07.616140] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:46:07.616202] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.616204] [D] [thread 156018] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 1[m
[36m[17:46:07.616468] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:46:07.616427] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.616534] [D] [thread 156021] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 0[m
[36m[17:46:07.616540] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::42::0::0[m
[36m[17:46:07.616601] [D] [thread 156020] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::42::0::0 Thread 2[m
[36m[17:46:07.616646] [D] [thread 156020] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::42::0::0[m
[36m[17:46:07.616680] [D] [thread 156020] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::42::0::0[m
[36m[17:46:07.616712] [D] [thread 156020] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::42::0::0[m
[32m[17:46:07.616781] [I] [thread 156020] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::42::0::0; newCnt(0)[m
[36m[17:46:07.616814] [D] [thread 156023] [QueryManagerLifecycle.cpp:467] [addHardEndOfStream] hard end-of-stream Sink opId=51 reconfType=HardEndOfStream queryId=1 querySubPlanId=10 threadPool->getNumberOfThreads()=4[m
[36m[17:46:07.616886] [D] [thread 156023] [NetworkSource.cpp:141] [stop] NetworkSource: stop called on query Id:1 OperatorId:51 PartitionId: 0 SubpartitionID: 0 sent hard eos[m
[36m[17:46:07.617251] [D] [thread 156019] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[17:46:07.617554] [D] [thread 156019] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:46:07.617554] [D] [thread 156021] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:46:07.617663] [D] [thread 156019] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 3[m
[36m[17:46:07.617678] [D] [thread 156021] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 0[m
[36m[17:46:07.617881] [D] [thread 156018] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:46:07.617940] [D] [thread 156018] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 1[m
[36m[17:46:07.618120] [D] [thread 156020] [NetworkSource.cpp:164] [reconfigure] NetworkSource: reconfigure() called 1::51::0::0[m
[36m[17:46:07.618177] [D] [thread 156020] [NetworkSource.cpp:219] [reconfigure] NetworkSource: reconfigure() released channel on 1::51::0::0 Thread 2[m
[36m[17:46:07.618219] [D] [thread 156020] [NetworkSource.cpp:224] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback() called 1::51::0::0[m
[36m[17:46:07.618251] [D] [thread 156020] [NetworkSource.cpp:245] [postReconfigurationCallback] NetworkSource: postReconfigurationCallback(): unregistering SubpartitionConsumer 1::51::0::0[m
[36m[17:46:07.618283] [D] [thread 156020] [NetworkManager.cpp:85] [unregisterSubpartitionConsumer] NetworkManager: Unregistering SubpartitionConsumer: 1::51::0::0[m
[32m[17:46:07.618351] [I] [thread 156020] [PartitionManager.cpp:99] [unregisterSubpartitionConsumer] PartitionManager: Unregistering Consumer 1::51::0::0; newCnt(0)[m
[36m[17:46:07.618906] [D] [thread 156018] [SinkMedium.cpp:130] [postReconfigurationCallback] Got EoS on Sink  FileSink()[m
[36m[17:46:07.619137] [D] [thread 156018] [ExecutableQueryPlan.cpp:352] [notifySinkCompletion] QEP 10 Sink FileSink() is terminated; tokens left = 1[m
[36m[17:46:07.619230] [D] [thread 156018] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.619485] [D] [thread 156018] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=false type HardEndOfStream[m
[36m[17:46:07.619916] [D] [thread 156018] [SinkMedium.cpp:136] [postReconfigurationCallback] Sink [ FileSink() ] is completed with  HardStop[m
[36m[17:46:07.620601] [D] [thread 156019] [ExecutableQueryPlan.cpp:231] [postReconfigurationCallback] Executing HardEndOfStream on qep queryId=1 querySubPlanId=10[m
[36m[17:46:07.620658] [D] [thread 156019] [ExecutableQueryPlan.cpp:172] [stop] QueryExecutionPlan: stop queryId=1 querySubPlanId=10[m
[36m[17:46:07.620677] [D] [thread 156019] [ExecutableQueryPlan.cpp:174] [stop] QueryExecutionPlan: stop 1-10 is marked as stopped now[m
[36m[17:46:07.620874] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:377] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[17:46:07.621042] [D] [thread 156023] [QueryManagerTaskScheduler.cpp:395] [addReconfigurationMessage] QueryManager: AbstractQueryManager::addReconfigurationMessage begins on plan 10 blocking=true type Destroy[m
[36m[17:46:07.621684] [D] [thread 156023] [QueryManager.cpp:312] [postReconfigurationCallback] AbstractQueryManager: removed running QEP  10[m
[36m[17:46:07.621834] [D] [thread 156023] [QueryManagerLifecycle.cpp:380] [stopQuery] AbstractQueryManager::stopQuery: query 10 was successful[m
[36m[17:46:07.621859] [D] [thread 156023] [NodeEngine.cpp:265] [stopQuery] Runtime: stop of QEP  10  succeeded[m
[36m[17:46:07.621876] [D] [thread 156023] [WorkerRPCServer.cpp:97] [StopQuery] WorkerRPCServer::StopQuery: success[m
[31m[1m[17:46:08.133483] [E] [thread 156696] [CoordinatorRPCServer.cpp:317] [SendErrors] CoordinatorRPCServer::sendErrors: failure message received.Id of worker: 4 Reason for failure: onFatalException: exception=[Failed assertion on metadata.count() == 0 error message: PartitionManager: Consumer Partition 1::45::0::0 is still alive: 4:: callstack:
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadf4d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff928b0e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadf4dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c78f41f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c5a8053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9494c6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff92fc4b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9495eca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9495fc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
] callstack=
Stack trace (most recent call last):
#8    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadf4d26f, in $x
#7    Object "/usr/lib/aarch64-linux-gnu/libc-2.31.so", at 0xffff928b0e0f, in __libc_start_main
#6    Object "/home/ubuntu/git/nebulastream/build/nes-core/nesWorker", at 0xaaaaadf4dc27, in main
#5    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c78f41f, in NES::NesWorker::stop(bool)
#4    Object "/home/ubuntu/git/nebulastream/build/nes-core/libnes.so", at 0xffff9c5a8053, in NES::Runtime::NodeEngine::stop(bool)
#3    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9494c6c7, in NES::Network::PartitionManager::clear()
#2    Object "/home/ubuntu/git/nebulastream/build/nes-common/libnes-common.so", at 0xffff92fc4b17, in NES::collectAndPrintStacktrace[abi:cxx11]()
#1    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9495eca7, in backward::StackTraceImpl<backward::system_tag::linux_tag>::load_here(unsigned long, void*, void*)
#0    Object "/home/ubuntu/git/nebulastream/build/nes-runtime/libnes-runtime.so", at 0xffff9495fc33, in unsigned long backward::details::unwind<backward::StackTraceImpl<backward::system_tag::linux_tag>::callback>(backward::StackTraceImpl<backward::system_tag::linux_tag>::callback, unsigned long)
[m
[1m[41m[17:46:08.173976] [C] [thread 156007] [RequestProcessorService.cpp:236] [start] QueryProcessingService: Received unexpected exception while scheduling the queryIdAndCatalogEntryMapping: [m
[32m[17:46:08.174061] [I] [thread 156007] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[32m[17:46:08.174185] [I] [thread 156007] [RequestQueue.cpp:63] [insertPoisonPill] QueryRequestQueue: Shutdown is called. Inserting Poison pill in the query request queue.[m
[33m[1m[17:46:08.174263] [W] [thread 156007] [RequestProcessorService.cpp:240] [start] QueryProcessingService: Terminated[m
[32m[17:46:08.174276] [I] [thread 156007] [RequestProcessorService.cpp:255] [shutDown] Request Processor Service is shutting down! No further requests can be processed![m
[33m[1m[17:46:08.174286] [W] [thread 156007] [NesCoordinator.cpp:171] [operator()] NesCoordinator: finished queryRequestProcessor[m
[36m[17:46:08.323761] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[17:46:08.484524] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:08.485552] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:34521 went dead so we remove it[m
[32m[17:46:08.485700] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=1][m
[32m[17:46:08.485725] [I] [thread 156027] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:46:08.485753] [I] [thread 156027] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:46:08.485761] [I] [thread 156027] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:46:08.485772] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:46:08.485780] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:46:08.485802] [D] [thread 156027] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[31m[1m[17:46:08.491096] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:08.492179] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43523 went dead so we remove it[m
[32m[17:46:08.492350] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[17:46:08.492386] [W] [thread 156027] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[17:46:08.497651] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:08.498688] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:43375 went dead so we remove it[m
[32m[17:46:08.498837] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[32m[17:46:08.498860] [I] [thread 156027] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:46:08.498881] [I] [thread 156027] [Node.cpp:193] [removeAllParent] Node: Removed node as parent of this node[m
[32m[17:46:08.498889] [I] [thread 156027] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[32m[17:46:08.498907] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[32m[17:46:08.498926] [I] [thread 156027] [Node.cpp:204] [removeChildren] Node: Removed node as child of this node[m
[36m[17:46:08.498951] [D] [thread 156027] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[17:46:09.325054] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
[31m[1m[17:46:09.644158] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:09.645220] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.12:34521 went dead so we remove it[m
[32m[17:46:09.645369] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=2, ip=192.168.2.12, resourceCapacity=65535, usedResource=1][m
[33m[1m[17:46:09.645398] [W] [thread 156027] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 2 doesn't exists in the system.[m
[31m[1m[17:46:09.650488] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:09.651484] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.30:43523 went dead so we remove it[m
[32m[17:46:09.651628] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=3, ip=192.168.2.30, resourceCapacity=65535, usedResource=1][m
[33m[1m[17:46:09.651657] [W] [thread 156027] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 3 doesn't exists in the system.[m
[31m[1m[17:46:09.656820] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:09.657925] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.31:43375 went dead so we remove it[m
[32m[17:46:09.658068] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=4, ip=192.168.2.31, resourceCapacity=65535, usedResource=1][m
[33m[1m[17:46:09.658098] [W] [thread 156027] [Topology.cpp:49] [removePhysicalNode] Topology: The physical node 4 doesn't exists in the system.[m
[31m[1m[17:46:09.689196] [E] [thread 156027] [WorkerRPCClient.cpp:430] [checkHealth]  WorkerRPCClient::checkHealth error=14: failed to connect to all addresses[m
[33m[1m[17:46:09.690237] [W] [thread 156027] [CoordinatortHealthCheckService.cpp:55] [operator()] NesCoordinator::healthCheck: node=192.168.2.34:44581 went dead so we remove it[m
[32m[17:46:09.690395] [I] [thread 156027] [Topology.cpp:45] [removePhysicalNode] Topology: Removing Node PhysicalNode[id=7, ip=192.168.2.34, resourceCapacity=65535, usedResource=3][m
[32m[17:46:09.690424] [I] [thread 156027] [Node.cpp:187] [removeAllParent] Node: Removing all parents for current node[m
[32m[17:46:09.690436] [I] [thread 156027] [Node.cpp:198] [removeChildren] Node: Removing all children for current node[m
[36m[17:46:09.690462] [D] [thread 156027] [Topology.cpp:66] [removePhysicalNode] Topology: Successfully removed the node.[m
[36m[17:46:10.326373] [D] [thread 156026] [RestServer.cpp:170] [operator()] checking if stop request has arrived for rest server listening on port 8081.[m
